{"version":3,"file":"mtproto.worker.0e8c484cbc8ee3f1b454.chunk.js","mappings":"uBAAIA,ECAAC,E,4CCQG,MACMC,E,QAAoB,QAEpBC,EADuB,oBAAb,OAA2BC,OAASC,KAE3D,G,kCCJO,MAAMC,EAAyE,CAAC,GAAK,CAAC,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,IAAK,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,+BAA+B,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,GAAI,GAAG,CAAC,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,KAAM,KAAO,KAAM,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,KAAM,KAAO,KAAM,KAAO,KAAM,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,IAAK,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,KAAM,KAAO,MAAO,KAAO,KAAM,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,KAAM,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,KAAM,KAAO,KAAM,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,KAAO,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,YAAY,MAAO,OAAO,MAAO,OAAO,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAckBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,MAAO,kBAAkB,MAAO,QAAQ,MAAO,kBAAkB,MAAO,4CAA4C,MAAO,4CAA4C,MAAO,4CAA4C,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,yCAAyC,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,6BAA6B,KAAM,wCAAwC,KAAM,QAAQ,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,yCAAyC,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,6BAA6B,KAAM,6BAA6B,KAAM,wCAAwC,KAAM,wCAAwC,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,IAAK,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,mBAAmB,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,mBAAmB,IAAK,QAAQ,IAAK,mBAAmB,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,IAAK,QAAQ,GAAI,QAAQ,IAAK,QAAQ,IAAK,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkkBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkkBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,IAAK,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkiBAAiB,KAAM,iBAAiB,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,kBAAkB,KAAM,kBAAkB,KAAM,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,KAAM,OAAO,MAAO,OAAO,MAAO,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,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","sources":["webpack://tweb/webpack/runtime/chunk loaded","webpack://tweb/webpack/runtime/startup chunk dependencies","webpack://tweb/./src/config/debug.ts","webpack://tweb/./src/config/emoji.ts","webpack://tweb/./src/environment/userAgent.ts","webpack://tweb/./src/helpers/cleanSearchText.ts","webpack://tweb/./src/helpers/fileName.ts","webpack://tweb/./src/helpers/restrictions.ts","webpack://tweb/./src/lib/appManagers/utils/peers/getPeerId.ts","webpack://tweb/./src/lib/files/idb.ts","webpack://tweb/./src/environment/utils.ts","webpack://tweb/./src/lib/rootScope.ts","webpack://tweb/./src/lib/appManagers/appStateManager.ts","webpack://tweb/./src/helpers/object/setDeepProperty.ts","webpack://tweb/./src/config/app.ts","webpack://tweb/./src/lib/mtproto/transports/http.ts","webpack://tweb/./src/lib/mtproto/transports/websocket.ts","webpack://tweb/./src/helpers/array/randomize.ts","webpack://tweb/./src/lib/mtproto/transports/obfuscation.ts","webpack://tweb/./src/lib/mtproto/transports/abridged.ts","webpack://tweb/./src/helpers/bytes/bytesToHex.ts","webpack://tweb/./src/lib/mtproto/transports/tcpObfuscated.ts","webpack://tweb/./src/lib/mtproto/dcConfigurator.ts","webpack://tweb/./src/lib/mtproto/transports/controller.ts","webpack://tweb/./src/lib/appManagers/utils/storages/resetStoragesPromise.ts","webpack://tweb/./src/lib/appManagers/manager.ts","webpack://tweb/./src/lib/appManagers/utils/storages/loadStorages.ts","webpack://tweb/./src/lib/appManagers/appStoragesManager.ts","webpack://tweb/./src/lib/appManagers/utils/storages/createStorages.ts","webpack://tweb/./src/lib/mtproto/passwordManager.ts","webpack://tweb/./src/lib/mtproto/referenceDatabase.ts","webpack://tweb/./src/helpers/object/safeReplaceObject.ts","webpack://tweb/./src/lib/appManagers/utils/messageId/getServerMessageId.ts","webpack://tweb/./src/lib/appManagers/utils/messages/getPeerIdsFromMessage.ts","webpack://tweb/./src/lib/appManagers/utils/dialogs/setDialogIndex.ts","webpack://tweb/./src/lib/storages/dialogs.ts","webpack://tweb/./src/lib/storages/filters.ts","webpack://tweb/./src/helpers/applyMixins.ts","webpack://tweb/./src/lib/appManagers/apiUpdatesManager.ts","webpack://tweb/./src/lib/appManagers/appAvatarsManager.ts","webpack://tweb/./src/lib/appManagers/appCallsManager.ts","webpack://tweb/./src/lib/appManagers/appChatsManager.ts","webpack://tweb/./src/lib/langPack.ts","webpack://tweb/./src/lib/richTextProcessor/wrapUrl.ts","webpack://tweb/./src/helpers/dom/setInnerHTML.ts","webpack://tweb/./src/helpers/date.ts","webpack://tweb/./src/helpers/object/safeReplaceArrayInObject.ts","webpack://tweb/./src/environment/mimeTypeMap.ts","webpack://tweb/./src/lib/appManagers/appDocsManager.ts","webpack://tweb/./src/lib/appManagers/utils/docs/getDocumentURL.ts","webpack://tweb/./src/lib/appManagers/appDraftsManager.ts","webpack://tweb/./src/lib/appManagers/appEmojiManager.ts","webpack://tweb/./src/lib/appManagers/appGroupCallsManager.ts","webpack://tweb/./src/lib/appManagers/utils/photos/getPhotoInput.ts","webpack://tweb/./src/lib/appManagers/utils/photos/getPhotoMediaInput.ts","webpack://tweb/./src/lib/appManagers/utils/docs/getDocumentMediaInput.ts","webpack://tweb/./src/lib/appManagers/appInlineBotsManager.ts","webpack://tweb/./src/lib/appManagers/appMessagesIdsManager.ts","webpack://tweb/./src/helpers/string/splitStringByLength.ts","webpack://tweb/./src/lib/appManagers/appTabsManager.ts","webpack://tweb/./src/lib/appManagers/utils/docs/getDocumentInput.ts","webpack://tweb/./src/helpers/object/setBooleanFlag.ts","webpack://tweb/./src/lib/appManagers/appMessagesManager.ts","webpack://tweb/./src/lib/appManagers/utils/docs/getDocumentInputFileName.ts","webpack://tweb/./src/helpers/string/convertInputKeyToKey.ts","webpack://tweb/./src/lib/appManagers/appNotificationsManager.ts","webpack://tweb/./src/lib/appManagers/appPeersManager.ts","webpack://tweb/./src/lib/appManagers/appPhotosManager.ts","webpack://tweb/./src/lib/appManagers/appPollsManager.ts","webpack://tweb/./src/lib/appManagers/appPrivacyManager.ts","webpack://tweb/./src/lib/appManagers/appProfileManager.ts","webpack://tweb/./src/helpers/callbackifyAll.ts","webpack://tweb/./src/lib/appManagers/appReactionsManager.ts","webpack://tweb/./src/lib/appManagers/appStickersManager.ts","webpack://tweb/./src/helpers/fixBase64String.ts","webpack://tweb/./src/lib/appManagers/appUsersManager.ts","webpack://tweb/./src/helpers/cleanUsername.ts","webpack://tweb/./src/lib/appManagers/appWebPagesManager.ts","webpack://tweb/./src/helpers/blob/readBlobAsArrayBuffer.ts","webpack://tweb/./src/helpers/string/fileNameRFC.ts","webpack://tweb/./src/lib/files/downloadWriter.ts","webpack://tweb/./src/lib/files/downloadStorage.ts","webpack://tweb/./src/lib/mtproto/apiFileManager.ts","webpack://tweb/./src/helpers/fixFirefoxSvg.ts","webpack://tweb/./src/helpers/blob/readBlobAsUint8Array.ts","webpack://tweb/./src/lib/mtproto/api_methods.ts","webpack://tweb/./src/lib/mtproto/apiManager.ts","webpack://tweb/./src/lib/storages/peers.ts","webpack://tweb/./src/lib/storages/thumbs.ts","webpack://tweb/./src/lib/mtproto/schema.ts","webpack://tweb/./src/helpers/number/intToUint.ts","webpack://tweb/./src/helpers/long/ulongFromInts.ts","webpack://tweb/./src/helpers/bigInt/bigIntConstants.ts","webpack://tweb/./src/helpers/bigInt/bigIntConversion.ts","webpack://tweb/./src/lib/mtproto/tl_utils.ts","webpack://tweb/./src/helpers/gzipUncompress.ts","webpack://tweb/./src/helpers/bytes/addPadding.ts","webpack://tweb/./src/lib/mtproto/networker.ts","webpack://tweb/./src/helpers/long/sortLongsArray.ts","webpack://tweb/./src/helpers/long/longToBytes.ts","webpack://tweb/./src/lib/mtproto/networkerFactory.ts","webpack://tweb/./src/lib/mtproto/rsaKeysManager.ts","webpack://tweb/./src/helpers/bytes/bytesXor.ts","webpack://tweb/./src/lib/mtproto/authorizer.ts","webpack://tweb/./src/lib/mtproto/timeManager.ts","webpack://tweb/./src/lib/appManagers/appWebDocsManager.ts","webpack://tweb/./src/lib/appManagers/appPaymentsManager.ts","webpack://tweb/./src/lib/appManagers/appAttachMenuBotsManager.ts","webpack://tweb/./src/lib/appManagers/appSeamlessLoginManager.ts","webpack://tweb/./src/lib/appManagers/appThemesManager.ts","webpack://tweb/./src/lib/appManagers/appUsernamesManager.ts","webpack://tweb/./src/lib/appManagers/appManagersManager.ts","webpack://tweb/./src/lib/appManagers/createManagers.ts","webpack://tweb/./src/lib/mtproto/mtproto.worker.ts","webpack://tweb/./src/helpers/listenMessagePort.ts","webpack://tweb/./src/lib/mtproto/mtproto_config.ts","webpack://tweb/./src/lib/richTextProcessor/index.ts","webpack://tweb/./src/vendor/emoji/index.ts","webpack://tweb/webpack/bootstrap","webpack://tweb/webpack/runtime/compat get default export","webpack://tweb/webpack/runtime/define property getters","webpack://tweb/webpack/runtime/ensure chunk","webpack://tweb/webpack/runtime/get javascript chunk filename","webpack://tweb/webpack/runtime/get mini-css chunk filename","webpack://tweb/webpack/runtime/global","webpack://tweb/webpack/runtime/hasOwnProperty shorthand","webpack://tweb/webpack/runtime/make namespace object","webpack://tweb/webpack/runtime/node module decorator","webpack://tweb/webpack/runtime/publicPath","webpack://tweb/webpack/runtime/compat","webpack://tweb/webpack/runtime/importScripts chunk loading","webpack://tweb/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([699,211,41,85,116].map(__webpack_require__.e, __webpack_require__)).then(next);\n};","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport Modes from './modes';\n\nexport const IS_BETA = process.env.NODE_ENV !== 'production';\nexport const DEBUG = (IS_BETA || Modes.debug)/*  && false */;\nconst ctx: any = typeof(window) !== 'undefined' ? window : self;\nexport const MOUNT_CLASS_TO: any = DEBUG || true/*  && false */ ? ctx : {};\nexport default DEBUG;\n\n// let m = DEBUG;\n/* if(!DEBUG) {\n  ctx.sandpitTurtle = () => {\n    //if(!m) {\n      for(let i in MOUNT_CLASS_TO) {\n        ctx[i] = MOUNT_CLASS_TO[i];\n      }\n      //m = true;\n    //}\n\n    //DEBUG = !DEBUG;\n  };\n} */\n\n/* export const superDebug = (object: any, key: string) => {\n  var d = object[key];\n  var beforeStr = '', afterStr = '';\n  for(var r of d) {\n    beforeStr += r.before.hex + '\\n';\n    afterStr += r.after.hex + '\\n';\n  }\n\n  beforeStr = beforeStr.trim();\n  afterStr = afterStr.trim();\n  //var beforeStr = d.map((r) => r.before.hex).join('\\n');\n  //var afterStr = d.map((r) => r.after.hex).join('\\n');\n\n  var dada = (name: string, str: string) => {\n    var a = document.createElement('a');\n    a.target = '_blank';\n    a.download = name + '.txt';\n    a.href = URL.createObjectURL(new Blob([str], {\n      type: 'text/plain'\n    }));\n    document.body.append(a);\n    a.click();\n  };\n\n  dada(key + '_' + 'before', beforeStr);\n  dada(key + '_' + 'after', afterStr);\n}\n\nMOUNT_CLASS_TO.superDebug = superDebug; */\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {EMOJI_VERSION} from '../environment/emojiVersionsSupport';\n\nexport const EmojiVersions: {[version in EMOJI_VERSION]: {[emoji: string]: number}} = {'14':{'1f6dd':4867, '1f6de':4916, '1f6df':4923, '1f7f0':62832, '1f979':183, '1f9cc':1557, '1fa7b':61332, '1fa7c':61330, '1faa9':51093, '1faaa':61364, '1faab':61189, '1faac':51085, '1fab7':2651, '1fab8':2631, '1fab9':2672, '1faba':2673, '1fac3':1520, '1fac4':1521, '1fac5':1505, '1fad7':3793, '1fad8':3707, '1fad9':3804, '1fae0':111, '1fae1':136, '1fae2':132, '1fae3':133, '1fae4':174, '1fae5':142, '1fae6':1385, '1fae7':61353, '1faf0':1341, '1faf1':1332, '1faf2':1333, '1faf3':1334, '1faf4':1335, '1faf5':1351, '1faf6':1360, '1faf1-1f3fb-200d-1faf2-1f3fc':0, '1faf1-1f3fb-200d-1faf2-1f3fd':0, '1faf1-1f3fb-200d-1faf2-1f3fe':0, '1faf1-1f3fb-200d-1faf2-1f3ff':0, '1faf1-1f3fc-200d-1faf2-1f3fb':0, '1faf1-1f3fc-200d-1faf2-1f3fd':0, '1faf1-1f3fc-200d-1faf2-1f3fe':0, '1faf1-1f3fc-200d-1faf2-1f3ff':0, '1faf1-1f3fd-200d-1faf2-1f3fb':0, '1faf1-1f3fd-200d-1faf2-1f3fc':0, '1faf1-1f3fd-200d-1faf2-1f3fe':0, '1faf1-1f3fd-200d-1faf2-1f3ff':0, '1faf1-1f3fe-200d-1faf2-1f3fb':0, '1faf1-1f3fe-200d-1faf2-1f3fc':0, '1faf1-1f3fe-200d-1faf2-1f3fd':0, '1faf1-1f3fe-200d-1faf2-1f3ff':0, '1faf1-1f3ff-200d-1faf2-1f3fb':0, '1faf1-1f3ff-200d-1faf2-1f3fc':0, '1faf1-1f3ff-200d-1faf2-1f3fd':0, '1faf1-1f3ff-200d-1faf2-1f3fe':0, '1fac3-1f3fb':0, '1fac3-1f3fc':0, '1fac3-1f3fd':0, '1fac3-1f3fe':0, '1fac3-1f3ff':0, '1fac4-1f3fb':0, '1fac4-1f3fc':0, '1fac4-1f3fd':0, '1fac4-1f3fe':0, '1fac4-1f3ff':0, '1fac5-1f3fb':0, '1fac5-1f3fc':0, '1fac5-1f3fd':0, '1fac5-1f3fe':0, '1fac5-1f3ff':0, '1faf0-1f3fb':0, '1faf0-1f3fc':0, '1faf0-1f3fd':0, '1faf0-1f3fe':0, '1faf0-1f3ff':0, '1faf1-1f3fb':0, '1faf1-1f3fc':0, '1faf1-1f3fd':0, '1faf1-1f3fe':0, '1faf1-1f3ff':0, '1faf2-1f3fb':0, '1faf2-1f3fc':0, '1faf2-1f3fd':0, '1faf2-1f3fe':0, '1faf2-1f3ff':0, '1faf3-1f3fb':0, '1faf3-1f3fc':0, '1faf3-1f3fd':0, '1faf3-1f3fe':0, '1faf3-1f3ff':0, '1faf4-1f3fb':0, '1faf4-1f3fc':0, '1faf4-1f3fd':0, '1faf4-1f3fe':0, '1faf4-1f3ff':0, '1faf5-1f3fb':0, '1faf5-1f3fc':0, '1faf5-1f3fd':0, '1faf5-1f3fe':0, '1faf5-1f3ff':0, '1faf6-1f3fb':0, '1faf6-1f3fc':0, '1faf6-1f3fd':0, '1faf6-1f3fe':0, '1faf6-1f3ff':0}, '':{'2049':62835, '2122':62863, '2139':62888, '2194':62764, '2195':62763, '2196':62762, '2197':62756, '2198':62758, '2199':62760, '2328':61194, '2600':4990, '2601':4998, '2602':41013, '2603':41018, '2604':41020, '2611':62851, '2614':41014, '2615':3781, '2618':2667, '2620':1106, '2622':62753, '2623':62754, '2626':62783, '2638':62780, '2639':177, '2648':62788, '2649':62789, '2650':62796, '2651':62797, '2652':62798, '2653':62799, '2660':51095, '2663':51098, '2665':51096, '2666':51097, '2668':4865, '2692':61297, '2693':4922, '2694':61300, '2696':61311, '2697':61319, '2699':61309, '2702':61284, '2705':62850, '2708':4931, '2709':61245, '2712':61259, '2714':62852, '2716':62828, '2721':62779, '2728':51029, '2733':62858, '2734':62859, '2744':41017, '2747':62860, '2753':62836, '2754':62837, '2755':62838, '2757':62839, '2763':1137, '2764':1141, '2795':62829, '2796':62830, '2797':62831, '2934':62767, '2935':62768, '3030':62840, '3297':62912, '3299':62913, '0023-20e3':62864, '002a-20e3':62865, '0030-20e3':62866, '0031-20e3':62867, '0032-20e3':62868, '0033-20e3':62869, '0034-20e3':62870, '0035-20e3':62871, '0036-20e3':62872, '0037-20e3':62873, '0038-20e3':62874, '0039-20e3':62875, '00a9':62861, '00ae':62862, '1f004':51101, '1f0cf':51100, '1f170':62882, '1f171':62884, '1f17e':62893, '1f17f':62895, '1f18e':62883, '1f191':62885, '1f192':62886, '1f193':62887, '1f194':62889, '1f195':62891, '1f196':62892, '1f197':62894, '1f198':62896, '1f199':62897, '1f19a':62898, '1f1e6-1f1e8':71594, '1f1e6-1f1e9':71595, '1f1e6-1f1ea':71596, '1f1e6-1f1eb':71597, '1f1e6-1f1ec':71598, '1f1e6-1f1ee':71599, '1f1e6-1f1f1':71600, '1f1e6-1f1f2':71601, '1f1e6-1f1f4':71602, '1f1e6-1f1f6':71603, '1f1e6-1f1f7':71604, '1f1e6-1f1f8':71605, '1f1e6-1f1f9':71606, '1f1e6-1f1fa':71607, '1f1e6-1f1fc':71608, '1f1e6-1f1fd':71609, '1f1e6-1f1ff':71610, '1f1e7-1f1e6':71611, '1f1e7-1f1e7':71612, '1f1e7-1f1e9':71613, '1f1e7-1f1ea':71614, '1f1e7-1f1eb':71615, '1f1e7-1f1ec':71616, '1f1e7-1f1ed':71617, '1f1e7-1f1ee':71618, '1f1e7-1f1ef':71619, '1f1e7-1f1f1':71620, '1f1e7-1f1f2':71621, '1f1e7-1f1f3':71622, '1f1e7-1f1f4':71623, '1f1e7-1f1f6':71624, '1f1e7-1f1f7':71625, '1f1e7-1f1f8':71626, '1f1e7-1f1f9':71627, '1f1e7-1f1fb':71628, '1f1e7-1f1fc':71629, '1f1e7-1f1fe':71630, '1f1e7-1f1ff':71631, '1f1e8-1f1e6':71632, '1f1e8-1f1e8':71633, '1f1e8-1f1e9':71634, '1f1e8-1f1eb':71635, '1f1e8-1f1ec':71636, '1f1e8-1f1ed':71637, '1f1e8-1f1ee':71638, '1f1e8-1f1f0':71639, '1f1e8-1f1f1':71640, '1f1e8-1f1f2':71641, '1f1e8-1f1f3':71642, '1f1e8-1f1f4':71643, '1f1e8-1f1f5':71644, '1f1e8-1f1f7':71645, '1f1e8-1f1fa':71646, '1f1e8-1f1fb':71647, '1f1e8-1f1fc':71648, '1f1e8-1f1fd':71649, '1f1e8-1f1fe':71650, '1f1e8-1f1ff':71651, '1f1e9-1f1ea':71652, '1f1e9-1f1ec':71653, '1f1e9-1f1ef':71654, '1f1e9-1f1f0':71655, '1f1e9-1f1f2':71656, '1f1e9-1f1f4':71657, '1f1e9-1f1ff':71658, '1f1ea-1f1e6':71659, '1f1ea-1f1e8':71660, '1f1ea-1f1ea':71661, '1f1ea-1f1ec':71662, '1f1ea-1f1ed':71663, '1f1ea-1f1f7':71664, '1f1ea-1f1f8':71665, '1f1ea-1f1f9':71666, '1f1ea-1f1fa':71667, '1f1eb-1f1ee':71668, '1f1eb-1f1ef':71669, '1f1eb-1f1f0':71670, '1f1eb-1f1f2':71671, '1f1eb-1f1f4':71672, '1f1eb-1f1f7':71673, '1f1ec-1f1e6':71674, '1f1ec-1f1e7':71675, '1f1ec-1f1e9':71676, '1f1ec-1f1ea':71677, '1f1ec-1f1eb':71678, '1f1ec-1f1ec':71679, '1f1ec-1f1ed':71680, '1f1ec-1f1ee':71681, '1f1ec-1f1f1':71682, '1f1ec-1f1f2':71683, '1f1ec-1f1f3':71684, '1f1ec-1f1f5':71685, '1f1ec-1f1f6':71686, '1f1ec-1f1f7':71687, '1f1ec-1f1f8':71688, '1f1ec-1f1f9':71689, '1f1ec-1f1fa':71690, '1f1ec-1f1fc':71691, '1f1ec-1f1fe':71692, '1f1ed-1f1f0':71693, '1f1ed-1f1f2':71694, '1f1ed-1f1f3':71695, '1f1ed-1f1f7':71696, '1f1ed-1f1f9':71697, '1f1ed-1f1fa':71698, '1f1ee-1f1e8':71699, '1f1ee-1f1e9':71700, '1f1ee-1f1ea':71701, '1f1ee-1f1f1':71702, '1f1ee-1f1f2':71703, '1f1ee-1f1f3':71704, '1f1ee-1f1f4':71705, '1f1ee-1f1f6':71706, '1f1ee-1f1f7':71707, '1f1ee-1f1f8':71708, '1f1ee-1f1f9':71709, '1f1ef-1f1ea':71710, '1f1ef-1f1f2':71711, '1f1ef-1f1f4':71712, '1f1ef-1f1f5':71713, '1f1f0-1f1ea':71714, '1f1f0-1f1ec':71715, '1f1f0-1f1ed':71716, '1f1f0-1f1ee':71717, '1f1f0-1f1f2':71718, '1f1f0-1f1f3':71719, '1f1f0-1f1f5':71720, '1f1f0-1f1f7':71721, '1f1f0-1f1fc':71722, '1f1f0-1f1fe':71723, '1f1f0-1f1ff':71724, '1f1f1-1f1e6':71725, '1f1f1-1f1e7':71726, '1f1f1-1f1e8':71727, '1f1f1-1f1ee':71728, '1f1f1-1f1f0':71729, '1f1f1-1f1f7':71730, '1f1f1-1f1f8':71731, '1f1f1-1f1f9':71732, '1f1f1-1f1fa':71733, '1f1f1-1f1fb':71734, '1f1f1-1f1fe':71735, '1f1f2-1f1e6':71736, '1f1f2-1f1e8':71737, '1f1f2-1f1e9':71738, '1f1f2-1f1ea':71739, '1f1f2-1f1eb':71740, '1f1f2-1f1ec':71741, '1f1f2-1f1ed':71742, '1f1f2-1f1f0':71743, '1f1f2-1f1f1':71744, '1f1f2-1f1f2':71745, '1f1f2-1f1f3':71746, '1f1f2-1f1f4':71747, '1f1f2-1f1f5':71748, '1f1f2-1f1f6':71749, '1f1f2-1f1f7':71750, '1f1f2-1f1f8':71751, '1f1f2-1f1f9':71752, '1f1f2-1f1fa':71753, '1f1f2-1f1fb':71754, '1f1f2-1f1fc':71755, '1f1f2-1f1fd':71756, '1f1f2-1f1fe':71757, '1f1f2-1f1ff':71758, '1f1f3-1f1e6':71759, '1f1f3-1f1e8':71760, '1f1f3-1f1ea':71761, '1f1f3-1f1eb':71762, '1f1f3-1f1ec':71763, '1f1f3-1f1ee':71764, '1f1f3-1f1f1':71765, '1f1f3-1f1f4':71766, '1f1f3-1f1f5':71767, '1f1f3-1f1f7':71768, '1f1f3-1f1fa':71769, '1f1f3-1f1ff':71770, '1f1f4-1f1f2':71771, '1f1f5-1f1e6':71772, '1f1f5-1f1ea':71773, '1f1f5-1f1eb':71774, '1f1f5-1f1ec':71775, '1f1f5-1f1ed':71776, '1f1f5-1f1f0':71777, '1f1f5-1f1f1':71778, '1f1f5-1f1f2':71779, '1f1f5-1f1f3':71780, '1f1f5-1f1f7':71781, '1f1f5-1f1f8':71782, '1f1f5-1f1f9':71783, '1f1f5-1f1fc':71784, '1f1f5-1f1fe':71785, '1f1f6-1f1e6':71786, '1f1f7-1f1ea':71787, '1f1f7-1f1f4':71788, '1f1f7-1f1f8':71789, '1f1f7-1f1fa':71790, '1f1f7-1f1fc':71791, '1f1f8-1f1e6':71792, '1f1f8-1f1e7':71793, '1f1f8-1f1e8':71794, '1f1f8-1f1e9':71795, '1f1f8-1f1ea':71796, '1f1f8-1f1ec':71797, '1f1f8-1f1ed':71798, '1f1f8-1f1ee':71799, '1f1f8-1f1ef':71800, '1f1f8-1f1f0':71801, '1f1f8-1f1f1':71802, '1f1f8-1f1f2':71803, '1f1f8-1f1f3':71804, '1f1f8-1f1f4':71805, '1f1f8-1f1f7':71806, '1f1f8-1f1f8':71807, '1f1f8-1f1f9':71808, '1f1f8-1f1fb':71809, '1f1f8-1f1fd':71810, '1f1f8-1f1fe':71811, '1f1f8-1f1ff':71812, '1f1f9-1f1e6':71813, '1f1f9-1f1e8':71814, '1f1f9-1f1e9':71815, '1f1f9-1f1eb':71816, '1f1f9-1f1ec':71817, '1f1f9-1f1ed':71818, '1f1f9-1f1ef':71819, '1f1f9-1f1f0':71820, '1f1f9-1f1f1':71821, '1f1f9-1f1f2':71822, '1f1f9-1f1f3':71823, '1f1f9-1f1f4':71824, '1f1f9-1f1f7':71825, '1f1f9-1f1f9':71826, '1f1f9-1f1fb':71827, '1f1f9-1f1fc':71828, '1f1f9-1f1ff':71829, '1f1fa-1f1e6':71830, '1f1fa-1f1ec':71831, '1f1fa-1f1f2':71832, '1f1fa-1f1f3':71833, '1f1fa-1f1f8':71834, '1f1fa-1f1fe':71835, '1f1fa-1f1ff':71836, '1f1fb-1f1e6':71837, '1f1fb-1f1e8':71838, '1f1fb-1f1ea':71839, '1f1fb-1f1ec':71840, '1f1fb-1f1ee':71841, '1f1fb-1f1f3':71842, '1f1fb-1f1fa':71843, '1f1fc-1f1eb':71844, '1f1fc-1f1f8':71845, '1f1fd-1f1f0':71846, '1f1fe-1f1ea':71847, '1f1fe-1f1f9':71848, '1f1ff-1f1e6':71849, '1f1ff-1f1f2':71850, '1f1ff-1f1fc':71851, '1f201':62899, '1f202':62900, '1f21a':62906, '1f22f':62903, '1f232':62907, '1f233':62911, '1f234':62910, '1f235':62915, '1f236':62902, '1f237':62901, '1f238':62909, '1f239':62905, '1f23a':62914, '1f250':62904, '1f251':62908, '1f300':41010, '1f301':4857, '1f302':41012, '1f303':4858, '1f304':4860, '1f305':4861, '1f306':4862, '1f307':4863, '1f308':41011, '1f309':4864, '1f30a':41023, '1f30b':4815, '1f30c':4997, '1f30d':4806, '1f30e':4807, '1f30f':4808, '1f310':4809, '1f311':4977, '1f312':4978, '1f313':4979, '1f314':4980, '1f315':4981, '1f316':4982, '1f317':4983, '1f318':4984, '1f319':4985, '1f31a':4986, '1f31b':4987, '1f31c':4988, '1f31d':4991, '1f31e':4992, '1f31f':4995, '1f320':4996, '1f321':4989, '1f324':41001, '1f325':41002, '1f326':41003, '1f327':41004, '1f328':41005, '1f329':41006, '1f32a':41007, '1f32b':41008, '1f32c':41009, '1f32d':3725, '1f32e':3727, '1f32f':3728, '1f330':3708, '1f331':2659, '1f332':2661, '1f333':2662, '1f334':2663, '1f335':2664, '1f336':3698, '1f337':2658, '1f338':2649, '1f339':2653, '1f33a':2655, '1f33b':2656, '1f33c':2657, '1f33d':3697, '1f33e':2665, '1f33f':2666, '1f340':2668, '1f341':2669, '1f342':2670, '1f343':2671, '1f344':3705, '1f345':3690, '1f346':3694, '1f347':3674, '1f348':3675, '1f349':3676, '1f34a':3677, '1f34b':3678, '1f34c':3679, '1f34d':3680, '1f34e':3682, '1f34f':3683, '1f350':3684, '1f351':3685, '1f352':3686, '1f353':3687, '1f354':3722, '1f355':3724, '1f356':3718, '1f357':3719, '1f358':3744, '1f359':3745, '1f35a':3746, '1f35b':3747, '1f35c':3748, '1f35d':3749, '1f35e':3709, '1f35f':3723, '1f360':3750, '1f361':3756, '1f362':3751, '1f363':3752, '1f364':3753, '1f365':3754, '1f366':3765, '1f367':3766, '1f368':3767, '1f369':3768, '1f36a':3769, '1f36b':3774, '1f36c':3775, '1f36d':3776, '1f36e':3777, '1f36f':3778, '1f370':3771, '1f371':3743, '1f372':3735, '1f373':3733, '1f374':3801, '1f375':3783, '1f376':3784, '1f377':3786, '1f378':3787, '1f379':3788, '1f37a':3789, '1f37b':3790, '1f37c':3779, '1f37d':3800, '1f37e':3785, '1f37f':3739, '1f380':51040, '1f381':51041, '1f382':3770, '1f383':51024, '1f384':51025, '1f385':1527, '1f386':51026, '1f387':51027, '1f388':51030, '1f389':51031, '1f38a':51032, '1f38b':51033, '1f38c':71588, '1f38d':51034, '1f38e':51035, '1f38f':51036, '1f390':51037, '1f391':51038, '1f392':61134, '1f393':61147, '1f396':51045, '1f397':51042, '1f399':61167, '1f39a':61168, '1f39b':61169, '1f39e':61203, '1f39f':51043, '1f3a0':4866, '1f3a1':4868, '1f3a2':4869, '1f3a3':51072, '1f3a4':61170, '1f3a5':61202, '1f3a6':62819, '1f3a7':61171, '1f3a8':51105, '1f3a9':61146, '1f3aa':4871, '1f3ab':51044, '1f3ac':61205, '1f3ad':51103, '1f3ae':51086, '1f3af':51078, '1f3b0':51088, '1f3b1':51081, '1f3b2':51089, '1f3b3':51060, '1f3b4':51102, '1f3b5':61165, '1f3b6':61166, '1f3b7':61173, '1f3b8':61175, '1f3b9':61176, '1f3ba':61177, '1f3bb':61178, '1f3bc':61164, '1f3bd':51074, '1f3be':51058, '1f3bf':51075, '1f3c0':51054, '1f3c1':71586, '1f3c2':1600, '1f3c3-200d-2640':1584, '1f3c3-200d-2642':1583, '1f3c3':1582, '1f3c4-200d-2640':1606, '1f3c4-200d-2642':1605, '1f3c4':1604, '1f3c5':51047, '1f3c6':51046, '1f3c7':1598, '1f3c8':51056, '1f3c9':51057, '1f3ca-200d-2640':1612, '1f3ca-200d-2642':1611, '1f3ca':1610, '1f3cb-200d-2640':1618, '1f3cb-200d-2642':1617, '1f3cb':1616, '1f3cc-200d-2640':1603, '1f3cc-200d-2642':1602, '1f3cc':1601, '1f3cd':4902, '1f3ce':4901, '1f3cf':51061, '1f3d0':51055, '1f3d1':51062, '1f3d2':51063, '1f3d3':51065, '1f3d4':4813, '1f3d5':4817, '1f3d6':4818, '1f3d7':4824, '1f3d8':4829, '1f3d9':4859, '1f3da':4830, '1f3db':4823, '1f3dc':4819, '1f3dd':4820, '1f3de':4821, '1f3df':4822, '1f3e0':4831, '1f3e1':4832, '1f3e2':4833, '1f3e3':4834, '1f3e4':4835, '1f3e5':4836, '1f3e6':4837, '1f3e7':62729, '1f3e8':4838, '1f3e9':4839, '1f3ea':4840, '1f3eb':4841, '1f3ec':4842, '1f3ed':4843, '1f3ee':61216, '1f3ef':4844, '1f3f0':4845, '1f3f3-200d-1f308':71591, '1f3f3-200d-26a7':71592, '1f3f3':71590, '1f3f4-200d-2620':71593, '1f3f4-e0067-e0062-e0065-e006e-e0067-e007f':71852, '1f3f4-e0067-e0062-e0073-e0063-e0074-e007f':71853, '1f3f4-e0067-e0062-e0077-e006c-e0073-e007f':71854, '1f3f4':71589, '1f3f5':2652, '1f3f7':61234, '1f3f8':51066, '1f3f9':61303, '1f3fa':3805, '1f3fb':9525, '1f3fc':9526, '1f3fd':9527, '1f3fe':9528, '1f3ff':9529, '1f400':2576, '1f401':2575, '1f402':2556, '1f403':2557, '1f404':2558, '1f405':2547, '1f406':2548, '1f407':2579, '1f408-200d-2b1b':2544, '1f408':2543, '1f409':2618, '1f40a':2613, '1f40b':2622, '1f40c':2632, '1f40d':2616, '1f40e':2550, '1f40f':2563, '1f410':2565, '1f411':2564, '1f412':2531, '1f413':2596, '1f414':2595, '1f415-200d-1f9ba':2537, '1f415':2535, '1f416':2560, '1f417':2561, '1f418':2570, '1f419':2629, '1f41a':2630, '1f41b':2634, '1f41c':2635, '1f41d':2636, '1f41e':2638, '1f41f':2625, '1f420':2626, '1f421':2627, '1f422':2614, '1f423':2597, '1f424':2598, '1f425':2599, '1f426':2600, '1f427':2601, '1f428':2586, '1f429':2538, '1f42a':2566, '1f42b':2567, '1f42c':2623, '1f42d':2574, '1f42e':2555, '1f42f':2546, '1f430':2578, '1f431':2542, '1f432':2617, '1f433':2621, '1f434':2549, '1f435':2530, '1f436':2534, '1f437':2559, '1f438':2612, '1f439':2577, '1f43a':2539, '1f43b-200d-2744':2585, '1f43b':2584, '1f43c':2587, '1f43d':2562, '1f43e':2593, '1f43f':2580, '1f440':1381, '1f441-200d-1f5e8':1159, '1f441':1382, '1f442':1373, '1f443':1375, '1f444':1384, '1f445':1383, '1f446':1347, '1f447':1349, '1f448':1345, '1f449':1346, '1f44a':1355, '1f44b':1327, '1f44c':1336, '1f44d':1352, '1f44e':1353, '1f44f':1358, '1f450':1361, '1f451':61144, '1f452':61145, '1f453':61110, '1f454':61115, '1f455':61116, '1f456':61117, '1f457':61122, '1f458':61123, '1f459':61128, '1f45a':61129, '1f45b':61130, '1f45c':61131, '1f45d':61132, '1f45e':61136, '1f45f':61137, '1f460':61140, '1f461':61141, '1f462':61143, '1f463':1687, '1f464':1684, '1f465':1685, '1f466':1388, '1f467':1389, '1f468-200d-1f33e':1457, '1f468-200d-1f373':1460, '1f468-200d-1f37c':1524, '1f468-200d-1f393':1448, '1f468-200d-1f3a4':1478, '1f468-200d-1f3a8':1481, '1f468-200d-1f3eb':1451, '1f468-200d-1f3ed':1466, '1f468-200d-1f466-200d-1f466':1674, '1f468-200d-1f466':1673, '1f468-200d-1f467-200d-1f466':1676, '1f468-200d-1f467-200d-1f467':1677, '1f468-200d-1f467':1675, '1f468-200d-1f468-200d-1f466':1663, '1f468-200d-1f468-200d-1f466-200d-1f466':1666, '1f468-200d-1f468-200d-1f467':1664, '1f468-200d-1f468-200d-1f467-200d-1f466':1665, '1f468-200d-1f468-200d-1f467-200d-1f467':1667, '1f468-200d-1f469-200d-1f466':1658, '1f468-200d-1f469-200d-1f466-200d-1f466':1661, '1f468-200d-1f469-200d-1f467':1659, '1f468-200d-1f469-200d-1f467-200d-1f466':1660, '1f468-200d-1f469-200d-1f467-200d-1f467':1662, '1f468-200d-1f4bb':1475, '1f468-200d-1f4bc':1469, '1f468-200d-1f527':1463, '1f468-200d-1f52c':1472, '1f468-200d-1f680':1487, '1f468-200d-1f692':1490, '1f468-200d-1f9af':1574, '1f468-200d-1f9b0':1396, '1f468-200d-1f9b1':1397, '1f468-200d-1f9b2':1399, '1f468-200d-1f9b3':1398, '1f468-200d-1f9bc':1577, '1f468-200d-1f9bd':1580, '1f468-200d-2695':1445, '1f468-200d-2696':1454, '1f468-200d-2708':1484, '1f468-200d-2764-200d-1f468':1655, '1f468-200d-2764-200d-1f48b-200d-1f468':1651, '1f468':1392, '1f469-200d-1f33e':1458, '1f469-200d-1f373':1461, '1f469-200d-1f37c':1523, '1f469-200d-1f393':1449, '1f469-200d-1f3a4':1479, '1f469-200d-1f3a8':1482, '1f469-200d-1f3eb':1452, '1f469-200d-1f3ed':1467, '1f469-200d-1f466-200d-1f466':1679, '1f469-200d-1f466':1678, '1f469-200d-1f467-200d-1f466':1681, '1f469-200d-1f467-200d-1f467':1682, '1f469-200d-1f467':1680, '1f469-200d-1f469-200d-1f466':1668, '1f469-200d-1f469-200d-1f466-200d-1f466':1671, '1f469-200d-1f469-200d-1f467':1669, '1f469-200d-1f469-200d-1f467-200d-1f466':1670, '1f469-200d-1f469-200d-1f467-200d-1f467':1672, '1f469-200d-1f4bb':1476, '1f469-200d-1f4bc':1470, '1f469-200d-1f527':1464, '1f469-200d-1f52c':1473, '1f469-200d-1f680':1488, '1f469-200d-1f692':1491, '1f469-200d-1f9af':1575, '1f469-200d-1f9b0':1401, '1f469-200d-1f9b1':1403, '1f469-200d-1f9b2':1407, '1f469-200d-1f9b3':1405, '1f469-200d-1f9bc':1578, '1f469-200d-1f9bd':1581, '1f469-200d-2695':1446, '1f469-200d-2696':1455, '1f469-200d-2708':1485, '1f469-200d-2764-200d-1f468':1654, '1f469-200d-2764-200d-1f469':1656, '1f469-200d-2764-200d-1f48b-200d-1f468':1650, '1f469-200d-2764-200d-1f48b-200d-1f469':1652, '1f469':1400, '1f46a':1657, '1f46b':1647, '1f46c':1648, '1f46d':1646, '1f46e-200d-2640':1494, '1f46e-200d-2642':1493, '1f46e':1492, '1f46f-200d-2640':1590, '1f46f-200d-2642':1589, '1f46f':1588, '1f470-200d-2640':1518, '1f470-200d-2642':1517, '1f470':1516, '1f471-200d-2640':1409, '1f471-200d-2642':1410, '1f471':1391, '1f472':1511, '1f473-200d-2640':1510, '1f473-200d-2642':1509, '1f473':1508, '1f474':1412, '1f475':1413, '1f476':1386, '1f477-200d-2640':1504, '1f477-200d-2642':1503, '1f477':1502, '1f478':1507, '1f479':1109, '1f47a':1110, '1f47b':1111, '1f47c':1526, '1f47d':1112, '1f47e':1113, '1f47f':1104, '1f480':1105, '1f481-200d-2640':1428, '1f481-200d-2642':1427, '1f481':1426, '1f482-200d-2640':1500, '1f482-200d-2642':1499, '1f482':1498, '1f483':1585, '1f484':61152, '1f485':1366, '1f486-200d-2640':1560, '1f486-200d-2642':1559, '1f486':1558, '1f487-200d-2640':1563, '1f487-200d-2642':1562, '1f487':1561, '1f488':4870, '1f489':61326, '1f48a':61328, '1f48b':1127, '1f48c':1128, '1f48d':61153, '1f48e':61154, '1f48f':1649, '1f490':2648, '1f491':1653, '1f492':4846, '1f493':1133, '1f494':1138, '1f495':1135, '1f496':1131, '1f497':1132, '1f498':1129, '1f499':1145, '1f49a':1144, '1f49b':1143, '1f49c':1146, '1f49d':1130, '1f49e':1134, '1f49f':1136, '1f4a0':62946, '1f4a1':61214, '1f4a2':1151, '1f4a3':1157, '1f4a4':1163, '1f4a5':1152, '1f4a6':1154, '1f4a7':41022, '1f4a8':1155, '1f4a9':1107, '1f4aa':1368, '1f4ab':1153, '1f4ac':1158, '1f4ad':1162, '1f4ae':2650, '1f4af':1150, '1f4b0':61235, '1f4b1':62841, '1f4b2':62842, '1f4b3':61242, '1f4b4':61237, '1f4b5':61238, '1f4b6':61239, '1f4b7':61240, '1f4b8':61241, '1f4b9':61244, '1f4ba':4936, '1f4bb':61191, '1f4bc':61265, '1f4bd':61197, '1f4be':61198, '1f4bf':61199, '1f4c0':61200, '1f4c1':61266, '1f4c2':61267, '1f4c3':61227, '1f4c4':61229, '1f4c5':61269, '1f4c6':61270, '1f4c7':61273, '1f4c8':61274, '1f4c9':61275, '1f4ca':61276, '1f4cb':61277, '1f4cc':61278, '1f4cd':61279, '1f4ce':61280, '1f4cf':61282, '1f4d0':61283, '1f4d1':61232, '1f4d2':61226, '1f4d3':61225, '1f4d4':61218, '1f4d5':61219, '1f4d6':61220, '1f4d7':61221, '1f4d8':61222, '1f4d9':61223, '1f4da':61224, '1f4db':62847, '1f4dc':61228, '1f4dd':61264, '1f4de':61185, '1f4df':61186, '1f4e0':61187, '1f4e1':61325, '1f4e2':61159, '1f4e3':61160, '1f4e4':61249, '1f4e5':61250, '1f4e6':61251, '1f4e7':61246, '1f4e8':61247, '1f4e9':61248, '1f4ea':61253, '1f4eb':61252, '1f4ec':61254, '1f4ed':61255, '1f4ee':61256, '1f4ef':61161, '1f4f0':61230, '1f4f1':61182, '1f4f2':61183, '1f4f3':62823, '1f4f4':62824, '1f4f5':62751, '1f4f6':62822, '1f4f7':61207, '1f4f8':61208, '1f4f9':61209, '1f4fa':61206, '1f4fb':61172, '1f4fc':61210, '1f4fd':61204, '1f4ff':61151, '1f500':62801, '1f501':62802, '1f502':62803, '1f503':62769, '1f504':62770, '1f505':62820, '1f506':62821, '1f507':61155, '1f508':61156, '1f509':61157, '1f50a':61158, '1f50b':61188, '1f50c':61190, '1f50d':61211, '1f50e':61212, '1f50f':61290, '1f510':61291, '1f511':61292, '1f512':61288, '1f513':61289, '1f514':61162, '1f515':61163, '1f516':61233, '1f517':61313, '1f518':62947, '1f519':62771, '1f51a':62772, '1f51b':62773, '1f51c':62774, '1f51d':62775, '1f51e':62752, '1f51f':62876, '1f520':62877, '1f521':62878, '1f522':62879, '1f523':62880, '1f524':62881, '1f525':41021, '1f526':61215, '1f527':61306, '1f528':61294, '1f529':61308, '1f52a':3803, '1f52b':61301, '1f52c':61323, '1f52d':61324, '1f52e':51082, '1f52f':62787, '1f530':62848, '1f531':62846, '1f532':62949, '1f533':62948, '1f534':62916, '1f535':62920, '1f536':62940, '1f537':62941, '1f538':62942, '1f539':62943, '1f53a':62944, '1f53b':62945, '1f53c':62811, '1f53d':62813, '1f549':62778, '1f54a':2602, '1f54b':4854, '1f54c':4850, '1f54d':4852, '1f54e':62786, '1f550':4955, '1f551':4957, '1f552':4959, '1f553':4961, '1f554':4963, '1f555':4965, '1f556':4967, '1f557':4969, '1f558':4971, '1f559':4973, '1f55a':4975, '1f55b':4953, '1f55c':4956, '1f55d':4958, '1f55e':4960, '1f55f':4962, '1f560':4964, '1f561':4966, '1f562':4968, '1f563':4970, '1f564':4972, '1f565':4974, '1f566':4976, '1f567':4954, '1f56f':61213, '1f570':4952, '1f573':1156, '1f574':1587, '1f575-200d-2640':1497, '1f575-200d-2642':1496, '1f575':1495, '1f576':61111, '1f577':2641, '1f578':2642, '1f579':51087, '1f57a':1586, '1f587':61281, '1f58a':61261, '1f58b':61260, '1f58c':61262, '1f58d':61263, '1f590':1329, '1f595':1348, '1f596':1331, '1f5a4':1148, '1f5a5':61192, '1f5a8':61193, '1f5b1':61195, '1f5b2':61196, '1f5bc':51104, '1f5c2':61268, '1f5c3':61285, '1f5c4':61286, '1f5d1':61287, '1f5d2':61271, '1f5d3':61272, '1f5dc':61310, '1f5dd':61293, '1f5de':61231, '1f5e1':61299, '1f5e3':1683, '1f5e8':1160, '1f5ef':1161, '1f5f3':61257, '1f5fa':4810, '1f5fb':4816, '1f5fc':4847, '1f5fd':4848, '1f5fe':4811, '1f5ff':61362, '1f600':11, '1f601':14, '1f602':18, '1f603':12, '1f604':13, '1f605':16, '1f606':15, '1f607':114, '1f608':1103, '1f609':112, '1f60a':113, '1f60b':124, '1f60c':150, '1f60d':116, '1f60e':170, '1f60f':144, '1f610':139, '1f611':140, '1f612':145, '1f613':195, '1f614':151, '1f615':173, '1f616':192, '1f617':119, '1f618':118, '1f619':122, '1f61a':121, '1f61b':125, '1f61c':126, '1f61d':128, '1f61e':194, '1f61f':175, '1f620':1101, '1f621':1100, '1f622':189, '1f623':193, '1f624':199, '1f625':188, '1f626':184, '1f627':185, '1f628':186, '1f629':196, '1f62a':152, '1f62b':197, '1f62c':147, '1f62d':190, '1f62e-200d-1f4a8':148, '1f62e':178, '1f62f':179, '1f630':187, '1f631':191, '1f632':180, '1f633':181, '1f634':154, '1f635-200d-1f4ab':165, '1f635':164, '1f636-200d-1f32b':143, '1f636':141, '1f637':155, '1f638':1116, '1f639':1117, '1f63a':1115, '1f63b':1118, '1f63c':1119, '1f63d':1120, '1f63e':1123, '1f63f':1122, '1f640':1121, '1f641':176, '1f642':19, '1f643':110, '1f644':146, '1f645-200d-2640':1422, '1f645-200d-2642':1421, '1f645':1420, '1f646-200d-2640':1425, '1f646-200d-2642':1424, '1f646':1423, '1f647-200d-2640':1437, '1f647-200d-2642':1436, '1f647':1435, '1f648':1124, '1f649':1125, '1f64a':1126, '1f64b-200d-2640':1431, '1f64b-200d-2642':1430, '1f64b':1429, '1f64c':1359, '1f64d-200d-2640':1416, '1f64d-200d-2642':1415, '1f64d':1414, '1f64e-200d-2640':1419, '1f64e-200d-2642':1418, '1f64e':1417, '1f64f':1364, '1f680':4942, '1f681':4937, '1f682':4872, '1f683':4873, '1f684':4874, '1f685':4875, '1f686':4876, '1f687':4877, '1f688':4878, '1f689':4879, '1f68a':4880, '1f68b':4883, '1f68c':4884, '1f68d':4885, '1f68e':4886, '1f68f':4911, '1f690':4887, '1f691':4888, '1f692':4889, '1f693':4890, '1f694':4891, '1f695':4892, '1f696':4893, '1f697':4894, '1f698':4895, '1f699':4896, '1f69a':4898, '1f69b':4899, '1f69c':4900, '1f69d':4881, '1f69e':4882, '1f69f':4938, '1f6a0':4939, '1f6a1':4940, '1f6a2':4930, '1f6a3-200d-2640':1609, '1f6a3-200d-2642':1608, '1f6a3':1607, '1f6a4':4926, '1f6a5':4918, '1f6a6':4919, '1f6a7':4921, '1f6a8':4917, '1f6a9':71587, '1f6aa':61333, '1f6ab':62745, '1f6ac':61358, '1f6ad':62747, '1f6ae':62730, '1f6af':62748, '1f6b0':62731, '1f6b1':62749, '1f6b2':4907, '1f6b3':62746, '1f6b4-200d-2640':1621, '1f6b4-200d-2642':1620, '1f6b4':1619, '1f6b5-200d-2640':1624, '1f6b5-200d-2642':1623, '1f6b5':1622, '1f6b6-200d-2640':1566, '1f6b6-200d-2642':1565, '1f6b6':1564, '1f6b7':62750, '1f6b8':62743, '1f6b9':62733, '1f6ba':62734, '1f6bb':62735, '1f6bc':62736, '1f6bd':61340, '1f6be':62737, '1f6bf':61342, '1f6c0':1643, '1f6c1':61343, '1f6c2':62738, '1f6c3':62739, '1f6c4':62740, '1f6c5':62741, '1f6cb':61338, '1f6cc':1644, '1f6cd':61133, '1f6ce':4944, '1f6cf':61337, '1f6d0':62776, '1f6d1':4920, '1f6d2':61357, '1f6d5':4851, '1f6d6':4828, '1f6d7':61334, '1f6e0':61298, '1f6e1':61304, '1f6e2':4914, '1f6e3':4912, '1f6e4':4913, '1f6e5':4929, '1f6e9':4932, '1f6eb':4933, '1f6ec':4934, '1f6f0':4941, '1f6f3':4927, '1f6f4':4908, '1f6f5':4903, '1f6f6':4925, '1f6f7':51076, '1f6f8':4943, '1f6f9':4909, '1f6fa':4906, '1f6fb':4897, '1f6fc':4910, '1f7e0':62917, '1f7e1':62918, '1f7e2':62919, '1f7e3':62921, '1f7e4':62922, '1f7e5':62925, '1f7e6':62929, '1f7e7':62926, '1f7e8':62927, '1f7e9':62928, '1f7ea':62930, '1f7eb':62931, '1f90c':1337, '1f90d':1149, '1f90e':1147, '1f90f':1338, '1f910':137, '1f911':129, '1f912':156, '1f913':171, '1f914':135, '1f915':157, '1f916':1114, '1f917':130, '1f918':1343, '1f919':1344, '1f91a':1328, '1f91b':1356, '1f91c':1357, '1f91d':1363, '1f91e':1340, '1f91f':1342, '1f920':167, '1f921':1108, '1f922':158, '1f923':17, '1f924':153, '1f925':149, '1f926-200d-2640':1440, '1f926-200d-2642':1439, '1f926':1438, '1f927':160, '1f928':138, '1f929':117, '1f92a':127, '1f92b':134, '1f92c':1102, '1f92d':131, '1f92e':159, '1f92f':166, '1f930':1519, '1f931':1522, '1f932':1362, '1f933':1367, '1f934':1506, '1f935-200d-2640':1515, '1f935-200d-2642':1514, '1f935':1513, '1f936':1528, '1f937-200d-2640':1443, '1f937-200d-2642':1442, '1f937':1441, '1f938-200d-2640':1627, '1f938-200d-2642':1626, '1f938':1625, '1f939-200d-2640':1639, '1f939-200d-2642':1638, '1f939':1637, '1f93a':1597, '1f93c-200d-2640':1630, '1f93c-200d-2642':1629, '1f93c':1628, '1f93d-200d-2640':1633, '1f93d-200d-2642':1632, '1f93d':1631, '1f93e-200d-2640':1636, '1f93e-200d-2642':1635, '1f93e':1634, '1f93f':51073, '1f940':2654, '1f941':61180, '1f942':3791, '1f943':3792, '1f944':3802, '1f945':51069, '1f947':51048, '1f948':51049, '1f949':51050, '1f94a':51067, '1f94b':51068, '1f94c':51077, '1f94d':51064, '1f94e':51053, '1f94f':51059, '1f950':3710, '1f951':3693, '1f952':3700, '1f953':3721, '1f954':3695, '1f955':3696, '1f956':3711, '1f957':3738, '1f958':3734, '1f959':3730, '1f95a':3732, '1f95b':3780, '1f95c':3706, '1f95d':3689, '1f95e':3715, '1f95f':3757, '1f960':3758, '1f961':3759, '1f962':3799, '1f963':3737, '1f964':3794, '1f965':3692, '1f966':3702, '1f967':3773, '1f968':3713, '1f969':3720, '1f96a':3726, '1f96b':3742, '1f96c':3701, '1f96d':3681, '1f96e':3755, '1f96f':3714, '1f970':115, '1f971':198, '1f972':123, '1f973':168, '1f974':163, '1f975':161, '1f976':162, '1f977':1501, '1f978':169, '1f97a':182, '1f97b':61124, '1f97c':61113, '1f97d':61112, '1f97e':61138, '1f97f':61139, '1f980':3760, '1f981':2545, '1f982':2643, '1f983':2594, '1f984':2551, '1f985':2603, '1f986':2604, '1f987':2583, '1f988':2628, '1f989':2606, '1f98a':2540, '1f98b':2633, '1f98c':2553, '1f98d':2532, '1f98e':2615, '1f98f':2572, '1f990':3762, '1f991':3763, '1f992':2569, '1f993':2552, '1f994':2582, '1f995':2619, '1f996':2620, '1f997':2639, '1f998':2591, '1f999':2568, '1f99a':2610, '1f99b':2573, '1f99c':2611, '1f99d':2541, '1f99e':3761, '1f99f':2644, '1f9a0':2647, '1f9a1':2592, '1f9a2':2605, '1f9a3':2571, '1f9a4':2607, '1f9a5':2588, '1f9a6':2589, '1f9a7':2533, '1f9a8':2590, '1f9a9':2609, '1f9aa':3764, '1f9ab':2581, '1f9ac':2554, '1f9ad':2624, '1f9ae':2536, '1f9af':61312, '1f9b4':1380, '1f9b5':1371, '1f9b6':1372, '1f9b7':1379, '1f9b8-200d-2640':1532, '1f9b8-200d-2642':1531, '1f9b8':1530, '1f9b9-200d-2640':1535, '1f9b9-200d-2642':1534, '1f9b9':1533, '1f9ba':61114, '1f9bb':1374, '1f9bc':4905, '1f9bd':4904, '1f9be':1369, '1f9bf':1370, '1f9c0':3717, '1f9c1':3772, '1f9c2':3741, '1f9c3':3796, '1f9c4':3703, '1f9c5':3704, '1f9c6':3731, '1f9c7':3716, '1f9c8':3740, '1f9c9':3797, '1f9ca':3798, '1f9cb':3795, '1f9cd-200d-2640':1569, '1f9cd-200d-2642':1568, '1f9cd':1567, '1f9ce-200d-2640':1572, '1f9ce-200d-2642':1571, '1f9ce':1570, '1f9cf-200d-2640':1434, '1f9cf-200d-2642':1433, '1f9cf':1432, '1f9d0':172, '1f9d1-200d-1f33e':1456, '1f9d1-200d-1f373':1459, '1f9d1-200d-1f37c':1525, '1f9d1-200d-1f384':1529, '1f9d1-200d-1f393':1447, '1f9d1-200d-1f3a4':1477, '1f9d1-200d-1f3a8':1480, '1f9d1-200d-1f3eb':1450, '1f9d1-200d-1f3ed':1465, '1f9d1-200d-1f4bb':1474, '1f9d1-200d-1f4bc':1468, '1f9d1-200d-1f527':1462, '1f9d1-200d-1f52c':1471, '1f9d1-200d-1f680':1486, '1f9d1-200d-1f692':1489, '1f9d1-200d-1f91d-200d-1f9d1':1645, '1f9d1-200d-1f9af':1573, '1f9d1-200d-1f9b0':1402, '1f9d1-200d-1f9b1':1404, '1f9d1-200d-1f9b2':1408, '1f9d1-200d-1f9b3':1406, '1f9d1-200d-1f9bc':1576, '1f9d1-200d-1f9bd':1579, '1f9d1-200d-2695':1444, '1f9d1-200d-2696':1453, '1f9d1-200d-2708':1483, '1f9d1':1390, '1f9d2':1387, '1f9d3':1411, '1f9d4-200d-2640':1395, '1f9d4-200d-2642':1394, '1f9d4':1393, '1f9d5':1512, '1f9d6-200d-2640':1593, '1f9d6-200d-2642':1592, '1f9d6':1591, '1f9d7-200d-2640':1596, '1f9d7-200d-2642':1595, '1f9d7':1594, '1f9d8-200d-2640':1642, '1f9d8-200d-2642':1641, '1f9d8':1640, '1f9d9-200d-2640':1538, '1f9d9-200d-2642':1537, '1f9d9':1536, '1f9da-200d-2640':1541, '1f9da-200d-2642':1540, '1f9da':1539, '1f9db-200d-2640':1544, '1f9db-200d-2642':1543, '1f9db':1542, '1f9dc-200d-2640':1547, '1f9dc-200d-2642':1546, '1f9dc':1545, '1f9dd-200d-2640':1550, '1f9dd-200d-2642':1549, '1f9dd':1548, '1f9de-200d-2640':1553, '1f9de-200d-2642':1552, '1f9de':1551, '1f9df-200d-2640':1556, '1f9df-200d-2642':1555, '1f9df':1554, '1f9e0':1376, '1f9e1':1142, '1f9e2':61148, '1f9e3':61118, '1f9e4':61119, '1f9e5':61120, '1f9e6':61121, '1f9e7':51039, '1f9e8':51028, '1f9e9':51090, '1f9ea':61320, '1f9eb':61321, '1f9ec':61322, '1f9ed':4812, '1f9ee':61201, '1f9ef':61356, '1f9f0':61316, '1f9f1':4825, '1f9f2':61317, '1f9f3':4945, '1f9f4':61346, '1f9f5':51106, '1f9f6':51108, '1f9f7':61347, '1f9f8':51091, '1f9f9':61348, '1f9fa':61349, '1f9fb':61350, '1f9fc':61352, '1f9fd':61355, '1f9fe':61243, '1f9ff':51084, '1fa70':61142, '1fa71':61125, '1fa72':61126, '1fa73':61127, '1fa74':61135, '1fa78':61327, '1fa79':61329, '1fa7a':61331, '1fa80':51079, '1fa81':51080, '1fa82':4935, '1fa83':61302, '1fa84':51083, '1fa85':51092, '1fa86':51094, '1fa90':4993, '1fa91':61339, '1fa92':61345, '1fa93':61295, '1fa94':61217, '1fa95':61179, '1fa96':61149, '1fa97':61174, '1fa98':61181, '1fa99':61236, '1fa9a':61305, '1fa9b':61307, '1fa9c':61318, '1fa9d':61315, '1fa9e':61335, '1fa9f':61336, '1faa0':61341, '1faa1':51107, '1faa2':51109, '1faa3':61351, '1faa4':61344, '1faa5':61354, '1faa6':61360, '1faa7':61363, '1faa8':4826, '1fab0':2645, '1fab1':2646, '1fab2':2637, '1fab3':2640, '1fab4':2660, '1fab5':4827, '1fab6':2608, '1fac0':1377, '1fac1':1378, '1fac2':1686, '1fad0':3688, '1fad1':3699, '1fad2':3691, '1fad3':3712, '1fad4':3729, '1fad5':3736, '1fad6':3782, '203c':62834, '21a9':62765, '21aa':62766, '231a':4948, '231b':4946, '23cf':62818, '23e9':62805, '23ea':62809, '23eb':62812, '23ec':62814, '23ed':62806, '23ee':62810, '23ef':62807, '23f0':4949, '23f1':4950, '23f2':4951, '23f3':4947, '23f8':62815, '23f9':62816, '23fa':62817, '24c2':62890, '25aa':62938, '25ab':62939, '25b6':62804, '25c0':62808, '25fb':62935, '25fc':62934, '25fd':62937, '25fe':62936, '260e':61184, '261d':1350, '262a':62784, '262e':62785, '262f':62781, '263a':120, '264a':62790, '264b':62791, '264c':62792, '264d':62793, '264e':62794, '264f':62795, '265f':51099, '267b':62844, '267e':62833, '267f':62732, '269b':62777, '269c':62845, '26a0':62742, '26a1':41016, '26a7':62827, '26aa':62924, '26ab':62923, '26b0':61359, '26b1':61361, '26bd':51051, '26be':51052, '26c4':41019, '26c5':4999, '26c8':41000, '26ce':62800, '26cf':61296, '26d1':61150, '26d3':61314, '26d4':62744, '26e9':4853, '26ea':4849, '26f0':4814, '26f1':41015, '26f2':4855, '26f3':51070, '26f4':4928, '26f5':4924, '26f7':1599, '26f8':51071, '26f9-200d-2640':1615, '26f9-200d-2642':1614, '26f9':1613, '26fa':4856, '26fd':4915, '270a':1354, '270b':1330, '270c':1339, '270d':1365, '270f':61258, '271d':62782, '274c':62853, '274e':62854, '2764-200d-1f525':1139, '2764-200d-1fa79':1140, '27a1':62757, '27b0':62855, '27bf':62856, '2b05':62761, '2b06':62755, '2b07':62759, '2b1b':62932, '2b1c':62933, '2b50':4994, '2b55':62849, '303d':62857, '1f385-1f3fb':0, '1f385-1f3fc':0, '1f385-1f3fd':0, '1f385-1f3fe':0, '1f385-1f3ff':0, '1f3c2-1f3fb':0, '1f3c2-1f3fc':0, '1f3c2-1f3fd':0, '1f3c2-1f3fe':0, '1f3c2-1f3ff':0, '1f3c3-1f3fb-200d-2640':0, '1f3c3-1f3fc-200d-2640':0, '1f3c3-1f3fd-200d-2640':0, '1f3c3-1f3fe-200d-2640':0, '1f3c3-1f3ff-200d-2640':0, '1f3c3-1f3fb-200d-2642':0, '1f3c3-1f3fc-200d-2642':0, '1f3c3-1f3fd-200d-2642':0, '1f3c3-1f3fe-200d-2642':0, '1f3c3-1f3ff-200d-2642':0, '1f3c3-1f3fb':0, '1f3c3-1f3fc':0, '1f3c3-1f3fd':0, '1f3c3-1f3fe':0, '1f3c3-1f3ff':0, '1f3c4-1f3fb-200d-2640':0, '1f3c4-1f3fc-200d-2640':0, '1f3c4-1f3fd-200d-2640':0, '1f3c4-1f3fe-200d-2640':0, '1f3c4-1f3ff-200d-2640':0, '1f3c4-1f3fb-200d-2642':0, '1f3c4-1f3fc-200d-2642':0, '1f3c4-1f3fd-200d-2642':0, '1f3c4-1f3fe-200d-2642':0, '1f3c4-1f3ff-200d-2642':0, '1f3c4-1f3fb':0, '1f3c4-1f3fc':0, '1f3c4-1f3fd':0, '1f3c4-1f3fe':0, '1f3c4-1f3ff':0, '1f3c7-1f3fb':0, '1f3c7-1f3fc':0, '1f3c7-1f3fd':0, '1f3c7-1f3fe':0, '1f3c7-1f3ff':0, '1f3ca-1f3fb-200d-2640':0, '1f3ca-1f3fc-200d-2640':0, '1f3ca-1f3fd-200d-2640':0, '1f3ca-1f3fe-200d-2640':0, '1f3ca-1f3ff-200d-2640':0, '1f3ca-1f3fb-200d-2642':0, '1f3ca-1f3fc-200d-2642':0, '1f3ca-1f3fd-200d-2642':0, '1f3ca-1f3fe-200d-2642':0, '1f3ca-1f3ff-200d-2642':0, '1f3ca-1f3fb':0, '1f3ca-1f3fc':0, '1f3ca-1f3fd':0, '1f3ca-1f3fe':0, '1f3ca-1f3ff':0, '1f3cb-1f3fb-200d-2640':0, '1f3cb-1f3fc-200d-2640':0, '1f3cb-1f3fd-200d-2640':0, '1f3cb-1f3fe-200d-2640':0, '1f3cb-1f3ff-200d-2640':0, '1f3cb-1f3fb-200d-2642':0, '1f3cb-1f3fc-200d-2642':0, '1f3cb-1f3fd-200d-2642':0, '1f3cb-1f3fe-200d-2642':0, '1f3cb-1f3ff-200d-2642':0, '1f3cb-1f3fb':0, '1f3cb-1f3fc':0, '1f3cb-1f3fd':0, '1f3cb-1f3fe':0, '1f3cb-1f3ff':0, '1f3cc-1f3fb-200d-2640':0, '1f3cc-1f3fc-200d-2640':0, '1f3cc-1f3fd-200d-2640':0, '1f3cc-1f3fe-200d-2640':0, '1f3cc-1f3ff-200d-2640':0, '1f3cc-1f3fb-200d-2642':0, '1f3cc-1f3fc-200d-2642':0, '1f3cc-1f3fd-200d-2642':0, '1f3cc-1f3fe-200d-2642':0, '1f3cc-1f3ff-200d-2642':0, '1f3cc-1f3fb':0, '1f3cc-1f3fc':0, '1f3cc-1f3fd':0, '1f3cc-1f3fe':0, '1f3cc-1f3ff':0, '1f442-1f3fb':0, '1f442-1f3fc':0, '1f442-1f3fd':0, '1f442-1f3fe':0, '1f442-1f3ff':0, '1f443-1f3fb':0, '1f443-1f3fc':0, '1f443-1f3fd':0, '1f443-1f3fe':0, '1f443-1f3ff':0, '1f446-1f3fb':0, '1f446-1f3fc':0, '1f446-1f3fd':0, '1f446-1f3fe':0, '1f446-1f3ff':0, '1f447-1f3fb':0, '1f447-1f3fc':0, '1f447-1f3fd':0, '1f447-1f3fe':0, '1f447-1f3ff':0, '1f448-1f3fb':0, '1f448-1f3fc':0, '1f448-1f3fd':0, '1f448-1f3fe':0, '1f448-1f3ff':0, '1f449-1f3fb':0, '1f449-1f3fc':0, '1f449-1f3fd':0, '1f449-1f3fe':0, '1f449-1f3ff':0, '1f44a-1f3fb':0, '1f44a-1f3fc':0, '1f44a-1f3fd':0, '1f44a-1f3fe':0, '1f44a-1f3ff':0, '1f44b-1f3fb':0, '1f44b-1f3fc':0, '1f44b-1f3fd':0, '1f44b-1f3fe':0, '1f44b-1f3ff':0, '1f44c-1f3fb':0, '1f44c-1f3fc':0, '1f44c-1f3fd':0, '1f44c-1f3fe':0, '1f44c-1f3ff':0, '1f44d-1f3fb':0, '1f44d-1f3fc':0, '1f44d-1f3fd':0, '1f44d-1f3fe':0, '1f44d-1f3ff':0, '1f44e-1f3fb':0, '1f44e-1f3fc':0, '1f44e-1f3fd':0, '1f44e-1f3fe':0, '1f44e-1f3ff':0, '1f44f-1f3fb':0, '1f44f-1f3fc':0, '1f44f-1f3fd':0, '1f44f-1f3fe':0, '1f44f-1f3ff':0, '1f450-1f3fb':0, '1f450-1f3fc':0, '1f450-1f3fd':0, '1f450-1f3fe':0, '1f450-1f3ff':0, '1f466-1f3fb':0, '1f466-1f3fc':0, '1f466-1f3fd':0, '1f466-1f3fe':0, '1f466-1f3ff':0, '1f467-1f3fb':0, '1f467-1f3fc':0, '1f467-1f3fd':0, '1f467-1f3fe':0, '1f467-1f3ff':0, '1f468-1f3fb-200d-1f33e':0, '1f468-1f3fc-200d-1f33e':0, '1f468-1f3fd-200d-1f33e':0, '1f468-1f3fe-200d-1f33e':0, '1f468-1f3ff-200d-1f33e':0, '1f468-1f3fb-200d-1f373':0, '1f468-1f3fc-200d-1f373':0, '1f468-1f3fd-200d-1f373':0, '1f468-1f3fe-200d-1f373':0, '1f468-1f3ff-200d-1f373':0, '1f468-1f3fb-200d-1f37c':0, '1f468-1f3fc-200d-1f37c':0, '1f468-1f3fd-200d-1f37c':0, '1f468-1f3fe-200d-1f37c':0, '1f468-1f3ff-200d-1f37c':0, '1f468-1f3fb-200d-1f393':0, '1f468-1f3fc-200d-1f393':0, '1f468-1f3fd-200d-1f393':0, '1f468-1f3fe-200d-1f393':0, '1f468-1f3ff-200d-1f393':0, '1f468-1f3fb-200d-1f3a4':0, '1f468-1f3fc-200d-1f3a4':0, '1f468-1f3fd-200d-1f3a4':0, '1f468-1f3fe-200d-1f3a4':0, '1f468-1f3ff-200d-1f3a4':0, '1f468-1f3fb-200d-1f3a8':0, '1f468-1f3fc-200d-1f3a8':0, '1f468-1f3fd-200d-1f3a8':0, '1f468-1f3fe-200d-1f3a8':0, '1f468-1f3ff-200d-1f3a8':0, '1f468-1f3fb-200d-1f3eb':0, '1f468-1f3fc-200d-1f3eb':0, '1f468-1f3fd-200d-1f3eb':0, '1f468-1f3fe-200d-1f3eb':0, '1f468-1f3ff-200d-1f3eb':0, '1f468-1f3fb-200d-1f3ed':0, '1f468-1f3fc-200d-1f3ed':0, '1f468-1f3fd-200d-1f3ed':0, '1f468-1f3fe-200d-1f3ed':0, '1f468-1f3ff-200d-1f3ed':0, '1f468-1f3fb-200d-1f4bb':0, '1f468-1f3fc-200d-1f4bb':0, '1f468-1f3fd-200d-1f4bb':0, '1f468-1f3fe-200d-1f4bb':0, '1f468-1f3ff-200d-1f4bb':0, '1f468-1f3fb-200d-1f4bc':0, '1f468-1f3fc-200d-1f4bc':0, '1f468-1f3fd-200d-1f4bc':0, '1f468-1f3fe-200d-1f4bc':0, '1f468-1f3ff-200d-1f4bc':0, '1f468-1f3fb-200d-1f527':0, '1f468-1f3fc-200d-1f527':0, '1f468-1f3fd-200d-1f527':0, '1f468-1f3fe-200d-1f527':0, '1f468-1f3ff-200d-1f527':0, '1f468-1f3fb-200d-1f52c':0, '1f468-1f3fc-200d-1f52c':0, '1f468-1f3fd-200d-1f52c':0, '1f468-1f3fe-200d-1f52c':0, '1f468-1f3ff-200d-1f52c':0, '1f468-1f3fb-200d-1f680':0, '1f468-1f3fc-200d-1f680':0, '1f468-1f3fd-200d-1f680':0, '1f468-1f3fe-200d-1f680':0, '1f468-1f3ff-200d-1f680':0, '1f468-1f3fb-200d-1f692':0, '1f468-1f3fc-200d-1f692':0, '1f468-1f3fd-200d-1f692':0, '1f468-1f3fe-200d-1f692':0, '1f468-1f3ff-200d-1f692':0, '1f468-1f3fb-200d-1f9af':0, '1f468-1f3fc-200d-1f9af':0, '1f468-1f3fd-200d-1f9af':0, '1f468-1f3fe-200d-1f9af':0, '1f468-1f3ff-200d-1f9af':0, '1f468-1f3fb-200d-1f9b0':0, '1f468-1f3fc-200d-1f9b0':0, '1f468-1f3fd-200d-1f9b0':0, '1f468-1f3fe-200d-1f9b0':0, '1f468-1f3ff-200d-1f9b0':0, '1f468-1f3fb-200d-1f9b1':0, '1f468-1f3fc-200d-1f9b1':0, '1f468-1f3fd-200d-1f9b1':0, '1f468-1f3fe-200d-1f9b1':0, '1f468-1f3ff-200d-1f9b1':0, '1f468-1f3fb-200d-1f9b2':0, '1f468-1f3fc-200d-1f9b2':0, '1f468-1f3fd-200d-1f9b2':0, '1f468-1f3fe-200d-1f9b2':0, '1f468-1f3ff-200d-1f9b2':0, '1f468-1f3fb-200d-1f9b3':0, '1f468-1f3fc-200d-1f9b3':0, '1f468-1f3fd-200d-1f9b3':0, '1f468-1f3fe-200d-1f9b3':0, '1f468-1f3ff-200d-1f9b3':0, '1f468-1f3fb-200d-1f9bc':0, '1f468-1f3fc-200d-1f9bc':0, '1f468-1f3fd-200d-1f9bc':0, '1f468-1f3fe-200d-1f9bc':0, '1f468-1f3ff-200d-1f9bc':0, '1f468-1f3fb-200d-1f9bd':0, '1f468-1f3fc-200d-1f9bd':0, '1f468-1f3fd-200d-1f9bd':0, '1f468-1f3fe-200d-1f9bd':0, '1f468-1f3ff-200d-1f9bd':0, '1f468-1f3fb-200d-2695':0, '1f468-1f3fc-200d-2695':0, '1f468-1f3fd-200d-2695':0, '1f468-1f3fe-200d-2695':0, '1f468-1f3ff-200d-2695':0, '1f468-1f3fb-200d-2696':0, '1f468-1f3fc-200d-2696':0, '1f468-1f3fd-200d-2696':0, '1f468-1f3fe-200d-2696':0, '1f468-1f3ff-200d-2696':0, '1f468-1f3fb-200d-2708':0, '1f468-1f3fc-200d-2708':0, '1f468-1f3fd-200d-2708':0, '1f468-1f3fe-200d-2708':0, '1f468-1f3ff-200d-2708':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fb':0, '1f468-1f3fc':0, '1f468-1f3fd':0, '1f468-1f3fe':0, '1f468-1f3ff':0, '1f469-1f3fb-200d-1f33e':0, '1f469-1f3fc-200d-1f33e':0, '1f469-1f3fd-200d-1f33e':0, '1f469-1f3fe-200d-1f33e':0, '1f469-1f3ff-200d-1f33e':0, '1f469-1f3fb-200d-1f373':0, '1f469-1f3fc-200d-1f373':0, '1f469-1f3fd-200d-1f373':0, '1f469-1f3fe-200d-1f373':0, '1f469-1f3ff-200d-1f373':0, '1f469-1f3fb-200d-1f37c':0, '1f469-1f3fc-200d-1f37c':0, '1f469-1f3fd-200d-1f37c':0, '1f469-1f3fe-200d-1f37c':0, '1f469-1f3ff-200d-1f37c':0, '1f469-1f3fb-200d-1f393':0, '1f469-1f3fc-200d-1f393':0, '1f469-1f3fd-200d-1f393':0, '1f469-1f3fe-200d-1f393':0, '1f469-1f3ff-200d-1f393':0, '1f469-1f3fb-200d-1f3a4':0, '1f469-1f3fc-200d-1f3a4':0, '1f469-1f3fd-200d-1f3a4':0, '1f469-1f3fe-200d-1f3a4':0, '1f469-1f3ff-200d-1f3a4':0, '1f469-1f3fb-200d-1f3a8':0, '1f469-1f3fc-200d-1f3a8':0, '1f469-1f3fd-200d-1f3a8':0, '1f469-1f3fe-200d-1f3a8':0, '1f469-1f3ff-200d-1f3a8':0, '1f469-1f3fb-200d-1f3eb':0, '1f469-1f3fc-200d-1f3eb':0, '1f469-1f3fd-200d-1f3eb':0, '1f469-1f3fe-200d-1f3eb':0, '1f469-1f3ff-200d-1f3eb':0, '1f469-1f3fb-200d-1f3ed':0, '1f469-1f3fc-200d-1f3ed':0, '1f469-1f3fd-200d-1f3ed':0, '1f469-1f3fe-200d-1f3ed':0, '1f469-1f3ff-200d-1f3ed':0, '1f469-1f3fb-200d-1f4bb':0, '1f469-1f3fc-200d-1f4bb':0, '1f469-1f3fd-200d-1f4bb':0, '1f469-1f3fe-200d-1f4bb':0, '1f469-1f3ff-200d-1f4bb':0, '1f469-1f3fb-200d-1f4bc':0, '1f469-1f3fc-200d-1f4bc':0, '1f469-1f3fd-200d-1f4bc':0, '1f469-1f3fe-200d-1f4bc':0, '1f469-1f3ff-200d-1f4bc':0, '1f469-1f3fb-200d-1f527':0, '1f469-1f3fc-200d-1f527':0, '1f469-1f3fd-200d-1f527':0, '1f469-1f3fe-200d-1f527':0, '1f469-1f3ff-200d-1f527':0, '1f469-1f3fb-200d-1f52c':0, '1f469-1f3fc-200d-1f52c':0, '1f469-1f3fd-200d-1f52c':0, '1f469-1f3fe-200d-1f52c':0, '1f469-1f3ff-200d-1f52c':0, '1f469-1f3fb-200d-1f680':0, '1f469-1f3fc-200d-1f680':0, '1f469-1f3fd-200d-1f680':0, '1f469-1f3fe-200d-1f680':0, '1f469-1f3ff-200d-1f680':0, '1f469-1f3fb-200d-1f692':0, '1f469-1f3fc-200d-1f692':0, '1f469-1f3fd-200d-1f692':0, '1f469-1f3fe-200d-1f692':0, '1f469-1f3ff-200d-1f692':0, '1f469-1f3fb-200d-1f9af':0, '1f469-1f3fc-200d-1f9af':0, '1f469-1f3fd-200d-1f9af':0, '1f469-1f3fe-200d-1f9af':0, '1f469-1f3ff-200d-1f9af':0, '1f469-1f3fb-200d-1f9b0':0, '1f469-1f3fc-200d-1f9b0':0, '1f469-1f3fd-200d-1f9b0':0, '1f469-1f3fe-200d-1f9b0':0, '1f469-1f3ff-200d-1f9b0':0, '1f469-1f3fb-200d-1f9b1':0, '1f469-1f3fc-200d-1f9b1':0, '1f469-1f3fd-200d-1f9b1':0, '1f469-1f3fe-200d-1f9b1':0, '1f469-1f3ff-200d-1f9b1':0, '1f469-1f3fb-200d-1f9b2':0, '1f469-1f3fc-200d-1f9b2':0, '1f469-1f3fd-200d-1f9b2':0, '1f469-1f3fe-200d-1f9b2':0, '1f469-1f3ff-200d-1f9b2':0, '1f469-1f3fb-200d-1f9b3':0, '1f469-1f3fc-200d-1f9b3':0, '1f469-1f3fd-200d-1f9b3':0, '1f469-1f3fe-200d-1f9b3':0, '1f469-1f3ff-200d-1f9b3':0, '1f469-1f3fb-200d-1f9bc':0, '1f469-1f3fc-200d-1f9bc':0, '1f469-1f3fd-200d-1f9bc':0, '1f469-1f3fe-200d-1f9bc':0, '1f469-1f3ff-200d-1f9bc':0, '1f469-1f3fb-200d-1f9bd':0, '1f469-1f3fc-200d-1f9bd':0, '1f469-1f3fd-200d-1f9bd':0, '1f469-1f3fe-200d-1f9bd':0, '1f469-1f3ff-200d-1f9bd':0, '1f469-1f3fb-200d-2695':0, '1f469-1f3fc-200d-2695':0, '1f469-1f3fd-200d-2695':0, '1f469-1f3fe-200d-2695':0, '1f469-1f3ff-200d-2695':0, '1f469-1f3fb-200d-2696':0, '1f469-1f3fc-200d-2696':0, '1f469-1f3fd-200d-2696':0, '1f469-1f3fe-200d-2696':0, '1f469-1f3ff-200d-2696':0, '1f469-1f3fb-200d-2708':0, '1f469-1f3fc-200d-2708':0, '1f469-1f3fd-200d-2708':0, '1f469-1f3fe-200d-2708':0, '1f469-1f3ff-200d-2708':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fb':0, '1f469-1f3fc':0, '1f469-1f3fd':0, '1f469-1f3fe':0, '1f469-1f3ff':0, '1f46b-1f3fb':0, '1f46b-1f3fc':0, '1f46b-1f3fd':0, '1f46b-1f3fe':0, '1f46b-1f3ff':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3fe':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3fe':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3fe':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fe':0, '1f46c-1f3fb':0, '1f46c-1f3fc':0, '1f46c-1f3fd':0, '1f46c-1f3fe':0, '1f46c-1f3ff':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3fe':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3fe':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3fe':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fe':0, '1f46d-1f3fb':0, '1f46d-1f3fc':0, '1f46d-1f3fd':0, '1f46d-1f3fe':0, '1f46d-1f3ff':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3fe':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3fe':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3fe':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fe':0, '1f46e-1f3fb-200d-2640':0, '1f46e-1f3fc-200d-2640':0, '1f46e-1f3fd-200d-2640':0, '1f46e-1f3fe-200d-2640':0, '1f46e-1f3ff-200d-2640':0, '1f46e-1f3fb-200d-2642':0, '1f46e-1f3fc-200d-2642':0, '1f46e-1f3fd-200d-2642':0, '1f46e-1f3fe-200d-2642':0, '1f46e-1f3ff-200d-2642':0, '1f46e-1f3fb':0, '1f46e-1f3fc':0, '1f46e-1f3fd':0, '1f46e-1f3fe':0, '1f46e-1f3ff':0, '1f470-1f3fb-200d-2640':0, '1f470-1f3fc-200d-2640':0, '1f470-1f3fd-200d-2640':0, '1f470-1f3fe-200d-2640':0, '1f470-1f3ff-200d-2640':0, '1f470-1f3fb-200d-2642':0, '1f470-1f3fc-200d-2642':0, '1f470-1f3fd-200d-2642':0, '1f470-1f3fe-200d-2642':0, '1f470-1f3ff-200d-2642':0, '1f470-1f3fb':0, '1f470-1f3fc':0, '1f470-1f3fd':0, '1f470-1f3fe':0, '1f470-1f3ff':0, '1f471-1f3fb-200d-2640':0, '1f471-1f3fc-200d-2640':0, '1f471-1f3fd-200d-2640':0, '1f471-1f3fe-200d-2640':0, '1f471-1f3ff-200d-2640':0, '1f471-1f3fb-200d-2642':0, '1f471-1f3fc-200d-2642':0, '1f471-1f3fd-200d-2642':0, '1f471-1f3fe-200d-2642':0, '1f471-1f3ff-200d-2642':0, '1f471-1f3fb':0, '1f471-1f3fc':0, '1f471-1f3fd':0, '1f471-1f3fe':0, '1f471-1f3ff':0, '1f472-1f3fb':0, '1f472-1f3fc':0, '1f472-1f3fd':0, '1f472-1f3fe':0, '1f472-1f3ff':0, '1f473-1f3fb-200d-2640':0, '1f473-1f3fc-200d-2640':0, '1f473-1f3fd-200d-2640':0, '1f473-1f3fe-200d-2640':0, '1f473-1f3ff-200d-2640':0, '1f473-1f3fb-200d-2642':0, '1f473-1f3fc-200d-2642':0, '1f473-1f3fd-200d-2642':0, '1f473-1f3fe-200d-2642':0, '1f473-1f3ff-200d-2642':0, '1f473-1f3fb':0, '1f473-1f3fc':0, '1f473-1f3fd':0, '1f473-1f3fe':0, '1f473-1f3ff':0, '1f474-1f3fb':0, '1f474-1f3fc':0, '1f474-1f3fd':0, '1f474-1f3fe':0, '1f474-1f3ff':0, '1f475-1f3fb':0, '1f475-1f3fc':0, '1f475-1f3fd':0, '1f475-1f3fe':0, '1f475-1f3ff':0, '1f476-1f3fb':0, '1f476-1f3fc':0, '1f476-1f3fd':0, '1f476-1f3fe':0, '1f476-1f3ff':0, '1f477-1f3fb-200d-2640':0, '1f477-1f3fc-200d-2640':0, '1f477-1f3fd-200d-2640':0, '1f477-1f3fe-200d-2640':0, '1f477-1f3ff-200d-2640':0, '1f477-1f3fb-200d-2642':0, '1f477-1f3fc-200d-2642':0, '1f477-1f3fd-200d-2642':0, '1f477-1f3fe-200d-2642':0, '1f477-1f3ff-200d-2642':0, '1f477-1f3fb':0, '1f477-1f3fc':0, '1f477-1f3fd':0, '1f477-1f3fe':0, '1f477-1f3ff':0, '1f478-1f3fb':0, '1f478-1f3fc':0, '1f478-1f3fd':0, '1f478-1f3fe':0, '1f478-1f3ff':0, '1f47c-1f3fb':0, '1f47c-1f3fc':0, '1f47c-1f3fd':0, '1f47c-1f3fe':0, '1f47c-1f3ff':0, '1f481-1f3fb-200d-2640':0, '1f481-1f3fc-200d-2640':0, '1f481-1f3fd-200d-2640':0, '1f481-1f3fe-200d-2640':0, '1f481-1f3ff-200d-2640':0, '1f481-1f3fb-200d-2642':0, '1f481-1f3fc-200d-2642':0, '1f481-1f3fd-200d-2642':0, '1f481-1f3fe-200d-2642':0, '1f481-1f3ff-200d-2642':0, '1f481-1f3fb':0, '1f481-1f3fc':0, '1f481-1f3fd':0, '1f481-1f3fe':0, '1f481-1f3ff':0, '1f482-1f3fb-200d-2640':0, '1f482-1f3fc-200d-2640':0, '1f482-1f3fd-200d-2640':0, '1f482-1f3fe-200d-2640':0, '1f482-1f3ff-200d-2640':0, '1f482-1f3fb-200d-2642':0, '1f482-1f3fc-200d-2642':0, '1f482-1f3fd-200d-2642':0, '1f482-1f3fe-200d-2642':0, '1f482-1f3ff-200d-2642':0, '1f482-1f3fb':0, '1f482-1f3fc':0, '1f482-1f3fd':0, '1f482-1f3fe':0, '1f482-1f3ff':0, '1f483-1f3fb':0, '1f483-1f3fc':0, '1f483-1f3fd':0, '1f483-1f3fe':0, '1f483-1f3ff':0, '1f485-1f3fb':0, '1f485-1f3fc':0, '1f485-1f3fd':0, '1f485-1f3fe':0, '1f485-1f3ff':0, '1f486-1f3fb-200d-2640':0, '1f486-1f3fc-200d-2640':0, '1f486-1f3fd-200d-2640':0, '1f486-1f3fe-200d-2640':0, '1f486-1f3ff-200d-2640':0, '1f486-1f3fb-200d-2642':0, '1f486-1f3fc-200d-2642':0, '1f486-1f3fd-200d-2642':0, '1f486-1f3fe-200d-2642':0, '1f486-1f3ff-200d-2642':0, '1f486-1f3fb':0, '1f486-1f3fc':0, '1f486-1f3fd':0, '1f486-1f3fe':0, '1f486-1f3ff':0, '1f487-1f3fb-200d-2640':0, '1f487-1f3fc-200d-2640':0, '1f487-1f3fd-200d-2640':0, '1f487-1f3fe-200d-2640':0, '1f487-1f3ff-200d-2640':0, '1f487-1f3fb-200d-2642':0, '1f487-1f3fc-200d-2642':0, '1f487-1f3fd-200d-2642':0, '1f487-1f3fe-200d-2642':0, '1f487-1f3ff-200d-2642':0, '1f487-1f3fb':0, '1f487-1f3fc':0, '1f487-1f3fd':0, '1f487-1f3fe':0, '1f487-1f3ff':0, '1f48f-1f3fb':0, '1f48f-1f3fc':0, '1f48f-1f3fd':0, '1f48f-1f3fe':0, '1f48f-1f3ff':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f491-1f3fb':0, '1f491-1f3fc':0, '1f491-1f3fd':0, '1f491-1f3fe':0, '1f491-1f3ff':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fe':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fe':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fe':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fe':0, '1f4aa-1f3fb':0, '1f4aa-1f3fc':0, '1f4aa-1f3fd':0, '1f4aa-1f3fe':0, '1f4aa-1f3ff':0, '1f574-1f3fb':0, '1f574-1f3fc':0, '1f574-1f3fd':0, '1f574-1f3fe':0, '1f574-1f3ff':0, '1f575-1f3fb-200d-2640':0, '1f575-1f3fc-200d-2640':0, '1f575-1f3fd-200d-2640':0, '1f575-1f3fe-200d-2640':0, '1f575-1f3ff-200d-2640':0, '1f575-1f3fb-200d-2642':0, '1f575-1f3fc-200d-2642':0, '1f575-1f3fd-200d-2642':0, '1f575-1f3fe-200d-2642':0, '1f575-1f3ff-200d-2642':0, '1f575-1f3fb':0, '1f575-1f3fc':0, '1f575-1f3fd':0, '1f575-1f3fe':0, '1f575-1f3ff':0, '1f57a-1f3fb':0, '1f57a-1f3fc':0, '1f57a-1f3fd':0, '1f57a-1f3fe':0, '1f57a-1f3ff':0, '1f590-1f3fb':0, '1f590-1f3fc':0, '1f590-1f3fd':0, '1f590-1f3fe':0, '1f590-1f3ff':0, '1f595-1f3fb':0, '1f595-1f3fc':0, '1f595-1f3fd':0, '1f595-1f3fe':0, '1f595-1f3ff':0, '1f596-1f3fb':0, '1f596-1f3fc':0, '1f596-1f3fd':0, '1f596-1f3fe':0, '1f596-1f3ff':0, '1f645-1f3fb-200d-2640':0, '1f645-1f3fc-200d-2640':0, '1f645-1f3fd-200d-2640':0, '1f645-1f3fe-200d-2640':0, '1f645-1f3ff-200d-2640':0, '1f645-1f3fb-200d-2642':0, '1f645-1f3fc-200d-2642':0, '1f645-1f3fd-200d-2642':0, '1f645-1f3fe-200d-2642':0, '1f645-1f3ff-200d-2642':0, '1f645-1f3fb':0, '1f645-1f3fc':0, '1f645-1f3fd':0, '1f645-1f3fe':0, '1f645-1f3ff':0, '1f646-1f3fb-200d-2640':0, '1f646-1f3fc-200d-2640':0, '1f646-1f3fd-200d-2640':0, '1f646-1f3fe-200d-2640':0, '1f646-1f3ff-200d-2640':0, '1f646-1f3fb-200d-2642':0, '1f646-1f3fc-200d-2642':0, '1f646-1f3fd-200d-2642':0, '1f646-1f3fe-200d-2642':0, '1f646-1f3ff-200d-2642':0, '1f646-1f3fb':0, '1f646-1f3fc':0, '1f646-1f3fd':0, '1f646-1f3fe':0, '1f646-1f3ff':0, '1f647-1f3fb-200d-2640':0, '1f647-1f3fc-200d-2640':0, '1f647-1f3fd-200d-2640':0, '1f647-1f3fe-200d-2640':0, '1f647-1f3ff-200d-2640':0, '1f647-1f3fb-200d-2642':0, '1f647-1f3fc-200d-2642':0, '1f647-1f3fd-200d-2642':0, '1f647-1f3fe-200d-2642':0, '1f647-1f3ff-200d-2642':0, '1f647-1f3fb':0, '1f647-1f3fc':0, '1f647-1f3fd':0, '1f647-1f3fe':0, '1f647-1f3ff':0, '1f64b-1f3fb-200d-2640':0, '1f64b-1f3fc-200d-2640':0, '1f64b-1f3fd-200d-2640':0, '1f64b-1f3fe-200d-2640':0, '1f64b-1f3ff-200d-2640':0, '1f64b-1f3fb-200d-2642':0, '1f64b-1f3fc-200d-2642':0, '1f64b-1f3fd-200d-2642':0, '1f64b-1f3fe-200d-2642':0, '1f64b-1f3ff-200d-2642':0, '1f64b-1f3fb':0, '1f64b-1f3fc':0, '1f64b-1f3fd':0, '1f64b-1f3fe':0, '1f64b-1f3ff':0, '1f64c-1f3fb':0, '1f64c-1f3fc':0, '1f64c-1f3fd':0, '1f64c-1f3fe':0, '1f64c-1f3ff':0, '1f64d-1f3fb-200d-2640':0, '1f64d-1f3fc-200d-2640':0, '1f64d-1f3fd-200d-2640':0, '1f64d-1f3fe-200d-2640':0, '1f64d-1f3ff-200d-2640':0, '1f64d-1f3fb-200d-2642':0, '1f64d-1f3fc-200d-2642':0, '1f64d-1f3fd-200d-2642':0, '1f64d-1f3fe-200d-2642':0, '1f64d-1f3ff-200d-2642':0, '1f64d-1f3fb':0, '1f64d-1f3fc':0, '1f64d-1f3fd':0, '1f64d-1f3fe':0, '1f64d-1f3ff':0, '1f64e-1f3fb-200d-2640':0, '1f64e-1f3fc-200d-2640':0, '1f64e-1f3fd-200d-2640':0, '1f64e-1f3fe-200d-2640':0, '1f64e-1f3ff-200d-2640':0, '1f64e-1f3fb-200d-2642':0, '1f64e-1f3fc-200d-2642':0, '1f64e-1f3fd-200d-2642':0, '1f64e-1f3fe-200d-2642':0, '1f64e-1f3ff-200d-2642':0, '1f64e-1f3fb':0, '1f64e-1f3fc':0, '1f64e-1f3fd':0, '1f64e-1f3fe':0, '1f64e-1f3ff':0, '1f64f-1f3fb':0, '1f64f-1f3fc':0, '1f64f-1f3fd':0, '1f64f-1f3fe':0, '1f64f-1f3ff':0, '1f6a3-1f3fb-200d-2640':0, '1f6a3-1f3fc-200d-2640':0, '1f6a3-1f3fd-200d-2640':0, '1f6a3-1f3fe-200d-2640':0, '1f6a3-1f3ff-200d-2640':0, '1f6a3-1f3fb-200d-2642':0, '1f6a3-1f3fc-200d-2642':0, '1f6a3-1f3fd-200d-2642':0, '1f6a3-1f3fe-200d-2642':0, '1f6a3-1f3ff-200d-2642':0, '1f6a3-1f3fb':0, '1f6a3-1f3fc':0, '1f6a3-1f3fd':0, '1f6a3-1f3fe':0, '1f6a3-1f3ff':0, '1f6b4-1f3fb-200d-2640':0, '1f6b4-1f3fc-200d-2640':0, '1f6b4-1f3fd-200d-2640':0, '1f6b4-1f3fe-200d-2640':0, '1f6b4-1f3ff-200d-2640':0, '1f6b4-1f3fb-200d-2642':0, '1f6b4-1f3fc-200d-2642':0, '1f6b4-1f3fd-200d-2642':0, '1f6b4-1f3fe-200d-2642':0, '1f6b4-1f3ff-200d-2642':0, '1f6b4-1f3fb':0, '1f6b4-1f3fc':0, '1f6b4-1f3fd':0, '1f6b4-1f3fe':0, '1f6b4-1f3ff':0, '1f6b5-1f3fb-200d-2640':0, '1f6b5-1f3fc-200d-2640':0, '1f6b5-1f3fd-200d-2640':0, '1f6b5-1f3fe-200d-2640':0, '1f6b5-1f3ff-200d-2640':0, '1f6b5-1f3fb-200d-2642':0, '1f6b5-1f3fc-200d-2642':0, '1f6b5-1f3fd-200d-2642':0, '1f6b5-1f3fe-200d-2642':0, '1f6b5-1f3ff-200d-2642':0, '1f6b5-1f3fb':0, '1f6b5-1f3fc':0, '1f6b5-1f3fd':0, '1f6b5-1f3fe':0, '1f6b5-1f3ff':0, '1f6b6-1f3fb-200d-2640':0, '1f6b6-1f3fc-200d-2640':0, '1f6b6-1f3fd-200d-2640':0, '1f6b6-1f3fe-200d-2640':0, '1f6b6-1f3ff-200d-2640':0, '1f6b6-1f3fb-200d-2642':0, '1f6b6-1f3fc-200d-2642':0, '1f6b6-1f3fd-200d-2642':0, '1f6b6-1f3fe-200d-2642':0, '1f6b6-1f3ff-200d-2642':0, '1f6b6-1f3fb':0, '1f6b6-1f3fc':0, '1f6b6-1f3fd':0, '1f6b6-1f3fe':0, '1f6b6-1f3ff':0, '1f6c0-1f3fb':0, '1f6c0-1f3fc':0, '1f6c0-1f3fd':0, '1f6c0-1f3fe':0, '1f6c0-1f3ff':0, '1f6cc-1f3fb':0, '1f6cc-1f3fc':0, '1f6cc-1f3fd':0, '1f6cc-1f3fe':0, '1f6cc-1f3ff':0, '1f90c-1f3fb':0, '1f90c-1f3fc':0, '1f90c-1f3fd':0, '1f90c-1f3fe':0, '1f90c-1f3ff':0, '1f90f-1f3fb':0, '1f90f-1f3fc':0, '1f90f-1f3fd':0, '1f90f-1f3fe':0, '1f90f-1f3ff':0, '1f918-1f3fb':0, '1f918-1f3fc':0, '1f918-1f3fd':0, '1f918-1f3fe':0, '1f918-1f3ff':0, '1f919-1f3fb':0, '1f919-1f3fc':0, '1f919-1f3fd':0, '1f919-1f3fe':0, '1f919-1f3ff':0, '1f91a-1f3fb':0, '1f91a-1f3fc':0, '1f91a-1f3fd':0, '1f91a-1f3fe':0, '1f91a-1f3ff':0, '1f91b-1f3fb':0, '1f91b-1f3fc':0, '1f91b-1f3fd':0, '1f91b-1f3fe':0, '1f91b-1f3ff':0, '1f91c-1f3fb':0, '1f91c-1f3fc':0, '1f91c-1f3fd':0, '1f91c-1f3fe':0, '1f91c-1f3ff':0, '1f91d-1f3fb':0, '1f91d-1f3fc':0, '1f91d-1f3fd':0, '1f91d-1f3fe':0, '1f91d-1f3ff':0, '1f91e-1f3fb':0, '1f91e-1f3fc':0, '1f91e-1f3fd':0, '1f91e-1f3fe':0, '1f91e-1f3ff':0, '1f91f-1f3fb':0, '1f91f-1f3fc':0, '1f91f-1f3fd':0, '1f91f-1f3fe':0, '1f91f-1f3ff':0, '1f926-1f3fb-200d-2640':0, '1f926-1f3fc-200d-2640':0, '1f926-1f3fd-200d-2640':0, '1f926-1f3fe-200d-2640':0, '1f926-1f3ff-200d-2640':0, '1f926-1f3fb-200d-2642':0, '1f926-1f3fc-200d-2642':0, '1f926-1f3fd-200d-2642':0, '1f926-1f3fe-200d-2642':0, '1f926-1f3ff-200d-2642':0, '1f926-1f3fb':0, '1f926-1f3fc':0, '1f926-1f3fd':0, '1f926-1f3fe':0, '1f926-1f3ff':0, '1f930-1f3fb':0, '1f930-1f3fc':0, '1f930-1f3fd':0, '1f930-1f3fe':0, '1f930-1f3ff':0, '1f931-1f3fb':0, '1f931-1f3fc':0, '1f931-1f3fd':0, '1f931-1f3fe':0, '1f931-1f3ff':0, '1f932-1f3fb':0, '1f932-1f3fc':0, '1f932-1f3fd':0, '1f932-1f3fe':0, '1f932-1f3ff':0, '1f933-1f3fb':0, '1f933-1f3fc':0, '1f933-1f3fd':0, '1f933-1f3fe':0, '1f933-1f3ff':0, '1f934-1f3fb':0, '1f934-1f3fc':0, '1f934-1f3fd':0, '1f934-1f3fe':0, '1f934-1f3ff':0, '1f935-1f3fb-200d-2640':0, '1f935-1f3fc-200d-2640':0, '1f935-1f3fd-200d-2640':0, '1f935-1f3fe-200d-2640':0, '1f935-1f3ff-200d-2640':0, '1f935-1f3fb-200d-2642':0, '1f935-1f3fc-200d-2642':0, '1f935-1f3fd-200d-2642':0, '1f935-1f3fe-200d-2642':0, '1f935-1f3ff-200d-2642':0, '1f935-1f3fb':0, '1f935-1f3fc':0, '1f935-1f3fd':0, '1f935-1f3fe':0, '1f935-1f3ff':0, '1f936-1f3fb':0, '1f936-1f3fc':0, '1f936-1f3fd':0, '1f936-1f3fe':0, '1f936-1f3ff':0, '1f937-1f3fb-200d-2640':0, '1f937-1f3fc-200d-2640':0, '1f937-1f3fd-200d-2640':0, '1f937-1f3fe-200d-2640':0, '1f937-1f3ff-200d-2640':0, '1f937-1f3fb-200d-2642':0, '1f937-1f3fc-200d-2642':0, '1f937-1f3fd-200d-2642':0, '1f937-1f3fe-200d-2642':0, '1f937-1f3ff-200d-2642':0, '1f937-1f3fb':0, '1f937-1f3fc':0, '1f937-1f3fd':0, '1f937-1f3fe':0, '1f937-1f3ff':0, '1f938-1f3fb-200d-2640':0, '1f938-1f3fc-200d-2640':0, '1f938-1f3fd-200d-2640':0, '1f938-1f3fe-200d-2640':0, '1f938-1f3ff-200d-2640':0, '1f938-1f3fb-200d-2642':0, '1f938-1f3fc-200d-2642':0, '1f938-1f3fd-200d-2642':0, '1f938-1f3fe-200d-2642':0, '1f938-1f3ff-200d-2642':0, '1f938-1f3fb':0, '1f938-1f3fc':0, '1f938-1f3fd':0, '1f938-1f3fe':0, '1f938-1f3ff':0, '1f939-1f3fb-200d-2640':0, '1f939-1f3fc-200d-2640':0, '1f939-1f3fd-200d-2640':0, '1f939-1f3fe-200d-2640':0, '1f939-1f3ff-200d-2640':0, '1f939-1f3fb-200d-2642':0, '1f939-1f3fc-200d-2642':0, '1f939-1f3fd-200d-2642':0, '1f939-1f3fe-200d-2642':0, '1f939-1f3ff-200d-2642':0, '1f939-1f3fb':0, '1f939-1f3fc':0, '1f939-1f3fd':0, '1f939-1f3fe':0, '1f939-1f3ff':0, '1f93d-1f3fb-200d-2640':0, '1f93d-1f3fc-200d-2640':0, '1f93d-1f3fd-200d-2640':0, '1f93d-1f3fe-200d-2640':0, '1f93d-1f3ff-200d-2640':0, '1f93d-1f3fb-200d-2642':0, '1f93d-1f3fc-200d-2642':0, '1f93d-1f3fd-200d-2642':0, '1f93d-1f3fe-200d-2642':0, '1f93d-1f3ff-200d-2642':0, '1f93d-1f3fb':0, '1f93d-1f3fc':0, '1f93d-1f3fd':0, '1f93d-1f3fe':0, '1f93d-1f3ff':0, '1f93e-1f3fb-200d-2640':0, '1f93e-1f3fc-200d-2640':0, '1f93e-1f3fd-200d-2640':0, '1f93e-1f3fe-200d-2640':0, '1f93e-1f3ff-200d-2640':0, '1f93e-1f3fb-200d-2642':0, '1f93e-1f3fc-200d-2642':0, '1f93e-1f3fd-200d-2642':0, '1f93e-1f3fe-200d-2642':0, '1f93e-1f3ff-200d-2642':0, '1f93e-1f3fb':0, '1f93e-1f3fc':0, '1f93e-1f3fd':0, '1f93e-1f3fe':0, '1f93e-1f3ff':0, '1f977-1f3fb':0, '1f977-1f3fc':0, '1f977-1f3fd':0, '1f977-1f3fe':0, '1f977-1f3ff':0, '1f9b5-1f3fb':0, '1f9b5-1f3fc':0, '1f9b5-1f3fd':0, '1f9b5-1f3fe':0, '1f9b5-1f3ff':0, '1f9b6-1f3fb':0, '1f9b6-1f3fc':0, '1f9b6-1f3fd':0, '1f9b6-1f3fe':0, '1f9b6-1f3ff':0, '1f9b8-1f3fb-200d-2640':0, '1f9b8-1f3fc-200d-2640':0, '1f9b8-1f3fd-200d-2640':0, '1f9b8-1f3fe-200d-2640':0, '1f9b8-1f3ff-200d-2640':0, '1f9b8-1f3fb-200d-2642':0, '1f9b8-1f3fc-200d-2642':0, '1f9b8-1f3fd-200d-2642':0, '1f9b8-1f3fe-200d-2642':0, '1f9b8-1f3ff-200d-2642':0, '1f9b8-1f3fb':0, '1f9b8-1f3fc':0, '1f9b8-1f3fd':0, '1f9b8-1f3fe':0, '1f9b8-1f3ff':0, '1f9b9-1f3fb-200d-2640':0, '1f9b9-1f3fc-200d-2640':0, '1f9b9-1f3fd-200d-2640':0, '1f9b9-1f3fe-200d-2640':0, '1f9b9-1f3ff-200d-2640':0, '1f9b9-1f3fb-200d-2642':0, '1f9b9-1f3fc-200d-2642':0, '1f9b9-1f3fd-200d-2642':0, '1f9b9-1f3fe-200d-2642':0, '1f9b9-1f3ff-200d-2642':0, '1f9b9-1f3fb':0, '1f9b9-1f3fc':0, '1f9b9-1f3fd':0, '1f9b9-1f3fe':0, '1f9b9-1f3ff':0, '1f9bb-1f3fb':0, '1f9bb-1f3fc':0, '1f9bb-1f3fd':0, '1f9bb-1f3fe':0, '1f9bb-1f3ff':0, '1f9cd-1f3fb-200d-2640':0, '1f9cd-1f3fc-200d-2640':0, '1f9cd-1f3fd-200d-2640':0, '1f9cd-1f3fe-200d-2640':0, '1f9cd-1f3ff-200d-2640':0, '1f9cd-1f3fb-200d-2642':0, '1f9cd-1f3fc-200d-2642':0, '1f9cd-1f3fd-200d-2642':0, '1f9cd-1f3fe-200d-2642':0, '1f9cd-1f3ff-200d-2642':0, '1f9cd-1f3fb':0, '1f9cd-1f3fc':0, '1f9cd-1f3fd':0, '1f9cd-1f3fe':0, '1f9cd-1f3ff':0, '1f9ce-1f3fb-200d-2640':0, '1f9ce-1f3fc-200d-2640':0, '1f9ce-1f3fd-200d-2640':0, '1f9ce-1f3fe-200d-2640':0, '1f9ce-1f3ff-200d-2640':0, '1f9ce-1f3fb-200d-2642':0, '1f9ce-1f3fc-200d-2642':0, '1f9ce-1f3fd-200d-2642':0, '1f9ce-1f3fe-200d-2642':0, '1f9ce-1f3ff-200d-2642':0, '1f9ce-1f3fb':0, '1f9ce-1f3fc':0, '1f9ce-1f3fd':0, '1f9ce-1f3fe':0, '1f9ce-1f3ff':0, '1f9cf-1f3fb-200d-2640':0, '1f9cf-1f3fc-200d-2640':0, '1f9cf-1f3fd-200d-2640':0, '1f9cf-1f3fe-200d-2640':0, '1f9cf-1f3ff-200d-2640':0, '1f9cf-1f3fb-200d-2642':0, '1f9cf-1f3fc-200d-2642':0, '1f9cf-1f3fd-200d-2642':0, '1f9cf-1f3fe-200d-2642':0, '1f9cf-1f3ff-200d-2642':0, '1f9cf-1f3fb':0, '1f9cf-1f3fc':0, '1f9cf-1f3fd':0, '1f9cf-1f3fe':0, '1f9cf-1f3ff':0, '1f9d1-1f3fb-200d-1f33e':0, '1f9d1-1f3fc-200d-1f33e':0, '1f9d1-1f3fd-200d-1f33e':0, '1f9d1-1f3fe-200d-1f33e':0, '1f9d1-1f3ff-200d-1f33e':0, '1f9d1-1f3fb-200d-1f373':0, '1f9d1-1f3fc-200d-1f373':0, '1f9d1-1f3fd-200d-1f373':0, '1f9d1-1f3fe-200d-1f373':0, '1f9d1-1f3ff-200d-1f373':0, '1f9d1-1f3fb-200d-1f37c':0, '1f9d1-1f3fc-200d-1f37c':0, '1f9d1-1f3fd-200d-1f37c':0, '1f9d1-1f3fe-200d-1f37c':0, '1f9d1-1f3ff-200d-1f37c':0, '1f9d1-1f3fb-200d-1f384':0, '1f9d1-1f3fc-200d-1f384':0, '1f9d1-1f3fd-200d-1f384':0, '1f9d1-1f3fe-200d-1f384':0, '1f9d1-1f3ff-200d-1f384':0, '1f9d1-1f3fb-200d-1f393':0, '1f9d1-1f3fc-200d-1f393':0, '1f9d1-1f3fd-200d-1f393':0, '1f9d1-1f3fe-200d-1f393':0, '1f9d1-1f3ff-200d-1f393':0, '1f9d1-1f3fb-200d-1f3a4':0, '1f9d1-1f3fc-200d-1f3a4':0, '1f9d1-1f3fd-200d-1f3a4':0, '1f9d1-1f3fe-200d-1f3a4':0, '1f9d1-1f3ff-200d-1f3a4':0, '1f9d1-1f3fb-200d-1f3a8':0, '1f9d1-1f3fc-200d-1f3a8':0, '1f9d1-1f3fd-200d-1f3a8':0, '1f9d1-1f3fe-200d-1f3a8':0, '1f9d1-1f3ff-200d-1f3a8':0, '1f9d1-1f3fb-200d-1f3eb':0, '1f9d1-1f3fc-200d-1f3eb':0, '1f9d1-1f3fd-200d-1f3eb':0, '1f9d1-1f3fe-200d-1f3eb':0, '1f9d1-1f3ff-200d-1f3eb':0, '1f9d1-1f3fb-200d-1f3ed':0, '1f9d1-1f3fc-200d-1f3ed':0, '1f9d1-1f3fd-200d-1f3ed':0, '1f9d1-1f3fe-200d-1f3ed':0, '1f9d1-1f3ff-200d-1f3ed':0, '1f9d1-1f3fb-200d-1f4bb':0, '1f9d1-1f3fc-200d-1f4bb':0, '1f9d1-1f3fd-200d-1f4bb':0, '1f9d1-1f3fe-200d-1f4bb':0, '1f9d1-1f3ff-200d-1f4bb':0, '1f9d1-1f3fb-200d-1f4bc':0, '1f9d1-1f3fc-200d-1f4bc':0, '1f9d1-1f3fd-200d-1f4bc':0, '1f9d1-1f3fe-200d-1f4bc':0, '1f9d1-1f3ff-200d-1f4bc':0, '1f9d1-1f3fb-200d-1f527':0, '1f9d1-1f3fc-200d-1f527':0, '1f9d1-1f3fd-200d-1f527':0, '1f9d1-1f3fe-200d-1f527':0, '1f9d1-1f3ff-200d-1f527':0, '1f9d1-1f3fb-200d-1f52c':0, '1f9d1-1f3fc-200d-1f52c':0, '1f9d1-1f3fd-200d-1f52c':0, '1f9d1-1f3fe-200d-1f52c':0, '1f9d1-1f3ff-200d-1f52c':0, '1f9d1-1f3fb-200d-1f680':0, '1f9d1-1f3fc-200d-1f680':0, '1f9d1-1f3fd-200d-1f680':0, '1f9d1-1f3fe-200d-1f680':0, '1f9d1-1f3ff-200d-1f680':0, '1f9d1-1f3fb-200d-1f692':0, '1f9d1-1f3fc-200d-1f692':0, '1f9d1-1f3fd-200d-1f692':0, '1f9d1-1f3fe-200d-1f692':0, '1f9d1-1f3ff-200d-1f692':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fb-200d-1f9af':0, '1f9d1-1f3fc-200d-1f9af':0, '1f9d1-1f3fd-200d-1f9af':0, '1f9d1-1f3fe-200d-1f9af':0, '1f9d1-1f3ff-200d-1f9af':0, '1f9d1-1f3fb-200d-1f9b0':0, '1f9d1-1f3fc-200d-1f9b0':0, '1f9d1-1f3fd-200d-1f9b0':0, '1f9d1-1f3fe-200d-1f9b0':0, '1f9d1-1f3ff-200d-1f9b0':0, '1f9d1-1f3fb-200d-1f9b1':0, '1f9d1-1f3fc-200d-1f9b1':0, '1f9d1-1f3fd-200d-1f9b1':0, '1f9d1-1f3fe-200d-1f9b1':0, '1f9d1-1f3ff-200d-1f9b1':0, '1f9d1-1f3fb-200d-1f9b2':0, '1f9d1-1f3fc-200d-1f9b2':0, '1f9d1-1f3fd-200d-1f9b2':0, '1f9d1-1f3fe-200d-1f9b2':0, '1f9d1-1f3ff-200d-1f9b2':0, '1f9d1-1f3fb-200d-1f9b3':0, '1f9d1-1f3fc-200d-1f9b3':0, '1f9d1-1f3fd-200d-1f9b3':0, '1f9d1-1f3fe-200d-1f9b3':0, '1f9d1-1f3ff-200d-1f9b3':0, '1f9d1-1f3fb-200d-1f9bc':0, '1f9d1-1f3fc-200d-1f9bc':0, '1f9d1-1f3fd-200d-1f9bc':0, '1f9d1-1f3fe-200d-1f9bc':0, '1f9d1-1f3ff-200d-1f9bc':0, '1f9d1-1f3fb-200d-1f9bd':0, '1f9d1-1f3fc-200d-1f9bd':0, '1f9d1-1f3fd-200d-1f9bd':0, '1f9d1-1f3fe-200d-1f9bd':0, '1f9d1-1f3ff-200d-1f9bd':0, '1f9d1-1f3fb-200d-2695':0, '1f9d1-1f3fc-200d-2695':0, '1f9d1-1f3fd-200d-2695':0, '1f9d1-1f3fe-200d-2695':0, '1f9d1-1f3ff-200d-2695':0, '1f9d1-1f3fb-200d-2696':0, '1f9d1-1f3fc-200d-2696':0, '1f9d1-1f3fd-200d-2696':0, '1f9d1-1f3fe-200d-2696':0, '1f9d1-1f3ff-200d-2696':0, '1f9d1-1f3fb-200d-2708':0, '1f9d1-1f3fc-200d-2708':0, '1f9d1-1f3fd-200d-2708':0, '1f9d1-1f3fe-200d-2708':0, '1f9d1-1f3ff-200d-2708':0, '1f9d1-1f3fb':0, '1f9d1-1f3fc':0, '1f9d1-1f3fd':0, '1f9d1-1f3fe':0, '1f9d1-1f3ff':0, '1f9d2-1f3fb':0, '1f9d2-1f3fc':0, '1f9d2-1f3fd':0, '1f9d2-1f3fe':0, '1f9d2-1f3ff':0, '1f9d3-1f3fb':0, '1f9d3-1f3fc':0, '1f9d3-1f3fd':0, '1f9d3-1f3fe':0, '1f9d3-1f3ff':0, '1f9d4-1f3fb-200d-2640':0, '1f9d4-1f3fc-200d-2640':0, '1f9d4-1f3fd-200d-2640':0, '1f9d4-1f3fe-200d-2640':0, '1f9d4-1f3ff-200d-2640':0, '1f9d4-1f3fb-200d-2642':0, '1f9d4-1f3fc-200d-2642':0, '1f9d4-1f3fd-200d-2642':0, '1f9d4-1f3fe-200d-2642':0, '1f9d4-1f3ff-200d-2642':0, '1f9d4-1f3fb':0, '1f9d4-1f3fc':0, '1f9d4-1f3fd':0, '1f9d4-1f3fe':0, '1f9d4-1f3ff':0, '1f9d5-1f3fb':0, '1f9d5-1f3fc':0, '1f9d5-1f3fd':0, '1f9d5-1f3fe':0, '1f9d5-1f3ff':0, '1f9d6-1f3fb-200d-2640':0, '1f9d6-1f3fc-200d-2640':0, '1f9d6-1f3fd-200d-2640':0, '1f9d6-1f3fe-200d-2640':0, '1f9d6-1f3ff-200d-2640':0, '1f9d6-1f3fb-200d-2642':0, '1f9d6-1f3fc-200d-2642':0, '1f9d6-1f3fd-200d-2642':0, '1f9d6-1f3fe-200d-2642':0, '1f9d6-1f3ff-200d-2642':0, '1f9d6-1f3fb':0, '1f9d6-1f3fc':0, '1f9d6-1f3fd':0, '1f9d6-1f3fe':0, '1f9d6-1f3ff':0, '1f9d7-1f3fb-200d-2640':0, '1f9d7-1f3fc-200d-2640':0, '1f9d7-1f3fd-200d-2640':0, '1f9d7-1f3fe-200d-2640':0, '1f9d7-1f3ff-200d-2640':0, '1f9d7-1f3fb-200d-2642':0, '1f9d7-1f3fc-200d-2642':0, '1f9d7-1f3fd-200d-2642':0, '1f9d7-1f3fe-200d-2642':0, '1f9d7-1f3ff-200d-2642':0, '1f9d7-1f3fb':0, '1f9d7-1f3fc':0, '1f9d7-1f3fd':0, '1f9d7-1f3fe':0, '1f9d7-1f3ff':0, '1f9d8-1f3fb-200d-2640':0, '1f9d8-1f3fc-200d-2640':0, '1f9d8-1f3fd-200d-2640':0, '1f9d8-1f3fe-200d-2640':0, '1f9d8-1f3ff-200d-2640':0, '1f9d8-1f3fb-200d-2642':0, '1f9d8-1f3fc-200d-2642':0, '1f9d8-1f3fd-200d-2642':0, '1f9d8-1f3fe-200d-2642':0, '1f9d8-1f3ff-200d-2642':0, '1f9d8-1f3fb':0, '1f9d8-1f3fc':0, '1f9d8-1f3fd':0, '1f9d8-1f3fe':0, '1f9d8-1f3ff':0, '1f9d9-1f3fb-200d-2640':0, '1f9d9-1f3fc-200d-2640':0, '1f9d9-1f3fd-200d-2640':0, '1f9d9-1f3fe-200d-2640':0, '1f9d9-1f3ff-200d-2640':0, '1f9d9-1f3fb-200d-2642':0, '1f9d9-1f3fc-200d-2642':0, '1f9d9-1f3fd-200d-2642':0, '1f9d9-1f3fe-200d-2642':0, '1f9d9-1f3ff-200d-2642':0, '1f9d9-1f3fb':0, '1f9d9-1f3fc':0, '1f9d9-1f3fd':0, '1f9d9-1f3fe':0, '1f9d9-1f3ff':0, '1f9da-1f3fb-200d-2640':0, '1f9da-1f3fc-200d-2640':0, '1f9da-1f3fd-200d-2640':0, '1f9da-1f3fe-200d-2640':0, '1f9da-1f3ff-200d-2640':0, '1f9da-1f3fb-200d-2642':0, '1f9da-1f3fc-200d-2642':0, '1f9da-1f3fd-200d-2642':0, '1f9da-1f3fe-200d-2642':0, '1f9da-1f3ff-200d-2642':0, '1f9da-1f3fb':0, '1f9da-1f3fc':0, '1f9da-1f3fd':0, '1f9da-1f3fe':0, '1f9da-1f3ff':0, '1f9db-1f3fb-200d-2640':0, '1f9db-1f3fc-200d-2640':0, '1f9db-1f3fd-200d-2640':0, '1f9db-1f3fe-200d-2640':0, '1f9db-1f3ff-200d-2640':0, '1f9db-1f3fb-200d-2642':0, '1f9db-1f3fc-200d-2642':0, '1f9db-1f3fd-200d-2642':0, '1f9db-1f3fe-200d-2642':0, '1f9db-1f3ff-200d-2642':0, '1f9db-1f3fb':0, '1f9db-1f3fc':0, '1f9db-1f3fd':0, '1f9db-1f3fe':0, '1f9db-1f3ff':0, '1f9dc-1f3fb-200d-2640':0, '1f9dc-1f3fc-200d-2640':0, '1f9dc-1f3fd-200d-2640':0, '1f9dc-1f3fe-200d-2640':0, '1f9dc-1f3ff-200d-2640':0, '1f9dc-1f3fb-200d-2642':0, '1f9dc-1f3fc-200d-2642':0, '1f9dc-1f3fd-200d-2642':0, '1f9dc-1f3fe-200d-2642':0, '1f9dc-1f3ff-200d-2642':0, '1f9dc-1f3fb':0, '1f9dc-1f3fc':0, '1f9dc-1f3fd':0, '1f9dc-1f3fe':0, '1f9dc-1f3ff':0, '1f9dd-1f3fb-200d-2640':0, '1f9dd-1f3fc-200d-2640':0, '1f9dd-1f3fd-200d-2640':0, '1f9dd-1f3fe-200d-2640':0, '1f9dd-1f3ff-200d-2640':0, '1f9dd-1f3fb-200d-2642':0, '1f9dd-1f3fc-200d-2642':0, '1f9dd-1f3fd-200d-2642':0, '1f9dd-1f3fe-200d-2642':0, '1f9dd-1f3ff-200d-2642':0, '1f9dd-1f3fb':0, '1f9dd-1f3fc':0, '1f9dd-1f3fd':0, '1f9dd-1f3fe':0, '1f9dd-1f3ff':0, '261d-1f3fb':0, '261d-1f3fc':0, '261d-1f3fd':0, '261d-1f3fe':0, '261d-1f3ff':0, '26f9-1f3fb-200d-2640':0, '26f9-1f3fc-200d-2640':0, '26f9-1f3fd-200d-2640':0, '26f9-1f3fe-200d-2640':0, '26f9-1f3ff-200d-2640':0, '26f9-1f3fb-200d-2642':0, '26f9-1f3fc-200d-2642':0, '26f9-1f3fd-200d-2642':0, '26f9-1f3fe-200d-2642':0, '26f9-1f3ff-200d-2642':0, '26f9-1f3fb':0, '26f9-1f3fc':0, '26f9-1f3fd':0, '26f9-1f3fe':0, '26f9-1f3ff':0, '270a-1f3fb':0, '270a-1f3fc':0, '270a-1f3fd':0, '270a-1f3fe':0, '270a-1f3ff':0, '270b-1f3fb':0, '270b-1f3fc':0, '270b-1f3fd':0, '270b-1f3fe':0, '270b-1f3ff':0, '270c-1f3fb':0, '270c-1f3fc':0, '270c-1f3fd':0, '270c-1f3fe':0, '270c-1f3ff':0, '270d-1f3fb':0, '270d-1f3fc':0, '270d-1f3fd':0, '270d-1f3fe':0, '270d-1f3ff':0}};\n\nconst Emoji: {[emoji: string]: number} = EmojiVersions[''];\nfor(const version in EmojiVersions) {\n  if(version) {\n    Object.assign(Emoji, EmojiVersions[version as EMOJI_VERSION]);\n  }\n}\n\nexport default Emoji;\n\n/* Emoji[\"00a9-fe0f\"] = 6362;\nEmoji[\"00ae-fe0f\"] = 6363;\nEmoji[\"2122-fe0f\"] = 6364; */\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport ctx from './ctx';\n\nexport const USER_AGENT = navigator ? navigator.userAgent : null;\nexport const IS_APPLE = navigator.userAgent.search(/OS X|iPhone|iPad|iOS/i) !== -1;\nexport const IS_ANDROID = navigator.userAgent.toLowerCase().indexOf('android') !== -1;\nexport const IS_CHROMIUM = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n\n// https://stackoverflow.com/a/58065241\nexport const IS_APPLE_MOBILE = (/iPad|iPhone|iPod/.test(navigator.platform) ||\n  (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1)) &&\n  !(ctx as any).MSStream;\n\nexport const IS_SAFARI = !!('safari' in ctx) || !!(USER_AGENT && (/\\b(iPad|iPhone|iPod)\\b/.test(USER_AGENT) || (!!USER_AGENT.match('Safari') && !USER_AGENT.match('Chrome'))))/*  || true */;\nexport const IS_FIREFOX = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n\nexport const IS_MOBILE_SAFARI = IS_SAFARI && IS_APPLE_MOBILE;\n\nexport const IS_MOBILE = (navigator.maxTouchPoints === undefined || navigator.maxTouchPoints > 0) && navigator.userAgent.search(/iOS|iPhone OS|Android|BlackBerry|BB10|Series ?[64]0|J2ME|MIDP|opera mini|opera mobi|mobi.+Gecko|Windows Phone/i) != -1;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport LatinizeMap from '../config/latinizeMap';\n\nexport const badCharsRe = /[`~!@#$%^&*()\\-_=+\\[\\]\\\\|{}'\";:\\/?.>,<]+/g;\nconst trimRe = /^\\s+|\\s$/g;\n\nconst C2L: {[k: string]: string} = {\n  'й': 'q',\n  'ц': 'w',\n  'у': 'e',\n  'к': 'r',\n  'е': 't',\n  'н': 'y',\n  'г': 'u',\n  'ш': 'i',\n  'щ': 'o',\n  'з': 'p',\n  'х': '[',\n  'ъ': ']',\n  'ф': 'a',\n  'ы': 's',\n  'в': 'd',\n  'а': 'f',\n  'п': 'g',\n  'р': 'h',\n  'о': 'j',\n  'л': 'k',\n  'д': 'l',\n  'ж': ';',\n  'э': '\\'',\n  'я': 'z',\n  'ч': 'x',\n  'с': 'c',\n  'м': 'v',\n  'и': 'b',\n  'т': 'n',\n  'ь': 'm',\n  'б': ',',\n  'ю': '.',\n  '.': '/'\n};\n\nexport function clearBadCharsAndTrim(text: string) {\n  return text.replace(badCharsRe, '').replace(trimRe, '');\n}\n\nexport function fixCyrillic(text: string) {\n  return text.toLowerCase().replace(/[\\wа-я]/g, (ch) => {\n    const latinizeCh = C2L[ch];\n    return latinizeCh ?? ch;\n  });\n}\n\nexport function latinizeString(text: string) {\n  return text.replace(/[^A-Za-z0-9]/g, (ch) => {\n    const latinizeCh = LatinizeMap[ch];\n    return latinizeCh ?? ch;\n  });\n}\n\nexport default function cleanSearchText(text: string, latinize = true) {\n  return processSearchText(text, {\n    clearBadChars: true,\n    latinize,\n    ignoreCase: true\n  });\n}\n\nexport type ProcessSearchTextOptions = Partial<{\n  clearBadChars: boolean,\n  latinize: boolean,\n  ignoreCase: boolean,\n  includeTag: boolean\n}>;\n\nexport function processSearchText(text: string, options: ProcessSearchTextOptions = {}) {\n  const hasTag = options.includeTag && text.charAt(0) === '%';\n  const originalText = text;\n  if(options.clearBadChars) text = clearBadCharsAndTrim(text);\n  if(options.latinize) text = latinizeString(text);\n  if(options.ignoreCase) text = text.toLowerCase();\n  if(hasTag) text = '%' + text;\n  if(options.latinize) text += '\\x01' + fixCyrillic(originalText);\n  return text;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {InputFileLocation, InputGeoPoint, InputStickerSet, InputWebFileLocation} from '../layer';\nimport type {DownloadOptions} from '../lib/mtproto/apiFileManager';\n\nconst FILENAME_JOINER = '_';\n\nexport function getFileNameByLocation(location: InputFileLocation | InputWebFileLocation, options?: Partial<{\n  fileName: string,\n  downloadId: string\n}>) {\n  const fileName = '';// (options?.fileName || '').split('.');\n  const ext = fileName[fileName.length - 1] || '';\n\n  let str: string;\n  switch(location._) {\n    case 'inputPhotoFileLocation': {\n      str = ['photo', fileName[0], location.id, location.thumb_size].filter(Boolean).join(FILENAME_JOINER);\n      break;\n    }\n\n    case 'inputDocumentFileLocation': {\n      str = ['document', fileName[0], location.id, location.thumb_size].filter(Boolean).join(FILENAME_JOINER);\n      break;\n    }\n\n    case 'inputPeerPhotoFileLocation':\n      str = ['peerPhoto', location.photo_id, location.pFlags.big ? 'big' : 'small'].join(FILENAME_JOINER);\n      break;\n\n    case 'inputStickerSetThumb': {\n      const id = (location.stickerset as InputStickerSet.inputStickerSetID).id ||\n        (location.stickerset as InputStickerSet.inputStickerSetShortName).short_name ||\n        (location.stickerset as InputStickerSet.inputStickerSetDice).emoticon ||\n        location.stickerset._;\n      str = ['stickerSetThumb', id, location.thumb_version].join(FILENAME_JOINER);\n      break;\n    }\n\n    case 'inputFileLocation': {\n      str = [location.volume_id, location.local_id].join(FILENAME_JOINER);\n      break;\n    }\n\n    case 'inputWebFileLocation': {\n      str = ['webFile', location.url].join(FILENAME_JOINER);\n      break;\n    }\n\n    case 'inputWebFileGeoPointLocation': {\n      const geoPoint = location.geo_point as InputGeoPoint.inputGeoPoint;\n      str = ['geoPoint', geoPoint.lat, geoPoint.long, location.w, location.h, location.zoom, location.scale].join(FILENAME_JOINER);\n      break;\n    }\n\n    default: {\n      console.error('Unrecognized location:', location);\n      str = '';\n      break;\n    }\n  }\n\n  return str + (options?.downloadId ? '_download' : '') + (ext ? '.' + ext : ext);\n}\n\nexport type FileURLType = 'photo' | 'thumb' | 'document' | 'stream' | 'download';\nexport function getFileURL(type: FileURLType, options: DownloadOptions) {\n  // console.log('getFileURL', location);\n  // const perf = performance.now();\n  const encoded = encodeURIComponent(JSON.stringify(options));\n  // console.log('getFileURL encode:', performance.now() - perf, encoded);\n\n  return /* '/' +  */type + '/' + encoded;\n}\n","import {RestrictionReason} from '../layer';\n\nconst platforms = new Set([\n  'all',\n  'web',\n  'webk'\n]);\n\nconst ignore = new Set();\n\nexport function getRestrictionReason(reasons: RestrictionReason[]) {\n  // return reasons[0];\n  return reasons.find((reason) => platforms.has(reason.platform) && !ignore.has(reason.reason));\n}\n\nexport function isRestricted(reasons: RestrictionReason[]) {\n  return !!getRestrictionReason(reasons);\n}\n\nexport function ignoreRestrictionReasons(reasons: string[]) {\n  ignore.clear();\n  reasons.forEach((reason) => {\n    ignore.add(reason);\n  });\n}\n","import isObject from '../../../../helpers/object/isObject';\nimport {InputChannel, InputPeer, Peer} from '../../../../layer';\nimport {NULL_PEER_ID} from '../../../mtproto/mtproto_config';\n\nexport default function getPeerId(peerId: {user_id: UserId} | {channel_id: ChatId} | {chat_id: ChatId} | InputPeer | InputChannel | PeerId | string): PeerId {\n  if(peerId !== undefined && ((peerId as string).isPeerId ? (peerId as string).isPeerId() : false)) return peerId as PeerId;\n  // if(typeof(peerId) === 'string' && /^[uc]/.test(peerId)) return peerId as PeerId;\n  // if(typeof(peerId) === 'number') return peerId;\n  else if(isObject(peerId)) {\n    const userId = (peerId as Peer.peerUser).user_id;\n    if(userId !== undefined) {\n      return userId.toPeerId(false);\n    }\n\n    const chatId = (peerId as Peer.peerChannel).channel_id || (peerId as Peer.peerChat).chat_id;\n    if(chatId !== undefined) {\n      return chatId.toPeerId(true);\n    }\n\n    return NULL_PEER_ID; // maybe it is an inputPeerSelf\n  // } else if(!peerId) return 'u0';\n  } else if(!peerId) return NULL_PEER_ID;\n\n  const isUser = (peerId as string).charAt(0) === 'u';\n  const peerParams = (peerId as string).substr(1).split('_');\n\n  return isUser ? peerParams[0].toPeerId() : (peerParams[0] || '').toPeerId(true);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {Database} from '../../config/databases';\nimport Modes from '../../config/modes';\nimport makeError from '../../helpers/makeError';\nimport safeAssign from '../../helpers/object/safeAssign';\nimport {logger} from '../logger';\n\n/**\n * https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/createIndex\n */\nexport type IDBIndex = {\n  indexName: string,\n  keyPath: string,\n  objectParameters: IDBIndexParameters\n};\n\nexport type IDBStore = {\n  name: string,\n  indexes?: IDBIndex[]\n};\n\nexport type IDBOptions = {\n  name?: string,\n  storeName: string,\n  stores?: IDBStore[],\n  version?: number\n};\n\nconst DEBUG = false;\n\nexport class IDB {\n  private static INSTANCES: IDB[] = [];\n  private openDbPromise: Promise<IDBDatabase>;\n  private db: IDBDatabase;\n  private storageIsAvailable: boolean;\n  private log: ReturnType<typeof logger>;\n  private name: string;\n  private version: number;\n  private stores: IDBStore[];\n\n  constructor(db: Database<any>) {\n    safeAssign(this, db);\n\n    if(Modes.test) {\n      this.name += '_test';\n    }\n\n    this.storageIsAvailable = true;\n    this.log = logger(['IDB', db.name].join('-'));\n    this.log('constructor');\n\n    this.openDatabase(true);\n\n    IDB.INSTANCES.push(this);\n  }\n\n  public isAvailable() {\n    return this.storageIsAvailable;\n  }\n\n  public openDatabase(createNew = false): Promise<IDBDatabase> {\n    if(this.openDbPromise && !createNew) {\n      return this.openDbPromise;\n    }\n\n    const createIndexes = (os: IDBObjectStore, store: IDBStore) => {\n      const indexNames = Array.from(os.indexNames);\n      for(const indexName of indexNames) {\n        os.deleteIndex(indexName);\n      }\n\n      if(!store.indexes?.length) {\n        return;\n      }\n\n      for(const index of store.indexes) {\n        if(os.indexNames.contains(index.indexName)) {\n          continue;\n        }\n\n        os.createIndex(index.indexName, index.keyPath, index.objectParameters);\n      }\n    };\n\n    const createObjectStore = (db: IDBDatabase, store: IDBStore) => {\n      const os = db.createObjectStore(store.name);\n      createIndexes(os, store);\n    };\n\n    try {\n      var request = indexedDB.open(this.name, this.version);\n\n      if(!request) {\n        return Promise.reject();\n      }\n    } catch(error) {\n      this.log.error('error opening db', (error as Error).message);\n      this.storageIsAvailable = false;\n      return Promise.reject(error);\n    }\n\n    let finished = false;\n    setTimeout(() => {\n      if(!finished) {\n        request.onerror(makeError('IDB_CREATE_TIMEOUT') as Event);\n      }\n    }, 3000);\n\n    return this.openDbPromise = new Promise<IDBDatabase>((resolve, reject) => {\n      request.onsuccess = (event) => {\n        finished = true;\n        const db = request.result;\n        let calledNew = false;\n\n        this.log('Opened');\n\n        db.onerror = (error) => {\n          this.storageIsAvailable = false;\n          this.log.error('Error creating/accessing IndexedDB database', error);\n          reject(error);\n        };\n\n        db.onclose = (e) => {\n          this.log.error('closed:', e);\n          !calledNew && this.openDatabase();\n        };\n\n        db.onabort = (e) => {\n          this.log.error('abort:', e);\n          const transaction = e.target as IDBTransaction;\n\n          this.openDatabase(calledNew = true);\n\n          if(transaction.onerror) {\n            transaction.onerror(e);\n          }\n\n          db.close();\n        };\n\n        db.onversionchange = (e) => {\n          this.log.error('onversionchange, lol?');\n        };\n\n        resolve(this.db = db);\n      };\n\n      request.onerror = (event) => {\n        finished = true;\n        this.storageIsAvailable = false;\n        this.log.error('Error creating/accessing IndexedDB database', event);\n        reject(event);\n      };\n\n      request.onupgradeneeded = (event) => {\n        finished = true;\n        this.log.warn('performing idb upgrade from', event.oldVersion, 'to', event.newVersion);\n\n        const target = event.target as IDBOpenDBRequest;\n        const db = target.result;\n        this.stores.forEach((store) => {\n          /* if(db.objectStoreNames.contains(store.name)) {\n            //if(event.oldVersion === 1) {\n              db.deleteObjectStore(store.name);\n            //}\n          } */\n\n          if(!db.objectStoreNames.contains(store.name)) {\n            createObjectStore(db, store);\n          } else {\n            const txn = target.transaction;\n            const os = txn.objectStore(store.name);\n            createIndexes(os, store);\n          }\n        });\n      };\n    });\n  }\n\n  public static create<T extends Database<any>>(db: T) {\n    return this.INSTANCES.find((instance) => instance.name === db.name) ?? new IDB(db);\n  }\n\n  public static closeDatabases(preserve?: IDB) {\n    this.INSTANCES.forEach((storage) => {\n      if(preserve && preserve === storage) {\n        return;\n      }\n\n      const db = storage.db;\n      if(db) {\n        db.onclose = () => {};\n        db.close();\n      }\n    });\n  }\n}\n\nexport default class IDBStorage<T extends Database<any>, StoreName extends string = T['stores'][0]['name']> {\n  private log: ReturnType<typeof logger>;\n  private storeName: T['stores'][0]['name'];\n  private idb: IDB;\n\n  constructor(db: T, storeName: typeof db['stores'][0]['name']) {\n    this.storeName = storeName;\n    this.log = logger(['IDB', db.name, storeName].join('-'));\n    this.idb = IDB.create(db);\n  }\n\n  /**\n   * ! WARNING ! function requires at least one opened connection\n   */\n  /* public static clearObjectStores() {\n    const storage = this.STORAGES[0];\n    this.closeDatabases(storage);\n\n    const names = Array.from(storage.db.objectStoreNames);\n    const promises = names.map((name) => storage.clear(name));\n    return Promise.all(promises);\n  } */\n\n  /* public static deleteDatabase() {\n    this.closeDatabases();\n\n    const storages = this.STORAGES;\n    const dbNames = Array.from(new Set(storages.map((storage) => storage.name)));\n    const promises = dbNames.map((dbName) => {\n      return new Promise<void>((resolve, reject) => {\n        const deleteRequest = indexedDB.deleteDatabase(dbName);\n\n        deleteRequest.onerror = () => {\n          reject();\n        };\n\n        deleteRequest.onsuccess = () => {\n          resolve();\n        };\n      });\n    });\n\n    return Promise.all(promises);\n  } */\n\n  public delete(entryName: string | string[], storeName?: StoreName): Promise<void> {\n    // return Promise.resolve();\n    const isArray = Array.isArray(entryName);\n    if(!isArray) {\n      entryName = [].concat(entryName);\n    }\n\n    return this.getObjectStore('readwrite', (objectStore) => {\n      const promises = (entryName as string[]).map((entryName) => objectStore.delete(entryName));\n      return isArray ? promises : promises[0];\n    }, DEBUG ? 'delete: ' + (entryName as string[]).join(', ') : '', storeName);\n  }\n\n  public clear(storeName?: StoreName): Promise<void> {\n    return this.getObjectStore('readwrite', (objectStore) => objectStore.clear(), DEBUG ? 'clear' : '', storeName);\n  }\n\n  public save(entryName: string | string[], value: any | any[], storeName?: StoreName) {\n    // const handleError = (error: Error) => {\n    //   this.log.error('save: transaction error:', entryName, value, db, error, error && error.name);\n    //   if((!error || error.name === 'InvalidStateError')/*  && false */) {\n    //     setTimeout(() => {\n    //       this.save(entryName, value);\n    //     }, 2e3);\n    //   } else {\n    //     //console.error('IndexedDB saveFile transaction error:', error, error && error.name);\n    //   }\n    // };\n\n    const isArray = Array.isArray(entryName);\n    if(!isArray) {\n      entryName = [].concat(entryName);\n      value = [].concat(value);\n    }\n\n    return this.getObjectStore('readwrite', (objectStore) => {\n      const promises = (entryName as string[]).map((entryName, idx) => objectStore.put(value[idx], entryName));\n      return isArray ? promises : promises[0];\n    }, DEBUG ? 'save: ' + (entryName as string[]).join(', ') : '', storeName);\n  }\n\n  // public saveFile(fileName: string, blob: Blob | Uint8Array) {\n  //   //return Promise.resolve(blobConstruct([blob]));\n  //   if(!(blob instanceof Blob)) {\n  //     blob = blobConstruct(blob);\n  //   }\n\n  //   return this.save(fileName, blob);\n  // }\n\n  /* public saveFileBase64(db: IDBDatabase, fileName: string, blob: Blob | any): Promise<Blob> {\n    if(this.getBlobSize(blob) > 10 * 1024 * 1024) {\n      return Promise.reject();\n    }\n\n    if(!(blob instanceof Blob)) {\n      var safeMimeType = blobSafeMimeType(blob.type || 'image/jpeg');\n      var address = 'data:' + safeMimeType + ';base64,' + bytesToBase64(blob);\n      return this.storagePutB64String(db, fileName, address).then(() => {\n        return blob;\n      });\n    }\n\n    try {\n      var reader = new FileReader();\n    } catch (e) {\n      this.storageIsAvailable = false;\n      return Promise.reject();\n    }\n\n    let promise = new Promise<Blob>((resolve, reject) => {\n      reader.onloadend = () => {\n        this.storagePutB64String(db, fileName, reader.result as string).then(() => {\n          resolve(blob);\n        }, reject);\n      }\n\n      reader.onerror = reject;\n    });\n\n\n    try {\n      reader.readAsDataURL(blob);\n    } catch (e) {\n      this.storageIsAvailable = false;\n      return Promise.reject();\n    }\n\n    return promise;\n  }\n\n  public storagePutB64String(db: IDBDatabase, fileName: string, b64string: string) {\n    try {\n      var objectStore = db.transaction([this.storeName], 'readwrite')\n        .objectStore(this.storeName);\n      var request = objectStore.put(b64string, fileName);\n    } catch(error) {\n      this.storageIsAvailable = false;\n      return Promise.reject(error);\n    }\n\n    return new Promise((resolve, reject) => {\n      request.onsuccess = function(event) {\n        resolve();\n      };\n\n      request.onerror = reject;\n    });\n  }\n\n  public getBlobSize(blob: any) {\n    return blob.size || blob.byteLength || blob.length;\n  } */\n\n  public get<T>(entryName: string[], storeName?: StoreName): Promise<T[]>;\n  public get<T>(entryName: string, storeName?: StoreName): Promise<T>;\n  public get<T>(entryName: string | string[], storeName?: StoreName): Promise<T> | Promise<T[]> {\n    // return Promise.reject();\n\n    const isArray = Array.isArray(entryName);\n    if(!isArray) {\n      if(!entryName) {\n        return undefined;\n      }\n\n      entryName = [].concat(entryName);\n    } else if(!entryName.length) {\n      return Promise.resolve([]) as any;\n    }\n\n    return this.getObjectStore<T>('readonly', (objectStore) => {\n      const promises = (entryName as string[]).map((entryName) => objectStore.get(entryName));\n      return isArray ? promises : promises[0];\n    }, DEBUG ? 'get: ' + (entryName as string[]).join(', ') : '', storeName);\n  }\n\n  private getObjectStore<T>(\n    mode: IDBTransactionMode,\n    callback: (objectStore: IDBObjectStore) => IDBRequest | IDBRequest[],\n    log?: string,\n    storeName = this.storeName\n  ) {\n    let perf: number;\n\n    if(log) {\n      perf = performance.now();\n      this.log(log + ': start');\n    }\n\n    return this.idb.openDatabase().then((db) => {\n      return new Promise<T>((resolve, reject) => {\n        /* if(mode === 'readwrite') {\n          return;\n        } */\n\n        const transaction = db.transaction([storeName], mode);\n\n        const onError = () => {\n          clearTimeout(timeout);\n          reject(transaction.error);\n        };\n\n        // let resolved = false;\n        const onComplete = (/* what: string */) => {\n          clearTimeout(timeout);\n\n          if(log) {\n            this.log(log + ': end', performance.now() - perf/* , what */);\n          }\n\n          // if(resolved) {\n          //   return;\n          // }\n\n          // resolved = true;\n          const results = requests.map((r) => r.result);\n          resolve(isArray ? results : results[0]);\n        };\n\n        transaction.onerror = onError;\n\n        // * have to wait while clearing or setting something\n        const waitForTransactionComplete = mode === 'readwrite';\n        if(waitForTransactionComplete) {\n          transaction.oncomplete = () => onComplete(/* 'transaction' */);\n        }\n\n        const timeout = setTimeout(() => {\n          this.log.error('transaction not finished', transaction, log);\n        }, 10000);\n\n        /* transaction.addEventListener('abort', (e) => {\n          //handleError();\n          this.log.error('IndexedDB: transaction abort!', transaction.error);\n        }); */\n\n        const callbackResult = callback(transaction.objectStore(storeName));\n\n        const isArray = Array.isArray(callbackResult);\n        const requests: IDBRequest[] = isArray ? callbackResult : [].concat(callbackResult) as any;\n\n        if(waitForTransactionComplete) {\n          return;\n        }\n\n        const length = requests.length;\n        let left = length;\n\n        const onRequestFinished = () => {\n          if(transaction.error) {\n            return;\n          }\n\n          if(!--left) {\n            onComplete(/* 'requests' */);\n          }\n        };\n\n        for(let i = 0; i < length; ++i) {\n          const request = requests[i];\n          request.onerror = onError;\n          request.onsuccess = onRequestFinished;\n        }\n      });\n    });\n  }\n\n  public getAll<T>(storeName?: StoreName): Promise<T[]> {\n    return this.getObjectStore<T[]>('readonly', (objectStore) => objectStore.getAll(), DEBUG ? 'getAll' : '', storeName);\n  }\n\n  /* public getAllKeys(): Promise<Array<string>> {\n    console.time('getAllEntries');\n    return this.openDatabase().then((db) => {\n      var objectStore = db.transaction([this.storeName], 'readonly')\n        .objectStore(this.storeName);\n      var request = objectStore.getAllKeys();\n\n      return new Promise((resolve, reject) => {\n        request.onsuccess = function(event) {\n          // @ts-ignore\n          var result = event.target.result;\n          resolve(result);\n          console.timeEnd('getAllEntries');\n        }\n\n        request.onerror = reject;\n      });\n    });\n  } */\n\n  /* public isFileExists(fileName: string): Promise<boolean> {\n    console.time('isFileExists');\n    return this.openDatabase().then((db) => {\n      var objectStore = db.transaction([this.storeName], 'readonly')\n        .objectStore(this.storeName);\n      var request = objectStore.openCursor(fileName);\n\n      return new Promise((resolve, reject) => {\n        request.onsuccess = function(event) {\n          // @ts-ignore\n          var cursor = event.target.result;\n          resolve(!!cursor);\n          console.timeEnd('isFileExists');\n        }\n\n        request.onerror = reject;\n      });\n    });\n  } */\n\n  /* public getFileWriter(fileName: string, mimeType: string) {\n    var fakeWriter = FileManager.getFakeFileWriter(mimeType, (blob) => {\n      return this.saveFile(fileName, blob);\n    });\n\n    return Promise.resolve(fakeWriter);\n  } */\n}\n","import type ENVIRONMENT from '.';\n\nlet environment: typeof ENVIRONMENT;\nexport function getEnvironment() {\n  return environment;\n}\n\nexport function setEnvironment(env: typeof environment) {\n  return environment = env;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {Message, StickerSet, Update, NotifyPeer, PeerNotifySettings, PollResults, Poll, WebPage, GroupCall, GroupCallParticipant, ReactionCount, MessagePeerReaction, PhoneCall, Config, Reaction, AttachMenuBot} from '../layer';\nimport type {Dialog, ForumTopic, MessagesStorageKey, MyMessage} from './appManagers/appMessagesManager';\nimport type {MyDialogFilter} from './storages/filters';\nimport type {Folder} from './storages/dialogs';\nimport type {UserTyping} from './appManagers/appProfileManager';\nimport type {MyDraftMessage} from './appManagers/appDraftsManager';\nimport type {ConnectionStatusChange} from './mtproto/connectionStatus';\nimport type {GroupCallId} from './appManagers/appGroupCallsManager';\nimport type {AppManagers} from './appManagers/managers';\nimport type {State} from '../config/state';\nimport type {Progress} from './appManagers/appDownloadManager';\nimport type {CallId} from './appManagers/appCallsManager';\nimport type {MyDocument} from './appManagers/appDocsManager';\nimport type {MTAppConfig} from './mtproto/appConfig';\nimport {NULL_PEER_ID, UserAuth} from './mtproto/mtproto_config';\nimport EventListenerBase from '../helpers/eventListenerBase';\nimport {MOUNT_CLASS_TO} from '../config/debug';\nimport MTProtoMessagePort from './mtproto/mtprotoMessagePort';\nimport {IS_WORKER} from '../helpers/context';\n\nexport type BroadcastEvents = {\n  'chat_full_update': ChatId,\n  'chat_update': ChatId,\n  'chat_toggle_forum': {chatId: ChatId, enabled: boolean},\n  'chat_participant': Update.updateChannelParticipant,\n\n  'channel_update': ChatId,\n\n  'user_update': UserId,\n  'user_auth': UserAuth,\n  'user_full_update': UserId,\n\n  'attach_menu_bot': AttachMenuBot,\n\n  'peer_pinned_messages': {peerId: PeerId, mids?: number[], pinned?: boolean, unpinAll?: true},\n  'peer_pinned_hidden': {peerId: PeerId, maxId: number},\n  'peer_typings': {peerId: PeerId, threadId?: number, typings: UserTyping[]},\n  'peer_block': {peerId: PeerId, blocked: boolean},\n  'peer_title_edit': {peerId: PeerId, threadId?: number},\n  'peer_bio_edit': PeerId,\n  'peer_deleted': PeerId, // left chat, deleted user dialog, left channel\n  'peer_full_update': PeerId,\n\n  'filter_delete': MyDialogFilter,\n  'filter_update': MyDialogFilter,\n  'filter_new': MyDialogFilter,\n  'filter_order': number[],\n  'filter_joined': MyDialogFilter,\n\n  'folder_unread': Omit<Folder, 'dialogs' | 'dispatchUnreadTimeout'>,\n\n  'dialog_draft': {peerId: PeerId, dialog: Dialog | ForumTopic, drop: boolean, draft: MyDraftMessage | undefined},\n  'dialog_unread': {peerId: PeerId, dialog: Dialog | ForumTopic},\n  'dialog_flush': {peerId: PeerId, dialog: Dialog},\n  'dialog_drop': Dialog | ForumTopic,\n  'dialog_migrate': {migrateFrom: PeerId, migrateTo: PeerId},\n  // 'dialog_top': Dialog,\n  'dialog_notify_settings': Dialog | ForumTopic,\n  // 'dialog_order': {dialog: Dialog, pos: number},\n  'dialogs_multiupdate': Map<PeerId, {dialog?: Dialog, topics?: Map<number, ForumTopic>}>,\n\n  'history_append': {storageKey: MessagesStorageKey, message: Message.message},\n  'history_update': {storageKey: MessagesStorageKey, message: MyMessage, sequential?: boolean},\n  'history_reply_markup': {peerId: PeerId},\n  'history_multiappend': MyMessage,\n  'history_delete': {peerId: PeerId, msgs: Set<number>},\n  'history_forbidden': PeerId,\n  'history_reload': PeerId,\n  // 'history_request': void,\n\n  'message_edit': {storageKey: MessagesStorageKey, peerId: PeerId, mid: number, message: MyMessage},\n  'message_sent': {storageKey: MessagesStorageKey, tempId: number, tempMessage: any, mid: number, message: MyMessage},\n  'message_error': {storageKey: MessagesStorageKey, tempId: number, error: ApiError},\n  'message_transcribed': {peerId: PeerId, mid: number, text: string, pending?: boolean},\n  'messages_views': {peerId: PeerId, mid: number, views: number}[],\n  'messages_reactions': {message: Message.message, changedResults: ReactionCount[]}[],\n  'messages_pending': void,\n  'messages_read': void,\n  'messages_downloaded': {peerId: PeerId, mids: number[]},\n  'messages_media_read': {peerId: PeerId, mids: number[]},\n\n  'replies_updated': Message.message,\n\n  'scheduled_new': Message.message,\n  'scheduled_delete': {peerId: PeerId, mids: number[]},\n\n  'album_edit': {peerId: PeerId, groupId: string, deletedMids: number[], messages: Message.message[]},\n\n  'stickers_installed': StickerSet.stickerSet,\n  'stickers_deleted': StickerSet.stickerSet,\n  'stickers_updated': {type: 'recent' | 'faved', stickers: MyDocument[]},\n  'stickers_top': Long,\n  'stickers_order': {type: 'masks' | 'emojis' | 'stickers', order: Long[]},\n  'sticker_updated': {type: 'recent' | 'faved', document: MyDocument, faved: boolean},\n\n  'state_cleared': void,\n  'state_synchronized': ChatId | void,\n  'state_synchronizing': ChatId | void,\n\n  'contacts_update': UserId,\n  'avatar_update': {peerId: PeerId, threadId?: number},\n  'poll_update': {poll: Poll, results: PollResults},\n  'invalidate_participants': ChatId,\n  // 'channel_settings': {channelId: number},\n  'webpage_updated': {id: WebPage.webPage['id'], msgs: {peerId: PeerId, mid: number, isScheduled: boolean}[]},\n\n  'connection_status_change': ConnectionStatusChange,\n  'settings_updated': {key: string, value: any, settings: State['settings']},\n  'draft_updated': {peerId: PeerId, threadId: number, draft: MyDraftMessage | undefined, force?: boolean},\n\n  'background_change': void,\n\n  'privacy_update': Update.updatePrivacy,\n\n  'notify_settings': Update.updateNotifySettings,\n  'notify_peer_type_settings': {key: Exclude<NotifyPeer['_'], 'notifyPeer'>, settings: PeerNotifySettings},\n\n  'notification_reset': string,\n  'notification_cancel': string,\n\n  'language_change': string,\n\n  'theme_change': void,\n  'theme_changed': void,\n\n  'media_play': void,\n\n  'emoji_recent': AppEmoji,\n\n  'download_progress': Progress,\n  'document_downloading': DocId,\n  'document_downloaded': DocId,\n\n  'choosing_sticker': boolean\n\n  'group_call_update': GroupCall,\n  'group_call_participant': {groupCallId: GroupCallId, participant: GroupCallParticipant},\n  // 'group_call_video_track_added': {instance: GroupCallInstance}\n\n  'call_update': PhoneCall,\n  'call_signaling': {callId: CallId, data: Uint8Array},\n\n  'quick_reaction': Reaction,\n\n  'service_notification': Update.updateServiceNotification,\n\n  'logging_out': void,\n\n  'payment_sent': {peerId: PeerId, mid: number, receiptMessage: Message.messageService},\n\n  'web_view_result_sent': Long,\n\n  'premium_toggle': boolean,\n  'premium_toggle_private': {isNew: boolean, isPremium: boolean},\n\n  'config': Config,\n  'app_config': MTAppConfig\n};\n\nexport type BroadcastEventsListeners = {\n  [name in keyof BroadcastEvents]: (e: BroadcastEvents[name]) => void\n};\n\nexport class RootScope extends EventListenerBase<BroadcastEventsListeners> {\n  public myId: PeerId;\n  private connectionStatus: {[name: string]: ConnectionStatusChange};\n  public settings: State['settings'];\n  public managers: AppManagers;\n  public premium: boolean;\n\n  constructor() {\n    super();\n\n    this.myId = NULL_PEER_ID;\n    this.connectionStatus = {};\n    this.premium = false;\n\n    this.addEventListener('user_auth', ({id}) => {\n      this.myId = id.toPeerId();\n    });\n\n    this.addEventListener('premium_toggle_private', ({isNew, isPremium}) => {\n      this.premium = isPremium;\n      this.dispatchEventSingle('premium_toggle', isPremium);\n    });\n\n    this.addEventListener('connection_status_change', (status) => {\n      this.connectionStatus[status.name] = status;\n    });\n\n    this.dispatchEvent = (e, ...args) => {\n      super.dispatchEvent(e, ...args);\n      MTProtoMessagePort.getInstance().invokeVoid('event', {name: e as string, args});\n    };\n\n    if(!IS_WORKER) {\n      this.addEventListener('settings_updated', ({settings}) => {\n        this.settings = settings;\n      });\n    }\n  }\n\n  public getConnectionStatus() {\n    return this.connectionStatus;\n  }\n\n  public getPremium() {\n    return this.premium;\n  }\n\n  public dispatchEventSingle(...args: any[]) {\n    // @ts-ignore\n    super.dispatchEvent(...args);\n  }\n}\n\nconst rootScope = new RootScope();\nMOUNT_CLASS_TO.rootScope = rootScope;\nexport default rootScope;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {State} from '../../config/state';\nimport rootScope from '../rootScope';\nimport stateStorage from '../stateStorage';\nimport setDeepProperty from '../../helpers/object/setDeepProperty';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\n\nexport class AppStateManager {\n  private state: State = {} as any;\n  private storage = stateStorage;\n\n  // ! for mtproto worker use only\n  public newVersion: string;\n  public oldVersion: string;\n  public userId: UserId;\n\n  public getState() {\n    return Promise.resolve(this.state);\n  }\n\n  public setByKey(key: string, value: any) {\n    setDeepProperty(this.state, key, value);\n\n    const first = key.split('.')[0] as keyof State;\n    if(first === 'settings') {\n      rootScope.dispatchEvent('settings_updated', {key, value, settings: this.state.settings});\n    }\n\n    return this.pushToState(first, this.state[first]);\n  }\n\n  public pushToState<T extends keyof State>(key: T, value: State[T], direct = true, onlyLocal?: boolean) {\n    if(direct) {\n      this.state[key] = value;\n    }\n\n    return this.setKeyValueToStorage(key, value, onlyLocal);\n  }\n\n  public setKeyValueToStorage<T extends keyof State>(key: T, value: State[T] = this.state[key], onlyLocal?: boolean) {\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {name: 'state', key, value});\n\n    return this.storage.set({\n      [key]: value\n    }, onlyLocal);\n  }\n\n  /* public resetState() {\n    for(let i in this.state) {\n      // @ts-ignore\n      this.state[i] = false;\n    }\n    sessionStorage.set(this.state).then(() => {\n      location.reload();\n    });\n  } */\n}\n\nconst appStateManager = new AppStateManager();\nexport default appStateManager;\n","import getDeepProperty from './getDeepProperty';\n\nexport default function setDeepProperty(object: any, key: string, value: any) {\n  const splitted = key.split('.');\n  getDeepProperty(object, splitted.slice(0, -1).join('.'))[splitted.pop()] = value;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {DcId} from '../types';\n\nexport const MAIN_DOMAINS = ['web.telegram.org', 'webk.telegram.org'];\nexport const DEFAULT_BACKGROUND_SLUG = 'pattern';\n\nconst threads = Math.min(4, navigator.hardwareConcurrency ?? 4);\n\nconst App = {\n  id: +process.env.API_ID,\n  hash: process.env.API_HASH,\n  version: process.env.VERSION,\n  versionFull: process.env.VERSION_FULL,\n  build: +process.env.BUILD,\n  langPackVersion: '1.6.6',\n  langPack: 'webk',\n  langPackCode: 'en',\n  domains: MAIN_DOMAINS,\n  baseDcId: 2 as DcId,\n  isMainDomain: MAIN_DOMAINS.includes(location.hostname),\n  suffix: 'K',\n  threads,\n  cryptoWorkers: threads\n};\n\nif(App.isMainDomain) { // use Webogram credentials then\n  App.id = 2496;\n  App.hash = '8da85b0d5bfe62527e5b244c209159c3';\n}\n\nexport default App;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport pause from '../../../helpers/schedulers/pause';\nimport {DcId} from '../../../types';\nimport {logger, LogTypes} from '../../logger';\nimport type MTPNetworker from '../networker';\nimport MTTransport from './transport';\nimport Modes from '../../../config/modes';\n\n                   \nimport transportController from './controller';\n// import networkStats from '../networkStats';\n         \n\nexport default class HTTP implements MTTransport {\n  public networker: MTPNetworker;\n  private log: ReturnType<typeof logger>;\n\n  private pending: Array<{\n    resolve: (body: Uint8Array) => void,\n    reject: any,\n    body: Uint8Array\n  }> = [];\n  private releasing: boolean;\n\n  public connected: boolean;\n  private destroyed: boolean;\n  private debug: boolean;\n\n  constructor(protected dcId: DcId, protected url: string, logSuffix: string) {\n    this.debug = Modes.debug && false;\n\n    let logTypes = LogTypes.Error | LogTypes.Log;\n    if(this.debug) logTypes |= LogTypes.Debug;\n\n    this.log = logger(`HTTP-${dcId}` + logSuffix, logTypes);\n    this.log('constructor');\n\n    this.connected = false;\n  }\n\n  public _send(body: Uint8Array, mode?: RequestMode) {\n    const length = body.length;\n    this.debug && this.log.debug('-> body length to send:', length);\n\n    // networkStats.addSent(this.dcId, length);\n    return fetch(this.url, {method: 'POST', body, mode}).then((response) => {\n      if(response.status !== 200 && !mode) {\n        response.arrayBuffer().then((buffer) => {\n          this.log.error('not 200',\n            new TextDecoder('utf-8').decode(new Uint8Array(buffer)));\n        });\n\n        throw response;\n      }\n\n      this.setConnected(true);\n\n      // * test resending by dropping random request\n      // if(Math.random() > .5) {\n      //   throw 'asd';\n      // }\n\n      return response.arrayBuffer().then((buffer) => {\n        // networkStats.addReceived(this.dcId, buffer.byteLength);\n        return new Uint8Array(buffer);\n      });\n    }, (err) => {\n      this.setConnected(false);\n      throw err;\n    });\n  }\n\n  private setConnected(connected: boolean) {\n    if(this.connected === connected || this.destroyed) {\n      return;\n    }\n\n    this.connected = connected;\n\n                       \n    transportController.setTransportValue('https', connected);\n             \n  }\n\n  public destroy() {\n    this.setConnected(false);\n    this.destroyed = true;\n    this.pending.forEach((pending) => pending.reject());\n    this.pending.length = 0;\n  }\n\n  public send(body: Uint8Array) {\n    if(this.networker) {\n      return this._send(body);\n    } else {\n      const promise = new Promise<typeof body>((resolve, reject) => {\n        this.pending.push({resolve, reject, body});\n      });\n\n      this.releasePending();\n\n      return promise;\n    }\n  }\n\n  private async releasePending() {\n    if(this.releasing) return;\n\n    this.releasing = true;\n    // this.log('-> messages to send:', this.pending.length);\n    for(let i = 0; i < this.pending.length; ++i) {\n      const pending = this.pending[i];\n      const {body, resolve} = pending;\n\n      try {\n        const result = await this._send(body);\n        resolve(result);\n        this.pending.splice(i, 1);\n      } catch(err) {\n        this.log.error('Send plain request error:', err);\n        await pause(5000);\n      }\n\n      --i;\n    }\n\n    this.releasing = false;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {logger, LogTypes} from '../../logger';\nimport Modes from '../../../config/modes';\nimport EventListenerBase from '../../../helpers/eventListenerBase';\nimport {MTConnection} from './transport';\n\n// let closeSocketBefore = Date.now() + 30e3;\n// let closeSocketAfter = Date.now() + 10e3;\n\nexport default class Socket extends EventListenerBase<{\n  open: () => void,\n  message: (buffer: ArrayBuffer) => any,\n  close: () => void,\n}> implements MTConnection {\n  private ws: WebSocket;\n  private log: ReturnType<typeof logger>;\n  private debug = Modes.debug && false;\n\n  constructor(protected dcId: number, protected url: string, logSuffix: string) {\n    super();\n\n    let logTypes = LogTypes.Error | LogTypes.Log;\n    if(this.debug) logTypes |= LogTypes.Debug;\n    this.log = logger(`WS-${dcId}` + logSuffix, logTypes);\n    this.log('constructor');\n    this.connect();\n\n    return this;\n  }\n\n  private removeListeners() {\n    if(!this.ws) {\n      return;\n    }\n\n    this.ws.removeEventListener('open', this.handleOpen);\n    this.ws.removeEventListener('close', this.handleClose);\n    this.ws.removeEventListener('error', this.handleError);\n    this.ws.removeEventListener('message', this.handleMessage);\n    this.ws = undefined;\n  }\n\n  private connect() {\n    this.ws = new WebSocket(this.url, 'binary');\n    this.ws.binaryType = 'arraybuffer';\n    this.ws.addEventListener('open', this.handleOpen);\n    this.ws.addEventListener('close', this.handleClose);\n    this.ws.addEventListener('error', this.handleError);\n    this.ws.addEventListener('message', this.handleMessage);\n\n    // if(Date.now() < closeSocketBefore) {\n    // if(Date.now() >= closeSocketAfter) {\n    //   this.ws.close();\n    // }\n  }\n\n  public close() {\n    if(!this.ws) {\n      return;\n    }\n\n    this.log('close execution');\n\n    try {\n      this.ws.close();\n    } catch(err) {\n\n    }\n    this.handleClose();\n  }\n\n  private handleOpen = () => {\n    this.log('opened');\n\n    this.debug && this.log.debug('sending init packet');\n    this.dispatchEvent('open');\n  };\n\n  private handleError = (e: Event) => {\n    this.log.error('handleError', e);\n    this.close();\n  };\n\n  private handleClose = (e?: CloseEvent) => {\n    this.log('closed', e/* , this.pending, this.ws.bufferedAmount */);\n\n    this.removeListeners();\n    this.dispatchEvent('close');\n  };\n\n  private handleMessage = (event: MessageEvent) => {\n    this.debug && this.log.debug('<-', 'handleMessage', /* event,  */event.data.byteLength);\n\n    this.dispatchEvent('message', event.data as ArrayBuffer);\n  };\n\n  public send = (body: Uint8Array) => {\n    this.debug && this.log.debug('-> body length to send:', body.length);\n\n    this.ws.send(body);\n  };\n}\n","export default function randomize<T extends ArrayBufferView>(arr: T) {\n  if(crypto && 'getRandomValues' in crypto) {\n    crypto.getRandomValues(arr);\n  } else {\n    throw new Error('NO_SECURE_RANDOM');\n  }\n\n  return arr;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// import aesjs from 'aes-js';\nimport randomize from '../../../helpers/array/randomize';\nimport cryptoMessagePort from '../../crypto/cryptoMessagePort';\nimport {Codec} from './codec';\n\n/*\n@cryptography/aes не работает с массивами которые не кратны 4, поэтому использую intermediate а не abridged\n*/\nexport default class Obfuscation {\n  /* private enc: aesjs.ModeOfOperation.ModeOfOperationCTR;\n  private dec: aesjs.ModeOfOperation.ModeOfOperationCTR; */\n\n  private id: number;\n  private idPromise: Promise<Obfuscation['id']>;\n  private process: (data: Uint8Array, operation: 'encrypt' | 'decrypt') => ReturnType<Obfuscation['_process']>;\n\n  // private cryptoEncKey: CryptoKey;\n  // private cryptoDecKey: CryptoKey;\n  // private cryptoKey: CryptoKey;\n\n  // private encIv: Uint8Array;\n  // private decIv: Uint8Array;\n\n  // private decIvCounter: Counter;\n\n  public async init(codec: Codec) {\n    if(this.idPromise !== undefined) {\n      this.release();\n    }\n\n    const initPayload = new Uint8Array(64);\n    randomize(initPayload);\n\n    while(true) {\n      const val = (initPayload[3] << 24) | (initPayload[2] << 16) | (initPayload[1] << 8) | initPayload[0];\n      const val2 = (initPayload[7] << 24) | (initPayload[6] << 16) | (initPayload[5] << 8) | initPayload[4];\n      if(initPayload[0] !== 0xef &&\n          val !== 0x44414548 &&\n          val !== 0x54534f50 &&\n          val !== 0x20544547 &&\n          val !== 0x4954504f &&\n          val !== 0xeeeeeeee &&\n          val !== 0xdddddddd &&\n          val2 !== 0x00000000) {\n        // initPayload[56] = initPayload[57] = initPayload[58] = initPayload[59] = transport;\n        break;\n      }\n      randomize(initPayload);\n    }\n\n    // //////////////////////initPayload.subarray(60, 62).hex = dcId;\n    /* initPayload.set(new Uint8Array([161, 208, 67, 71, 118, 109, 20, 111, 113, 255, 134, 10, 159, 241, 7, 44, 217, 82, 187, 76, 108, 131, 200, 186, 33, 57, 177, 251, 52, 34, 18, 54, 65, 105, 37, 89, 38, 20, 47, 168, 126, 181, 24, 138, 212, 68, 60, 150, 225, 37, 181, 4, 201, 50, 72, 151, 168, 143, 204, 169, 81, 187, 241, 23]));\n    console.log('initPayload', initPayload); */\n\n    const reversedPayload = initPayload.slice().reverse();\n\n    const encKey = initPayload.slice(8, 40);\n    const encIv = /* this.encIv =  */initPayload.slice(40, 56);\n    const decKey = reversedPayload.slice(8, 40);\n    const decIv = /* this.decIv =  */reversedPayload.slice(40, 56);\n\n    /* this.enc = new aesjs.ModeOfOperation.ctr(encKey, new aesjs.Counter(encIv as any));\n    this.dec = new aesjs.ModeOfOperation.ctr(decKey, new aesjs.Counter(decIv as any)); */\n\n    // console.log('encKey', encKey.hex, encIv.hex);\n    // console.log('decKey', decKey.hex, decIv.hex);\n\n    const idPromise = this.idPromise = cryptoMessagePort.invokeCrypto('aes-ctr-prepare', {\n      encKey,\n      encIv,\n      decKey,\n      decIv\n    });\n\n    this.process = async(data, operation) => {\n      await idPromise;\n      return this._process(data, operation);\n    };\n\n    this.id = await idPromise;\n\n    this.process = this._process;\n\n    // this.decIvCounter = new Counter(this.decIv);\n    /* const key = this.cryptoEncKey = await subtle.importKey(\n      'raw',\n      encKey,\n      {name: 'AES-CTR'},\n      false,\n      ['encrypt']\n    ); */\n\n    // this.cryptoDecKey = await subtle.importKey(\n    //   'raw',\n    //   decKey,\n    //   {name: 'AES-CTR'},\n    //   false,\n    //   ['encrypt']\n    // );\n\n    // this.cryptoKey = await subtle.importKey(\n    //   'raw',\n    //   encKey,\n    //   {name: 'AES-CTR'},\n    //   false,\n    //   ['encrypt', 'decrypt']\n    // );\n\n    initPayload.set(codec.obfuscateTag, 56);\n    const encrypted = await this.encode(initPayload.slice());\n\n    // console.log('encrypted', encrypted);\n\n    initPayload.set(encrypted.slice(56, 64), 56);\n\n    return initPayload;\n  }\n\n  /* public encode(payload: Uint8Array) {\n    let startTime = performance.now();\n    let res = this.enc.encrypt(payload);\n    let time = performance.now() - startTime;\n\n    try {\n      startTime = performance.now();\n      let arr = this.encNew.encrypt(payload);\n      //let resNew = bytesFromWords({words: arr, sigBytes: arr.length});\n      let resNew = new Uint8Array(bytesFromWordss(arr));\n      let time2 = performance.now() - startTime;\n      console.log('Obfuscation: encode comparison:', res, arr, resNew, res.hex === resNew.hex, time2 < time);\n    } catch(err) {\n      console.error('Obfuscation: error:', err);\n    }\n\n    return res;\n  }\n\n  public decode(payload: Uint8Array) {\n    let res = this.dec.encrypt(payload);\n\n    try {\n      let arr = this.decNew.decrypt(payload);\n      //let resNew = bytesFromWords({words: arr, sigBytes: arr.length});\n      let resNew = new Uint8Array(bytesFromWordss(arr));\n      console.log('Obfuscation: decode comparison:', res, arr, resNew, res.hex === resNew.hex);\n    } catch(err) {\n      console.error('Obfuscation: error:', err);\n    }\n\n    return res;\n  } */\n\n  private _process = (data: Uint8Array, operation: 'encrypt' | 'decrypt') => {\n    return cryptoMessagePort.invokeCryptoNew({\n      method: 'aes-ctr-process',\n      args: [{id: this.id, data, operation}],\n      transfer: [data.buffer]\n    }) as Promise<Uint8Array>;\n  };\n\n  public encode(payload: Uint8Array) {\n    /* return subtle.encrypt({\n        name: 'AES-CTR',\n        counter: this.encIv,\n        length: 64\n      },\n      this.cryptoEncKey,\n      payload\n    ); */\n    return this.process(payload, 'encrypt');\n  }\n\n  public decode(payload: Uint8Array) {\n    return this.process(payload, 'decrypt');\n  }\n\n  public async release() {\n    const idPromise = this.idPromise;\n    if(idPromise === undefined) {\n      return;\n    }\n\n    this.id = undefined;\n    this.idPromise = undefined;\n\n    const id = await idPromise;\n    cryptoMessagePort.invokeCrypto('aes-ctr-destroy', id);\n  }\n\n  public destroy() {\n    this.release();\n  }\n\n  // public encode(payload: Uint8Array) {\n  //   let res = this.encNew.encrypt(payload);\n  //   let bytes = new Uint8Array(bytesFromWordss(res));\n\n  //   return bytes;\n  // }\n\n  // public async decode(payload: Uint8Array) {\n  //   const counter = this.decIvCounter.counter.slice();\n  //   this.decIvCounter.increment();\n\n  //   const n: ArrayBuffer = await subtle.encrypt({\n  //       name: 'AES-CTR',\n  //       counter: counter,\n  //       length: 64\n  //     },\n  //     this.cryptoDecKey,\n  //     payload\n  //   );\n\n  //   const decoded = this.decNew.update(payload);\n\n  //   console.log('decode', bytesToHex(decoded), 'new', n, bytesToHex(new Uint8Array(n)));\n\n  //   return decoded;\n  // }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// import { bytesFromHex, addPadding } from \"../../bin_utils\";\nimport {Codec} from './codec';\n\nclass AbridgedPacketCodec implements Codec {\n  public tag = 0xef;\n  public obfuscateTag = new Uint8Array([this.tag, this.tag, this.tag, this.tag]);\n\n  public encodePacket(data: Uint8Array) {\n    const len = data.byteLength >> 2;\n    let header: Uint8Array;\n    if(len < 127) {\n      header = new Uint8Array([len]);\n    } else { // Length: payload length, divided by four, and encoded as 3 length bytes (little endian)\n      // header = new Uint8Array([0x7f, ...addPadding(bytesFromHex(len.toString(16)).reverse(), 3, true)/* .reverse() */]);\n      header = new Uint8Array([0x7f, len & 0xFF, (len >> 8) & 0xFF, (len >> 16) & 0xFF]);\n      // console.log('got nobody cause im braindead', header, len);\n    }\n\n    return header.concat(data);\n    // return new Uint8Array([...header, ...data]);\n  }\n\n  public readPacket(data: Uint8Array) {\n    let length = data[0];\n    if(length >= 127) { // 0x7f\n      length = data[1] | (data[2] << 8) | (data[3] << 16);\n\n      return data.slice(4, length << 2 + 1); // need +1\n    }\n\n    return data.slice(1, length << 2 + 1); // need +1\n  }\n}\n\nexport default new AbridgedPacketCodec();\n","export default function bytesToHex(bytes: ArrayLike<number>) {\n  const length = bytes.length;\n  const arr: string[] = new Array(length);\n  for(let i = 0; i < length; ++i) {\n    arr[i] = (bytes[i] < 16 ? '0' : '') + (bytes[i] || 0).toString(16);\n  }\n  return arr.join('');\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport Modes from '../../../config/modes';\nimport {logger, LogTypes} from '../../logger';\nimport MTPNetworker from '../networker';\nimport Obfuscation from './obfuscation';\nimport MTTransport, {MTConnection, MTConnectionConstructable} from './transport';\n// import intermediatePacketCodec from './intermediate';\nimport abridgedPacketCodec from './abridged';\n// import paddedIntermediatePacketCodec from './padded';\nimport {ConnectionStatus} from '../connectionStatus';\n\n                   \nimport transportController from './controller';\nimport bytesToHex from '../../../helpers/bytes/bytesToHex';\n// import networkStats from '../networkStats';\nimport ctx from '../../../environment/ctx';\n         \n\nexport default class TcpObfuscated implements MTTransport {\n  private codec = abridgedPacketCodec;\n  private obfuscation = new Obfuscation();\n  public networker: MTPNetworker;\n\n  private pending: Array<Partial<{\n    resolve: any,\n    reject: any,\n    body: Uint8Array,\n    encoded?: Uint8Array,\n    bodySent: boolean\n  }>> = [];\n\n  private debug = Modes.debug && false/* true */;\n  private log: ReturnType<typeof logger>;\n  public connected = false;\n  private lastCloseTime: number;\n  public connection: MTConnection;\n\n  private autoReconnect = true;\n  private reconnectTimeout: number;\n  private releasingPending: boolean;\n\n  // private debugPayloads: MTPNetworker['debugRequests'] = [];\n\n  constructor(\n    private Connection: MTConnectionConstructable,\n    private dcId: number,\n    private url: string,\n    private logSuffix: string,\n    private retryTimeout: number\n  ) {\n    let logTypes = LogTypes.Error | LogTypes.Log;\n    if(this.debug) logTypes |= LogTypes.Debug;\n    this.log = logger(`TCP-${dcId}` + logSuffix, logTypes);\n    this.log('constructor');\n\n    this.connect();\n  }\n\n  private onOpen = async() => {\n    this.connected = true;\n\n                       \n    transportController.setTransportOpened('websocket');\n             \n\n    const initPayload = await this.obfuscation.init(this.codec);\n    if(!this.connected) {\n      return;\n    }\n\n    this.connection.send(initPayload);\n\n    if(this.networker) {\n      this.pending.length = 0; // ! clear queue and reformat messages to container, because if sending simultaneously 10+ messages, connection will die\n      this.networker.setConnectionStatus(ConnectionStatus.Connected);\n      this.networker.cleanupSent();\n      this.networker.resend();\n    }/*  else {\n      for(const pending of this.pending) {\n        if(pending.encoded && pending.body) {\n          pending.encoded = this.encodeBody(pending.body);\n        }\n      }\n    } */\n\n    setTimeout(() => {\n      this.releasePending();\n    }, 0);\n  };\n\n  private onMessage = async(buffer: ArrayBuffer) => {\n    // networkStats.addReceived(this.dcId, buffer.byteLength);\n\n    let data = await this.obfuscation.decode(new Uint8Array(buffer));\n    data = this.codec.readPacket(data);\n\n    if(this.networker) { // authenticated!\n      // this.pending = this.pending.filter((p) => p.body); // clear pending\n\n      this.debug && this.log.debug('redirecting to networker', data.length);\n      this.networker.parseResponse(data).then((response) => {\n        this.debug && this.log.debug('redirecting to networker response:', response);\n\n        try {\n          this.networker.processMessage(response.response, response.messageId, response.sessionId);\n        } catch(err) {\n          this.log.error('handleMessage networker processMessage error', err);\n        }\n\n        // this.releasePending();\n      }).catch((err) => {\n        this.log.error('handleMessage networker parseResponse error', err);\n      });\n\n      // this.dd();\n      return;\n    }\n\n    // console.log('got hex:', data.hex);\n    const pending = this.pending.shift();\n    if(!pending) {\n      this.debug && this.log.debug('no pending for res:', bytesToHex(data));\n      return;\n    }\n\n    pending.resolve(data);\n  };\n\n  private onClose = () => {\n    this.clear();\n\n    let needTimeout: number, retryAt: number;\n    if(this.autoReconnect) {\n      const time = Date.now();\n      const diff = time - this.lastCloseTime;\n      needTimeout = !isNaN(diff) && diff < this.retryTimeout ? this.retryTimeout - diff : 0;\n      retryAt = time + needTimeout;\n    }\n\n    if(this.networker) {\n      this.networker.setConnectionStatus(ConnectionStatus.Closed, retryAt);\n      this.pending.length = 0;\n    }\n\n    if(this.autoReconnect) {\n      this.log('will try to reconnect after timeout:', needTimeout / 1000);\n      this.reconnectTimeout = ctx.setTimeout(this.reconnect, needTimeout);\n    } else {\n      this.log('reconnect isn\\'t needed');\n    }\n  };\n\n  public clear() {\n                       \n    if(this.connected) {\n      transportController.setTransportClosed('websocket');\n    }\n             \n\n    this.connected = false;\n\n    if(this.connection) {\n      this.connection.removeEventListener('open', this.onOpen);\n      this.connection.removeEventListener('close', this.onClose);\n      this.connection.removeEventListener('message', this.onMessage);\n      this.connection = undefined;\n    }\n  }\n\n  /**\n   * invoke only when closed\n   */\n  public reconnect = () => {\n    if(this.reconnectTimeout !== undefined) {\n      clearTimeout(this.reconnectTimeout);\n      this.reconnectTimeout = undefined;\n    }\n\n    if(this.connection) {\n      return;\n    }\n\n    this.log('trying to reconnect...');\n    this.lastCloseTime = Date.now();\n\n    if(!this.networker) {\n      for(const pending of this.pending) {\n        if(pending.bodySent) {\n          pending.bodySent = false;\n        }\n      }\n    } else {\n      this.networker.setConnectionStatus(ConnectionStatus.Connecting);\n    }\n\n    this.connect();\n  }\n\n  public forceReconnect() {\n    this.close();\n    this.reconnect();\n  }\n\n  public destroy() {\n    this.setAutoReconnect(false);\n    this.close();\n\n    if(this.obfuscation) {\n      this.obfuscation.destroy();\n    }\n\n    this.pending.forEach((pending) => {\n      if(pending.reject) {\n        pending.reject();\n      }\n    });\n    this.pending.length = 0;\n  }\n\n  public close() {\n    const connection = this.connection;\n    if(connection) {\n      const connected = this.connected;\n      this.clear();\n      if(connected) { // wait for buffered messages if they are there\n        connection.addEventListener('message', this.onMessage);\n        connection.addEventListener('close', () => {\n          connection.removeEventListener('message', this.onMessage);\n        }, {once: true});\n        connection.close();\n      }\n    }\n  }\n\n  /**\n   * Will connect if enable and disconnected \\\n   * Will reset reconnection timeout if disable\n   */\n  public setAutoReconnect(enable: boolean) {\n    this.autoReconnect = enable;\n\n    if(!enable) {\n      if(this.reconnectTimeout !== undefined) {\n        clearTimeout(this.reconnectTimeout);\n        this.reconnectTimeout = undefined;\n      }\n    } else if(!this.connection && this.reconnectTimeout === undefined) {\n      this.reconnect();\n    }\n  }\n\n  private connect() {\n    if(this.connection) {\n      this.close();\n    }\n\n    this.connection = new this.Connection(this.dcId, this.url, this.logSuffix);\n    this.connection.addEventListener('open', this.onOpen);\n    this.connection.addEventListener('close', this.onClose);\n    this.connection.addEventListener('message', this.onMessage);\n  }\n\n  public changeUrl(url: string) {\n    if(this.url === url) {\n      return;\n    }\n\n    this.url = url;\n    this.forceReconnect();\n  }\n\n  private encodeBody(body: Uint8Array) {\n    const toEncode = this.codec.encodePacket(body);\n\n    // this.log('send before obf:', /* body.hex, nonce.hex, */ toEncode.hex);\n    const encoded = this.obfuscation.encode(toEncode);\n    // this.log('send after obf:', enc.hex);\n\n    return encoded;\n  }\n\n  public send(body: Uint8Array) {\n    this.debug && this.log.debug('-> body length to pending:', body.length);\n\n    const encoded: typeof body = /* this.connected ? this.encodeBody(body) :  */undefined;\n\n    // return;\n\n    if(this.networker) {\n      this.pending.push({body, encoded});\n      this.releasePending();\n    } else {\n      const promise = new Promise<typeof body>((resolve, reject) => {\n        this.pending.push({resolve, reject, body, encoded});\n      });\n\n      this.releasePending();\n\n      return promise;\n    }\n  }\n\n  private async releasePending(/* tt = false */) {\n    if(!this.connected || this.releasingPending) {\n      // this.connect();\n      return;\n    }\n\n    this.releasingPending = true;\n\n    /* if(!tt) {\n      this.releasePendingDebounced();\n      return;\n    } */\n\n    // this.log('-> messages to send:', this.pending.length);\n    let length = this.pending.length;\n    let sent = false;\n    // for(let i = length - 1; i >= 0; --i) {\n    for(let i = 0; i < length; ++i) {\n      const pending = this.pending[i];\n      if(!pending) {\n        break;\n      }\n\n      const {body, bodySent} = pending;\n      if(body && !bodySent) {\n        // this.debugPayloads.push({before: body.slice(), after: enc});\n\n        this.debug && this.log.debug('-> body length to send:', body.length);\n\n        // if(!encoded) {\n        //   encoded = pending.encoded = this.encodeBody(body);\n        // }\n\n        const encoded = pending.encoded ??= await this.encodeBody(body);\n        if(!this.connected) {\n          break;\n        }\n\n        // networkStats.addSent(this.dcId, encoded.byteLength);\n        this.connection.send(encoded);\n\n        if(!pending.resolve) { // remove if no response needed\n          this.pending.splice(i--, 1);\n          length--;\n        } else {\n          pending.bodySent = true;\n        }\n\n        sent = true;\n        // delete pending.body;\n      }\n    }\n\n    this.releasingPending = undefined;\n\n    if(this.pending.length && sent) {\n      this.releasePending();\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport MTTransport, {MTConnectionConstructable} from './transports/transport';\nimport Modes from '../../config/modes';\nimport App from '../../config/app';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\n\n                       \nimport HTTP from './transports/http';\n         \n\n                     \nimport Socket from './transports/websocket';\nimport TcpObfuscated from './transports/tcpObfuscated';\nimport {IS_WEB_WORKER} from '../../helpers/context';\nimport {DcId} from '../../types';\nimport {getEnvironment} from '../../environment/utils';\n\n                                            \n                                                       \n         \n\n         \n\nexport type TransportType = 'websocket' | 'https' | 'http';\nexport type ConnectionType = 'client' | 'download' | 'upload';\ntype Servers = {\n  [transportType in TransportType]: {\n    [connectionType in ConnectionType]: {\n      [dcId: DcId]: MTTransport[]\n    }\n  }\n};\n\nconst TEST_SUFFIX = Modes.test ? '_test' : '';\nconst PREMIUM_SUFFIX = '_premium';\n\nexport function getTelegramConnectionSuffix(connectionType: ConnectionType) {\n  return connectionType === 'client' ? '' : '-1';\n}\n\n                     \nexport function constructTelegramWebSocketUrl(dcId: DcId, connectionType: ConnectionType, premium?: boolean) {\n  const suffix = getTelegramConnectionSuffix(connectionType);\n  const path = connectionType !== 'client' ? 'apiws' + TEST_SUFFIX + (premium ? PREMIUM_SUFFIX : '') : ('apiws' + TEST_SUFFIX);\n  const chosenServer = `wss://${App.suffix.toLowerCase()}ws${dcId}${suffix}.web.telegram.org/${path}`;\n\n  return chosenServer;\n}\n         \n\nexport class DcConfigurator {\n  private sslSubdomains = ['pluto', 'venus', 'aurora', 'vesta', 'flora'];\n\n  private dcOptions = Modes.test ?\n    [\n      {id: 1, host: '149.154.175.10',  port: 80},\n      {id: 2, host: '149.154.167.40',  port: 80},\n      {id: 3, host: '149.154.175.117', port: 80}\n    ] :\n    [\n      {id: 1, host: '149.154.175.50',  port: 80},\n      {id: 2, host: '149.154.167.50',  port: 80},\n      {id: 3, host: '149.154.175.100', port: 80},\n      {id: 4, host: '149.154.167.91',  port: 80},\n      {id: 5, host: '149.154.171.5',   port: 80}\n    ];\n\n  public chosenServers: Servers = {} as any;\n\n                       \n  private transportSocket = (dcId: DcId, connectionType: ConnectionType, premium?: boolean) => {\n    const chosenServer = constructTelegramWebSocketUrl(dcId, connectionType, premium);\n    const logSuffix = connectionType === 'upload' ? '-U' : connectionType === 'download' ? '-D' : '';\n\n    const retryTimeout = connectionType === 'client' ? 10000 : 10000;\n\n    let oooohLetMeLive: MTConnectionConstructable;\n                                                \n    oooohLetMeLive = Socket;\n            \n                                                                                                                                                   \n             \n\n    return new TcpObfuscated(oooohLetMeLive, dcId, chosenServer, logSuffix, retryTimeout);\n  };\n           \n\n                         \n  private transportHTTP = (dcId: DcId, connectionType: ConnectionType, premium?: boolean) => {\n    let chosenServer: string;\n    if(Modes.ssl || !Modes.http) {\n      const suffix = getTelegramConnectionSuffix(connectionType);\n      const subdomain = this.sslSubdomains[dcId - 1] + suffix;\n      const path = Modes.test ? 'apiw_test1' : 'apiw1';\n      chosenServer = 'https://' + subdomain + '.web.telegram.org/' + path;\n    } else {\n      for(const dcOption of this.dcOptions) {\n        if(dcOption.id === dcId) {\n          chosenServer = 'http://' + dcOption.host + (dcOption.port !== 80 ? ':' + dcOption.port : '') + '/apiw1';\n          break;\n        }\n      }\n    }\n\n    const logSuffix = connectionType === 'upload' ? '-U' : connectionType === 'download' ? '-D' : '';\n    return new HTTP(dcId, chosenServer, logSuffix);\n  };\n           \n\n  public chooseServer(\n    dcId: DcId,\n    connectionType: ConnectionType = 'client',\n    transportType: TransportType = Modes.transport,\n    reuse = true,\n    premium?: boolean\n  ) {\n    /* if(transportType === 'websocket' && !Modes.multipleConnections) {\n      connectionType = 'client';\n    } */\n\n    if(!this.chosenServers.hasOwnProperty(transportType)) {\n      this.chosenServers[transportType] = {\n        client: {},\n        download: {},\n        upload: {}\n      };\n    }\n\n    const servers = this.chosenServers[transportType][connectionType];\n\n    if(!(dcId in servers)) {\n      servers[dcId] = [];\n    }\n\n    const transports = servers[dcId];\n\n    if(!transports.length || !reuse/*  || (upload && transports.length < 1) */) {\n      let transport: MTTransport;\n\n                                               \n      transport = (transportType === 'websocket' ? this.transportSocket : this.transportHTTP)(dcId, connectionType, premium);\n                            \n                                                                      \n              \n                                                                    \n               \n\n      if(!transport) {\n        console.error('No chosenServer!', dcId);\n        return null;\n      }\n\n      if(reuse) {\n        transports.push(transport);\n      }\n\n      return transport;\n    }\n\n    return transports[0];\n  }\n\n  public static removeTransport<T>(obj: any, transport: T) {\n    for(const transportType in obj) {\n      // @ts-ignore\n      for(const connectionType in obj[transportType]) {\n        // @ts-ignore\n        for(const dcId in obj[transportType][connectionType]) {\n          // @ts-ignore\n          const transports: T[] = obj[transportType][connectionType][dcId];\n          indexOfAndSplice(transports, transport);\n        }\n      }\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport App from '../../../config/app';\nimport deferredPromise from '../../../helpers/cancellablePromise';\nimport EventListenerBase from '../../../helpers/eventListenerBase';\nimport pause from '../../../helpers/schedulers/pause';\nimport {TransportType, DcConfigurator} from '../dcConfigurator';\nimport type HTTP from './http';\nimport type TcpObfuscated from './tcpObfuscated';\nimport MTTransport from './transport';\n\nexport class MTTransportController extends EventListenerBase<{\n  change: (opened: MTTransportController['opened']) => void,\n  transport: (type: TransportType) => void\n}> {\n  private opened: Map<TransportType, number>;\n  private transports: {[k in TransportType]?: MTTransport};\n  private pinging: boolean;\n  private dcConfigurator: DcConfigurator;\n\n  constructor() {\n    super(true);\n\n    this.opened = new Map();\n    /* this.addEventListener('change', (opened) => {\n      this.dispatchEvent('transport', opened.get('websocket') || !opened.get('https') ? 'websocket' : 'https');\n    }); */\n\n    this.addEventListener('change', (opened) => {\n      if(!opened.get('websocket')) {\n        this.waitForWebSocket();\n      }\n    });\n\n    // setTimeout(() => {\n    // this.waitForWebSocket();\n    // }, 200); // wait for first transport so won't have delay for first WS\n  }\n\n  public async pingTransports() {\n    const dcConfigurator = this.dcConfigurator ??= new DcConfigurator();\n    const timeout = 2000;\n    const transports: {[k in TransportType]?: MTTransport} = this.transports = {\n      https: dcConfigurator.chooseServer(App.baseDcId, 'client', 'https', false),\n      websocket: dcConfigurator.chooseServer(App.baseDcId, 'client', 'websocket', false)\n    };\n\n    const httpPromise = deferredPromise<boolean>();\n    ((this.transports.https as HTTP)._send(new Uint8Array(), 'no-cors') as any as Promise<any>)\n    .then(() => httpPromise.resolve(true), () => httpPromise.resolve(false));\n    setTimeout(() => httpPromise.resolve(false), timeout);\n\n    const websocketPromise = deferredPromise<boolean>();\n    const socket = transports.websocket as TcpObfuscated;\n    socket.setAutoReconnect(false);\n    socket.connection.addEventListener('close', () => websocketPromise.resolve(false), {once: true});\n    socket.connection.addEventListener('open', () => websocketPromise.resolve(true), {once: true});\n    setTimeout(() => {\n      if(websocketPromise.isFulfilled || websocketPromise.isRejected) {\n        return;\n      }\n\n      if(socket.connection) {\n        socket.connection.close();\n      }\n\n      websocketPromise.resolve(false);\n    }, timeout);\n\n    const [isHttpAvailable, isWebSocketAvailable] = await Promise.all([httpPromise, websocketPromise]);\n\n    for(const transportType in transports) {\n      const transport = transports[transportType as TransportType];\n      transport.destroy();\n    }\n\n    const result = {\n      https: isHttpAvailable || this.opened.get('https') > 0,\n      websocket: isWebSocketAvailable || this.opened.get('websocket') > 0\n    };\n\n    // result.websocket = false;\n    return result;\n  }\n\n  public async waitForWebSocket() {\n    if(this.pinging) return;\n    this.pinging = true;\n\n    while(true) {\n      const {https, websocket} = await this.pingTransports();\n      if(https || websocket) {\n        this.dispatchEvent('transport', websocket || !https ? 'websocket' : 'https');\n      }\n\n      if(websocket) {\n        break;\n      }\n\n      await pause(10000);\n    }\n\n    this.pinging = false;\n  }\n\n  public setTransportValue(type: TransportType, value: boolean) {\n    let length = this.opened.get(type) || 0;\n    length += value ? 1 : -1;\n\n    this.opened.set(type, length);\n    this.dispatchEvent('change', this.opened);\n  }\n\n  public setTransportOpened(type: TransportType) {\n    return this.setTransportValue(type, true);\n  }\n\n  public setTransportClosed(type: TransportType) {\n    return this.setTransportValue(type, false);\n  }\n}\n\nconst transportController = new MTTransportController();\nexport default transportController;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport deferredPromise, {CancellablePromise} from '../../../../helpers/cancellablePromise';\nimport type {StoragesResults} from './loadStorages';\n\nconst RESET_STORAGES_PROMISE: CancellablePromise<{\n  storages: Set<keyof StoragesResults>,\n  callback: () => void\n}> = deferredPromise();\nexport default RESET_STORAGES_PROMISE;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {CryptoMessagePort} from '../crypto/cryptoMessagePort';\nimport type {ApiFileManager} from '../mtproto/apiFileManager';\nimport type {ApiManager} from '../mtproto/apiManager';\nimport type {Authorizer} from '../mtproto/authorizer';\nimport type {DcConfigurator} from '../mtproto/dcConfigurator';\nimport type {NetworkerFactory} from '../mtproto/networkerFactory';\nimport type {PasswordManager} from '../mtproto/passwordManager';\nimport type {ReferenceDatabase} from '../mtproto/referenceDatabase';\nimport type {TimeManager} from '../mtproto/timeManager';\nimport type {RootScope} from '../rootScope';\nimport type DialogsStorage from '../storages/dialogs';\nimport type FiltersStorage from '../storages/filters';\nimport type PeersStorage from '../storages/peers';\nimport type ThumbsStorage from '../storages/thumbs';\nimport type {ApiUpdatesManager} from './apiUpdatesManager';\nimport type {AppAvatarsManager} from './appAvatarsManager';\nimport type {AppCallsManager} from './appCallsManager';\nimport type {AppChatsManager} from './appChatsManager';\nimport type {AppDocsManager} from './appDocsManager';\nimport type {AppDraftsManager} from './appDraftsManager';\nimport type {AppEmojiManager} from './appEmojiManager';\nimport type {AppGroupCallsManager} from './appGroupCallsManager';\nimport type {AppInlineBotsManager} from './appInlineBotsManager';\nimport type {AppMessagesIdsManager} from './appMessagesIdsManager';\nimport type {AppMessagesManager} from './appMessagesManager';\nimport type {AppNotificationsManager} from './appNotificationsManager';\nimport type AppPaymentsManager from './appPaymentsManager';\nimport type {AppPeersManager} from './appPeersManager';\nimport type {AppPhotosManager} from './appPhotosManager';\nimport type {AppPollsManager} from './appPollsManager';\nimport type {AppPrivacyManager} from './appPrivacyManager';\nimport type {AppProfileManager} from './appProfileManager';\nimport type {AppReactionsManager} from './appReactionsManager';\nimport type {AppStateManager} from './appStateManager';\nimport type {AppStickersManager} from './appStickersManager';\nimport type {AppStoragesManager} from './appStoragesManager';\nimport type {AppUsersManager} from './appUsersManager';\nimport type AppWebDocsManager from './appWebDocsManager';\nimport type {AppWebPagesManager} from './appWebPagesManager';\nimport type AppAttachMenuBotsManager from './appAttachMenuBotsManager';\nimport type AppSeamlessLoginManager from './appSeamlessLoginManager';\nimport type AppThemesManager from './appThemesManager';\nimport type AppUsernamesManager from './appThemesManager';\nimport type {AppManagers} from './managers';\n\nexport class AppManager {\n  protected appPeersManager: AppPeersManager;\n  protected appChatsManager: AppChatsManager;\n  protected appDocsManager: AppDocsManager;\n  protected appPhotosManager: AppPhotosManager;\n  protected appPollsManager: AppPollsManager;\n  protected appUsersManager: AppUsersManager;\n  protected appWebPagesManager: AppWebPagesManager;\n  protected appDraftsManager: AppDraftsManager;\n  protected appProfileManager: AppProfileManager;\n  protected appNotificationsManager: AppNotificationsManager;\n  protected apiUpdatesManager: ApiUpdatesManager;\n  protected appAvatarsManager: AppAvatarsManager;\n  protected appGroupCallsManager: AppGroupCallsManager;\n  protected appCallsManager: AppCallsManager;\n  protected appReactionsManager: AppReactionsManager;\n  protected appMessagesManager: AppMessagesManager;\n  protected appMessagesIdsManager: AppMessagesIdsManager;\n  protected appPrivacyManager: AppPrivacyManager;\n  protected appInlineBotsManager: AppInlineBotsManager;\n  protected appStickersManager: AppStickersManager;\n  protected referenceDatabase: ReferenceDatabase;\n  protected appEmojiManager: AppEmojiManager;\n  protected dialogsStorage: DialogsStorage;\n  protected filtersStorage: FiltersStorage;\n  protected apiManager: ApiManager;\n  // protected apiManager: ApiManagerProxy;\n  protected passwordManager: PasswordManager;\n  protected cryptoWorker: CryptoMessagePort;\n  protected apiFileManager: ApiFileManager;\n  protected peersStorage: PeersStorage;\n  protected thumbsStorage: ThumbsStorage;\n  protected networkerFactory: NetworkerFactory;\n  protected rootScope: RootScope;\n  protected authorizer: Authorizer;\n  protected dcConfigurator: DcConfigurator;\n  protected timeManager: TimeManager;\n  protected appStoragesManager: AppStoragesManager;\n  protected appStateManager: AppStateManager;\n  protected appWebDocsManager: AppWebDocsManager;\n  protected appPaymentsManager: AppPaymentsManager;\n  protected appAttachMenuBotsManager: AppAttachMenuBotsManager;\n  protected appSeamlessLoginManager: AppSeamlessLoginManager;\n  protected appThemesManager: AppThemesManager;\n\n  public clear: (init?: boolean) => void;\n\n  public setManagers(managers: AppManagers) {\n    Object.assign(this, managers);\n    // this.after();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {Chat} from '../../../../layer';\nimport type {Dialog} from '../../appMessagesManager';\nimport type {User} from '../../appUsersManager';\nimport type {StoragesStorages} from './createStorages';\nimport {recordPromiseBound} from '../../../../helpers/recordPromise';\nimport {Awaited} from '../../../../types';\nimport {logger} from '../../../logger';\nimport RESET_STORAGES_PROMISE from './resetStoragesPromise';\nimport noop from '../../../../helpers/noop';\n\nexport type StoragesResults = Awaited<ReturnType<typeof loadStoragesInner>>;\n\nasync function loadStoragesInner(storages: StoragesStorages) {\n  const recordPromise = recordPromiseBound(logger('STORAGES-LOADER'));\n  const storagesKeys = Object.keys(storages) as Array<keyof StoragesStorages>;\n  const storagesPromises: Promise<any>[] = storagesKeys.map((key) => {\n    const promise = storages[key].getAll();\n    return recordPromise(promise, 'storage ' + (key as any as string));\n  });\n\n  const storagesResults: {\n    users: User[],\n    chats: Chat[],\n    dialogs: Dialog[]\n  } = {} as any;\n  const arr = await Promise.all(storagesPromises);\n  for(let i = 0, length = storagesKeys.length; i < length; ++i) {\n    storagesResults[storagesKeys[i]] = arr[i] as any;\n  }\n\n  arr.splice(0, storagesKeys.length);\n\n  // * will reset storages before setting the new state\n  const {storages: resetStorages, callback} = await RESET_STORAGES_PROMISE;\n  if(resetStorages.size) {\n    const clearPromises: Promise<any>[] = [];\n    for(const key of resetStorages) {\n      storagesResults[key].length = 0;\n      clearPromises.push(storages[key].clear());\n    }\n\n    resetStorages.clear();\n    await Promise.all(clearPromises).catch(noop);\n  }\n\n  callback();\n\n  return storagesResults;\n}\n\nlet promise: ReturnType<typeof loadStoragesInner>;\nexport default function loadStorages(storages: StoragesStorages) {\n  return promise ??= loadStoragesInner(storages);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {logger} from '../logger';\nimport {AppManager} from './manager';\nimport createStorages from './utils/storages/createStorages';\nimport loadStorages from './utils/storages/loadStorages';\n\nexport class AppStoragesManager extends AppManager {\n  private storages: ReturnType<typeof createStorages>;\n\n  // private loadPromise: CancellablePromise<StoragesResults>;\n\n  private log: ReturnType<typeof logger>;\n\n  constructor() {\n    super();\n\n    this.log = logger('STORAGES');\n    this.storages = createStorages();\n    // this.loadPromise = deferredPromise();\n  }\n\n  public loadStorages() {\n    return loadStorages(this.storages);\n    // loadStorages(this.storages).then((storagesResults) => {\n    // this.loadPromise.resolve(storagesResults);\n    // });\n\n    // return this.loadPromise;\n  }\n\n  // public setStoragesResults(storagesResults: StoragesResults) {\n  //   this.loadPromise.resolve(storagesResults);\n  // }\n\n  public async loadStorage<T extends keyof AppStoragesManager['storages']>(name: T) {\n    return this.loadStorages().then((storagesResults) => {\n      return {\n        storage: this.storages[name],\n        results: storagesResults[name]\n      };\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {Chat} from '../../../../layer';\nimport type {Dialog} from '../../appMessagesManager';\nimport type {User} from '../../appUsersManager';\nimport DATABASE_STATE from '../../../../config/databases/state';\nimport AppStorage from '../../../storage';\n\nexport type StoragesStorages = {\n  users: AppStorage<Record<UserId, User>, typeof DATABASE_STATE>,\n  chats: AppStorage<Record<ChatId, Chat>, typeof DATABASE_STATE>,\n  dialogs: AppStorage<Record<PeerId, Dialog>, typeof DATABASE_STATE>\n};\n\nexport default function createStorages() {\n  const names: (keyof StoragesStorages)[] = ['users', 'chats', 'dialogs'];\n  const storages: StoragesStorages = {} as any;\n  for(const name of names) {\n    // @ts-ignore\n    storages[name] = new AppStorage(DATABASE_STATE, name);\n  }\n\n  return storages;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {AccountPassword, AccountUpdatePasswordSettings, InputCheckPasswordSRP, PasswordKdfAlgo} from '../../layer';\nimport randomize from '../../helpers/array/randomize';\nimport {AppManager} from '../appManagers/manager';\n\nexport class PasswordManager extends AppManager {\n  public getState(): Promise<AccountPassword> {\n    return this.apiManager.invokeApi('account.getPassword').then((result) => {\n      return result;\n    });\n  }\n\n  public updateSettings(settings: {\n    hint?: string,\n    email?: string,\n    newPassword?: string,\n    currentPassword?: string\n  } = {}) {\n    // state = Object.assign({}, state);\n    // state.new_algo = Object.assign({}, state.new_algo);\n\n    return this.getState().then((state) => {\n      let currentHashPromise: Promise<InputCheckPasswordSRP>;\n      let newHashPromise: Promise<Uint8Array>;\n      const params: AccountUpdatePasswordSettings = {\n        password: null,\n        new_settings: {\n          _: 'account.passwordInputSettings',\n          hint: settings.hint,\n          email: settings.email\n        }\n      };\n\n      if(settings.currentPassword) {\n        currentHashPromise = this.cryptoWorker.invokeCrypto('computeSRP', settings.currentPassword, state, false) as any;\n      } else {\n        currentHashPromise = Promise.resolve({\n          _: 'inputCheckPasswordEmpty'\n        });\n      }\n\n      // * https://core.telegram.org/api/srp#setting-a-new-2fa-password, but still there is a mistake, TDesktop passes 'new_algo' everytime\n      const newAlgo = state.new_algo as PasswordKdfAlgo.passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow;\n      const salt1 = new Uint8Array(newAlgo.salt1.length + 32);\n      randomize(salt1);\n      salt1.set(newAlgo.salt1, 0);\n      newAlgo.salt1 = salt1;\n\n      if(settings.newPassword) {\n        newHashPromise = this.cryptoWorker.invokeCrypto('computeSRP', settings.newPassword, state, true) as any;\n      } else {\n        newHashPromise = Promise.resolve(new Uint8Array());\n      }\n\n      return Promise.all([currentHashPromise, newHashPromise]).then((hashes) => {\n        params.password = hashes[0];\n        params.new_settings.new_algo = newAlgo;\n        params.new_settings.new_password_hash = hashes[1];\n\n        return this.apiManager.invokeApi('account.updatePasswordSettings', params);\n      });\n    });\n  }\n\n  public getInputCheckPassword(password: string, state: AccountPassword) {\n    return this.cryptoWorker.invokeCrypto('computeSRP', password, state, false) as Promise<InputCheckPasswordSRP.inputCheckPasswordSRP>;\n  }\n\n  public check(password: string, state: AccountPassword, options: any = {}) {\n    return this.getInputCheckPassword(password, state).then((inputCheckPassword) => {\n      // console.log('SRP', inputCheckPassword);\n      return this.apiManager.invokeApi('auth.checkPassword', {\n        password: inputCheckPassword as InputCheckPasswordSRP.inputCheckPasswordSRP\n      }, options).then((auth) => {\n        if(auth._ === 'auth.authorization') {\n          this.apiManager.setUser(auth.user);\n        }\n\n        return auth;\n      });\n    });\n  }\n\n  public confirmPasswordEmail(code: string) {\n    return this.apiManager.invokeApi('account.confirmPasswordEmail', {code});\n  }\n\n  public resendPasswordEmail() {\n    return this.apiManager.invokeApi('account.resendPasswordEmail');\n  }\n\n  public cancelPasswordEmail() {\n    return this.apiManager.invokeApi('account.cancelPasswordEmail');\n  }\n\n  /* public requestRecovery(options: any = {}) {\n    return apiManager.invokeApi('auth.requestPasswordRecovery', {}, options);\n  }\n\n  public recover(code: any, options: any = {}) {\n    return apiManager.invokeApi('auth.recoverPassword', {\n      code\n    }, options);\n  } */\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {Photo, WallPaper} from '../../layer';\nimport {logger} from '../logger';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport deepEqual from '../../helpers/object/deepEqual';\nimport {AppManager} from '../appManagers/manager';\nimport makeError from '../../helpers/makeError';\n\nexport type ReferenceContext = ReferenceContext.referenceContextProfilePhoto | ReferenceContext.referenceContextMessage | ReferenceContext.referenceContextEmojiesSounds | ReferenceContext.referenceContextReactions | ReferenceContext.referenceContextUserFull | ReferenceContext.referenceContextCustomEmoji | ReferenceContext.referenceContextAttachMenuBotIcon | ReferenceContext.referenceContextWallPaper;\nexport namespace ReferenceContext {\n  export type referenceContextProfilePhoto = {\n    type: 'profilePhoto',\n    peerId: PeerId\n  };\n\n  export type referenceContextMessage = {\n    type: 'message',\n    peerId: PeerId,\n    messageId: number\n  };\n\n  export type referenceContextEmojiesSounds = {\n    type: 'emojiesSounds'\n  };\n\n  export type referenceContextReactions = {\n    type: 'reactions'\n  };\n\n  export type referenceContextUserFull = {\n    type: 'userFull',\n    userId: UserId\n  };\n\n  export type referenceContextCustomEmoji = {\n    type: 'customEmoji',\n    docId: DocId\n  };\n\n  export type referenceContextAttachMenuBotIcon = {\n    type: 'attachMenuBotIcon',\n    botId: BotId\n  };\n\n  export type referenceContextWallPaper = {\n    type: 'wallPaper',\n    wallPaperId: WallPaper['id']\n  };\n}\n\nexport type ReferenceBytes = Photo.photo['file_reference'];\nexport type ReferenceContexts = Set<ReferenceContext>;\n\n// type ReferenceBytes = Uint8Array;\n\nexport class ReferenceDatabase extends AppManager {\n  private contexts: Map<ReferenceBytes, ReferenceContexts> = new Map();\n  // private references: Map<ReferenceBytes, number[]> = new Map();\n  private links: {[hex: string]: ReferenceBytes} = {};\n  private log = logger('RD', undefined, true);\n  private refreshEmojiesSoundsPromise: Promise<any>;\n\n  // constructor() {\n  //   super();\n\n  // apiManager.addTaskListener('refreshReference', (task: RefreshReferenceTask) => {\n  //   const originalPayload = task.payload;\n\n  //   assumeType<RefreshReferenceTaskResponse>(task);\n  //   task.originalPayload = originalPayload;\n\n  //   this.refreshReference(originalPayload).then((bytes) => {\n  //     task.payload = bytes;\n  //   }, (err) => {\n  //     task.error = err;\n  //   }).then(() => apiManager.postMessage(task));\n  // });\n  // }\n\n  public saveContext(reference: ReferenceBytes, context: ReferenceContext, contexts?: ReferenceContexts) {\n    [contexts, reference] = this.getContexts(reference);\n    if(!contexts) {\n      contexts = new Set();\n      this.contexts.set(reference, contexts);\n    }\n\n    this.links[bytesToHex(reference)] = reference;\n    for(const _context of contexts) {\n      if(deepEqual(_context, context)) {\n        return;\n      }\n    }\n\n    contexts.add(context);\n  }\n\n  public getReferenceByLink(reference: ReferenceBytes) {\n    return this.links[bytesToHex(reference)];\n  }\n\n  public getContexts(reference: ReferenceBytes): [ReferenceContexts, ReferenceBytes] {\n    const contexts = this.contexts.get(reference) || (reference = this.getReferenceByLink(reference) || reference, this.contexts.get(reference));\n    return [contexts, reference];\n  }\n\n  public getContext(reference: ReferenceBytes): [ReferenceContext, ReferenceBytes] {\n    const contexts = this.getContexts(reference);\n    return contexts[0] ? [contexts[0].values().next().value, contexts[1]] : undefined;\n  }\n\n  public deleteContext(reference: ReferenceBytes, context: ReferenceContext, contexts?: ReferenceContexts) {\n    [contexts, reference] = this.getContexts(reference);\n    if(contexts) {\n      for(const _context of contexts) {\n        if(deepEqual(_context, context)) {\n          contexts.delete(_context);\n          if(!contexts.size) {\n            this.contexts.delete(reference);\n            delete this.links[bytesToHex(reference)];\n          }\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  public refreshReference(reference: ReferenceBytes, context?: ReferenceContext): Promise<Uint8Array | number[]> {\n    this.log('refreshReference: start', reference.slice(), context);\n    if(!context) {\n      const c = this.getContext(reference);\n      if(!c) {\n        this.log('refreshReference: got no context for reference:', reference.slice());\n        return Promise.reject('NO_CONTEXT');\n      }\n\n      [context, reference] = c;\n    }\n\n    let promise: Promise<any>;\n    switch(context?.type) {\n      case 'message': {\n        promise = this.appMessagesManager.reloadMessages(context.peerId, context.messageId, true);\n        break;\n        // .then(() => {\n        //   console.log('FILE_REFERENCE_EXPIRED: got message', context, appMessagesManager.getMessage((context as ReferenceContext.referenceContextMessage).messageId).media, reference);\n        // });\n      }\n\n      case 'emojiesSounds': {\n        promise = this.refreshEmojiesSoundsPromise || this.appStickersManager.getAnimatedEmojiSounds(true).then(() => {\n          this.refreshEmojiesSoundsPromise = undefined;\n        });\n        break;\n      }\n\n      case 'userFull': {\n        promise = Promise.resolve(this.appProfileManager.getProfile(context.userId, true));\n        break;\n      }\n\n      case 'customEmoji': {\n        promise = this.appEmojiManager.getCustomEmojiDocuments([context.docId]);\n        break;\n      }\n\n      case 'attachMenuBotIcon': {\n        promise = this.appAttachMenuBotsManager.getAttachMenuBot(context.botId, true) as any;\n        break;\n      }\n\n      case 'wallPaper': {\n        promise = this.appThemesManager.getWallPaperById(context.wallPaperId);\n        break;\n      }\n\n      default: {\n        this.log.warn('refreshReference: not implemented context', context);\n        return Promise.reject();\n      }\n    }\n\n    const hex = bytesToHex(reference);\n    this.log('refreshReference: refreshing reference:', hex);\n    return promise.then(() => {\n      const newHex = bytesToHex(reference);\n      this.log('refreshReference: refreshed, reference before:', hex, 'after:', newHex);\n      if(hex !== newHex) {\n        return reference;\n      }\n\n      this.deleteContext(reference, context);\n\n      const newContext = this.getContext(reference);\n      if(newContext) {\n        return this.refreshReference(reference, newContext[0]);\n      }\n\n      this.log.error('refreshReference: no new context, reference before:', hex, 'after:', newHex, context);\n\n      throw makeError('NO_NEW_CONTEXT');\n    });\n  }\n\n  /* public replaceReference(oldReference: ReferenceBytes, newReference: ReferenceBytes) {\n    const contexts = this.contexts.get(oldReference);\n    if(contexts) {\n      this.contexts.delete(oldReference);\n      this.contexts.set(newReference, contexts);\n    }\n  } */\n}\n","export default function safeReplaceObject(wasObject: any, newObject: any) {\n  if(!wasObject) {\n    return newObject;\n  }\n\n  for(var key in wasObject) {\n    if(!newObject.hasOwnProperty(key)) {\n      delete wasObject[key];\n    }\n  }\n\n  for(var key in newObject) {\n    // if (newObject.hasOwnProperty(key)) { // useless\n    wasObject[key] = newObject[key];\n    // }\n  }\n\n  return wasObject;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport clearMessageId from './clearMessageId';\n\n/**\n * * will ignore outgoing offset\n */\nexport default function getServerMessageId(messageId: number) {\n  return clearMessageId(messageId, true);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {Message, MessageAction, MessageMedia} from '../../../../layer';\nimport getPeerId from '../peers/getPeerId';\n\nexport default function getPeerIdsFromMessage(message: Message.message | Message.messageService) {\n  const peerIds: number[] = [\n    message.fromId,\n    message.viaBotId,\n    (message as Message.message).fwdFromId\n  ];\n\n  const media = (message as Message.message).media;\n  if(media) {\n    const contactUserId = (media as MessageMedia.messageMediaContact).user_id;\n    if(contactUserId !== undefined) {\n      peerIds.push(contactUserId.toPeerId());\n    }\n\n    const results = (media as MessageMedia.messageMediaPoll).results;\n    const recentVoters = results?.recent_voters;\n    if(recentVoters?.length) {\n      peerIds.push(...recentVoters.map((userId) => userId.toPeerId()));\n    }\n  }\n\n  const recentReactions = ((message as Message.message).reactions)?.recent_reactions;\n  if(recentReactions?.length) {\n    peerIds.push(...recentReactions.map((reaction) => getPeerId(reaction.peer_id)));\n  }\n\n  const action = (message as Message.messageService).action;\n  if(action) {\n    const userIds: UserId[] = [\n      ...((action as MessageAction.messageActionChatAddUser).users || []),\n      (action as MessageAction.messageActionChatDeleteUser).user_id,\n      (action as MessageAction.messageActionChatJoinedByLink).inviter_id\n    ];\n    peerIds.push(...userIds.filter(Boolean).map((userId) => userId.toPeerId()));\n\n    const chatIds: ChatId[] = [\n      (action as MessageAction.messageActionChatMigrateTo).channel_id,\n      (action as MessageAction.messageActionChannelMigrateFrom).chat_id\n    ];\n    peerIds.push(...chatIds.filter(Boolean).map((chatId) => chatId.toPeerId(true)));\n  }\n\n  const recentRepliers = ((message as Message.message).replies)?.recent_repliers;\n  if(recentRepliers?.length) {\n    peerIds.push(...recentRepliers.map((reply) => getPeerId(reply)));\n  }\n\n  return new Set(peerIds.filter(Boolean));\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {ForumTopic} from '../../../../layer';\nimport type {Dialog} from '../../appMessagesManager';\nimport type getDialogIndexKey from './getDialogIndexKey';\n\nexport default function setDialogIndex(\n  dialog: Dialog | ForumTopic.forumTopic,\n  indexKey: ReturnType<typeof getDialogIndexKey>,\n  index: number\n) {\n  return (dialog as Dialog)[indexKey] = index;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {Chat, ForumTopic as MTForumTopic, DialogPeer, Message, MessageAction, MessageMedia, MessagesForumTopics, MessagesPeerDialogs, Update, Peer} from '../../layer';\nimport type {Dialog, ForumTopic, MyMessage} from '../appManagers/appMessagesManager';\nimport tsNow from '../../helpers/tsNow';\nimport SearchIndex from '../searchIndex';\nimport {SliceEnd} from '../../helpers/slicedArray';\nimport {MyDialogFilter} from './filters';\nimport {FOLDER_ID_ALL, FOLDER_ID_ARCHIVE, NULL_PEER_ID, REAL_FOLDERS, REAL_FOLDER_ID} from '../mtproto/mtproto_config';\nimport {MaybePromise, NoneToVoidFunction} from '../../types';\nimport ctx from '../../environment/ctx';\nimport AppStorage from '../storage';\nimport type DATABASE_STATE from '../../config/databases/state';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport insertInDescendSortedArray from '../../helpers/array/insertInDescendSortedArray';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport getServerMessageId from '../appManagers/utils/messageId/getServerMessageId';\nimport {AppManager} from '../appManagers/manager';\nimport getDialogIndexKey from '../appManagers/utils/dialogs/getDialogIndexKey';\nimport isObject from '../../helpers/object/isObject';\nimport getDialogIndex from '../appManagers/utils/dialogs/getDialogIndex';\nimport getPeerIdsFromMessage from '../appManagers/utils/messages/getPeerIdsFromMessage';\nimport {AppStoragesManager} from '../appManagers/appStoragesManager';\nimport defineNotNumerableProperties from '../../helpers/object/defineNotNumerableProperties';\nimport setDialogIndex from '../appManagers/utils/dialogs/setDialogIndex';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport pause from '../../helpers/schedulers/pause';\nimport {BroadcastEvents} from '../rootScope';\nimport assumeType from '../../helpers/assumeType';\nimport makeError from '../../helpers/makeError';\nimport callbackify from '../../helpers/callbackify';\n\nexport type FolderDialog = {\n  dialog: Dialog,\n  index: number\n};\n\nexport type Folder = {\n  dialogs: (Dialog | ForumTopic)[],\n  id: number,\n  unreadMessagesCount: number,\n  unreadPeerIds: Set<PeerId>,\n  unreadUnmutedPeerIds: Set<PeerId>,\n  dispatchUnreadTimeout?: number\n};\n\nexport const GLOBAL_FOLDER_ID: REAL_FOLDER_ID = undefined;\n\n// let spentTime = 0;\nexport default class DialogsStorage extends AppManager {\n  private storage: AppStoragesManager['storages']['dialogs'];\n\n  private dialogs: {[peerId: PeerId]: Dialog};\n\n  private folders: {[folderId: number]: Folder};\n\n  private allDialogsLoaded: {[folder_id: number]: boolean};\n  private dialogsOffsetDate: {[folder_id: number]: number};\n  private pinnedOrders: {[folder_id: number]: PeerId[]};\n  private dialogsNum: number;\n\n  private dialogsIndex: SearchIndex<PeerId>;\n\n  private cachedResults: {\n    query: string,\n    count: number,\n    dialogs: Dialog[],\n    folderId: number\n  };\n\n  private forumTopics: Map<PeerId, {\n    topics: Map<number, ForumTopic>,\n    deletedTopics: Set<number>,\n    getTopicPromises: Map<number, CancellablePromise<ForumTopic>>,\n    getTopicsPromise?: Promise<any>\n  }>;\n\n  protected after() {\n    this.clear(true);\n\n    const onFilterUpdate = (filter: MyDialogFilter) => {\n      const dialogs = this.getCachedDialogs(false);\n      for(let i = 0; i < dialogs.length; ++i) {\n        this.processDialogForFilter(dialogs[i], filter);\n      }\n    };\n\n    this.rootScope.addEventListener('filter_order', () => {\n      const dialogs = this.getCachedDialogs(false);\n      // const indexKeys: ReturnType<DialogsStorage['getDialogIndexKey']>[] = [];\n      for(const filterId in this.folders) {\n        if(+filterId > 1) {\n          delete this.folders[filterId];\n        }\n\n        // indexKeys.push(this.getDialogIndexKey(+filterId));\n      }\n\n      for(let i = 0; i < dialogs.length; ++i) {\n        const dialog = dialogs[i];\n        // for(const indexKey of indexKeys) {\n        //   delete dialog[indexKey];\n        // }\n\n        this.processDialogForFilters(dialog);\n      }\n    });\n\n    this.rootScope.addEventListener('filter_update', onFilterUpdate);\n    this.rootScope.addEventListener('filter_new', onFilterUpdate);\n\n    this.rootScope.addEventListener('filter_delete', (filter) => {\n      const dialogs = this.getCachedDialogs(false);\n\n      const indexKey = this.getDialogIndexKeyByFilterId(filter.id);\n      for(let i = 0; i < dialogs.length; ++i) {\n        const dialog = dialogs[i];\n        delete dialog[indexKey];\n      }\n\n      delete this.folders[filter.id];\n    });\n\n    this.rootScope.addEventListener('dialog_notify_settings', (dialog) => {\n      this.processChangedUnreadOrUnmuted(dialog.peerId);\n    });\n\n    this.rootScope.addEventListener('chat_update', (chatId) => {\n      const chat = this.appChatsManager.getChat(chatId);\n\n      const peerId = chatId.toPeerId(true);\n      if((chat as Chat.chat).pFlags.left && this.getDialogOnly(peerId)) {\n        this.dropDialogOnDeletion(peerId);\n      }\n    });\n\n    this.rootScope.addEventListener('chat_toggle_forum', ({chatId, enabled}) => {\n      const peerId = chatId.toPeerId(true);\n      if(!enabled) {\n        this.flushForumTopicsCache(peerId);\n      }\n\n      this.processChangedUnreadOrUnmuted(peerId);\n    });\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateFolderPeers: this.onUpdateFolderPeers,\n\n      updateDialogPinned: this.onUpdateDialogPinned,\n\n      updateChannelPinnedTopic: this.onUpdateChannelPinnedTopic,\n\n      updatePinnedDialogs: this.onUpdatePinnedDialogs,\n\n      updateChannelPinnedTopics: this.onUpdateChannelPinnedTopics\n    });\n\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.appStoragesManager.loadStorage('dialogs')\n    ]).then(([state, {results: dialogs, storage}]) => {\n      this.storage = storage;\n      this.dialogs = this.storage.getCache();\n\n      for(const folderId of REAL_FOLDERS) {\n        const order = state.pinnedOrders[folderId];\n        if(!order) {\n          continue;\n        }\n\n        const _order = this.getPinnedOrders(folderId);\n        _order.splice(0, _order.length, ...order);\n      }\n\n      if(dialogs.length) {\n        AppStorage.freezeSaving<typeof DATABASE_STATE>(this.setDialogsFromState.bind(this, dialogs), ['chats', 'dialogs', 'messages', 'users']);\n      }\n\n      this.allDialogsLoaded = state.allDialogsLoaded || {};\n\n      if(dialogs.length) {\n        this.appDraftsManager.addMissedDialogs();\n      }\n    });\n  }\n\n  public indexMyDialog() {\n    const peerId = this.appUsersManager.getSelf().id.toPeerId(false);\n    const dialog = this.getDialogOnly(peerId);\n    if(dialog) {\n      const peerText = this.appPeersManager.getPeerSearchText(peerId);\n      this.dialogsIndex.indexObject(peerId, peerText);\n    }\n  }\n\n  private setDialogsFromState(dialogs: Dialog[]) {\n    for(let i = 0, length = dialogs.length; i < length; ++i) {\n      const dialog = dialogs[i];\n      if(!dialog) {\n        continue;\n      }\n\n      // if(dialog.peerId !== SERVICE_PEER_ID) {\n      dialog.top_message = getServerMessageId(dialog.top_message); // * fix outgoing message to avoid copying dialog\n      // }\n\n      if(dialog.topMessage) {\n        this.appMessagesManager.saveMessages([dialog.topMessage]);\n      }\n\n      for(let i = 0; i <= 21; ++i) {\n        const indexKey: ReturnType<typeof getDialogIndexKey> = `index_${i}` as any;\n        delete dialog[indexKey];\n      }\n      // delete dialog.indexes;\n\n      this.saveDialog({\n        dialog,\n        ignoreOffsetDate: true\n      });\n\n      // ! WARNING, убрать это когда нужно будет делать чтобы pending сообщения сохранялись\n      const message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n      if(!message) {\n        this.appMessagesManager.reloadConversation(dialog.peerId);\n      }\n    }\n  }\n\n  public isDialogsLoaded(folderId: number) {\n    return !!this.allDialogsLoaded[folderId];\n  }\n\n  public setDialogsLoaded(folderId: number, loaded: boolean) {\n    const isForum = this.isFilterIdForForum(folderId);\n\n    if(folderId === GLOBAL_FOLDER_ID && loaded) {\n      this.allDialogsLoaded[FOLDER_ID_ALL] = loaded;\n      this.allDialogsLoaded[FOLDER_ID_ARCHIVE] = loaded;\n    } else {\n      if(isForum) {\n        defineNotNumerableProperties(this.allDialogsLoaded, [folderId]);\n      }\n\n      this.allDialogsLoaded[folderId] = loaded;\n    }\n\n    if(isForum) {\n      return;\n    }\n\n    if(Array.from(REAL_FOLDERS).every((folderId) => this.allDialogsLoaded[folderId])) {\n      this.allDialogsLoaded[GLOBAL_FOLDER_ID] = true;\n    }\n\n    this.saveAllDialogsLoaded();\n  }\n\n  private saveAllDialogsLoaded() {\n    this.appStateManager.pushToState('allDialogsLoaded', this.allDialogsLoaded);\n  }\n\n  public clear = (init = false) => {\n    if(!init) {\n      this.storage.clear();\n\n      this.allDialogsLoaded = {};\n      this.saveAllDialogsLoaded();\n\n      // * clear not numerable properties\n      this.pinnedOrders = Object.assign({}, this.pinnedOrders);\n      for(const folderId of REAL_FOLDERS) {\n        this.resetPinnedOrder(folderId);\n      }\n      this.savePinnedOrders();\n    } else {\n      this.allDialogsLoaded = {};\n      this.pinnedOrders = {};\n      for(const folderId of REAL_FOLDERS) {\n        this.pinnedOrders[folderId] = [];\n      }\n    }\n\n    this.forumTopics = new Map();\n    this.folders = {};\n    this.dialogsOffsetDate = {};\n    this.dialogsNum = 0;\n    this.dialogsIndex = new SearchIndex({\n      clearBadChars: true,\n      ignoreCase: true,\n      latinize: true,\n      includeTag: true\n    });\n    this.cachedResults = {\n      query: '',\n      count: 0,\n      dialogs: [],\n      folderId: 0\n    };\n  };\n\n  public handleDialogUnpinning(dialog: Dialog | ForumTopic, folderId: number) {\n    delete dialog.pFlags.pinned;\n    indexOfAndSplice(this.getPinnedOrders(folderId), this.isFilterIdForForum(folderId) ? (dialog as ForumTopic).id : dialog.peerId);\n    this.savePinnedOrders();\n  }\n\n  public savePinnedOrders() {\n    this.appStateManager.pushToState('pinnedOrders', this.pinnedOrders);\n  }\n\n  public resetPinnedOrder(folderId: number) {\n    this.getPinnedOrders(folderId).length = 0;\n  }\n\n  public getPinnedOrders(folderId: number) {\n    let orders = this.pinnedOrders[folderId];\n    if(!orders && this.isFilterIdForForum(folderId)) {\n      defineNotNumerableProperties(this.pinnedOrders, [folderId]);\n      orders = this.pinnedOrders[folderId] = [];\n    }\n\n    return orders;\n  }\n\n  public isDialogPinned(peerId: PeerId, folderId: number) {\n    const filter = this.filtersStorage.getFilter(folderId);\n    let isPinned: boolean;\n    if(filter) {\n      isPinned = filter.pinnedPeerIds.indexOf(peerId) !== -1;\n    } else {\n      isPinned = !!this.getDialogOnly(peerId).pFlags.pinned;\n    }\n\n    return isPinned;\n  }\n\n  public getOffsetDate(folderId: number): number {\n    const offsetDate = this.dialogsOffsetDate[folderId] || 0;\n    if(folderId === GLOBAL_FOLDER_ID && !offsetDate) { // make request not from beginning if we have loaded some dialogs\n      return Math.min(...Array.from(REAL_FOLDERS).sort((a, b) => a - b));\n    }\n\n    return offsetDate;\n  }\n\n  private generateFolder(id: number) {\n    const folder: Folder = {\n      dialogs: [],\n      id,\n      unreadMessagesCount: 0,\n      unreadPeerIds: new Set(),\n      unreadUnmutedPeerIds: new Set()\n    };\n\n    defineNotNumerableProperties(folder, ['dispatchUnreadTimeout']);\n\n    return folder;\n  }\n\n  public getFolder(id: number) {\n    return this.folders[id] ??= this.generateFolder(id);\n  }\n\n  public isFilterIdForForum(filterId: number) {\n    return filterId && filterId < 0;\n  }\n\n  public getFilterIdForForum(forumTopic: ForumTopic) {\n    return forumTopic.peerId;\n  }\n\n  public getDialogKey(dialog: Dialog | ForumTopic) {\n    return this.isTopic(dialog) ? dialog.id : dialog.peerId;\n  }\n\n  public getFolderDialogs(id: number, skipMigrated = true): Folder['dialogs'] {\n    if(id === GLOBAL_FOLDER_ID) { // * it won't be sorted\n      return this.getCachedDialogs(skipMigrated);\n    }\n\n    const folder = this.getFolder(id);\n    if(this.isFilterIdForForum(id)) {\n      return skipMigrated ? folder.dialogs.filter((forumTopic) => !(forumTopic as ForumTopic).pFlags.hidden) : folder.dialogs;\n    }\n\n    return skipMigrated ? folder.dialogs.filter((dialog) => (dialog as Dialog).migratedTo === undefined) : folder.dialogs;\n  }\n\n  public getNextDialog(currentPeerId: PeerId, next: boolean, filterId: number) {\n    const folder = this.getFolderDialogs(filterId, true);\n    let dialog: Folder['dialogs'][0];\n    if(!currentPeerId) {\n      if(next) {\n        dialog = folder[0];\n      }\n    } else {\n      const idx = folder.findIndex((dialog) => dialog.peerId === currentPeerId);\n      if(idx !== -1) {\n        const nextIndex = next ? idx + 1 : idx - 1;\n        dialog = folder[nextIndex];\n      }\n    }\n\n    return dialog;\n  }\n\n  public getDialogIndexKeyByFilterId(filterId: number) {\n    if(this.isFilterIdForForum(filterId)) return getDialogIndexKey();\n    if(REAL_FOLDERS.has(filterId)) return getDialogIndexKey(filterId as REAL_FOLDER_ID);\n    const filter = this.filtersStorage.getFilter(filterId);\n    return getDialogIndexKey(filter.localId);\n  }\n\n  private isDialogUnmuted(dialog: Dialog | ForumTopic) {\n    return !this.appNotificationsManager.isPeerLocalMuted({\n      peerId: dialog.peerId,\n      respectType: true,\n      threadId: this.isTopic(dialog) ? (dialog as ForumTopic).id : undefined\n    });\n  }\n\n  public getFolderUnreadCount(filterId: number) {\n    const folder = this.getFolder(filterId);\n    return {unreadUnmutedCount: folder.unreadUnmutedPeerIds.size, unreadCount: folder.unreadPeerIds.size};\n  }\n\n  public getCachedDialogs(skipMigrated?: boolean) {\n    const arrays = Array.from(REAL_FOLDERS).map((folderId) => this.getFolderDialogs(folderId, skipMigrated));\n    return [].concat(...arrays) as Dialog[];\n  }\n\n  private setDialogIndexInFilter(\n    dialog: Dialog | ForumTopic,\n    indexKey: ReturnType<typeof getDialogIndexKey>,\n    filter?: MyDialogFilter\n  ) {\n    // if(this.isTopic(dialog)) {\n    //   return dialog['index_0'];\n    // }\n\n    let index: number;\n\n    const isTopic = this.isTopic(dialog);\n    const isRealFolder = isTopic || REAL_FOLDERS.has(filter.id);\n    /* if(isRealFolder) {\n      // index = getDialogIndex(dialog, indexKey);\n      index = this.generateIndexForDialog(dialog, true);\n    } else  */if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\n      const pinnedIds = isTopic ?\n        this.getPinnedOrders(this.getFilterIdForForum(dialog)) :\n        filter.pinnedPeerIds;\n\n      const pinnedKey = this.getDialogKey(dialog);\n      const pinnedIndex = pinnedIds.indexOf(pinnedKey);\n\n      if(pinnedIndex !== -1) {\n        index = this.generateDialogIndex(this.generateDialogPinnedDateByIndex(pinnedIds.length - 1 - pinnedIndex), true);\n      } else if(dialog.pFlags?.pinned || isRealFolder) {\n        index = this.generateIndexForDialog(dialog, true, undefined, !isRealFolder);\n      } else {\n        index = getDialogIndex(dialog) ?? this.generateIndexForDialog(dialog, true);\n      }\n    }\n\n    // if(!dialog.hasOwnProperty(indexKey)) {\n    //   defineNotNumerableProperties(dialog, [indexKey]);\n    // }\n\n    return setDialogIndex(dialog, indexKey, index);\n  }\n\n  public getDialog(peerId: PeerId, folderId?: number, topicId?: number, skipMigrated = true): [Folder['dialogs'][0], number] | [] {\n    const folders: Folder['dialogs'][] = [];\n\n    if(topicId) {\n      folderId = peerId;\n      // skipMigrated = false;\n    }\n\n    if(folderId === undefined) {\n      folders.push(...Array.from(REAL_FOLDERS).map((folderId) => this.getFolder(folderId).dialogs as Dialog[]));\n    } else {\n      folders.push(this.getFolderDialogs(folderId, false) as Dialog[]);\n    }\n\n    const verify: (d: Folder['dialogs'][0]) => boolean = topicId ?\n      (d) => (d as ForumTopic).id === topicId :\n      (d) => (d as Dialog).peerId === peerId;\n    for(const folder of folders) {\n      let i = 0, skipped = 0;\n      for(let length = folder.length; i < length; ++i) {\n        const dialog = folder[i];\n        if(verify(dialog)) {\n          return [dialog, i - skipped];\n        } else if(skipMigrated && ((dialog as ForumTopic).pFlags.hidden || (dialog as Dialog).migratedTo !== undefined)) {\n          ++skipped;\n        }\n      }\n    }\n\n    return [];\n  }\n\n  public getDialogOnly(peerId: PeerId) {\n    return this.dialogs[peerId];\n  }\n\n  public getDialogOrTopic(peerId: PeerId, topicId?: number) {\n    return topicId ? this.getForumTopic(peerId, topicId) : this.dialogs[peerId];\n  }\n\n  public getDialogIndex(\n    peerId: PeerId | Parameters<typeof getDialogIndex>[0],\n    indexKey: ReturnType<typeof getDialogIndexKey>,\n    topicId?: number\n  ) {\n    const dialog = isObject(peerId) ? peerId : this.getDialogOrTopic(peerId, topicId);\n    return getDialogIndex(dialog, indexKey);\n  }\n\n  /*\n  var date = Date.now() / 1000 | 0;\n  var m = date * 0x10000;\n\n  var k = (date + 1) * 0x10000;\n  k - m;\n  65536\n  */\n  public generateDialogIndex(date?: number, isPinned?: boolean) {\n    date ??= tsNow(true) + this.timeManager.getServerTimeOffset();\n    return (date * 0x10000) + (isPinned ? 0 : (++this.dialogsNum & 0xFFFF));\n  }\n\n  // public makeFilterForTopics(id: number): MyDialogFilter {\n  //   return {\n  //     _: 'dialogFilter',\n  //     id,\n\n  //   };\n  // }\n\n  public isTopic(dialog: Dialog | ForumTopic): dialog is ForumTopic {\n    return 'id' in dialog;\n  }\n\n  public processDialogForFilters(dialog: Dialog | ForumTopic, noIndex?: boolean) {\n    // let perf = performance.now();\n    if(this.isTopic(dialog)) {\n      this.processDialogForFilter(dialog, undefined, noIndex);\n      return;\n    }\n\n    const filters = this.filtersStorage.getFilters();\n    for(const id in filters) {\n      const filter = filters[id];\n      this.processDialogForFilter(dialog, filter, noIndex);\n    }\n    // spentTime += (performance.now() - perf);\n    // console.log('generate index time:', spentTime);\n  }\n\n  public processDialogForFilter(\n    dialog: Dialog | ForumTopic,\n    filter?: MyDialogFilter,\n    noIndex?: boolean\n  ) {\n    const isTopic = this.isTopic(dialog);\n    const folderId = isTopic ? this.getFilterIdForForum(dialog) : filter.id;\n\n    const indexKey = isTopic ? 'index_0' : this.getDialogIndexKeyByFilterId(folderId);\n    const folder = this.getFolder(folderId);\n    const dialogs = folder.dialogs;\n\n    const cmp: (d: typeof dialog) => boolean = isTopic ?\n      ((d: ForumTopic) => d.id === dialog.id) as any :\n      ((d: Dialog) => d.peerId === dialog.peerId) as any;\n    const wasIndex = dialogs.findIndex(cmp);\n    const wasDialog = dialogs[wasIndex];\n    const wasDialogIndex = this.getDialogIndex(wasDialog, indexKey);\n\n    if(noIndex && folderId > FOLDER_ID_ARCHIVE) {\n      noIndex = undefined;\n    }\n\n    const newDialogIndex = noIndex ? undefined : this.setDialogIndexInFilter(dialog, indexKey, filter);\n\n    if(wasDialogIndex === newDialogIndex) {\n      return false;\n    }\n\n    if(!!wasDialogIndex !== !!newDialogIndex) {\n      this.prepareFolderUnreadCountModifyingByDialog(folderId, dialog, !!newDialogIndex);\n    }\n\n    if(wasIndex !== -1) {\n      dialogs.splice(wasIndex, 1);\n    }\n\n    if(newDialogIndex) {\n      insertInDescendSortedArray(dialogs, dialog, (dialog) => this.getDialogIndex(dialog, indexKey), -1);\n    }\n\n    return true;\n  }\n\n  public prepareDialogUnreadCountModifying(dialog: Dialog | ForumTopic, toggle?: boolean) {\n    const isTopic = this.isTopic(dialog);\n    const callbacks: NoneToVoidFunction[] = [];\n\n    const folderId = isTopic ? this.getFilterIdForForum(dialog) : dialog.folder_id;\n    callbacks.push(this.prepareFolderUnreadCountModifyingByDialog(folderId, dialog, toggle));\n\n    if(!isTopic) {\n      const filters = this.filtersStorage.getFilters();\n      for(const id in filters) {\n        const filter = filters[id];\n        if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\n          callbacks.push(this.prepareFolderUnreadCountModifyingByDialog(filter.id, dialog, toggle));\n        }\n      }\n    }\n\n    return () => !toggle && callbacks.forEach((callback) => callback());\n  }\n\n  public prepareFolderUnreadCountModifyingByDialog(folderId: number, dialog: Dialog | ForumTopic, toggle?: boolean) {\n    const wasUnreadCount = this.appMessagesManager.getDialogUnreadCount(dialog);\n    const wasUnmuted = this.isDialogUnmuted(dialog);\n\n    if(toggle !== undefined) {\n      const addMessagesCount = toggle ? wasUnreadCount : -wasUnreadCount;\n      this.modifyFolderUnreadCount(folderId, addMessagesCount, !!wasUnreadCount, wasUnreadCount && wasUnmuted, dialog);\n      return;\n    }\n\n    return () => {\n      const newUnreadCount = this.appMessagesManager.getDialogUnreadCount(dialog);\n      const newUnmuted = this.isDialogUnmuted(dialog);\n\n      const addMessagesCount = newUnreadCount - wasUnreadCount;\n      this.modifyFolderUnreadCount(folderId, addMessagesCount, !!newUnreadCount, newUnreadCount && newUnmuted, dialog);\n    };\n  }\n\n  public modifyFolderUnreadCount(\n    folderId: number,\n    addMessagesCount: number,\n    toggleDialog: boolean,\n    toggleUnmuted: boolean,\n    dialog: Dialog | ForumTopic\n  ) {\n    const {peerId} = dialog;\n    const isForum = this.appPeersManager.isForum(peerId);\n    const isTopic = this.isTopic(dialog);\n    if(isForum && !isTopic) {\n      const forumUnreadCount = this.getForumUnreadCount(peerId);\n      if(forumUnreadCount instanceof Promise) {\n        forumUnreadCount.then(({count, hasUnmuted}) => {\n          dialog = this.getDialogOnly(peerId);\n          const folder = this.getFolder(folderId);\n          if(\n            !dialog ||\n            !this.appPeersManager.isForum(peerId) ||\n            !folder ||\n            !folder.dialogs.some((dialog) => dialog.peerId === peerId)\n          ) {\n            return;\n          }\n\n          this.modifyFolderUnreadCount(folderId, 0, false, false, dialog);\n        });\n\n        return;\n      } else {\n        addMessagesCount = 0;\n        toggleDialog = forumUnreadCount.count > 0;\n        toggleUnmuted = forumUnreadCount.hasUnmuted;\n      }\n    }\n\n    const folder = this.getFolder(folderId);\n    if(addMessagesCount) {\n      folder.unreadMessagesCount = Math.max(0, folder.unreadMessagesCount + addMessagesCount);\n    }\n\n    const key = this.getDialogKey(dialog);\n    if(toggleDialog) {\n      folder.unreadPeerIds.add(key);\n    } else {\n      folder.unreadPeerIds.delete(key);\n    }\n\n    if(toggleUnmuted) {\n      folder.unreadUnmutedPeerIds.add(key);\n    } else {\n      folder.unreadUnmutedPeerIds.delete(key);\n    }\n\n    folder.dispatchUnreadTimeout ??= ctx.setTimeout(() => {\n      folder.dispatchUnreadTimeout = undefined;\n      const _folder = {...folder};\n      delete _folder.dialogs;\n      this.rootScope.dispatchEvent('folder_unread', _folder);\n\n      if(isTopic) { // * refresh forum dialog unread count\n        this.processChangedUnreadOrUnmuted(peerId);\n      }\n    }, 0);\n  }\n\n  public processChangedUnreadOrUnmuted(peerId: PeerId) {\n    const dialog = this.getDialogOnly(peerId);\n    if(dialog) {\n      this.processDialogForFilters(dialog);\n      this.prepareDialogUnreadCountModifying(dialog)();\n      this.rootScope.dispatchEvent('dialog_unread', {\n        peerId,\n        dialog\n      });\n    }\n  }\n\n  public generateIndexForDialog(\n    dialog: Dialog | ForumTopic,\n    justReturn?: boolean,\n    message?: MyMessage,\n    noPinnedOrderUpdate?: boolean\n  ) {\n    if(!justReturn/*  && !isTopic */) {\n      return;\n    }\n\n    const isTopic = this.isTopic(dialog);\n    let topDate = 0, isPinned: boolean;\n    if((dialog as ForumTopic).pFlags.hidden) { // general topic must be first\n      topDate = this.generateDialogPinnedDateByIndex(0xFFF);\n      isPinned = true;\n    } else if(dialog.pFlags.pinned && !noPinnedOrderUpdate) {\n      topDate = this.generateDialogPinnedDate(dialog);\n      isPinned = true;\n    } else {\n      message ||= this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n\n      topDate = (message as Message.message)?.date || topDate;\n\n      if(!isTopic) {\n        const channelId = this.appPeersManager.isChannel(dialog.peerId) && dialog.peerId.toChatId();\n        if(channelId) {\n          const channel = this.appChatsManager.getChat(channelId) as Chat.channel;\n          if(!topDate || (channel.date && channel.date > topDate)) {\n            topDate = channel.date;\n          }\n        }\n      }\n\n      if(dialog.draft?._ === 'draftMessage' && dialog.draft.date > topDate) {\n        topDate = dialog.draft.date;\n      }\n    }\n\n    topDate ||= tsNow(true);\n\n    const index = this.generateDialogIndex(topDate, isPinned);\n    if(justReturn) {\n      return index;\n    }\n\n    const indexKey = getDialogIndexKey((dialog as Dialog).folder_id);\n    setDialogIndex(dialog, indexKey, index);\n  }\n\n  public generateDialogPinnedDateByIndex(pinnedIndex: number) {\n    return 0x7fff0000 + (pinnedIndex & 0xFFFF); // 0xFFFF - потому что в папках может быть бесконечное число пиннедов\n  }\n\n  public generateDialogPinnedDate(dialog: Dialog | ForumTopic) {\n    const isTopic = this.isTopic(dialog);\n    const order = this.getPinnedOrders(isTopic ? this.getFilterIdForForum(dialog) : dialog.folder_id);\n\n    const dialogKey = this.getDialogKey(dialog);\n    let pinnedIndex = order.indexOf(dialogKey);\n    if(pinnedIndex === -1) {\n      order.unshift(dialogKey);\n      pinnedIndex = 0;\n\n      if(!isTopic) {\n        this.savePinnedOrders();\n      }\n    }\n\n    return this.generateDialogPinnedDateByIndex(order.length - 1 - pinnedIndex);\n  }\n\n  /* public generateDialog(peerId: PeerId) {\n    const dialog: Dialog = {\n      _: 'dialog',\n      pFlags: {},\n      peer: this.appPeersManager.getOutputPeer(peerId),\n      top_message: 0,\n      read_inbox_max_id: 0,\n      read_outbox_max_id: 0,\n      unread_count: 0,\n      unread_mentions_count: 0,\n      notify_settings: {\n        _: 'peerNotifySettings',\n      },\n    };\n\n    return dialog;\n  } */\n\n  public setDialogToState(dialog: Dialog | ForumTopic) {\n    if(this.isTopic(dialog)) {\n      return;\n    }\n\n    const {peerId, pts} = dialog;\n    const historyStorage = this.appMessagesManager.getHistoryStorage(peerId);\n    const messagesStorage = this.appMessagesManager.getHistoryMessagesStorage(peerId);\n    const history = historyStorage.history.slice;\n    let incomingMessage: MyMessage;\n    for(let i = 0, length = history.length; i < length; ++i) {\n      const mid = history[i];\n      const message: MyMessage = this.appMessagesManager.getMessageFromStorage(messagesStorage, mid);\n      if(message && !message.pFlags.is_outgoing/*  || peerId === SERVICE_PEER_ID */) {\n        incomingMessage = message;\n\n        const peerIds = getPeerIdsFromMessage(message);\n        this.peersStorage.requestPeersForKey(peerIds, `topMessage_${peerId}`);\n\n        break;\n      }\n    }\n\n    dialog.topMessage = incomingMessage;\n\n    // DO NOT TOUCH THESE LINES, SOME REAL MAGIC HERE.\n    // * Read service chat when refreshing page with outgoing & getting new service outgoing message\n    /* if(incomingMessage && dialog.read_inbox_max_id >= dialog.top_message) {\n      dialog.unread_count = 0;\n    }\n\n    dialog.read_inbox_max_id = this.appMessagesIdsManager.clearMessageId(dialog.read_inbox_max_id);\n    dialog.read_outbox_max_id = this.appMessagesIdsManager.clearMessageId(dialog.read_outbox_max_id); */\n    // CAN TOUCH NOW\n\n    if(peerId.isAnyChat() && pts) {\n      const newPts = this.apiUpdatesManager.getChannelState(peerId.toChatId(), pts).pts;\n      dialog.pts = newPts;\n    }\n\n    this.storage.set({\n      [peerId]: dialog\n    });\n\n    this.peersStorage.requestPeer(peerId, 'dialog');\n\n    /* for(let id in this.filtersStorage.filters) {\n      const filter = this.filtersStorage.filters[id];\n\n      if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\n\n      }\n    } */\n  }\n\n  public pushDialog({dialog, offsetDate, ignoreOffsetDate, saveGlobalOffset}: {\n    dialog: Dialog | ForumTopic,\n    offsetDate?: number,\n    ignoreOffsetDate?: boolean,\n    saveGlobalOffset?: boolean\n  }) {\n    const isTopic = this.isTopic(dialog);\n    const {folder_id, peerId} = dialog as Dialog;\n\n    if(isTopic) {\n      const forumTopics = this.getForumTopicsCache(peerId);\n      forumTopics.topics.set(dialog.id, dialog);\n    } else {\n      this.dialogs[peerId] = dialog;\n    }\n\n    offsetDate ??= this.getDialogOffsetDate(dialog);\n\n    // if(!isTopic) {\n    this.processDialogForFilters(dialog);\n    // }\n\n    if(offsetDate && !dialog.pFlags.pinned) {\n      if(!isTopic && saveGlobalOffset) {\n        const savedGlobalOffsetDate = this.dialogsOffsetDate[GLOBAL_FOLDER_ID];\n        if(!savedGlobalOffsetDate || offsetDate < savedGlobalOffsetDate) {\n          this.dialogsOffsetDate[GLOBAL_FOLDER_ID] = offsetDate;\n        }\n      }\n\n      const folderId = isTopic ? this.getFilterIdForForum(dialog) : folder_id;\n      const savedOffsetDate = this.dialogsOffsetDate[folderId];\n      if(!savedOffsetDate || offsetDate < savedOffsetDate) {\n        // if(pos !== -1) {\n        if(!ignoreOffsetDate && !this.isDialogsLoaded(folderId)) {\n          this.dropDialog(peerId, isTopic ? this.getDialogKey(dialog) : undefined, true);\n          return;\n        }\n\n        this.dialogsOffsetDate[folderId] = offsetDate;\n      }\n    }\n\n    this.setDialogToState(dialog);\n\n    // if(pos === -1) {\n    // this.prepareFolderUnreadCountModifyingByDialog(folder_id, dialog, true);\n    // }\n\n    // const indexKey = getDialogIndexKey(folder_id);\n    // /* const newPos =  */insertInDescendSortedArray(dialogs, dialog, (dialog) => getDialogIndex(dialog, indexKey), -1);\n    /* if(pos !== -1 && pos !== newPos) {\n      rootScope.dispatchEvent('dialog_order', {dialog, pos: newPos});\n    } */\n  }\n\n  public dropDialogFromFolders(peerId: PeerId, topicId?: number) {\n    const foundDialog = this.getDialog(peerId, undefined, topicId, false);\n    const [dialog, index] = foundDialog;\n    if(dialog) {\n      const filterId = topicId ?\n        this.getFilterIdForForum(dialog as ForumTopic) :\n        (dialog as Dialog).folder_id;\n\n      // const folder = this.getFolder(filterId);\n      // folder.dialogs.splice(index, 1);\n      const wasPinned = indexOfAndSplice(this.getPinnedOrders(filterId), this.getDialogKey(dialog)) !== undefined;\n\n      this.processDialogForFilters(dialog, true);\n\n      this.dialogsIndex.indexObject(peerId, '');\n\n      if(wasPinned) {\n        this.savePinnedOrders();\n      }\n    }\n\n    return foundDialog;\n  }\n\n  public dropDialog(peerId: PeerId, topicId?: number, keepLocal?: boolean) {\n    const dialog = this.getDialogOrTopic(peerId, topicId);\n    const foundDialog = this.dropDialogFromFolders(peerId, topicId);\n    if(dialog) {\n      if(!keepLocal) {\n        if(topicId) {\n          this.getForumTopicsCache(peerId).topics.delete(topicId);\n        } else {\n          delete this.dialogs[peerId];\n        }\n      }\n\n      this.clearDialogFromState(dialog, keepLocal);\n    }\n\n    return foundDialog;\n  }\n\n  public clearDialogFromState(dialog: Dialog | ForumTopic, keepLocal: boolean) {\n    if(dialog._ === 'forumTopic') {\n      return;\n    }\n\n    const {peerId} = dialog;\n    this.peersStorage.requestPeersForKey([], `topMessage_${peerId}`);\n    this.peersStorage.releasePeer(peerId, 'dialog');\n    this.storage.delete(peerId, keepLocal);\n  }\n\n  public dropDialogWithEvent(peerId: PeerId, topicId?: number) {\n    const dropped = this.dropDialog(peerId, topicId);\n    if(dropped.length) {\n      this.rootScope.dispatchEvent('dialog_drop', dropped[0]);\n    }\n\n    return dropped;\n  }\n\n  /**\n   * leaving chat, leaving channel, deleting private dialog\n   */\n  public dropDialogOnDeletion(peerId: PeerId, topicId?: number) {\n    this.dropDialogWithEvent(peerId, topicId);\n    this.rootScope.dispatchEvent('peer_deleted', peerId);\n  }\n\n  public applyDialogs(result: MessagesPeerDialogs | MessagesForumTopics, peerId?: PeerId) {\n    // * В эту функцию попадут только те диалоги, в которых есть read_inbox_max_id и read_outbox_max_id, в отличие от тех, что будут в getTopMessages\n\n    const isForum = result._ === 'messages.forumTopics';\n    const items = (result as MessagesPeerDialogs).dialogs || (result as MessagesForumTopics).topics;\n    if(!isForum) {\n      // ! fix 'dialogFolder', maybe there is better way to do it, this only can happen by 'messages.getPinnedDialogs' by folder_id: 0\n      forEachReverse(result.dialogs, (dialog, idx) => {\n        if(dialog._ === 'dialogFolder') {\n          result.dialogs.splice(idx, 1);\n        }\n      });\n    } else {\n      this.processTopics(peerId, result);\n    }\n\n    assumeType<Folder['dialogs']>(items);\n\n    this.appUsersManager.saveApiUsers(result.users);\n    this.appChatsManager.saveApiChats(result.chats);\n    this.appMessagesManager.saveMessages(result.messages);\n\n    // this.appMessagesManager.log('applyConversation', dialogsResult);\n\n    const updatedDialogs: BroadcastEvents['dialogs_multiupdate'] = new Map();\n    const getUpdateCache = (peerId: PeerId) => {\n      let cache = updatedDialogs.get(peerId);\n      if(!cache) {\n        updatedDialogs.set(peerId, cache = {});\n      }\n\n      return cache;\n    };\n\n    items.forEach((dialog) => {\n      const peerId = this.appPeersManager.getPeerId(dialog.peer);\n      let topMid = dialog.top_message;\n\n      const topPendingMid = this.appMessagesManager.pendingTopMsgs[peerId];\n      if(topPendingMid) {\n        const topPendingMessage = this.appMessagesManager.getMessageByPeer(peerId, topPendingMid) as MyMessage;\n        const topMessage = this.appMessagesManager.getMessageByPeer(peerId, topMid) as MyMessage;\n        if(!topMid || (topPendingMessage && (!topMessage || topPendingMessage?.date > topMessage?.date))) {\n          dialog.top_message = topMid = topPendingMid;\n          this.appMessagesManager.getHistoryStorage(peerId).maxId = topPendingMid;\n        }\n      }\n\n      /* const d = Object.assign({}, dialog);\n      if(peerId === 239602833) {\n        this.log.error('applyConversation lun', dialog, d);\n      } */\n\n      if(topMid || dialog.draft?._ === 'draftMessage') {\n        if(this.saveDialog({dialog})) {\n          const cache = getUpdateCache(peerId);\n\n          if(isForum) {\n            (cache.topics ??= new Map()).set(\n              (dialog as ForumTopic).id,\n              dialog as ForumTopic\n            );\n          } else {\n            cache.dialog = dialog as Dialog;\n          }\n        }\n      } else {\n        this.dropDialogWithEvent(peerId, isForum ? this.getDialogKey(dialog) : undefined);\n      }\n\n      const key = this.appMessagesManager.getUpdateAfterReloadKey(peerId, isForum ? this.getDialogKey(dialog) : undefined);\n      const updates = this.appMessagesManager.newUpdatesAfterReloadToHandle[key];\n      if(updates !== undefined) {\n        for(const update of updates) {\n          updates.delete(update);\n          this.apiUpdatesManager.saveUpdate(update);\n        }\n\n        if(!updates.size) {\n          delete this.appMessagesManager.newUpdatesAfterReloadToHandle[key];\n        }\n      }\n    });\n\n    if(updatedDialogs.size) {\n      this.rootScope.dispatchEvent('dialogs_multiupdate', updatedDialogs);\n    }\n  }\n\n  private getDialogOffsetDate(dialog: Dialog | ForumTopic) {\n    const message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n    return message?.date || 0;\n  }\n\n  public canSaveDialogByPeerId(peerId: PeerId) {\n    if(peerId.isAnyChat()) {\n      const chat: Chat = this.appChatsManager.getChat(peerId.toChatId());\n      // ! chatForbidden stays for chat where you're kicked\n      if(\n        chat._ === 'channelForbidden' ||\n        // || chat._ === 'chatForbidden'\n        (chat as Chat.chat).pFlags.left\n        // || (chat as any).pFlags.kicked\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Won't save migrated from peer, forbidden peers, left and kicked\n   */\n  public saveDialog({\n    dialog,\n    folderId,\n    ignoreOffsetDate,\n    saveGlobalOffset\n  }: {\n    dialog: Dialog | ForumTopic,\n    folderId?: REAL_FOLDER_ID,\n    ignoreOffsetDate?: boolean,\n    saveGlobalOffset?: boolean\n  }) {\n    const isTopic = this.isTopic(dialog);\n    const isDialog = !isTopic;\n\n    const peerId = this.appPeersManager.getPeerId(dialog.peer);\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\n\n    const topicId = isTopic ? dialog.id = this.appMessagesIdsManager.generateMessageId(dialog.id, channelId) : undefined;\n    if(!isTopic) {\n      folderId ??= dialog.folder_id ?? FOLDER_ID_ALL;\n    }\n\n    if(!peerId) {\n      console.error('saveConversation no peerId???', dialog, folderId);\n      return false;\n    }\n\n    if(!isTopic && dialog._ !== 'dialog'/*  || peerId === 239602833 */) {\n      console.error('saveConversation not regular dialog', dialog, Object.assign({}, dialog));\n    }\n\n    if(isDialog && !this.canSaveDialogByPeerId(peerId)) {\n      return false;\n    }\n\n    if(isDialog && !channelId && peerId.isAnyChat()) {\n      const chat = this.appChatsManager.getChat(peerId.toChatId()) as Chat.chat;\n      if(chat && chat.migrated_to && chat.pFlags.deactivated) {\n        const migratedToPeer = this.appPeersManager.getPeerId(chat.migrated_to);\n        this.appMessagesManager.migratedFromTo[peerId] = migratedToPeer;\n        this.appMessagesManager.migratedToFrom[migratedToPeer] = peerId;\n        dialog.migratedTo = migratedToPeer;\n        // return;\n      }\n    }\n\n    if(isDialog && !dialog.migratedTo) {\n      const peerText = this.appPeersManager.getPeerSearchText(peerId);\n      this.dialogsIndex.indexObject(peerId, peerText);\n    }\n\n    const wasDialogBefore = this.getDialogOrTopic(peerId, topicId);\n\n    let mid: number, message: MyMessage;\n    if(dialog.top_message) {\n      mid = this.appMessagesIdsManager.generateMessageId(dialog.top_message, channelId);// dialog.top_message;\n\n      // preserve outgoing message\n      const wasTopMessage = wasDialogBefore?.top_message && this.appMessagesManager.getMessageByPeer(peerId, wasDialogBefore.top_message) as MyMessage;\n      if(wasTopMessage?.pFlags?.is_outgoing && wasDialogBefore.top_message >= mid) {\n        mid = wasDialogBefore.top_message;\n      }\n\n      message = this.appMessagesManager.getMessageByPeer(peerId, mid);\n    } else {\n      mid = this.appMessagesManager.generateTempMessageId(peerId);\n      message = {\n        _: 'message',\n        id: mid,\n        mid,\n        from_id: this.appPeersManager.getOutputPeer(this.appUsersManager.getSelf().id.toPeerId(false)),\n        peer_id: this.appPeersManager.getOutputPeer(peerId),\n        deleted: true,\n        pFlags: {out: true},\n        date: 0,\n        message: ''\n      };\n      this.appMessagesManager.saveMessages([message], {isOutgoing: true});\n    }\n\n    if(!message?.pFlags) {\n      this.appMessagesManager.log.error('saveConversation no message:', dialog, message);\n    }\n\n    dialog.top_message = mid;\n    // dialog.unread_count = wasDialogBefore && dialog.read_inbox_max_id === getServerMessageId(wasDialogBefore.read_inbox_max_id) ? wasDialogBefore.unread_count : dialog.unread_count;\n    dialog.read_inbox_max_id = this.appMessagesIdsManager.generateMessageId(wasDialogBefore && !dialog.read_inbox_max_id ? wasDialogBefore.read_inbox_max_id : dialog.read_inbox_max_id, channelId);\n    dialog.read_outbox_max_id = this.appMessagesIdsManager.generateMessageId(wasDialogBefore && !dialog.read_outbox_max_id ? wasDialogBefore.read_outbox_max_id : dialog.read_outbox_max_id, channelId);\n\n    if(isDialog && dialog.folder_id === undefined) {\n      if(dialog._ === 'dialog') {\n        // ! СЛОЖНО ! СМОТРИ В getTopMessages\n        dialog.folder_id = wasDialogBefore ? (wasDialogBefore as typeof dialog).folder_id : folderId;\n      }/*  else if(dialog._ === 'dialogFolder') {\n        dialog.folder_id = dialog.folder.id;\n      } */\n    }\n\n    dialog.draft = this.appDraftsManager.saveDraft({peerId, threadId: topicId, draft: dialog.draft});\n    dialog.peerId = peerId;\n    // dialog.indexes ??= {} as any;\n\n    // Because we saved message without dialog present\n    if(message && message.pFlags.is_outgoing) {\n      const isOut = message.pFlags.out;\n      if(mid > dialog[isOut ? 'read_outbox_max_id' : 'read_inbox_max_id']) {\n        message.pFlags.unread = true;\n\n        if(!dialog.unread_count && !isOut) {\n          ++dialog.unread_count;\n        }\n      } else {\n        delete message.pFlags.unread;\n      }\n    }\n\n    const historyStorage = this.appMessagesManager.getHistoryStorage(peerId, topicId);\n    const slice = historyStorage.history.slice;\n    /* if(historyStorage === undefined) { // warning\n      historyStorage.history.push(mid);\n    } else  */if(!slice.length) {\n      historyStorage.history.unshift(mid);\n      historyStorage.count ||= 1;\n      if(this.appMessagesManager.mergeReplyKeyboard(historyStorage, message)) {\n        this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n      }\n    } else if(!slice.isEnd(SliceEnd.Bottom)) { // * this will probably never happen, however, if it does, then it will fix slice with top_message\n      const slice = historyStorage.history.insertSlice([mid]);\n      slice.setEnd(SliceEnd.Bottom);\n      historyStorage.count ||= 1;\n      if(this.appMessagesManager.mergeReplyKeyboard(historyStorage, message)) {\n        this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n      }\n    }\n\n    historyStorage.maxId = mid;\n    historyStorage.readMaxId = dialog.read_inbox_max_id;\n    historyStorage.readOutboxMaxId = dialog.read_outbox_max_id;\n\n    this.appNotificationsManager.savePeerSettings({\n      peerId,\n      threadId: isTopic ? dialog.id : undefined,\n      settings: dialog.notify_settings\n    });\n\n    if(isDialog && channelId && dialog.pts) {\n      this.apiUpdatesManager.addChannelState(channelId, dialog.pts);\n    }\n\n    this.generateIndexForDialog(dialog);\n\n    if(wasDialogBefore) {\n      // fix unread count\n      const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(wasDialogBefore);\n      safeReplaceObject(wasDialogBefore, dialog);\n      releaseUnreadCount();\n    }\n\n    this.pushDialog({\n      dialog,\n      offsetDate: message?.date,\n      ignoreOffsetDate,\n      saveGlobalOffset\n    });\n\n    if(isTopic) {\n      this.processTopicUpdate(dialog, wasDialogBefore as ForumTopic);\n    }\n\n    return true;\n  }\n\n  public processTopicUpdate(topic: ForumTopic, oldTopic?: ForumTopic) {\n    if(!oldTopic) {\n      return;\n    }\n\n    const {peerId, id: threadId} = topic;\n    const isIconChanged = topic.icon_emoji_id !== (oldTopic as ForumTopic).icon_emoji_id;\n    const isTitleChanged = topic.title !== (oldTopic as ForumTopic).title;\n    const isChanged = isIconChanged || isTitleChanged;\n\n    if(isIconChanged) {\n      this.rootScope.dispatchEvent('avatar_update', {peerId, threadId});\n    }\n\n    if(isChanged) {\n      this.rootScope.dispatchEvent('peer_title_edit', {peerId, threadId});\n    }\n  }\n\n  public getDialogs(options: {\n    query?: string,\n    offsetIndex?: number,\n    limit?: number,\n    filterId?: number,\n    skipMigrated?: boolean\n  }): MaybePromise<{\n    dialogs: Folder['dialogs'],\n    count: number,\n    isTopEnd: boolean,\n    isEnd: boolean\n  }> {\n    const {\n      query = '',\n      offsetIndex,\n      limit = 20,\n      filterId = FOLDER_ID_ALL,\n      skipMigrated = false\n    } = options;\n\n    const isForum = this.isFilterIdForForum(filterId);\n    if(!isForum && !REAL_FOLDERS.has(filterId)) {\n      const promises: Promise<any>[] = [];\n\n      const fillContactsResult = this.appUsersManager.fillContacts();\n      if(!fillContactsResult.cached) {\n        promises.push(fillContactsResult.promise);\n      }\n\n      const reloadMissingDialogsPromise = this.filtersStorage.reloadMissingPeerIds(filterId);\n      if(reloadMissingDialogsPromise) {\n        promises.push(reloadMissingDialogsPromise);\n      }\n\n      if(promises.length) {\n        return Promise.all(promises).then(() => {\n          return this.getDialogs(options);\n        });\n      }\n    }\n\n    // let's load only first pages by certain folderId. next pages will load without folder filtering\n    const realFolderId/* : REAL_FOLDER_ID */ =\n      (!REAL_FOLDERS.has(filterId) || this.getOffsetDate(filterId)) && !isForum ?\n        GLOBAL_FOLDER_ID :\n        filterId/*  as REAL_FOLDER_ID */;\n    let curDialogStorage = this.getFolderDialogs(filterId, skipMigrated);\n\n    const indexKey = this.getDialogIndexKeyByFilterId(filterId);\n\n    if(query && !isForum) {\n      if(!limit || this.cachedResults.query !== query || this.cachedResults.folderId !== filterId) {\n        this.cachedResults.query = query;\n        this.cachedResults.folderId = filterId;\n\n        const results = this.dialogsIndex.search(query);\n\n        const dialogs: Dialog[] = [];\n        for(const peerId in this.dialogs) {\n          const dialog = this.dialogs[peerId];\n          if(results.has(dialog.peerId) && dialog.folder_id === filterId) {\n            dialogs.push(dialog);\n          }\n        }\n\n        dialogs.sort((d1, d2) => this.getDialogIndex(d2, indexKey) - this.getDialogIndex(d1, indexKey));\n        this.cachedResults.dialogs = dialogs;\n        this.cachedResults.count = dialogs.length;\n      }\n\n      curDialogStorage = this.cachedResults.dialogs;\n    } else {\n      this.cachedResults.query = '';\n    }\n\n    let offset = 0;\n    if(offsetIndex > 0) {\n      for(let length = curDialogStorage.length; offset < length; ++offset) {\n        if(offsetIndex > this.getDialogIndex(curDialogStorage[offset], indexKey)) {\n          break;\n        }\n      }\n    }\n\n    const loadedAll = this.isDialogsLoaded(realFolderId);\n    const isEnoughDialogs = curDialogStorage.length >= (offset + limit);\n    if(query || loadedAll || isEnoughDialogs) {\n      const dialogs = curDialogStorage.slice(offset, offset + limit);\n      return {\n        dialogs,\n        count: loadedAll ? curDialogStorage.length : null,\n        isTopEnd: curDialogStorage.length && ((dialogs[0] && dialogs[0] === curDialogStorage[0]) || this.getDialogIndex(curDialogStorage[0], indexKey) < offsetIndex),\n        isEnd: (query || loadedAll) && (offset + limit) >= curDialogStorage.length\n      };\n    }\n\n    return this.appMessagesManager.getTopMessages({limit, folderId: realFolderId}).then((result) => {\n      // const curDialogStorage = this[folderId];\n      if(skipMigrated) {\n        curDialogStorage = this.getFolderDialogs(filterId, skipMigrated);\n      }\n\n      offset = 0;\n      if(offsetIndex > 0) {\n        for(let length = curDialogStorage.length; offset < length; ++offset) {\n          if(offsetIndex > this.getDialogIndex(curDialogStorage[offset], indexKey)) {\n            break;\n          }\n        }\n      }\n\n      // this.log.warn(offset, offset + limit, curDialogStorage.dialogs.length, this.dialogs.length);\n\n      const dialogs = curDialogStorage.slice(offset, offset + limit);\n      return {\n        dialogs,\n        count: result.count === undefined ? curDialogStorage.length : result.count,\n        isTopEnd: curDialogStorage.length && ((dialogs[0] && dialogs[0] === curDialogStorage[0]) || this.getDialogIndex(curDialogStorage[0], indexKey) < offsetIndex),\n        // isEnd: this.isDialogsLoaded(realFolderId) && (offset + limit) >= curDialogStorage.length\n        isEnd: result.isEnd\n      };\n    });\n  }\n\n  public async markFolderAsRead(folderId: number) {\n    const folder = this.getFolder(folderId);\n    const peerIds = [...folder.unreadPeerIds];\n    for(const peerId of peerIds) {\n      await this.appMessagesManager.markDialogUnread(peerId, true);\n    }\n  }\n\n  // * FORUMS SECTION\n\n  public flushForumTopicsCache(peerId: PeerId) {\n    const cache = this.forumTopics.get(peerId);\n    if(!cache) {\n      return;\n    }\n\n    const folder = this.folders[peerId];\n    if(folder) {\n      if(folder.dispatchUnreadTimeout) {\n        clearTimeout(folder.dispatchUnreadTimeout);\n      }\n\n      delete this.allDialogsLoaded[peerId];\n      delete this.pinnedOrders[peerId];\n      delete this.dialogsOffsetDate[peerId];\n      delete this.folders[peerId];\n    }\n\n    cache.topics.clear();\n\n    // for permanent delete\n    // this.forumTopics.delete(peerId);\n  }\n\n  public getForumTopicsCache(peerId: PeerId) {\n    let forumTopics = this.forumTopics.get(peerId);\n    if(!forumTopics) {\n      forumTopics = {\n        topics: new Map(),\n        deletedTopics: new Set(),\n        getTopicPromises: new Map()\n      };\n\n      this.forumTopics.set(peerId, forumTopics);\n    }\n\n    return forumTopics;\n  }\n\n  public getForumTopicById(peerId: PeerId, topicId?: number): Promise<ForumTopic> {\n    if(!this.appPeersManager.isForum(peerId)) {\n      return Promise.reject(makeError('CHANNEL_FORUM_MISSING'));\n    }\n\n    const cache = this.getForumTopicsCache(peerId);\n    let promise: CancellablePromise<ForumTopic>;\n    if(topicId) {\n      promise = cache.getTopicPromises.get(topicId);\n      if(promise) {\n        return promise;\n      }\n\n      if(cache.deletedTopics.has(topicId)) {\n        return Promise.resolve(undefined);\n      }\n\n      cache.getTopicPromises.set(topicId, promise = deferredPromise());\n    }\n\n    cache.getTopicsPromise ??= pause(0).then(() => {\n      const promises: {[topicId: number]: typeof promise} = {};\n      const ids: number[] = [];\n      for(const [topicId, promise] of cache.getTopicPromises) {\n        promises[topicId] = promise;\n        ids.push(getServerMessageId(topicId));\n      }\n\n      cache.getTopicPromises.clear();\n\n      const fullfillLeft = () => {\n        for(const topicId in promises) {\n          promises[topicId].resolve(undefined);\n          cache.deletedTopics.add(+topicId);\n        }\n      };\n\n      if(this.getForumTopicsCache(peerId) !== cache) {\n        fullfillLeft();\n        return;\n      }\n\n      return this.apiManager.invokeApi('channels.getForumTopicsByID', {\n        channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\n        topics: ids\n      }).then((messagesForumTopics) => {\n        if(this.getForumTopicsCache(peerId) !== cache) {\n          return;\n        }\n\n        this.applyDialogs(messagesForumTopics, peerId);\n\n        messagesForumTopics.topics.forEach((forumTopic) => {\n          if(forumTopic._ === 'forumTopic') {\n            promises[forumTopic.id].resolve(forumTopic);\n            delete promises[peerId];\n          }\n        });\n\n        return messagesForumTopics;\n      }, () => {}).then(() => {\n        fullfillLeft();\n\n        cache.getTopicsPromise = undefined;\n        if(cache.getTopicPromises.size) {\n          this.getForumTopicById(peerId);\n        }\n      });\n    });\n\n    return promise || cache.getTopicsPromise;\n  }\n\n  // public getForumTopicById(peerId: PeerId, topicId: number) {\n  //   return this.getForumTopicsByID(peerId, topicId).then((result) => result.topics[0]);\n  // }\n\n  public getForumTopic(peerId: PeerId, topicId: number) {\n    const forumTopics = this.forumTopics.get(peerId);\n    return forumTopics?.topics?.get(topicId);\n  }\n\n  public getForumTopicOrReload(peerId: PeerId, topicId: number) {\n    const forumTopic = this.getForumTopic(peerId, topicId);\n    if(forumTopic) {\n      return forumTopic;\n    }\n\n    const cache = this.getForumTopicsCache(peerId);\n    return cache?.deletedTopics?.has(topicId) ? undefined : this.getForumTopicById(peerId, topicId);\n  }\n\n  public processTopics<T extends MaybePromise<{topics: MTForumTopic[], pts?: number}>>(peerId: PeerId, result: T) {\n    return callbackify(result, (result) => {\n      if('pts' in result) {\n        this.apiUpdatesManager.addChannelState(peerId.toChatId(), result.pts);\n      }\n\n      const peer = this.appPeersManager.getOutputPeer(peerId);\n      result.topics = result.topics.map((topic) => {\n        if(topic._ === 'forumTopicDeleted') {\n          return;\n        }\n\n        (topic as ForumTopic).peer = peer;\n        topic.id = this.appMessagesIdsManager.generateMessageId(topic.id, (peer as Peer.peerChannel).channel_id);\n        return topic;\n      }).filter(Boolean);\n\n      return result;\n    });\n  }\n\n  public processTopicsPromise<T extends Promise<Parameters<DialogsStorage['processTopics']>[1]>>(peerId: PeerId, promise: T): T {\n    return promise.then((result) => {\n      this.processTopics(peerId, result);\n      return result;\n    }) as any;\n  }\n\n  public getForumUnreadCount(peerId: PeerId) {\n    if(!this.appPeersManager.isForum(peerId)) {\n      return;\n    }\n\n    const folder = this.getFolder(peerId);\n\n    const f = folder.dialogs.length >= 20 || this.isDialogsLoaded(peerId) ?\n      folder.dialogs.slice(0, 20) :\n      callbackify(this.getDialogs({filterId: peerId, limit: 20}), (result) => {\n        return result.dialogs;\n      });\n\n    return callbackify(f, (dialogs) => {\n      return {\n        count: dialogs.reduce((acc, v) => acc + +!!v.unread_count, 0),\n        hasUnmuted: dialogs.some((dialog) => dialog.unread_count && this.isDialogUnmuted(dialog))\n      };\n    });\n  }\n\n  // * FORUMS SECTION END\n\n  private handleDialogTogglePinned(dialog: Dialog | ForumTopic, pinned: boolean, folderId: number) {\n    if(dialog) {\n      if(!pinned) {\n        this.handleDialogUnpinning(dialog, folderId);\n      } else { // means set\n        dialog.pFlags.pinned = true;\n      }\n\n      this.generateIndexForDialog(dialog);\n    }\n\n    this.appMessagesManager.scheduleHandleNewDialogs(dialog.peerId, dialog);\n  }\n\n  private handleDialogsPinned(folderId: number, order: (Dialog['peerId'] | ForumTopic['id'])[]) {\n    const isForum = this.isFilterIdForForum(folderId);\n    this.resetPinnedOrder(folderId);\n    this.getPinnedOrders(folderId).push(...order);\n    this.savePinnedOrders();\n    order.reverse(); // index must be higher\n    const newPinned: {[id: typeof order[0]]: true} = {};\n    order.forEach((id) => {\n      newPinned[id] = true;\n\n      const peerId = isForum ? folderId : id;\n      const topicId = isForum ? id : undefined;\n\n      const dialog = this.getDialogOrTopic(peerId, topicId);\n      this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n      if(!dialog) {\n        return;\n      }\n\n      dialog.pFlags.pinned = true;\n      this.generateIndexForDialog(dialog);\n    });\n\n    const dialogs = this.getFolderDialogs(folderId, false);\n    for(const dialog of dialogs) {\n      if(!dialog.pFlags.pinned) {\n        break;\n      }\n\n      if(!newPinned[this.getDialogKey(dialog)]) {\n        delete dialog.pFlags.pinned;\n        this.generateIndexForDialog(dialog);\n        this.appMessagesManager.scheduleHandleNewDialogs(dialog.peerId, dialog);\n      }\n    }\n  }\n\n  // only 0 and 1 folders\n  private onUpdateFolderPeers = (update: Update.updateFolderPeers) => {\n    // this.log('updateFolderPeers', update);\n    const peers = update.folder_peers;\n\n    peers.forEach((folderPeer) => {\n      const {folder_id, peer} = folderPeer;\n\n      const peerId = this.appPeersManager.getPeerId(peer);\n      const dialog = this.dropDialog(peerId)[0];\n      if(dialog) {\n        if(dialog.pFlags?.pinned) {\n          this.handleDialogUnpinning(dialog, folder_id);\n        }\n\n        (dialog as Dialog).folder_id = folder_id as REAL_FOLDER_ID;\n        this.generateIndexForDialog(dialog);\n        this.pushDialog({dialog}); // need for simultaneously updatePinnedDialogs\n      }\n\n      this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n    });\n  };\n\n  private onUpdateDialogPinned = (update: Update.updateDialogPinned) => {\n    const folderId = update.folder_id ?? FOLDER_ID_ALL;\n    // this.log('updateDialogPinned', update);\n    const peerId = this.appPeersManager.getPeerId((update.peer as DialogPeer.dialogPeer).peer);\n    const dialog = this.getDialogOnly(peerId);\n\n    // этот код внизу никогда не сработает, в папках за пиннед отвечает updateDialogFilter\n    /* if(update.folder_id > 1) {\n      const filter = this.filtersStorage.filters[update.folder_id];\n      if(update.pFlags.pinned) {\n        filter.pinned_peers.unshift(peerId);\n      } else {\n        filter.pinned_peers.findAndSplice((p) => p === peerId);\n      }\n    } */\n\n    this.handleDialogTogglePinned(dialog, update.pFlags.pinned, folderId);\n  };\n\n  private onUpdateChannelPinnedTopic = (update: Update.updateChannelPinnedTopic) => {\n    const channelId = update.channel_id;\n    const peerId = channelId.toPeerId(true);\n    const topicId = this.appMessagesIdsManager.generateMessageId(update.topic_id, channelId);\n    const topic = this.getForumTopic(peerId, topicId);\n    if(!topic) {\n      return;\n    }\n\n    this.handleDialogTogglePinned(topic, update.pFlags.pinned, this.getFilterIdForForum(topic));\n  };\n\n  private onUpdatePinnedDialogs = (update: Update.updatePinnedDialogs) => {\n    const folderId = update.folder_id ?? FOLDER_ID_ALL;\n\n    if(update.order) {\n      this.handleDialogsPinned(folderId, update.order.map((peer) => this.appPeersManager.getPeerId((peer as DialogPeer.dialogPeer).peer)));\n    } else {\n      this.apiManager.invokeApi('messages.getPinnedDialogs', {\n        folder_id: folderId\n      }).then((dialogsResult) => {\n        // * for test reordering and rendering\n        // dialogsResult.dialogs.reverse();\n\n        this.applyDialogs(dialogsResult);\n\n        this.handleDialogsPinned(folderId, dialogsResult.dialogs.map((d) => d.peerId));\n      });\n    }\n  };\n\n  private onUpdateChannelPinnedTopics = async(update: Update.updateChannelPinnedTopics) => {\n    const channelId = update.channel_id;\n    const peerId = channelId.toPeerId(true);\n    const forumTopics = this.forumTopics.get(peerId);\n    if(!forumTopics) {\n      return;\n    }\n\n    const filterId = peerId;\n    if(update.order) {\n      const order = update.order.map((topicId) => this.appMessagesIdsManager.generateMessageId(topicId, channelId));\n      this.handleDialogsPinned(filterId, order);\n    } else {\n      const limit = await this.apiManager.getLimit('topicPin', true);\n\n      const promise = this.apiManager.invokeApi('channels.getForumTopics', {\n        channel: this.appChatsManager.getChannelInput(channelId),\n        limit,\n        offset_date: 0,\n        offset_id: 0,\n        offset_topic: 0\n      });\n\n      const result = await this.processTopics(peerId, promise);\n\n      const topics = result.topics as ForumTopic[];\n      const pinned = topics.filter((topic) => topic.pFlags.pinned);\n      this.handleDialogsPinned(filterId, pinned.map((topic) => topic.id));\n    }\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {DialogFilter, ForumTopic, InputChatlist, InputPeer, Update, Updates} from '../../layer';\nimport type {Dialog} from '../appManagers/appMessagesManager';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport copy from '../../helpers/object/copy';\nimport {AppManager} from '../appManagers/manager';\nimport findAndSplice from '../../helpers/array/findAndSplice';\nimport assumeType from '../../helpers/assumeType';\nimport {FOLDER_ID_ALL, FOLDER_ID_ARCHIVE, REAL_FOLDERS, REAL_FOLDER_ID, START_LOCAL_ID} from '../mtproto/mtproto_config';\nimport makeError from '../../helpers/makeError';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\n\nexport type MyDialogFilter = Exclude<DialogFilter, DialogFilter.dialogFilterDefault>;\n\nconst convertment = [\n  ['pinned_peers', 'pinnedPeerIds'],\n  ['exclude_peers', 'excludePeerIds'],\n  ['include_peers', 'includePeerIds']\n] as ['pinned_peers' | 'exclude_peers' | 'include_peers', 'pinnedPeerIds' | 'excludePeerIds' | 'includePeerIds'][];\n\nconst PREPENDED_FILTERS = REAL_FOLDERS.size;\n\nconst LOCAL_FILTER: DialogFilter.dialogFilter = {\n  _: 'dialogFilter',\n  pFlags: {},\n  id: 0,\n  title: '',\n  exclude_peers: [],\n  include_peers: [],\n  pinned_peers: [],\n  excludePeerIds: [],\n  includePeerIds: [],\n  pinnedPeerIds: []\n};\n\nexport default class FiltersStorage extends AppManager {\n  private filters: {[filterId: string]: MyDialogFilter};\n  private filtersArr: Array<MyDialogFilter>;\n  private localFilters: {[filterId: string]: MyDialogFilter};\n  private localId: number;\n  private reloadedPeerIds: Set<PeerId>;\n\n  protected after() {\n    this.clear(true);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateDialogFilter: this.onUpdateDialogFilter,\n\n      updateDialogFilters: this.onUpdateDialogFilters,\n\n      updateDialogFilterOrder: this.onUpdateDialogFilterOrder\n    });\n\n    // delete peers when dialog is being dropped\n    /* rootScope.addEventListener('peer_deleted', (peerId) => {\n      for(const filterId in this.filters) {\n        const filter = this.filters[filterId];\n        let modified = false;\n        [filter.pinned_peers, filter.include_peers, filter.exclude_peers].forEach((arr) => {\n          forEachReverse(arr, (inputPeer, idx) => {\n            if(getPeerId(inputPeer) === peerId) {\n              arr.splice(idx, 1);\n              modified = true;\n            }\n          });\n        });\n\n        if(modified) {\n          this.saveDialogFilter(filter, true);\n        }\n      }\n    }); */\n\n    this.rootScope.addEventListener('premium_toggle', () => {\n      this.onUpdateDialogFilters({_: 'updateDialogFilters'});\n    });\n\n    return this.appStateManager.getState().then((state) => {\n      const filtersArr = this.prependFilters(state.filtersArr);\n      filtersArr.map((filter) => {\n        this.saveDialogFilter(filter, false, true);\n      });\n    });\n  }\n\n  /**\n   * ! use it only with saving\n   */\n  private prependFilters(filters: DialogFilter[]) {\n    filters = filters.slice();\n\n    const allChatsFilter = this.localFilters[FOLDER_ID_ALL];\n    const archiveFilter = this.localFilters[FOLDER_ID_ARCHIVE];\n\n    const allChatsFilterIndex = filters.findIndex((filter) => filter._ === 'dialogFilterDefault' || filter.id === FOLDER_ID_ALL);\n    if(allChatsFilterIndex !== -1) filters[allChatsFilterIndex] = allChatsFilter;\n    else filters.unshift(allChatsFilter);\n\n    findAndSplice(filters, (filter) => (filter as MyDialogFilter).id === FOLDER_ID_ARCHIVE);\n    filters.splice(/* 1 */filters[0] === allChatsFilter ? 1 : 0, 0, archiveFilter);\n\n    this.localId = START_LOCAL_ID;\n    filters.forEach((filter) => {\n      delete filter.localId;\n    });\n\n    return filters;\n  }\n\n  private generateLocalFilter(id: REAL_FOLDER_ID) {\n    const filter: MyDialogFilter = {...copy(LOCAL_FILTER), id};\n    if(id === FOLDER_ID_ALL) {\n      filter.pFlags.exclude_archived = true;\n    } else if(id === FOLDER_ID_ARCHIVE) {\n      filter.pFlags.exclude_unarchived = true;\n    }\n\n    if(REAL_FOLDERS.has(id)) {\n      filter.pinnedPeerIds = this.dialogsStorage.getPinnedOrders(id);\n    }\n\n    return filter;\n  }\n\n  // private getLocalFilter(id: number) {\n  //   return this.filters[id] ??= this.generateLocalFilter(id);\n  // }\n\n  public clear = (init?: boolean) => {\n    if(!init) {\n      // safeReplaceObject(this.filters, {});\n      this.reloadedPeerIds.clear();\n      this.clearFilters();\n    } else {\n      this.filters = {};\n      this.filtersArr = [];\n      this.reloadedPeerIds = new Set();\n\n      this.localFilters = {};\n      for(const filterId of REAL_FOLDERS) {\n        this.localFilters[filterId] = this.generateLocalFilter(filterId as REAL_FOLDER_ID);\n      }\n    }\n\n    this.localId = START_LOCAL_ID;\n  };\n\n  private onUpdateDialogFilter = (update: Update.updateDialogFilter) => {\n    if(update.filter) {\n      this.saveDialogFilter(update.filter as any);\n    } else if(this.filters[update.id]) { // Папка удалена\n      // this.getDialogFilters(true);\n      this.rootScope.dispatchEvent('filter_delete', this.filters[update.id]);\n      delete this.filters[update.id];\n      findAndSplice(this.filtersArr, (filter) => (filter as DialogFilter.dialogFilter).id === update.id);\n    }\n\n    this.pushToState();\n  };\n\n  private onUpdateDialogFilters = (update: Update.updateDialogFilters) => {\n    // console.warn('updateDialogFilters', update);\n\n    const oldFilters = copy(this.filters);\n\n    this.getDialogFilters(true).then((filters) => {\n      for(const _filterId in oldFilters) {\n        const filterId = +_filterId;\n        if(!filters.find((filter) => filter.id === filterId)) { // * deleted\n          this.onUpdateDialogFilter({_: 'updateDialogFilter', id: filterId});\n        }\n      }\n\n      this.onUpdateDialogFilterOrder({_: 'updateDialogFilterOrder', order: filters.map((filter) => filter.id)});\n    });\n  };\n\n  private onUpdateDialogFilterOrder = (update: Update.updateDialogFilterOrder) => {\n    // console.log('updateDialogFilterOrder', update);\n\n    const order = update.order.slice();\n    if(!order.includes(FOLDER_ID_ARCHIVE)) {\n      order.splice(order[0] === FOLDER_ID_ALL ? 1 : 0, 0, FOLDER_ID_ARCHIVE);\n    }\n\n    this.localId = START_LOCAL_ID;\n    order.forEach((filterId) => {\n      const filter = this.filters[filterId];\n      delete filter.localId;\n      this.setLocalId(filter);\n    });\n\n    this.rootScope.dispatchEvent('filter_order', order);\n\n    this.pushToState();\n  };\n\n  private pushToState() {\n    this.appStateManager.pushToState('filtersArr', this.filtersArr);\n  }\n\n  public testDialogForFilter(dialog: Dialog | ForumTopic.forumTopic, filter?: MyDialogFilter) {\n    if(!filter) {\n      return true;\n    }\n\n    const {peerId} = dialog;\n\n    if(REAL_FOLDERS.has(filter.id)) {\n      return (dialog as Dialog).folder_id === filter.id && this.dialogsStorage.canSaveDialogByPeerId(peerId);\n    }\n\n    // * check whether dialog exists\n    if(!this.appMessagesManager.getDialogOnly(peerId)) {\n      return false;\n    }\n\n    // exclude_peers\n    if((filter as DialogFilter.dialogFilter).excludePeerIds?.includes(peerId)) {\n      return false;\n    }\n\n    // include_peers\n    if((filter as DialogFilter.dialogFilter).includePeerIds?.includes(peerId)) {\n      return true;\n    }\n\n    const pFlags = (filter as DialogFilter.dialogFilter).pFlags;\n\n    if(!pFlags) {\n      return true;\n    }\n\n    // exclude_archived\n    if(pFlags.exclude_archived && (dialog as Dialog).folder_id === FOLDER_ID_ARCHIVE) {\n      return false;\n    }\n\n    // exclude_read\n    if(pFlags.exclude_read && !this.appMessagesManager.isDialogUnread(dialog)) {\n      return false;\n    }\n\n    // exclude_muted\n    if(pFlags.exclude_muted && this.appNotificationsManager.isPeerLocalMuted({peerId}) && !(dialog.unread_mentions_count && dialog.unread_count)) {\n      return false;\n    }\n\n    if(this.appPeersManager.isAnyChat(peerId)) {\n      // broadcasts\n      if(pFlags.broadcasts && this.appPeersManager.isBroadcast(peerId)) {\n        return true;\n      }\n\n      // groups\n      if(pFlags.groups && this.appPeersManager.isAnyGroup(peerId)) {\n        return true;\n      }\n    } else {\n      const userId = peerId.toUserId();\n\n      // bots\n      if(this.appUsersManager.isBot(userId)) {\n        return !!pFlags.bots;\n      }\n\n      // non_contacts\n      if(pFlags.non_contacts && !this.appUsersManager.isContact(userId)) {\n        return true;\n      }\n\n      // contacts\n      if(pFlags.contacts && this.appUsersManager.isContact(userId)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public testDialogForFilterId(dialog: Dialog, filterId: number) {\n    return this.testDialogForFilter(dialog, this.filters[filterId]);\n  }\n\n  public getFilter(filterId: number) {\n    return this.filters[filterId];\n  }\n\n  public getFilters() {\n    return this.filters;\n  }\n\n  public clearFilters() {\n    const filters = this.getFilters();\n    for(const filterId in filters) { // delete filters\n      if(REAL_FOLDERS.has(+filterId)) {\n        continue;\n      }\n\n      this.onUpdateDialogFilter({\n        _: 'updateDialogFilter',\n        id: +filterId\n      });\n    }\n  }\n\n  public async toggleDialogPin(peerId: PeerId, filterId: number) {\n    const filter = this.filters[filterId];\n\n    const index = filter.pinnedPeerIds.indexOf(peerId);\n    const wasPinned = index !== -1;\n\n    if(wasPinned) {\n      filter.pinned_peers.splice(index, 1);\n      filter.pinnedPeerIds.splice(index, 1);\n    }\n\n    if(!wasPinned) {\n      if(filter.pinned_peers.length >= (await this.apiManager.getLimit('folderPin'))) {\n        return Promise.reject(makeError('PINNED_DIALOGS_TOO_MUCH'));\n      }\n\n      filter.pinned_peers.unshift(this.appPeersManager.getInputPeerById(peerId));\n      filter.pinnedPeerIds.unshift(peerId);\n    }\n\n    return this.updateDialogFilter(filter);\n  }\n\n  public createDialogFilter(filter: MyDialogFilter, prepend?: boolean) {\n    const maxId = Math.max(1, ...Object.keys(this.filters).map((i) => +i));\n    filter = copy(filter);\n    filter.id = maxId + 1;\n    return this.updateDialogFilter(filter, undefined, prepend);\n  }\n\n  public updateDialogFilter(filter: MyDialogFilter, remove = false, prepend = false) {\n    return this.apiManager.invokeApi('messages.updateDialogFilter', {\n      id: filter.id,\n      filter: remove ? undefined : this.getOutputDialogFilter(filter)\n    }).then(() => {\n      this.onUpdateDialogFilter({\n        _: 'updateDialogFilter',\n        id: filter.id,\n        filter: remove ? undefined : filter as any\n      });\n\n      if(prepend) {\n        const f = Object.values(this.filters);\n        const order = f.sort((a, b) => a.localId - b.localId).map((filter) => filter.id);\n        indexOfAndSplice(order, filter.id);\n        indexOfAndSplice(order, FOLDER_ID_ARCHIVE);\n        order.splice(order[0] === FOLDER_ID_ALL ? 1 : 0, 0, filter.id);\n        this.onUpdateDialogFilterOrder({\n          _: 'updateDialogFilterOrder',\n          order\n        });\n      }\n\n      return filter;\n    });\n  }\n\n  public updateDialogFiltersOrder(order: number[]) {\n    return this.apiManager.invokeApi('messages.updateDialogFiltersOrder', {\n      order\n    }).then(() => {\n      this.onUpdateDialogFilterOrder({\n        _: 'updateDialogFilterOrder',\n        order\n      });\n    });\n  }\n\n  public getOutputDialogFilter(filter: MyDialogFilter) {\n    const c = copy(filter);\n    /* convertment.forEach(([from, to]) => {\n      c[from] = c[to].map((peerId) => this.appPeersManager.getInputPeerById(peerId));\n    }); */\n\n    this.filterIncludedPinnedPeers(filter);\n\n    return c;\n  }\n\n  private filterIncludedPinnedPeers(filter: MyDialogFilter) {\n    forEachReverse(filter.includePeerIds, (peerId, idx) => {\n      if(filter.pinnedPeerIds.includes(peerId)) {\n        filter.include_peers.splice(idx, 1);\n        filter.includePeerIds.splice(idx, 1);\n      }\n    });\n  }\n\n  // private spliceMissingPeerIds(filterId: number, type: ArgumentTypes<FiltersStorage['reloadMissingPeerIds']>[1], missingPeerIds: PeerId[]) {\n  //   const filter = this.getFilter(filterId);\n  //   const peers = filter && filter[type];\n  //   if(!peers?.length) {\n  //     return;\n  //   }\n\n  //   let spliced = false;\n  //   missingPeerIds.forEach((peerId) => {\n  //     const inputPeer = findAndSplice(peers, (inputPeer) => getPeerId(inputPeer) === peerId);\n  //     if(inputPeer) {\n  //       spliced = true;\n  //     }\n  //   });\n\n  //   if(spliced) {\n  //     this.onUpdateDialogFilter({\n  //       _: 'updateDialogFilter',\n  //       id: filterId,\n  //       filter\n  //     });\n  //   }\n  // }\n\n  public reloadMissingPeerIds(\n    filterId: number,\n    type: 'pinned_peers' | 'include_peers' | 'exclude_peers' = 'pinned_peers'\n  ) {\n    const filter = this.getFilter(filterId);\n    const peers = (filter as DialogFilter.dialogFilter)?.[type];\n    if(!peers?.length) {\n      return;\n    }\n\n    // const missingPeerIds: PeerId[] = [];\n    const reloadDialogs = peers.filter((inputPeer) => {\n      const peerId = this.appPeersManager.getPeerId(inputPeer);\n      const isAlreadyReloaded = this.reloadedPeerIds.has(peerId);\n      const dialog = this.appMessagesManager.getDialogOnly(peerId);\n      // if(isAlreadyReloaded && !dialog) {\n      //   missingPeerIds.push(peerId);\n      // }\n\n      const reload = !isAlreadyReloaded && !dialog;\n      return reload;\n    });\n\n    if(!reloadDialogs.length) {\n      // if(missingPeerIds.length) {\n      //   this.spliceMissingPeerIds(filterId, type, missingPeerIds);\n      // }\n\n      return;\n    }\n\n    const reloadPromises = reloadDialogs.map((inputPeer) => {\n      const peerId = this.appPeersManager.getPeerId(inputPeer);\n      const promise = this.appMessagesManager.reloadConversation(inputPeer)\n      .then((dialog) => {\n        this.reloadedPeerIds.add(peerId);\n\n        return dialog ? undefined : peerId;\n      });\n\n      return promise;\n    });\n\n    const reloadPromise = Promise.all(reloadPromises).then((missingPeerIds) => {\n      missingPeerIds = missingPeerIds.filter(Boolean);\n      if(!missingPeerIds.length) {\n        return;\n      }\n\n      // this.spliceMissingPeerIds(filterId, type, missingPeerIds);\n    });\n\n    return reloadPromise;\n  }\n\n  public async getDialogFilters(overwrite = false): Promise<MyDialogFilter[]> {\n    const keys = Object.keys(this.filters);\n    if(keys.length > PREPENDED_FILTERS && !overwrite) {\n      return keys.map((filterId) => this.filters[filterId]).sort((a, b) => a.localId - b.localId);\n    }\n\n    const filters = await this.apiManager.invokeApiSingle('messages.getDialogFilters');\n    const prepended = this.prependFilters(filters);\n    return prepended.map((filter) => this.saveDialogFilter(filter, overwrite)).filter(Boolean);\n  }\n\n  public getSuggestedDialogsFilters() {\n    return this.apiManager.invokeApi('messages.getSuggestedDialogFilters');\n  }\n\n  public saveDialogFilter(filter: DialogFilter, update = true, silent?: boolean) {\n    // defineNotNumerableProperties(filter, ['includePeerIds', 'excludePeerIds', 'pinnedPeerIds']);\n\n    if(filter._ === 'dialogFilterDefault') {\n      filter = this.localFilters[FOLDER_ID_ALL];\n    }\n\n    assumeType<MyDialogFilter>(filter);\n    if(!REAL_FOLDERS.has(filter.id)) {\n      convertment.forEach(([from, to]) => {\n        const arrayFrom = (filter as DialogFilter.dialogFilter)[from];\n        if(!arrayFrom) return;\n        (filter as DialogFilter.dialogFilter)[to] = arrayFrom.map((peer) => this.appPeersManager.getPeerId(peer));\n      });\n\n      this.filterIncludedPinnedPeers(filter);\n\n      filter.include_peers = filter.pinned_peers.concat(filter.include_peers);\n      filter.includePeerIds = filter.pinnedPeerIds.concat(filter.includePeerIds);\n    }\n\n    const oldFilter = this.filters[filter.id];\n    if(oldFilter) {\n      filter = Object.assign(oldFilter, filter);\n    } else {\n      this.filters[filter.id] = filter;\n    }\n\n    this.setLocalId(filter);\n\n    if(!silent) {\n      if(update) {\n        this.rootScope.dispatchEvent('filter_update', filter);\n      } else if(!oldFilter) {\n        this.rootScope.dispatchEvent('filter_new', filter);\n      }\n    }\n\n    return filter;\n  }\n\n  private setLocalId(filter: MyDialogFilter) {\n    if(filter.localId !== undefined) {\n      if(filter.localId >= this.localId) {\n        this.localId = filter.localId + 1;\n      }\n    } else {\n      filter.localId = this.localId++ as MyDialogFilter['localId'];\n      findAndSplice(this.filtersArr, (_filter) => _filter.id === filter.id);\n      this.filtersArr.push(filter);\n      this.pushToState();\n    }\n  }\n\n  public async isFilterIdAvailable(filterId: number) {\n    if(REAL_FOLDERS.has(filterId)) {\n      return true;\n    }\n\n    const limit = await this.apiManager.getLimit('folders');\n    const isFolderAvailable = this.filtersArr.filter((filter) => !REAL_FOLDERS.has(filter.id)).slice(0, limit).some((filter) => filter.id === filterId);\n\n    return isFolderAvailable;\n  }\n\n  public getChatlistInput(id: number): InputChatlist {\n    return {\n      _: 'inputChatlistDialogFilter',\n      filter_id: id\n    };\n  }\n\n  /**\n   * @param filter should be client-generated\n   */\n  public exportChatlistInvite(filter: DialogFilter.dialogFilterChatlist) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'chatlists.exportChatlistInvite',\n      params: {\n        chatlist: this.getChatlistInput(filter.id),\n        title: filter.title,\n        peers: filter.include_peers\n      },\n      processResult: (exportedChatlistInvite) => {\n        this.saveDialogFilter(exportedChatlistInvite.filter);\n        return exportedChatlistInvite;\n      }\n    });\n  }\n\n  public deleteExportedInvite(id: number, slug: string) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'chatlists.deleteExportedInvite',\n      params: {\n        chatlist: this.getChatlistInput(id),\n        slug\n      },\n      processResult: (result) => result\n    });\n  }\n\n  public editExportedInvite(id: number, slug: string, peerIds: PeerId[], title: string) {\n    return this.apiManager.invokeApi('chatlists.editExportedInvite', {\n      chatlist: this.getChatlistInput(id),\n      slug,\n      title,\n      peers: peerIds.map((peerId) => this.appPeersManager.getInputPeerById(peerId))\n    });\n  }\n\n  public getExportedInvites(id: number) {\n    const filter = this.getFilter(id);\n    if(filter?._ === 'dialogFilter') {\n      return Promise.reject(makeError('FILTER_NOT_SUPPORTED'));\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'chatlists.getExportedInvites',\n      params: {\n        chatlist: this.getChatlistInput(id)\n      },\n      processResult: (exportedInvites) => {\n        this.appUsersManager.saveApiUsers(exportedInvites.users);\n        this.appChatsManager.saveApiChats(exportedInvites.chats);\n        return exportedInvites.invites;\n      }\n    });\n  }\n\n  public checkChatlistInvite(slug: string) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'chatlists.checkChatlistInvite',\n      params: {slug},\n      processResult: (chatlistInvite) => {\n        this.appUsersManager.saveApiUsers(chatlistInvite.users);\n        this.appChatsManager.saveApiChats(chatlistInvite.chats);\n        return chatlistInvite;\n      }\n    });\n  }\n\n  public joinChatlistInvite(slug: string, peerIds: PeerId[]) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'chatlists.joinChatlistInvite',\n      params: {\n        slug,\n        peers: peerIds.map((peerId) => this.appPeersManager.getInputPeerById(peerId))\n      },\n      processResult: (updates) => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n        const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateDialogFilter') as Update.updateDialogFilter;\n        const filterId = update.id;\n        this.rootScope.dispatchEvent('filter_joined', this.getFilter(filterId));\n        return filterId;\n      }\n    });\n  }\n\n  public getChatlistUpdates(id: number) {\n    const filter = this.getFilter(id);\n    if(filter?._ !== 'dialogFilterChatlist') {\n      return Promise.reject(makeError('FILTER_NOT_SUPPORTED'));\n    }\n\n    const time = Date.now();\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'chatlists.getChatlistUpdates',\n      params: {\n        chatlist: this.getChatlistInput(id)\n      },\n      processResult: (chatlistUpdates) => {\n        this.appUsersManager.saveApiUsers(chatlistUpdates.users);\n        this.appChatsManager.saveApiChats(chatlistUpdates.chats);\n\n        const filter = this.getFilter(id);\n        if(filter?._ === 'dialogFilterChatlist') {\n          filter.updatedTime = time;\n          this.pushToState();\n        }\n\n        return chatlistUpdates;\n      }\n    });\n  }\n\n  public joinChatlistUpdates(id: number, peerIds: PeerId[]) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'chatlists.joinChatlistUpdates',\n      params: {\n        chatlist: this.getChatlistInput(id),\n        peers: peerIds.map((peerId) => this.appPeersManager.getInputPeerById(peerId))\n      },\n      processResult: (updates) => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n      }\n    });\n  }\n\n  public hideChatlistUpdates(id: number) {\n    return this.apiManager.invokeApiSingle('chatlists.hideChatlistUpdates', {\n      chatlist: this.getChatlistInput(id)\n    });\n  }\n\n  public getLeaveChatlistSuggestions(id: number) {\n    return this.apiManager.invokeApiSingle('chatlists.getLeaveChatlistSuggestions', {\n      chatlist: this.getChatlistInput(id)\n    });\n  }\n\n  public leaveChatlist(id: number, peerIds: PeerId[]) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'chatlists.leaveChatlist',\n      params: {\n        chatlist: this.getChatlistInput(id),\n        peers: peerIds.map((peerId) => this.appPeersManager.getInputPeerById(peerId))\n      },\n      processResult: (updates) => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n      }\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default function applyMixins(derivedCtor: any, constructors: any[]) {\n  // const callbacks: Array<(...args: any[]) => any> = [];\n\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      const value: PropertyDescriptor = Object.getOwnPropertyDescriptor(baseCtor.prototype, name) || Object.create(null);\n      /* if(name === '_constructor') {\n        callbacks.push(value.value);\n        return;\n      } else  */if(name === 'constructor') {\n        return;\n      }\n\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        value\n      );\n    });\n  });\n\n  // if(callbacks.length) {\n  //   function c(...args: any[]): any {\n  //     callbacks.forEach((cb, idx) => {\n  //       // @ts-ignore\n  //       cb.apply(this, args[idx] || []);\n  //     });\n  //   };\n\n  //   Object.defineProperty(derivedCtor.prototype, 'superConstructor', {\n  //     configurable: true,\n  //     enumerable: true,\n  //     value: c,\n  //     writable: true\n  //   });\n  // }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport DEBUG from '../../config/debug';\nimport {ConstructorDeclMap, Message, MessageEntity, MessageFwdHeader, Peer, Update, Updates} from '../../layer';\nimport {logger, LogTypes} from '../logger';\nimport assumeType from '../../helpers/assumeType';\nimport App from '../../config/app';\nimport filterUnique from '../../helpers/array/filterUnique';\nimport {AppManager} from './manager';\nimport parseMarkdown from '../richTextProcessor/parseMarkdown';\nimport ctx from '../../environment/ctx';\nimport EventListenerBase from '../../helpers/eventListenerBase';\nimport applyMixins from '../../helpers/applyMixins';\nimport tsNow from '../../helpers/tsNow';\n\ntype UpdatesState = {\n  pendingPtsUpdates: (Update & {pts: number, pts_count: number})[],\n  pendingSeqUpdates?: {[seq: number]: {seq: number, date: number, updates: any[]}},\n  syncPending: {\n    seqAwaiting?: number,\n    ptsAwaiting?: boolean,\n    timeout: number\n  },\n  syncLoading: Promise<void>,\n\n  seq?: number,\n  pts?: number,\n  date?: number,\n  lastPtsUpdateTime?: number,\n  lastDifferenceTime?: number\n};\n\nconst SYNC_DELAY = 6;\n\nclass ApiUpdatesManager {\n  public updatesState: UpdatesState = {\n    pendingPtsUpdates: [],\n    pendingSeqUpdates: {},\n    syncPending: null,\n    syncLoading: null\n  };\n\n  private channelStates: {[channelId: ChatId]: UpdatesState} = {};\n  private attached = false;\n\n  private log = logger('UPDATES', LogTypes.Error | LogTypes.Warn | LogTypes.Log/*  | LogTypes.Debug */);\n  private debug = DEBUG;\n\n  private subscriptions: {[channelId: ChatId]: {count: number, interval?: number}} = {};\n\n  constructor() {\n    this._constructor(false);\n  }\n\n  private setProxy() {\n    const self = this;\n    this.updatesState = new Proxy(this.updatesState, {\n      set: function(target: ApiUpdatesManager['updatesState'], key: keyof ApiUpdatesManager['updatesState'], value: ApiUpdatesManager['updatesState'][typeof key]) {\n        // @ts-ignore\n        target[key] = value;\n        self.saveUpdatesState();\n        return true;\n      }\n    });\n  }\n\n  public saveUpdatesState() {\n    const us = this.updatesState;\n    this.appStateManager.pushToState('updates', {\n      seq: us.seq,\n      pts: us.pts,\n      date: us.date\n    });\n  }\n\n  private popPendingSeqUpdate() {\n    const state = this.updatesState;\n    const nextSeq = state.seq + 1;\n    const pendingUpdatesData = state.pendingSeqUpdates[nextSeq];\n    if(!pendingUpdatesData) {\n      return false;\n    }\n\n    const updates = pendingUpdatesData.updates;\n    for(let i = 0, length = updates.length; i < length; ++i) {\n      this.saveUpdate(updates[i]);\n    }\n\n    state.seq = pendingUpdatesData.seq;\n    if(pendingUpdatesData.date && state.date < pendingUpdatesData.date) {\n      state.date = pendingUpdatesData.date;\n    }\n    delete state.pendingSeqUpdates[nextSeq];\n\n    if(!this.popPendingSeqUpdate() &&\n      state.syncPending?.seqAwaiting &&\n      state.seq >= state.syncPending.seqAwaiting) {\n      if(!state.syncPending.ptsAwaiting) {\n        this.clearStatePendingSync(state);\n      } else {\n        delete state.syncPending.seqAwaiting;\n      }\n    }\n\n    return true;\n  }\n\n  private popPendingPtsUpdate(channelId: ChatId) {\n    const curState = channelId ? this.getChannelState(channelId) : this.updatesState;\n    if(!curState.pendingPtsUpdates.length) {\n      return false;\n    }\n\n    curState.pendingPtsUpdates.sort((a, b) => {\n      return a.pts - b.pts;\n    });\n    // this.log('pop update', channelId, curState.pendingPtsUpdates)\n\n    let curPts = curState.pts;\n    let goodPts = 0;\n    let goodIndex = 0;\n    for(let i = 0, length = curState.pendingPtsUpdates.length; i < length; ++i) {\n      const update = curState.pendingPtsUpdates[i];\n      curPts += update.pts_count;\n      if(curPts >= update.pts) {\n        goodPts = update.pts;\n        goodIndex = i;\n      }\n    }\n\n    if(!goodPts) {\n      return false;\n    }\n\n    this.debug && this.log.debug('pop pending pts updates', goodPts, curState.pendingPtsUpdates.slice(0, goodIndex + 1));\n\n    curState.pts = goodPts;\n    for(let i = 0; i <= goodIndex; ++i) {\n      const update = curState.pendingPtsUpdates[i];\n\n      // @ts-ignore\n      this.saveUpdate(update);\n    }\n    curState.pendingPtsUpdates.splice(0, goodIndex + 1);\n\n    if(!curState.pendingPtsUpdates.length && curState.syncPending) {\n      if(!curState.syncPending.seqAwaiting) {\n        this.clearStatePendingSync(curState);\n      } else {\n        delete curState.syncPending.ptsAwaiting;\n      }\n    }\n\n    return true;\n  }\n\n  public forceGetDifference() {\n    if(!this.updatesState.syncLoading) {\n      this.getDifference();\n    }\n  }\n\n  public processLocalUpdate(update: Update) {\n    this.processUpdateMessage({\n      _: 'updateShort',\n      update\n    } as Updates);\n  }\n\n  public processUpdateMessage = (updateMessage: any, options: Partial<{\n    override: boolean\n  }> = {}) => {\n    // return forceGetDifference()\n    const processOpts = {\n      date: updateMessage.date,\n      seq: updateMessage.seq,\n      seqStart: updateMessage.seq_start\n      // ignoreSyncLoading: options.ignoreSyncLoading\n    };\n\n    this.debug && this.log.debug('processUpdateMessage', updateMessage);\n\n    switch(updateMessage._) {\n      case 'updatesTooLong':\n      case 'new_session_created':\n        this.forceGetDifference();\n        break;\n\n      case 'updateShort':\n        this.processUpdate(updateMessage.update, processOpts);\n        break;\n\n      case 'updateShortMessage':\n      case 'updateShortChatMessage': {\n        assumeType<Updates.updateShortChatMessage | Updates.updateShortMessage>(updateMessage);\n        this.debug && this.log.debug('updateShortMessage | updateShortChatMessage', {...updateMessage});\n        const isOut = updateMessage.pFlags.out;\n        const fromId = (updateMessage as Updates.updateShortChatMessage).from_id || (isOut ? this.appPeersManager.peerId : (updateMessage as Updates.updateShortMessage).user_id);\n        const toId = (updateMessage as Updates.updateShortChatMessage).chat_id ?\n          (updateMessage as Updates.updateShortChatMessage).chat_id.toPeerId(true) :\n          ((updateMessage as Updates.updateShortMessage).user_id.toPeerId(false) || this.appPeersManager.peerId);\n\n        this.processUpdate({\n          _: 'updateNewMessage',\n          message: {\n            _: 'message',\n            pFlags: updateMessage.pFlags,\n            id: updateMessage.id,\n            from_id: this.appPeersManager.getOutputPeer(fromId.toPeerId()),\n            peer_id: this.appPeersManager.getOutputPeer(toId),\n            date: updateMessage.date,\n            message: updateMessage.message,\n            fwd_from: updateMessage.fwd_from,\n            reply_to: updateMessage.reply_to,\n            entities: updateMessage.entities\n          },\n          pts: updateMessage.pts,\n          pts_count: updateMessage.pts_count\n        }, processOpts);\n        break;\n      }\n\n      case 'updatesCombined':\n      case 'updates':\n        this.appUsersManager.saveApiUsers(updateMessage.users, options.override);\n        this.appChatsManager.saveApiChats(updateMessage.chats, options.override);\n\n        updateMessage.updates.forEach((update: Update) => {\n          this.processUpdate(update, processOpts);\n        });\n        break;\n\n      default:\n        this.log.warn('Unknown update message', updateMessage);\n    }\n  };\n\n  private getDifference(first = false): Promise<void> {\n    // this.trace('Get full diff')\n    const updatesState = this.updatesState;\n    const wasSyncing = updatesState.syncLoading;\n    if(!wasSyncing) {\n      updatesState.pendingSeqUpdates = {};\n      updatesState.pendingPtsUpdates = [];\n    }\n\n    this.clearStatePendingSync(updatesState);\n\n    const promise = this.apiManager.invokeApi('updates.getDifference', {\n      pts: updatesState.pts,\n      pts_total_limit: first /* && false  */? /* 50 */1200 : undefined,\n      date: updatesState.date,\n      qts: -1\n    }, {\n      timeout: 0x7fffffff\n    }).then((differenceResult) => {\n      this.debug && this.log.debug('Get diff result', differenceResult);\n\n      if(differenceResult._ === 'updates.differenceEmpty') {\n        this.debug && this.log.debug('apply empty diff', differenceResult.seq);\n        updatesState.date = differenceResult.date;\n        updatesState.seq = differenceResult.seq;\n        return;\n      }\n\n      // ! SORRY I'M SORRY I'M SORRY\n      if(first) {\n        this.rootScope.dispatchEvent('state_synchronizing');\n      }\n\n      if(differenceResult._ !== 'updates.differenceTooLong') {\n        this.appUsersManager.saveApiUsers(differenceResult.users);\n        this.appChatsManager.saveApiChats(differenceResult.chats);\n\n        // Should be first because of updateMessageID\n        // this.log('applying', differenceResult.other_updates.length, 'other updates')\n\n        differenceResult.other_updates.forEach((update) => {\n          switch(update._) {\n            case 'updateChannelTooLong':\n            case 'updateNewChannelMessage':\n            case 'updateEditChannelMessage':\n              this.processUpdate(update);\n              return;\n          }\n\n          this.saveUpdate(update);\n        });\n\n        // this.log('applying', differenceResult.new_messages.length, 'new messages')\n        differenceResult.new_messages.forEach((apiMessage) => {\n          this.saveUpdate({\n            _: 'updateNewMessage',\n            message: apiMessage,\n            pts: updatesState.pts,\n            pts_count: 0\n          });\n        });\n\n        const nextState = differenceResult._ === 'updates.difference' ? differenceResult.state : differenceResult.intermediate_state;\n        updatesState.seq = nextState.seq;\n        updatesState.pts = nextState.pts;\n        updatesState.date = nextState.date;\n      } else {\n        updatesState.pts = differenceResult.pts;\n        updatesState.date = tsNow(true) + this.timeManager.getServerTimeOffset();\n        delete updatesState.seq;\n\n        this.channelStates = {};\n\n        this.log.warn('getDifference:', differenceResult._);\n        this.onDifferenceTooLong();\n      }\n\n      // this.log('apply diff', updatesState.seq, updatesState.pts)\n\n      if(differenceResult._ === 'updates.differenceSlice') {\n        return this.getDifference();\n      } else {\n        this.debug && this.log.debug('finished get diff');\n      }\n    });\n\n    if(!wasSyncing) {\n      this.justAName(updatesState, promise);\n    }\n\n    return promise;\n  }\n\n  private clearStatePendingSync(state: UpdatesState) {\n    if(state.syncPending) {\n      clearTimeout(state.syncPending.timeout);\n      state.syncPending = null;\n    }\n  }\n\n  private getChannelDifference(channelId: ChatId): Promise<void> {\n    const channelState = this.getChannelState(channelId);\n    const wasSyncing = channelState.syncLoading;\n    if(!wasSyncing) {\n      channelState.pendingPtsUpdates = [];\n    }\n\n    this.clearStatePendingSync(channelState);\n\n    const log = this.debug ? this.log.bindPrefix('getChannelDifference-' + channelId) : undefined;\n    // this.log.trace('Get channel diff', appChatsManager.getChat(channelId), channelState.pts);\n    const promise = this.apiManager.invokeApi('updates.getChannelDifference', {\n      channel: this.appChatsManager.getChannelInput(channelId),\n      filter: {_: 'channelMessagesFilterEmpty'},\n      pts: channelState.pts,\n      limit: 1000\n    }, {timeout: 0x7fffffff}).then((differenceResult) => {\n      log?.debug('diff result', differenceResult)\n      channelState.pts = 'pts' in differenceResult ? differenceResult.pts : undefined;\n      channelState.lastDifferenceTime = Date.now();\n\n      if(differenceResult._ === 'updates.channelDifferenceEmpty') {\n        // log?.debug('apply channel empty diff', differenceResult);\n        return;\n      }\n\n      if(differenceResult._ === 'updates.channelDifferenceTooLong') {\n        // log?.debug('channel diff too long', differenceResult);\n        delete this.channelStates[channelId];\n\n        this.saveUpdate({_: 'updateChannelReload', channel_id: channelId});\n        return;\n      }\n\n      this.appUsersManager.saveApiUsers(differenceResult.users);\n      this.appChatsManager.saveApiChats(differenceResult.chats);\n\n      // Should be first because of updateMessageID\n      log?.debug('applying', differenceResult.other_updates.length, 'channel other updates');\n      differenceResult.other_updates.forEach((update) => {\n        this.saveUpdate(update);\n      });\n\n      log?.debug('applying', differenceResult.new_messages.length, 'channel new messages');\n      differenceResult.new_messages.forEach((apiMessage) => {\n        this.saveUpdate({\n          _: 'updateNewChannelMessage',\n          message: apiMessage,\n          pts: channelState.pts,\n          pts_count: 0\n        });\n      });\n\n      log?.debug('apply channel diff', channelState.pts);\n\n      if(differenceResult._ === 'updates.channelDifference' &&\n        !differenceResult.pFlags.final) {\n        return this.getChannelDifference(channelId);\n      } else {\n        log?.debug('finished channel get diff');\n      }\n    });\n\n    if(!wasSyncing) {\n      this.justAName(channelState, promise, channelId);\n    }\n\n    return promise;\n  }\n\n  private onDifferenceTooLong() {\n    this.appUsersManager.clear();\n    this.appChatsManager.clear();\n    this.appMessagesManager.clear();\n\n    this.rootScope.dispatchEvent('state_cleared');\n  }\n\n  private justAName(state: UpdatesState, promise: UpdatesState['syncLoading'], channelId?: ChatId) {\n    state.syncLoading = promise;\n    this.rootScope.dispatchEvent('state_synchronizing', channelId);\n\n    promise.then(() => {\n      state.syncLoading = null;\n      this.rootScope.dispatchEvent('state_synchronized', channelId);\n    }, () => {\n      state.syncLoading = null;\n    });\n  }\n\n  public addChannelState(channelId: ChatId, pts: number) {\n    if(!pts) {\n      throw new Error('Add channel state without pts ' + channelId);\n    }\n\n    return this.channelStates[channelId] ??= {\n      pts,\n      pendingPtsUpdates: [],\n      syncPending: null,\n      syncLoading: null\n    };\n  }\n\n  public getChannelState(channelId: ChatId, pts?: number) {\n    if(this.channelStates[channelId] === undefined) {\n      this.addChannelState(channelId, pts);\n    }\n\n    return this.channelStates[channelId];\n  }\n\n  private processUpdate(update: Update, options: Partial<{\n    date: number,\n    seq: number,\n    seqStart: number/* ,\n    ignoreSyncLoading: boolean */\n  }> = {}) {\n    let channelId: ChatId;\n    switch(update._) {\n      case 'updateNewChannelMessage':\n      case 'updateEditChannelMessage':\n        channelId = this.appPeersManager.getPeerId(update.message.peer_id).toChatId();\n        break;\n      /* case 'updateDeleteChannelMessages':\n        channelId = update.channel_id;\n        break; */\n      case 'updateChannelTooLong':\n        channelId = update.channel_id;\n        if(!(channelId in this.channelStates)) {\n          return false;\n        }\n        break;\n      default:\n        if('channel_id' in update && 'pts' in update) {\n          channelId = update.channel_id;\n        }\n        break;\n    }\n\n    const {pts, pts_count} = update as Update.updateNewMessage;\n    const curState = channelId ? this.getChannelState(channelId, pts) : this.updatesState;\n\n    // this.log.log('process', channelId, curState.pts, update)\n\n    if(curState.syncLoading/*  && !options.ignoreSyncLoading */) {\n      return false;\n    }\n\n    if(update._ === 'updateChannelTooLong') {\n      if(!curState.lastPtsUpdateTime ||\n          curState.lastPtsUpdateTime < (Date.now() - SYNC_DELAY)) {\n        // this.log.trace('channel too long, get diff', channelId, update)\n        this.getChannelDifference(channelId);\n      }\n      return false;\n    }\n\n    if(update._ === 'updateNewMessage' ||\n        update._ === 'updateEditMessage' ||\n        update._ === 'updateNewChannelMessage' ||\n        update._ === 'updateEditChannelMessage') {\n      const message = update.message as Message.message;\n      const toPeerId = this.appPeersManager.getPeerId(message.peer_id);\n      const fwdHeader: MessageFwdHeader.messageFwdHeader = message.fwd_from || {} as any;\n      let reason: string;\n      if(message.from_id && !this.appUsersManager.hasUser(this.appPeersManager.getPeerId(message.from_id), message.pFlags.post/* || channelId*/) && (reason = 'author') ||\n          fwdHeader.from_id && !this.appUsersManager.hasUser(this.appPeersManager.getPeerId(fwdHeader.from_id), !!(fwdHeader.from_id as Peer.peerChannel).channel_id) && (reason = 'fwdAuthor') ||\n          (fwdHeader.from_id as Peer.peerChannel)?.channel_id && !this.appChatsManager.hasChat((fwdHeader.from_id as Peer.peerChannel).channel_id, true) && (reason = 'fwdChannel') ||\n          toPeerId.isUser() && !this.appUsersManager.hasUser(toPeerId) && (reason = 'toPeer User') ||\n          toPeerId.isAnyChat() && !this.appChatsManager.hasChat(toPeerId.toChatId()) && (reason = 'toPeer Chat')) {\n        this.log.warn('Not enough data for message update', toPeerId, reason, message);\n        if(channelId && this.appChatsManager.hasChat(channelId)) {\n          this.getChannelDifference(channelId);\n        } else {\n          this.forceGetDifference();\n        }\n        return false;\n      }\n    } else if(channelId && !this.appChatsManager.hasChat(channelId)) {\n      // this.log.log('skip update, missing channel', channelId, update)\n      return false;\n    }\n\n    let popPts: boolean;\n    let popSeq: boolean;\n\n    if(pts) {\n      const newPts = curState.pts + (pts_count || 0);\n      if(newPts < pts) {\n        this.debug && this.log.warn('Pts hole', curState, update, channelId && this.appChatsManager.getChat(channelId));\n        curState.pendingPtsUpdates.push(update as Update.updateNewMessage);\n        if(!curState.syncPending && !curState.syncLoading) {\n          curState.syncPending = {\n            timeout: ctx.setTimeout(() => {\n              curState.syncPending = null;\n\n              if(curState.syncLoading) {\n                return;\n              }\n\n              if(channelId) {\n                this.getChannelDifference(channelId);\n              } else {\n                this.getDifference();\n              }\n            }, SYNC_DELAY)\n          };\n        }\n\n        curState.syncPending.ptsAwaiting = true;\n        return false;\n      }\n\n      if(pts > curState.pts) {\n        curState.pts = pts;\n        popPts = true;\n\n        curState.lastPtsUpdateTime = Date.now();\n      } else if(pts_count) {\n        // this.log.warn('Duplicate update', update)\n        return false;\n      }\n\n      if(channelId && options.date && this.updatesState.date < options.date) {\n        this.updatesState.date = options.date;\n      }\n    } else if(!channelId && options.seq > 0) {\n      const seq = options.seq;\n      const seqStart = options.seqStart || seq;\n\n      if(seqStart !== curState.seq + 1) {\n        if(seqStart > curState.seq) {\n          this.debug && this.log.warn('Seq hole', curState, curState.syncPending?.seqAwaiting);\n\n          curState.pendingSeqUpdates[seqStart] ??= {seq, date: options.date, updates: []};\n          curState.pendingSeqUpdates[seqStart].updates.push(update);\n\n          if(!curState.syncPending) {\n            curState.syncPending = {\n              timeout: ctx.setTimeout(() => {\n                curState.syncPending = null;\n\n                if(curState.syncLoading) {\n                  return;\n                }\n\n                this.getDifference();\n              }, SYNC_DELAY)\n            };\n          }\n\n          if(!curState.syncPending.seqAwaiting ||\n            curState.syncPending.seqAwaiting < seqStart) {\n            curState.syncPending.seqAwaiting = seqStart;\n          }\n          return false;\n        }\n      }\n\n      if(curState.seq !== seq) {\n        curState.seq = seq;\n        if(options.date && curState.date < options.date) {\n          curState.date = options.date;\n        }\n\n        popSeq = true;\n      }\n    }\n\n    this.saveUpdate(update);\n\n    if(popPts) {\n      this.popPendingPtsUpdate(channelId);\n    } else if(popSeq) {\n      this.popPendingSeqUpdate();\n    }\n  }\n\n  public saveUpdate(update: Update) {\n    // this.debug && this.log('saveUpdate', update);\n    this.dispatchEvent(update._, update as any);\n  }\n\n  public subscribeToChannelUpdates(channelId: ChatId) {\n    const subscription = this.subscriptions[channelId] ??= {count: 0};\n    ++subscription.count;\n\n    const cb = () => {\n      const state = this.getChannelState(channelId);\n      if(!state.syncLoading && (!state.lastDifferenceTime || (Date.now() - state.lastDifferenceTime) > 2500)) {\n        this.getChannelDifference(channelId);\n      }\n    };\n\n    subscription.interval ??= ctx.setInterval(cb, 3000);\n    cb();\n  }\n\n  public unsubscribeFromChannelUpdates(channelId: ChatId, force?: boolean) {\n    const subscription = this.subscriptions[channelId];\n    if(!subscription?.interval || (--subscription.count && !force)) {\n      return;\n    }\n\n    clearInterval(subscription.interval);\n    subscription.interval = undefined;\n    delete this.subscriptions[channelId];\n  }\n\n  public attach(langCode?: string) {\n    if(this.attached) return;\n\n    // return;\n\n    this.log('attach');\n\n    this.attached = true;\n\n    this.appStateManager.getState().then(({updates: state}) => {\n      const newVersion = this.appStateManager.newVersion/*  || '1.6.0' */;\n\n      // rootScope.broadcast('state_synchronizing');\n      if(!state || !state.pts || !state.date/*  || !state.seq */) { // seq can be undefined because of updates.differenceTooLong\n        this.log('will get new state');\n\n        this.updatesState.syncLoading = new Promise((resolve) => {\n          this.apiManager.invokeApi('updates.getState', {}, {noErrorBox: true}).then((stateResult) => {\n            this.updatesState.seq = stateResult.seq;\n            this.updatesState.pts = stateResult.pts;\n            this.updatesState.date = stateResult.date;\n            this.saveUpdatesState();\n            // setTimeout(() => {\n            this.updatesState.syncLoading = null;\n            resolve();\n            // rootScope.broadcast('state_synchronized');\n            // }, 1000);\n\n          // ! for testing\n          // updatesState.seq = 1\n          // updatesState.pts = stateResult.pts - 5000\n          // updatesState.date = 1\n          // getDifference()\n          });\n        });\n      } else {\n        // ! for testing\n        /* state.seq = 1;\n        state.pts = state.pts - 15;\n        state.date = 1; */\n        // state.pts -= 100;\n\n        // state.date = 1628623682;\n        // state.pts = 2007500;\n        // state.seq = 503;\n\n        Object.assign(this.updatesState, state);\n\n        this.log('will get difference', Object.assign({}, state));\n\n        this.getDifference(true)/* .finally(() => {\n          if(this.updatesState.syncLoading) {\n            rootScope.broadcast('state_synchronizing');\n          }\n        }) */;\n      }\n\n      this.apiManager.setUpdatesProcessor(this.processUpdateMessage);\n\n      // this.updatesState.syncLoading.then(() => {\n      this.setProxy();\n      // });\n\n      if(newVersion) {\n        this.updatesState.syncLoading.then(async() => {\n          const strs: Record<string, string> = {\n            en: 'was updated to version',\n            ru: 'обновлён до версии'\n          };\n\n          const getChangelog = (lang: string) => {\n            fetch(`changelogs/${lang}_${newVersion.split(' ')[0]}.md`)\n            .then((res) => (res.status === 200 && res.ok && res.text()) || Promise.reject())\n            .then((text) => {\n              const langStr = strs[lang] || strs.en;\n              const pre = `**Telegram Web${App.suffix} ${langStr} ${newVersion}**\\n\\n`;\n\n              text = pre + text;\n\n              const entities: MessageEntity[] = [];\n              const message = parseMarkdown(text, entities);\n\n              const update: Update.updateServiceNotification = {\n                _: 'updateServiceNotification',\n                entities,\n                message,\n                type: 'local',\n                pFlags: {},\n                inbox_date: tsNow(true),\n                media: undefined\n              };\n\n              this.processLocalUpdate(update);\n            });\n          };\n\n          const languages = filterUnique([langCode, 'en']);\n          for(const language of languages) {\n            try {\n              await getChangelog(language);\n              break;\n            } catch(err) {\n\n            }\n          }\n        });\n      }\n    });\n  }\n}\n\ninterface ApiUpdatesManager extends EventListenerBase<{\n  [name in Update['_']]: (update: ConstructorDeclMap[name]) => void\n}>, AppManager {}\napplyMixins(ApiUpdatesManager, [EventListenerBase, AppManager]);\n\nexport {ApiUpdatesManager};\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {UserProfilePhoto, ChatPhoto, InputFileLocation} from '../../layer';\nimport {DownloadOptions} from '../mtproto/apiFileManager';\nimport {AppManager} from './manager';\n\nexport type PeerPhotoSize = 'photo_small' | 'photo_big';\n\nexport class AppAvatarsManager extends AppManager {\n  private savedAvatarURLs: {\n    [peerId: PeerId]: {\n      [size in PeerPhotoSize]?: string | Promise<string>\n    }\n  } = {};\n\n  protected after() {\n    this.rootScope.addEventListener('avatar_update', ({peerId, threadId}) => {\n      if(threadId) {\n        return;\n      }\n\n      this.removeFromAvatarsCache(peerId);\n    });\n  }\n\n  public isAvatarCached(peerId: PeerId, size?: PeerPhotoSize) {\n    const saved = this.savedAvatarURLs[peerId];\n    if(size === undefined) {\n      return !!saved;\n    }\n\n    return !!(saved && saved[size] && !(saved[size] instanceof Promise));\n  }\n\n  public removeFromAvatarsCache(peerId: PeerId) {\n    if(this.savedAvatarURLs[peerId]) {\n      delete this.savedAvatarURLs[peerId];\n    }\n  }\n\n  public loadAvatar(peerId: PeerId, photo: UserProfilePhoto.userProfilePhoto | ChatPhoto.chatPhoto, size: PeerPhotoSize) {\n    const saved = this.savedAvatarURLs[peerId] ??= {};\n    if(!saved[size]) {\n      // console.warn('will invoke downloadSmallFile:', peerId);\n      const peerPhotoFileLocation: InputFileLocation.inputPeerPhotoFileLocation = {\n        _: 'inputPeerPhotoFileLocation',\n        pFlags: {},\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        photo_id: photo.photo_id\n      };\n\n      const downloadOptions: DownloadOptions = {dcId: photo.dc_id, location: peerPhotoFileLocation};\n      if(size === 'photo_big') {\n        peerPhotoFileLocation.pFlags.big = true;\n        downloadOptions.limitPart = 512 * 1024;\n      }\n\n      /* let str: string;\n      const time = Date.now();\n      if(peerId === 0) {\n        str = `download avatar ${peerId}`;\n      } */\n\n      const promise = this.apiFileManager.download(downloadOptions);\n      return saved[size] = promise.then((blob) => {\n        return saved[size] = URL.createObjectURL(blob);\n\n        /* if(str) {\n          console.log(str, Date.now() / 1000, Date.now() - time);\n        } */\n      });\n    } else {\n      return saved[size];\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {getEnvironment} from '../../environment/utils';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport {nextRandomUint} from '../../helpers/random';\nimport {InputPhoneCall, MessagesDhConfig, PhoneCall, PhoneCallDiscardReason, PhoneCallProtocol, PhonePhoneCall} from '../../layer';\nimport {AppManager} from './manager';\n\nexport type CallId = PhoneCall['id'];\n\nexport type MyPhoneCall = Exclude<PhoneCall, PhoneCall.phoneCallEmpty | PhoneCall.phoneCallDiscarded>;\n\nexport class AppCallsManager extends AppManager {\n  private calls: Map<CallId, MyPhoneCall>;\n\n  protected after() {\n    this.calls = new Map();\n\n    if(!getEnvironment().IS_CALL_SUPPORTED) {\n      return;\n    }\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updatePhoneCall: (update) => {\n        this.saveCall(update.phone_call);\n      },\n\n      updatePhoneCallSignalingData: (update) => {\n        this.rootScope.dispatchEvent('call_signaling', {callId: update.phone_call_id, data: update.data});\n      }\n    });\n  }\n\n  public computeKey(g_b: Uint8Array, a: Uint8Array, p: Uint8Array) {\n    return this.cryptoWorker.invokeCrypto('compute-dh-key', g_b, a, p);\n  }\n\n  public saveCall(call: PhoneCall) {\n    const isDiscarded = call._ === 'phoneCallDiscarded';\n    const oldCall = this.calls.get(call.id);\n    if(oldCall) {\n      // if(shouldUpdate) {\n      safeReplaceObject(oldCall, call);\n      // }\n\n      if(isDiscarded) {\n        this.calls.delete(call.id);\n      }\n\n      call = oldCall;\n    } else if(!isDiscarded) {\n      this.calls.set(call.id, call as any);\n    }\n\n    this.rootScope.dispatchEvent('call_update', call);\n\n    return call;\n  }\n\n  public getCall(callId: CallId) {\n    return this.calls.get(callId);\n  }\n\n  public getCallInput(id: CallId): InputPhoneCall {\n    const call = this.getCall(id);\n    return {\n      _: 'inputPhoneCall',\n      id: call.id,\n      access_hash: call.access_hash\n    };\n  }\n\n  public savePhonePhoneCall(phonePhoneCall: PhonePhoneCall) {\n    this.appUsersManager.saveApiUsers(phonePhoneCall.users);\n    return this.saveCall(phonePhoneCall.phone_call);\n  }\n\n  public generateDh() {\n    return this.apiManager.invokeApi('messages.getDhConfig', {\n      version: 0,\n      random_length: 256\n    }).then((dhConfig) => {\n      return this.cryptoWorker.invokeCrypto('generate-dh', dhConfig as MessagesDhConfig.messagesDhConfig);\n    });\n  }\n\n  // private verifyProtocolCompatibility(protocol: PhoneCallProtocol) {\n  //   const my = getCallProtocol();\n  //   const myVersion = my.library_versions[0];\n  //   return !protocol.library_versions.find((version) => {\n  //     return compareVersion(myVersion, version) > 0;\n  //   });\n  // }\n\n  public async requestCall(userId: UserId, protocol: PhoneCallProtocol, g_a_hash: Uint8Array, video?: boolean) {\n    const phonePhoneCall = await this.apiManager.invokeApi('phone.requestCall', {\n      user_id: this.appUsersManager.getUserInput(userId),\n      protocol: protocol,\n      video: video,\n      random_id: nextRandomUint(32),\n      g_a_hash: g_a_hash\n    });\n\n    return this.savePhonePhoneCall(phonePhoneCall);\n  }\n\n  public async discardCall(callId: CallId, duration: number, reason: PhoneCallDiscardReason['_'], video?: boolean) {\n    if(!this.getCall(callId)) {\n      return;\n    }\n\n    const updates = await this.apiManager.invokeApi('phone.discardCall', {\n      video,\n      peer: this.getCallInput(callId),\n      duration,\n      reason: {\n        _: reason\n      },\n      connection_id: '0'\n    });\n\n    this.apiUpdatesManager.processUpdateMessage(updates);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport deepEqual from '../../helpers/object/deepEqual';\nimport isObject from '../../helpers/object/isObject';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport {ChannelParticipant, ChannelsCreateChannel, Chat, ChatAdminRights, ChatBannedRights, ChatInvite, ChatParticipant, ChatPhoto, ChatReactions, InputChannel, InputChatPhoto, InputFile, InputPeer, MessagesSponsoredMessages, Peer, SponsoredMessage, Update, Updates} from '../../layer';\nimport {isRestricted} from '../../helpers/restrictions';\nimport {AppManager} from './manager';\nimport hasRights from './utils/chats/hasRights';\nimport getParticipantPeerId from './utils/chats/getParticipantPeerId';\nimport {AppStoragesManager} from './appStoragesManager';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\nimport {randomLong} from '../../helpers/random';\nimport tsNow from '../../helpers/tsNow';\n\nexport type Channel = Chat.channel;\nexport type ChatRights = keyof ChatBannedRights['pFlags'] | keyof ChatAdminRights['pFlags'] | 'change_type' | 'change_permissions' | 'delete_chat' | 'view_participants' | 'invite_links';\n\nexport class AppChatsManager extends AppManager {\n  private storage: AppStoragesManager['storages']['chats'];\n\n  private chats: {[id: ChatId]: Exclude<Chat, Chat.chatEmpty>};\n  // private usernames: any;\n  // private channelAccess: any;\n  // private megagroups: {[id: number]: true};\n\n  protected after() {\n    this.clear(true);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateChannelParticipant: this.onUpdateChannelParticipant,\n\n      updateChatDefaultBannedRights: this.onUpdateChatDefaultBannedRights\n    });\n\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.appStoragesManager.loadStorage('chats')\n    ]).then(([state, {results: chats, storage}]) => {\n      this.storage = storage;\n\n      this.saveApiChats(chats);\n\n      this.peersStorage.addEventListener('peerNeeded', (peerId) => {\n        if(peerId.isUser() || this.storage.getFromCache(peerId.toChatId())) {\n          return;\n        }\n\n        this.storage.set({\n          [peerId.toChatId()]: this.getChat(peerId.toChatId())\n        });\n      });\n\n      this.peersStorage.addEventListener('peerUnneeded', (peerId) => {\n        if(peerId.isUser() || !this.storage.getFromCache(peerId.toChatId())) {\n          return;\n        }\n\n        this.storage.delete(peerId.toChatId());\n      });\n    });\n  }\n\n  public clear = (init = false) => {\n    if(!init) {\n      for(const chatId in this.chats) {\n        if(!chatId) continue;\n        if(!this.peersStorage.isPeerNeeded(chatId.toPeerId(true))) {\n          const chat = this.chats[chatId];\n          this.appUsersManager.modifyUsernamesCache(chat, false);\n\n          this.storage.delete(chatId);\n          delete this.chats[chatId];\n        }\n      }\n    } else {\n      this.chats = {};\n    }\n  };\n\n  public saveApiChats(apiChats: any[], override?: boolean) {\n    if((apiChats as any).saved) return;\n    (apiChats as any).saved = true;\n    apiChats.forEach((chat) => this.saveApiChat(chat, override));\n  }\n\n  public saveApiChat(chat: Chat, override?: boolean) {\n    if(!chat || chat._ === 'chatEmpty') return;\n    /* if(chat._ !== 'chat' && chat._ !== 'channel') {\n      return;\n    } */\n\n    // * exclude from state\n    // defineNotNumerableProperties(chat, ['rTitle', 'initials']);\n\n    const oldChat = this.chats[chat.id];\n\n    /* if(oldChat && !override) {\n      return;\n    } */\n\n    (chat as Chat.chat).pFlags ??= {};\n\n    if((chat as Chat.channel).pFlags.min && oldChat !== undefined) {\n      return;\n    }\n\n    if(chat._ === 'channel' &&\n        chat.participants_count === undefined &&\n        oldChat !== undefined &&\n        (oldChat as Chat.channel).participants_count) {\n      chat.participants_count = (oldChat as Chat.channel).participants_count;\n    }\n\n    if((chat as Chat.channel).photo?._ === 'chatPhotoEmpty') {\n      delete (chat as Chat.channel).photo;\n    }\n\n    const changedUsername = this.appUsersManager.setUsernameToCache(chat, oldChat);\n\n    /* if(chat.username) {\n      let searchUsername = searchIndexManager.cleanUsername(chat.username);\n      this.usernames[searchUsername] = chat.id;\n    } */\n\n    const peerId = chat.id.toPeerId(true);\n    if(oldChat === undefined) {\n      this.chats[chat.id] = chat;\n    } else {\n      const oldPhotoId = ((oldChat as Chat.chat).photo as ChatPhoto.chatPhoto)?.photo_id;\n      const newPhotoId = ((chat as Chat.chat).photo as ChatPhoto.chatPhoto)?.photo_id;\n      const toggledForum = (oldChat as Chat.channel).pFlags.forum !== (chat as Chat.channel).pFlags.forum;\n      const changedPhoto = oldPhotoId !== newPhotoId || toggledForum;\n\n      const changedTitle = oldChat.title !== chat.title || changedUsername;\n\n      const changedAnyBadge = (oldChat as Chat.channel).pFlags.verified !== (chat as Chat.channel).pFlags.verified ||\n        (oldChat as Chat.channel).pFlags.scam !== (chat as Chat.channel).pFlags.scam ||\n        (oldChat as Chat.channel).pFlags.fake !== (chat as Chat.channel).pFlags.fake;\n\n      safeReplaceObject(oldChat, chat);\n      this.rootScope.dispatchEvent('chat_update', chat.id);\n\n      if(changedPhoto) {\n        this.rootScope.dispatchEvent('avatar_update', {peerId});\n      }\n\n      if(changedTitle || changedAnyBadge) {\n        this.rootScope.dispatchEvent('peer_title_edit', {peerId});\n      }\n\n      if(toggledForum) {\n        this.rootScope.dispatchEvent('chat_toggle_forum', {chatId: chat.id, enabled: !!(chat as Chat.channel).pFlags.forum});\n      }\n    }\n\n    if(this.peersStorage.isPeerNeeded(peerId)) {\n      this.storage.set({\n        [chat.id]: chat\n      });\n    }\n  }\n\n  public getChat(id: ChatId) {\n    return this.chats[id];\n  }\n\n  /**\n   * Check the user's ability to do an action in chat\n   * @param id\n   * @param action creator can still send messages to left channel. so this function shows server rights. see canSendToPeer for local rights in messages manager.\n   * @param rights do not provide this parameter when checking rights for self\n   * @param isThread\n   * @returns\n   */\n  public hasRights(id: ChatId, action: ChatRights, rights?: ChatAdminRights | ChatBannedRights, isThread?: boolean) {\n    return hasRights(this.getChat(id), action, rights, isThread);\n  }\n\n  public editChatDefaultBannedRights(id: ChatId, banned_rights: ChatBannedRights) {\n    const chat = this.getChat(id) as Chat.chat;\n    if(chat.default_banned_rights) {\n      if(chat.default_banned_rights.until_date === banned_rights.until_date && deepEqual(chat.default_banned_rights.pFlags, banned_rights.pFlags)) {\n        return Promise.resolve();\n      }\n    }\n\n    return this.apiManager.invokeApi('messages.editChatDefaultBannedRights', {\n      peer: this.appPeersManager.getInputPeerById(id.toPeerId(true)),\n      banned_rights\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  /* public resolveUsername(username: string) {\n    return this.usernames[username] || 0;\n  } */\n\n  /* public saveChannelAccess(id: ChatId, accessHash: string) {\n    this.channelAccess[id] = accessHash;\n  } */\n\n  /* public saveIsMegagroup(id: ChatId) {\n    this.megagroups[id] = true;\n  } */\n\n  public isChannel(id: ChatId) {\n    const chat = this.chats[id];\n    return !!(chat && (chat._ === 'channel' || chat._ === 'channelForbidden')/*  || this.channelAccess[id] */);\n  }\n\n  public isMegagroup(id: ChatId) {\n    /* if(this.megagroups[id]) {\n      return true;\n    } */\n\n    const chat: Chat = this.chats[id];\n    return !!(chat as Chat.channel)?.pFlags?.megagroup;\n  }\n\n  public isForum(id: ChatId) {\n    const chat = this.chats[id];\n    return !!(chat as Chat.channel)?.pFlags?.forum;\n  }\n\n  public isBroadcast(id: ChatId) {\n    return this.isChannel(id) && !this.isMegagroup(id);\n  }\n\n  public isInChat(id: ChatId) {\n    let good = true;\n    const chat: Chat = this.getChat(id);\n    if(!chat ||\n      chat._ === 'channelForbidden' ||\n      chat._ === 'chatForbidden' ||\n      (chat as any as Chat.chatEmpty)._ === 'chatEmpty' ||\n      (chat as Chat.chat).pFlags.left ||\n      // || (chat as any).pFlags.kicked\n      (chat as Chat.chat).pFlags.deactivated) {\n      good = false;\n    }\n\n    return good;\n  }\n\n  public getChannelInput(id: ChatId): InputChannel {\n    const chat: Chat = this.getChat(id);\n    if(!chat || !(chat as Chat.channel).access_hash) {\n      return {\n        _: 'inputChannelEmpty'\n      };\n    } else {\n      return {\n        _: 'inputChannel',\n        channel_id: id,\n        access_hash: (chat as Chat.channel).access_hash/*  || this.channelAccess[id] */ || '0'\n      };\n    }\n  }\n\n  public getInputPeer(id: ChatId) {\n    return this.isChannel(id) ? this.getChannelInputPeer(id) : this.getChatInputPeer(id);\n  }\n\n  public getChatInputPeer(id: ChatId): InputPeer.inputPeerChat {\n    return {\n      _: 'inputPeerChat',\n      chat_id: id\n    };\n  }\n\n  public getChannelInputPeer(id: ChatId): InputPeer.inputPeerChannel {\n    return {\n      _: 'inputPeerChannel',\n      channel_id: id,\n      access_hash: (this.getChat(id) as Chat.channel).access_hash/*  || this.channelAccess[id] */ || 0\n    };\n  }\n\n  public hasChat(id: ChatId, allowMin?: true) {\n    const chat = this.chats[id];\n    return isObject(chat) && (allowMin || !(chat as Chat.channel).pFlags.min);\n  }\n\n  public getChatString(id: ChatId) {\n    const chat = this.getChat(id);\n    if(this.isChannel(id)) {\n      return (this.isMegagroup(id) ? 's' : 'c') + id + '_' + (chat as Chat.channel).access_hash;\n    }\n    return 'g' + id;\n  }\n\n  /* public wrapForFull(id: number, fullChat: any) {\n    const chatFull = copy(fullChat);\n    const chat = this.getChat(id);\n\n    if(!chatFull.participants_count) {\n      chatFull.participants_count = chat.participants_count;\n    }\n\n    if(chatFull.participants &&\n        chatFull.participants._ === 'chatParticipants') {\n      chatFull.participants.participants = this.wrapParticipants(id, chatFull.participants.participants);\n    }\n\n    if(chatFull.about) {\n      chatFull.rAbout = wrapRichText(chatFull.about, {noLinebreaks: true});\n    }\n\n    //chatFull.peerString = this.getChatString(id);\n    chatFull.chat = chat;\n\n    return chatFull;\n  }\n\n  public wrapParticipants(id: number, participants: any[]) {\n    const chat = this.getChat(id);\n    const myId = appUsersManager.getSelf().id;\n    if(this.isChannel(id)) {\n      const isAdmin = chat.pFlags.creator;\n      participants.forEach((participant) => {\n        participant.canLeave = myId === participant.user_id;\n        participant.canKick = isAdmin && participant._ === 'channelParticipant';\n\n        // just for order by last seen\n        participant.user = appUsersManager.getUser(participant.user_id);\n      });\n    } else {\n      const isAdmin = chat.pFlags.creator || chat.pFlags.admins_enabled && chat.pFlags.admin;\n      participants.forEach((participant) => {\n        participant.canLeave = myId === participant.user_id;\n        participant.canKick = !participant.canLeave && (\n          chat.pFlags.creator ||\n          participant._ === 'chatParticipant' && (isAdmin || myId === participant.inviter_id)\n        );\n\n        // just for order by last seen\n        participant.user = appUsersManager.getUser(participant.user_id);\n      });\n    }\n\n    return participants;\n  } */\n\n  public createChannel(options: ChannelsCreateChannel): Promise<ChatId> {\n    return this.apiManager.invokeApi('channels.createChannel', options).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n\n      const channelId = (updates as any).chats[0].id;\n      return channelId;\n    });\n  }\n\n  public inviteToChannel(id: ChatId, userIds: UserId[]) {\n    const input = this.getChannelInput(id);\n    const usersInputs = userIds.map((u) => this.appUsersManager.getUserInput(u));\n\n    return this.apiManager.invokeApi('channels.inviteToChannel', {\n      channel: input,\n      users: usersInputs\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public createChat(title: string, userIds: UserId[]): Promise<ChatId> {\n    return this.apiManager.invokeApi('messages.createChat', {\n      users: userIds.map((u) => this.appUsersManager.getUserInput(u)),\n      title\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n\n      const chatId = (updates as any as Updates.updates).chats[0].id;\n      return chatId;\n    });\n  }\n\n  private onChatUpdated = (chatId: ChatId, updates?: Updates) => {\n    // console.log('onChatUpdated', chatId, updates);\n\n    this.apiUpdatesManager.processUpdateMessage(updates);\n    if((updates as Updates.updates)?.updates?.length && this.isChannel(chatId)) {\n      this.rootScope.dispatchEvent('invalidate_participants', chatId);\n    }\n  };\n\n  public leaveChannel(id: ChatId) {\n    return this.apiManager.invokeApi('channels.leaveChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public joinChannel(id: ChatId) {\n    return this.apiManager.invokeApi('channels.joinChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public addChatUser(id: ChatId, userId: UserId, fwdLimit = 100) {\n    return this.apiManager.invokeApi('messages.addChatUser', {\n      chat_id: id,\n      user_id: this.appUsersManager.getUserInput(userId),\n      fwd_limit: fwdLimit\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public deleteChatUser(id: ChatId, userId: UserId) {\n    return this.apiManager.invokeApi('messages.deleteChatUser', {\n      chat_id: id,\n      user_id: this.appUsersManager.getUserInput(userId)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public leaveChat(id: ChatId) {\n    return this.deleteChatUser(id, this.appUsersManager.getSelf().id);\n  }\n\n  public leave(id: ChatId) {\n    return this.isChannel(id) ? this.leaveChannel(id) : this.leaveChat(id);\n  }\n\n  public delete(id: ChatId) {\n    return this.isChannel(id) ? this.deleteChannel(id) : this.deleteChat(id);\n  }\n\n  public deleteChannel(id: ChatId) {\n    return this.apiManager.invokeApi('channels.deleteChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public deleteChat(id: ChatId) {\n    // return this.leaveChat(id).then(() => {\n    return this.apiManager.invokeApi('messages.deleteChat', {\n      chat_id: id\n    });\n    // });\n  }\n\n  public migrateChat(id: ChatId): Promise<ChatId> {\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'channel') return Promise.resolve(chat.id);\n    return this.apiManager.invokeApi('messages.migrateChat', {\n      chat_id: id\n    }).then((updates) => {\n      this.onChatUpdated(id, updates);\n      const update: Update.updateChannel = (updates as Updates.updates).updates.find((u) => u._ === 'updateChannel') as any;\n      return update.channel_id;\n    });\n  }\n\n  public updateUsername(id: ChatId, username: string, doNotRefresh?: boolean) {\n    const promise = this.apiManager.invokeApi('channels.updateUsername', {\n      channel: this.getChannelInput(id),\n      username\n    });\n\n    return this.refreshChatAfterRequest(id, promise, doNotRefresh);\n  }\n\n  public editPhoto(id: ChatId, inputFile: InputFile) {\n    const inputChatPhoto: InputChatPhoto = {\n      _: 'inputChatUploadedPhoto',\n      file: inputFile\n    };\n\n    let promise: any;\n    if(this.isChannel(id)) {\n      promise = this.apiManager.invokeApi('channels.editPhoto', {\n        channel: this.getChannelInput(id),\n        photo: inputChatPhoto\n      });\n    } else {\n      promise = this.apiManager.invokeApi('messages.editChatPhoto', {\n        chat_id: id,\n        photo: inputChatPhoto\n      });\n    }\n\n    return promise.then(this.onChatUpdated.bind(this, id));\n  }\n\n  public editTitle(id: ChatId, title: string) {\n    let promise: any;\n\n    if(this.isChannel(id)) {\n      promise = this.apiManager.invokeApi('channels.editTitle', {\n        channel: this.getChannelInput(id),\n        title\n      });\n    } else {\n      promise = this.apiManager.invokeApi('messages.editChatTitle', {\n        chat_id: id,\n        title\n      });\n    }\n\n    return promise.then(this.onChatUpdated.bind(this, id));\n  }\n\n  public editAbout(id: ChatId, about: string) {\n    const peerId = id.toPeerId(true);\n    return this.apiManager.invokeApi('messages.editChatAbout', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      about\n    }).then((bool) => {\n      if(bool) {\n        this.rootScope.dispatchEvent('peer_bio_edit', peerId);\n      }\n\n      return bool;\n    });\n  }\n\n  public async editBanned(id: ChatId, participant: PeerId | ChannelParticipant | ChatParticipant, banned_rights: ChatBannedRights) {\n    const peerId = typeof(participant) !== 'object' ? participant : getParticipantPeerId(participant);\n    const wasChannel = this.isChannel(id);\n    if(!wasChannel) {\n      const channelId = await this.migrateChat(id);\n      id = channelId;\n    }\n\n    return this.apiManager.invokeApi('channels.editBanned', {\n      channel: this.getChannelInput(id),\n      participant: this.appPeersManager.getInputPeerById(peerId),\n      banned_rights\n    }).then((updates) => {\n      this.onChatUpdated(id, updates);\n\n      if(typeof(participant) === 'object') {\n        const timestamp = tsNow(true);\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateChannelParticipant',\n          channel_id: id,\n          date: timestamp,\n          actor_id: undefined,\n          qts: undefined,\n          user_id: peerId,\n          prev_participant: wasChannel ? participant as ChannelParticipant : undefined,\n          new_participant: Object.keys(banned_rights.pFlags).length ? {\n            _: 'channelParticipantBanned',\n            date: timestamp,\n            banned_rights,\n            kicked_by: this.appUsersManager.getSelf().id,\n            peer: this.appPeersManager.getOutputPeer(peerId),\n            pFlags: {}\n          } : undefined,\n          pFlags: {}\n        });\n      }\n    });\n  }\n\n  public clearChannelParticipantBannedRights(id: ChatId, participant: PeerId | ChannelParticipant) {\n    return this.editBanned(id, participant, {\n      _: 'chatBannedRights',\n      until_date: 0,\n      pFlags: {}\n    });\n  }\n\n  public kickFromChannel(id: ChatId, participant: PeerId | ChannelParticipant) {\n    return this.editBanned(id, participant, {\n      _: 'chatBannedRights',\n      until_date: 0,\n      pFlags: {\n        view_messages: true\n      }\n    });\n  }\n\n  public kickFromChat(id: ChatId, participant: PeerId | ChannelParticipant | ChatParticipant) {\n    if(this.isChannel(id)) return this.kickFromChannel(id, participant as ChannelParticipant);\n    else return this.deleteChatUser(id, isObject(participant) ? getParticipantPeerId(participant) : (participant as PeerId).toUserId());\n  }\n\n  public resolveChannel(id: ChatId) {\n    return this.apiManager.invokeApiSingle('channels.getChannels', {\n      id: [{\n        _: 'inputChannel',\n        channel_id: id,\n        access_hash: '0'\n      }]\n    }).then((messagesChats) => {\n      this.saveApiChats(messagesChats.chats);\n    });\n  }\n\n  public togglePreHistoryHidden(id: ChatId, enabled: boolean) {\n    return this.migrateChat(id).then((channelId) => {\n      return this.apiManager.invokeApi('channels.togglePreHistoryHidden', {\n        channel: this.getChannelInput(channelId),\n        enabled\n      }).then(this.onChatUpdated.bind(this, channelId));\n    });\n  }\n\n  public toggleSignatures(id: ChatId, enabled: boolean) {\n    return this.apiManager.invokeApi('channels.toggleSignatures', {\n      channel: this.getChannelInput(id),\n      enabled\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public toggleNoForwards(id: ChatId, enabled: boolean) {\n    return this.apiManager.invokeApi('messages.toggleNoForwards', {\n      peer: this.getInputPeer(id),\n      enabled\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public setChatAvailableReactions(id: ChatId, reactions: ChatReactions) {\n    const chatFull = this.appProfileManager.getCachedFullChat(id);\n    if(chatFull) {\n      chatFull.available_reactions = reactions;\n      this.rootScope.dispatchEvent('chat_full_update', id);\n    }\n\n    return this.apiManager.invokeApi('messages.setChatAvailableReactions', {\n      peer: this.getInputPeer(id),\n      available_reactions: reactions\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public getSendAs(channelId: ChatId) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'channels.getSendAs',\n      params: {\n        peer: this.getChannelInputPeer(channelId)\n      },\n      processResult: (sendAsPeers) => {\n        this.appUsersManager.saveApiUsers(sendAsPeers.users);\n        this.saveApiChats(sendAsPeers.chats);\n\n        return sendAsPeers.peers;\n      }\n    });\n  }\n\n  public importChatInvite(hash: string) {\n    return this.apiManager.invokeApi('messages.importChatInvite', {hash})\n    .then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n      const chat = (updates as Updates.updates).chats[0];\n      return chat.id;\n    });\n  }\n\n  public checkUsername(chatId: ChatId, username: string) {\n    return this.apiManager.invokeApi('channels.checkUsername', {\n      channel: this.getChannelInput(chatId),\n      username\n    });\n  }\n\n  public getSponsoredMessage(chatId: ChatId) {\n    // const s: MessagesSponsoredMessages.messagesSponsoredMessages = {\n    //   '_': 'messages.sponsoredMessages',\n    //   'messages': [\n    //     {\n    //       '_': 'sponsoredMessage',\n    //       'pFlags': {},\n    //       'flags': 9,\n    //       'random_id': new Uint8Array([\n    //         80,\n    //         5,\n    //         249,\n    //         174,\n    //         44,\n    //         73,\n    //         173,\n    //         14,\n    //         246,\n    //         81,\n    //         187,\n    //         182,\n    //         223,\n    //         5,\n    //         4,\n    //         128\n    //       ]),\n    //       'from_id': {\n    //         '_': 'peerUser',\n    //         'user_id': 983000232\n    //       },\n    //       'start_param': 'GreatMinds',\n    //       'message': 'This is a long sponsored message. In fact, it has the maximum length allowed on the platform – 160 characters 😬😬. It\\'s promoting a bot with a start parameter.' + chatId\n    //     }\n    //   ],\n    //   'chats': [],\n    //   'users': [\n    //     {\n    //       '_': 'user',\n    //       'pFlags': {\n    //         'bot': true,\n    //         'verified': true,\n    //         'apply_min_photo': true\n    //       },\n    //       'flags': 34226219,\n    //       'id': 983000232,\n    //       'access_hash': '-294959558742535650',\n    //       'first_name': 'Quiz Bot',\n    //       'username': 'QuizBot',\n    //       'photo': {\n    //         '_': 'userProfilePhoto',\n    //         'pFlags': {},\n    //         'flags': 2,\n    //         'photo_id': '4221953848856651689',\n    //         'stripped_thumb': new Uint8Array([\n    //           1,\n    //           8,\n    //           8,\n    //           155,\n    //           247,\n    //           95,\n    //           103,\n    //           255,\n    //           0,\n    //           110,\n    //           138,\n    //           40,\n    //           174,\n    //           132,\n    //           142,\n    //           6,\n    //           238,\n    //           127\n    //         ]),\n    //         'dc_id': 2\n    //       },\n    //       'bot_info_version': 11,\n    //       'bot_inline_placeholder': 'Search a quiz...',\n    //       'sortName': 'quiz bot'\n    //     }\n    //   ]\n    // };\n\n    // const promise = Promise.resolve(s);\n    const promise = this.apiManager.invokeApiCacheable('channels.getSponsoredMessages', {\n      channel: this.getChannelInput(chatId)\n    }, {cacheSeconds: 300});\n\n    return promise.then((sponsoredMessages) => {\n      if(sponsoredMessages._ === 'messages.sponsoredMessages') {\n        this.appUsersManager.saveApiUsers(sponsoredMessages.users);\n        this.appChatsManager.saveApiChats(sponsoredMessages.chats);\n\n        const sponsoredMessage = sponsoredMessages.messages.shift();\n        sponsoredMessages.messages.push(sponsoredMessage);\n\n        sponsoredMessages.messages.forEach((sponsoredMessage) => {\n          if(sponsoredMessage.channel_post) {\n            sponsoredMessage.channel_post = this.appMessagesIdsManager.generateMessageId(sponsoredMessage.channel_post, (sponsoredMessage.from_id as Peer.peerChannel).channel_id);\n          }\n        });\n      }\n\n      return sponsoredMessages;\n    });\n  }\n\n  public viewSponsoredMessage(chatId: ChatId, randomId: SponsoredMessage['random_id']) {\n    return this.apiManager.invokeApiSingle('channels.viewSponsoredMessage', {\n      channel: this.getChannelInput(chatId),\n      random_id: randomId\n    });\n  }\n\n  public checkChatInvite(hash: string) {\n    return this.apiManager.invokeApi('messages.checkChatInvite', {\n      hash: hash\n    }).then((chatInvite) => {\n      if((chatInvite as ChatInvite.chatInvitePeek).chat) {\n        this.saveApiChat((chatInvite as ChatInvite.chatInvitePeek).chat, true);\n      }\n\n      return chatInvite;\n    });\n  }\n\n  public deactivateAllUsernames(chatId: ChatId, doNotRefresh?: boolean) {\n    const promise = this.apiManager.invokeApi('channels.deactivateAllUsernames', {\n      channel: this.getChannelInput(chatId)\n    });\n\n    return this.refreshChatAfterRequest(chatId, promise, doNotRefresh);\n  }\n\n  public makeChannelPrivate(chatId: ChatId) {\n    const promises: Promise<boolean>[] = [\n      this.updateUsername(chatId, '', true),\n      this.deactivateAllUsernames(chatId, true)\n    ];\n\n    const promise = Promise.all(promises).then(() => true);\n    return this.refreshChatAfterRequest(chatId, promise);\n  }\n\n  public refreshChatAfterRequest<T extends Promise<any>>(chatId: ChatId, promise: T, doNotRefresh?: boolean): T {\n    if(doNotRefresh) {\n      return promise;\n    }\n\n    return promise.then((value) => {\n      return this.getChannels([chatId]).then(() => value);\n    }) as T;\n  }\n\n  public getChannels(chatIds: ChatId[]) {\n    return this.apiManager.invokeApi('channels.getChannels', {\n      id: chatIds.map((chatId) => this.getChannelInput(chatId))\n    }).then((messagesChats) => {\n      this.saveApiChats(messagesChats.chats);\n    });\n  }\n\n  public toggleForum(chatId: ChatId, enabled: boolean) {\n    return this.migrateChat(chatId).then((channelId) => {\n      return this.apiManager.invokeApi('channels.toggleForum', {\n        channel: this.getChannelInput(channelId),\n        enabled\n      }).then(this.onChatUpdated.bind(this, channelId));\n    });\n  }\n\n  public editForumTopic(options: {\n    chatId: ChatId,\n    topicId: number,\n    title?: string,\n    iconEmojiId?: DocId,\n    closed?: boolean,\n    hidden?: boolean\n  }) {\n    const {chatId, topicId, title, iconEmojiId, closed, hidden} = options;\n    return this.apiManager.invokeApi('channels.editForumTopic', {\n      channel: this.getChannelInput(chatId),\n      topic_id: getServerMessageId(topicId),\n      title,\n      icon_emoji_id: iconEmojiId,\n      closed,\n      hidden\n    }).then(this.onChatUpdated.bind(this, chatId));\n  }\n\n  public async createForumTopic(options: {\n    chatId: ChatId,\n    title: string,\n    iconColor: number,\n    iconEmojiId: DocId\n  }) {\n    const {chatId, title, iconColor, iconEmojiId} = options;\n\n    const channelFull = await this.appProfileManager.getChannelFull(chatId);\n    const sendAsInputPeer = channelFull.default_send_as && this.appPeersManager.getInputPeerById(this.appPeersManager.getPeerId(channelFull.default_send_as));\n\n    return this.apiManager.invokeApi('channels.createForumTopic', {\n      channel: this.getChannelInput(chatId),\n      title,\n      icon_color: iconColor,\n      icon_emoji_id: iconEmojiId,\n      random_id: randomLong(),\n      send_as: sendAsInputPeer\n    }).then((updates) => {\n      this.onChatUpdated(chatId, updates);\n\n      const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateNewChannelMessage') as Update.updateNewChannelMessage;\n      return this.appMessagesIdsManager.generateMessageId(update.message.id, chatId);\n    });\n  }\n\n  public updatePinnedForumTopic(chatId: ChatId, topicId: number, pinned: boolean) {\n    return this.apiManager.invokeApi('channels.updatePinnedForumTopic', {\n      channel: this.getChannelInput(chatId),\n      topic_id: getServerMessageId(topicId),\n      pinned\n    }).then(this.onChatUpdated.bind(this, chatId));\n  }\n\n  private onUpdateChannelParticipant = (update: Update.updateChannelParticipant) => {\n    this.apiManager.clearCache('channels.getParticipants', (params) => {\n      return (params.channel as InputChannel.inputChannel).channel_id === update.channel_id;\n    });\n\n    this.rootScope.dispatchEvent('chat_participant', update);\n  };\n\n  private onUpdateChatDefaultBannedRights = (update: Update.updateChatDefaultBannedRights) => {\n    const chatId = this.appPeersManager.getPeerId(update.peer).toChatId();\n    const chat = this.chats[chatId] as Chat.chat;\n    if(chat) {\n      chat.default_banned_rights = update.default_banned_rights;\n      this.rootScope.dispatchEvent('chat_update', chatId);\n    }\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type lang from '../lang';\nimport type langSign from '../langSign';\nimport type {State} from '../config/state';\nimport DEBUG, {MOUNT_CLASS_TO} from '../config/debug';\nimport {HelpCountriesList, HelpCountry, LangPackDifference, LangPackString} from '../layer';\nimport stateStorage from './stateStorage';\nimport App from '../config/app';\nimport rootScope from './rootScope';\nimport {IS_MOBILE} from '../environment/userAgent';\nimport deepEqual from '../helpers/object/deepEqual';\nimport safeAssign from '../helpers/object/safeAssign';\nimport capitalizeFirstLetter from '../helpers/string/capitalizeFirstLetter';\nimport matchUrlProtocol from './richTextProcessor/matchUrlProtocol';\nimport wrapUrl from './richTextProcessor/wrapUrl';\nimport {setDirection} from '../helpers/dom/setInnerHTML';\n\nexport const langPack: {[actionType: string]: LangPackKey} = {\n  'messageActionChatCreate': 'ActionCreateGroup',\n  'messageActionChatCreateYou': 'ActionYouCreateGroup',\n  'messageActionChatEditTitle': 'ActionChangedTitle',\n  'messageActionChatEditPhoto': 'ActionChangedPhoto',\n  'messageActionChatEditVideo': 'ActionChangedVideo',\n  'messageActionChatDeletePhoto': 'ActionRemovedPhoto',\n  'messageActionChatReturn': 'ActionAddUserSelf',\n  'messageActionChatReturnYou': 'ActionAddUserSelfYou',\n  'messageActionChatJoined': 'ActionAddUserSelfMega',\n  'messageActionChatJoinedYou': 'ChannelMegaJoined',\n  'messageActionChatAddUser': 'ActionAddUser',\n  'messageActionChatAddUsers': 'ActionAddUser',\n  'messageActionChatLeave': 'ActionLeftUser',\n  'messageActionChatLeaveYou': 'YouLeft',\n  'messageActionChatDeleteUser': 'ActionKickUser',\n  'messageActionChatJoinedByLink': 'ActionInviteUser',\n  'messageActionPinMessage': 'Chat.Service.Group.UpdatedPinnedMessage',\n  'messageActionContactSignUp': 'Chat.Service.PeerJoinedTelegram',\n  'messageActionChannelCreate': 'ActionCreateChannel',\n  'messageActionChannelEditTitle': 'Chat.Service.Channel.UpdatedTitle',\n  'messageActionChannelEditPhoto': 'Chat.Service.Channel.UpdatedPhoto',\n  'messageActionChannelEditVideo': 'Chat.Service.Channel.UpdatedVideo',\n  'messageActionChannelDeletePhoto': 'Chat.Service.Channel.RemovedPhoto',\n  'messageActionHistoryClear': 'HistoryCleared',\n  'messageActionDiscussionStarted': 'DiscussionStarted',\n\n  'messageActionChannelMigrateFrom': 'ActionMigrateFromGroup',\n\n  'messageActionPhoneCall.video_in_ok': 'ChatList.Service.VideoCall.incoming',\n  'messageActionPhoneCall.video_out_ok': 'ChatList.Service.VideoCall.outgoing',\n  'messageActionPhoneCall.video_missed': 'ChatList.Service.VideoCall.Missed',\n  'messageActionPhoneCall.video_cancelled': 'ChatList.Service.VideoCall.Cancelled',\n  'messageActionPhoneCall.in_ok': 'ChatList.Service.Call.incoming',\n  'messageActionPhoneCall.out_ok': 'ChatList.Service.Call.outgoing',\n  'messageActionPhoneCall.missed': 'ChatList.Service.Call.Missed',\n  'messageActionPhoneCall.cancelled': 'ChatList.Service.Call.Cancelled',\n\n  'messageActionGroupCall.started': 'Chat.Service.VoiceChatStarted.Channel',\n  'messageActionGroupCall.started_by': 'Chat.Service.VoiceChatStarted',\n  'messageActionGroupCall.started_byYou': 'Chat.Service.VoiceChatStartedYou',\n  'messageActionGroupCall.ended': 'Chat.Service.VoiceChatFinished.Channel',\n  'messageActionGroupCall.ended_by': 'Chat.Service.VoiceChatFinished',\n  'messageActionGroupCall.ended_byYou': 'Chat.Service.VoiceChatFinishedYou',\n\n  'messageActionBotAllowed': 'Chat.Service.BotPermissionAllowed'\n};\n\nexport type LangPackKey = /* string |  */keyof typeof lang | keyof typeof langSign;\n\nexport type FormatterArgument = string | number | Node | FormatterArgument[];\nexport type FormatterArguments = FormatterArgument[];\n\nexport const UNSUPPORTED_LANG_PACK_KEY: LangPackKey = IS_MOBILE ? 'Message.Unsupported.Mobile' : 'Message.Unsupported.Desktop';\n\nnamespace I18n {\n  export const strings: Map<LangPackKey, LangPackString> = new Map();\n  export const countriesList: HelpCountry[] = [];\n  let pluralRules: Intl.PluralRules;\n\n  let cacheLangPackPromise: Promise<LangPackDifference>;\n  export let lastRequestedLangCode: string;\n  export let lastRequestedNormalizedLangCode: string;\n  export let lastAppliedLangCode: string;\n  export let requestedServerLanguage = false;\n  export let timeFormat: State['settings']['timeFormat'];\n  export let isRTL = false;\n\n  export function setRTL(rtl: boolean) {\n    isRTL = rtl;\n  }\n\n  function setLangCode(langCode: string) {\n    lastRequestedLangCode = langCode;\n    lastRequestedNormalizedLangCode = langCode.split('-')[0];\n  }\n\n  export function getCacheLangPack(): Promise<LangPackDifference> {\n    if(cacheLangPackPromise) return cacheLangPackPromise;\n    return cacheLangPackPromise = Promise.all([\n      stateStorage.get('langPack') as Promise<LangPackDifference>,\n      polyfillPromise\n    ]).then(([langPack]) => {\n      if(!langPack/*  || true */) {\n        return loadLocalLangPack();\n      } else if(DEBUG && false) {\n        return getLangPack(langPack.lang_code);\n      }/*  else if(langPack.appVersion !== App.langPackVersion) {\n        return getLangPack(langPack.lang_code);\n      } */\n\n      if(!lastRequestedLangCode) {\n        setLangCode(langPack.lang_code);\n      }\n\n      applyLangPack(langPack);\n      return langPack;\n    }).finally(() => {\n      cacheLangPackPromise = undefined;\n    });\n  }\n\n  function updateAmPm() {\n    if(timeFormat === 'h12') {\n      try {\n        const dateTimeFormat = getDateTimeFormat({hour: 'numeric', minute: 'numeric', hour12: true});\n        const date = new Date();\n        date.setHours(0);\n        const amText = dateTimeFormat.format(date);\n        amPmCache.am = amText.split(/\\s/)[1];\n        date.setHours(12);\n        const pmText = dateTimeFormat.format(date);\n        amPmCache.pm = pmText.split(/\\s/)[1];\n      } catch(err) {\n        console.error('cannot get am/pm', err);\n        amPmCache = {am: 'AM', pm: 'PM'};\n      }\n    }\n  }\n\n  export function setTimeFormat(\n    format: State['settings']['timeFormat'],\n    haveToUpdate = !!timeFormat && timeFormat !== format\n  ) {\n    timeFormat = format;\n\n    updateAmPm();\n\n    if(haveToUpdate) {\n      cachedDateTimeFormats.clear();\n      const elements = Array.from(document.querySelectorAll(`.i18n`)) as HTMLElement[];\n      elements.forEach((element) => {\n        const instance = weakMap.get(element);\n\n        if(instance instanceof IntlDateElement) {\n          instance.update();\n        }\n      });\n    }\n  }\n\n  export function loadLocalLangPack() {\n    const defaultCode = App.langPackCode;\n    setLangCode(defaultCode);\n    return Promise.all([\n      import('../lang'),\n      import('../langSign'),\n      import('../countries')\n    ]).then(([lang, langSign, countries]) => {\n      const strings: LangPackString[] = [];\n      formatLocalStrings(lang.default, strings);\n      formatLocalStrings(langSign.default, strings);\n\n      const langPack: LangPackDifference = {\n        _: 'langPackDifference',\n        from_version: 0,\n        lang_code: defaultCode,\n        strings,\n        version: 0,\n        local: true,\n        countries: countries.default\n      };\n      return saveLangPack(langPack);\n    });\n  }\n\n  export function loadLangPack(langCode: string, web?: boolean) {\n    web = true;\n    requestedServerLanguage = true;\n    const managers = rootScope.managers;\n    return Promise.all([\n      managers.apiManager.invokeApiCacheable('langpack.getLangPack', {\n        lang_code: langCode,\n        lang_pack: web ? 'web' : App.langPack\n      }),\n      !web && managers.apiManager.invokeApiCacheable('langpack.getLangPack', {\n        lang_code: langCode,\n        lang_pack: 'android'\n      }),\n      import('../lang'),\n      import('../langSign'),\n      managers.apiManager.invokeApiCacheable('help.getCountriesList', {\n        lang_code: langCode,\n        hash: 0\n      }) as Promise<HelpCountriesList.helpCountriesList>,\n      polyfillPromise\n    ]);\n  }\n\n  export function getStrings(langCode: string, strings: string[]) {\n    return rootScope.managers.apiManager.invokeApi('langpack.getStrings', {\n      lang_pack: App.langPack,\n      lang_code: langCode,\n      keys: strings\n    });\n  }\n\n  export function formatLocalStrings(strings: any, pushTo: LangPackString[] = []) {\n    for(const i in strings) {\n      // @ts-ignore\n      const v = strings[i];\n      if(typeof(v) === 'string') {\n        pushTo.push({\n          _: 'langPackString',\n          key: i,\n          value: v\n        });\n      } else {\n        pushTo.push({\n          _: 'langPackStringPluralized',\n          key: i,\n          ...v\n        });\n      }\n    }\n\n    return pushTo;\n  }\n\n  export function getLangPack(langCode: string, web?: boolean) {\n    setLangCode(langCode);\n    return loadLangPack(langCode, web).then(([langPack1, langPack2, localLangPack1, localLangPack2, countries, _]) => {\n      let strings: LangPackString[] = [];\n\n      [localLangPack1, localLangPack2].forEach((l) => {\n        formatLocalStrings(l.default as any, strings);\n      });\n\n      strings = strings.concat(...[langPack1.strings, langPack2.strings].filter(Boolean));\n\n      langPack1.strings = strings;\n      langPack1.countries = countries;\n      return saveLangPack(langPack1);\n    });\n  }\n\n  export function saveLangPack(langPack: LangPackDifference) {\n    langPack.appVersion = App.langPackVersion;\n\n    return stateStorage.set({langPack}).then(() => {\n      applyLangPack(langPack);\n      return langPack;\n    });\n  }\n\n  export const polyfillPromise = (function checkIfPolyfillNeeded() {\n    if(typeof(Intl) !== 'undefined' && typeof(Intl.PluralRules) !== 'undefined'/*  && false */) {\n      return Promise.resolve();\n    } else {\n      return import('./pluralPolyfill').then((_Intl) => {\n        (window as any).Intl = Object.assign(typeof(Intl) !== 'undefined' ? Intl : {}, _Intl.default);\n      });\n    }\n  })();\n\n  export function applyLangPack(langPack: LangPackDifference) {\n    const currentLangCode = lastRequestedLangCode;\n    if(langPack.lang_code !== currentLangCode) {\n      return;\n    }\n\n    try {\n      pluralRules = new Intl.PluralRules(lastRequestedNormalizedLangCode);\n    } catch(err) {\n      console.error('pluralRules error', err);\n      pluralRules = new Intl.PluralRules(lastRequestedNormalizedLangCode.split('-', 1)[0]);\n    }\n\n    try {\n      pluralRules = new Intl.PluralRules(langPack.lang_code);\n    } catch(err) {\n      console.error('pluralRules error', err);\n      pluralRules = new Intl.PluralRules(langPack.lang_code.split('-', 1)[0]);\n    }\n\n    strings.clear();\n\n    for(const string of langPack.strings) {\n      strings.set(string.key as LangPackKey, string);\n    }\n\n    if(langPack.countries) {\n      countriesList.length = 0;\n      countriesList.push(...langPack.countries.countries);\n\n      langPack.countries.countries.forEach((country) => {\n        if(country.name) {\n          const langPackKey: any = country.default_name;\n          strings.set(langPackKey, {\n            _: 'langPackString',\n            key: langPackKey,\n            value: country.name\n          });\n        }\n      });\n    }\n\n    if(lastAppliedLangCode !== currentLangCode) {\n      if(lastAppliedLangCode && rootScope.myId) {\n        rootScope.managers.appReactionsManager.resetAvailableReactions();\n        rootScope.managers.appUsersManager.indexMyself();\n        rootScope.managers.dialogsStorage.indexMyDialog();\n      }\n\n      lastAppliedLangCode = currentLangCode;\n      cachedDateTimeFormats.clear();\n      updateAmPm();\n      rootScope.dispatchEvent('language_change', currentLangCode);\n    }\n\n    const elements = Array.from(document.querySelectorAll(`.i18n`)) as HTMLElement[];\n    elements.forEach((element) => {\n      const instance = weakMap.get(element);\n\n      if(instance) {\n        instance.update();\n      }\n    });\n  }\n\n  function pushNextArgument(out: ReturnType<typeof superFormatter>, args: FormatterArguments, indexHolder: {i: number}) {\n    const arg = args[indexHolder.i++];\n    if(Array.isArray(arg)) {\n      out.push(...arg as any);\n    } else {\n      out.push(arg);\n    }\n  }\n\n  export function superFormatter(input: string, args?: FormatterArguments, indexHolder = {i: 0}): Exclude<FormatterArgument, FormatterArgument[]>[] {\n    const out: ReturnType<typeof superFormatter> = [];\n    const regExp = /(\\*\\*|__)(.+?)\\1|(\\n)|(\\[.+?\\]\\(.*?\\))|un\\d|%\\d\\$.|%./g;\n\n    let lastIndex = 0;\n    input.replace(regExp, (match, p1: any, p2: any, p3: any, p4: string, offset: number, string: string) => {\n      // console.table({match, p1, p2, offset, string});\n\n      out.push(string.slice(lastIndex, offset));\n\n      if(p1) {\n        // offset += p1.length;\n        let element: HTMLElement;\n        switch(p1) {\n          case '**': {\n            element = document.createElement('b');\n            break;\n          }\n\n          case '__': {\n            element = document.createElement('i');\n            break;\n          }\n        }\n\n        element.append(...superFormatter(p2, args, indexHolder) as any);\n        out.push(element);\n      } else if(p3) {\n        out.push(document.createElement('br'));\n      } else if(p4) {\n        const idx = p4.lastIndexOf(']');\n        const text = p4.slice(1, idx);\n\n        const url = p4.slice(idx + 2, p4.length - 1);\n        let a: HTMLAnchorElement;\n        if(url && matchUrlProtocol(url)) {\n          a = document.createElement('a');\n          const wrappedUrl = wrapUrl(url);\n          a.href = wrappedUrl.url;\n          if(wrappedUrl.onclick) a.setAttribute('onclick', wrappedUrl.onclick + '(this)');\n          a.target = '_blank';\n        } else {\n          a = args[indexHolder.i++] as HTMLAnchorElement;\n\n          if(a instanceof DocumentFragment) { // right after wrapRichText\n            a = a.firstChild as any;\n          }\n\n          if(typeof(a) !== 'string') {\n            a.textContent = ''; // reset content\n          }\n        }\n\n        const formatted = superFormatter(text, args, indexHolder) as any;\n        if(typeof(a) === 'string') {\n          out.push(...formatted);\n        } else {\n          a.append(...formatted);\n          out.push(a);\n        }\n      } else if(args) {\n        pushNextArgument(out, args, indexHolder);\n      }\n\n      lastIndex = offset + match.length;\n      return '';\n    });\n\n    if(lastIndex !== input.length) {\n      out.push(input.slice(lastIndex));\n    }\n\n    return out;\n  }\n\n  export function format(key: LangPackKey, plain: true, args?: FormatterArguments): string;\n  export function format(key: LangPackKey, plain?: false, args?: FormatterArguments): ReturnType<typeof superFormatter>;\n  export function format(key: LangPackKey, plain = false, args?: FormatterArguments): ReturnType<typeof superFormatter> | string {\n    const str = strings.get(key);\n    let input: string;\n    if(str) {\n      if(str._ === 'langPackStringPluralized' && args?.length) {\n        let v = args[0] as number | string;\n        if(typeof(v) === 'string') v = +v.replace(/\\D/g, '');\n        const s = pluralRules.select(v);\n        // @ts-ignore\n        input = str[s + '_value'] || str['other_value'];\n      } else if(str._ === 'langPackString') {\n        input = str.value;\n      } else {\n        // input = '[' + key + ']';\n        input = key;\n      }\n    } else {\n      // input = '[' + key + ']';\n      input = key;\n    }\n\n    const result = superFormatter(input, args);\n    if(plain) { // * let's try a hack now... (don't want to replace []() entity)\n      return result.map((item) => item instanceof Node ? item.textContent : item).join('');\n    } else {\n      return result;\n    }\n\n    /* if(plain) {\n      if(args?.length) {\n        const regExp = /un\\d|%\\d\\$.|%./g;\n        let i = 0;\n        input = input.replace(regExp, (match, offset, string) => {\n          return '' + args[i++];\n        });\n      }\n\n      return input;\n    } else {\n      return superFormatter(input, args);\n    } */\n  }\n\n  export const weakMap: WeakMap<HTMLElement, IntlElementBase<IntlElementBaseOptions>> = new WeakMap();\n\n  export type IntlElementBaseOptions = {\n    element?: HTMLElement,\n    property?: 'innerText' | 'innerHTML' | 'placeholder' | 'textContent',\n  };\n\n  abstract class IntlElementBase<Options extends IntlElementBaseOptions> {\n    public element: IntlElementBaseOptions['element'];\n    public property: IntlElementBaseOptions['property'];\n\n    constructor(options?: Options) {\n      this.element = options?.element || document.createElement('span');\n      this.element.classList.add('i18n');\n\n      this.property = options?.property;\n      if(options && ((options as any as IntlElementOptions).key || (options as any as IntlDateElementOptions).date)) {\n        this.update(options);\n      }\n\n      weakMap.set(this.element, this);\n    }\n\n    abstract update(options?: Options): void;\n  }\n\n  export type IntlElementOptions = IntlElementBaseOptions & {\n    key?: LangPackKey,\n    args?: FormatterArguments\n  };\n  export class IntlElement extends IntlElementBase<IntlElementOptions> {\n    public key: IntlElementOptions['key'];\n    public args: IntlElementOptions['args'];\n\n    constructor(options: IntlElementOptions = {}) {\n      super({...options, property: options.property ?? 'innerHTML'});\n    }\n\n    public update(options?: IntlElementOptions) {\n      safeAssign(this, options);\n\n      if(this.property === 'innerHTML') {\n        this.element.textContent = '';\n        this.element.append(...format(this.key, false, this.args) as any);\n      } else {\n        // @ts-ignore\n        const v = this.element[this.property];\n        const formatted = format(this.key, true, this.args);\n\n        // * hasOwnProperty won't work here\n        if(v === undefined) this.element.dataset[this.property] = formatted;\n        else (this.element as HTMLInputElement)[this.property] = formatted;\n      }\n    }\n\n    public compareAndUpdate(options?: IntlElementOptions) {\n      if(this.key === options.key && deepEqual(this.args, options.args)) {\n        return;\n      }\n\n      return this.update(options);\n    }\n  }\n\n  const cachedDateTimeFormats: Map<string, Intl.DateTimeFormat> = new Map();\n  export function getDateTimeFormat(options: Intl.DateTimeFormatOptions = {}) {\n    const json = JSON.stringify(options);\n    let dateTimeFormat = cachedDateTimeFormats.get(json);\n    if(!dateTimeFormat) {\n      dateTimeFormat = new Intl.DateTimeFormat(lastRequestedNormalizedLangCode + '-u-hc-' + timeFormat, options);\n      cachedDateTimeFormats.set(json, dateTimeFormat);\n    }\n\n    return dateTimeFormat;\n  }\n\n  export let amPmCache = {am: 'AM', pm: 'PM'};\n  export type IntlDateElementOptions = IntlElementBaseOptions & {\n    date?: Date,\n    options: Intl.DateTimeFormatOptions\n  };\n  export class IntlDateElement extends IntlElementBase<IntlDateElementOptions> {\n    public date: IntlDateElementOptions['date'];\n    public options: IntlDateElementOptions['options'];\n\n    constructor(options: IntlDateElementOptions) {\n      super({...options, property: options.property ?? 'textContent'});\n      setDirection(this.element);\n    }\n\n    public update(options?: IntlDateElementOptions) {\n      safeAssign(this, options);\n\n      let text: string;\n      if(this.options.hour && this.options.minute && Object.keys(this.options).length === 2/*  && false */) {\n        const hours = this.date.getHours();\n        text = ('0' + (timeFormat === 'h12' ? (hours % 12) || 12 : hours)).slice(-2) + ':' + ('0' + this.date.getMinutes()).slice(-2);\n        // if(this.options.second) {\n        //   text += ':' + ('0' + this.date.getSeconds()).slice(-2);\n        // }\n\n        if(timeFormat === 'h12') {\n          text += ' ' + (hours < 12 ? amPmCache.am : amPmCache.pm);\n        }\n      } else {\n        // * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle#adding_an_hour_cycle_via_the_locale_string\n        const dateTimeFormat = getDateTimeFormat(this.options);\n        text = capitalizeFirstLetter(dateTimeFormat.format(this.date));\n      }\n\n      (this.element as any)[this.property] = text;\n    }\n  }\n\n  export function i18n(key: LangPackKey, args?: FormatterArguments) {\n    return new IntlElement({key, args}).element;\n  }\n\n  export function i18n_(options: IntlElementOptions) {\n    return new IntlElement(options).element;\n  }\n\n  export function _i18n(element: HTMLElement, key: LangPackKey, args?: FormatterArguments, property?: IntlElementOptions['property']) {\n    return new IntlElement({element, key, args, property}).element;\n  }\n}\n\nexport {I18n};\nexport default I18n;\n\nconst i18n = I18n.i18n;\nexport {i18n};\n\nconst i18n_ = I18n.i18n_;\nexport {i18n_};\n\nconst _i18n = I18n._i18n;\nexport {_i18n};\n\nexport function joinElementsWith(elements: (Node | string)[], joiner: typeof elements[0] | ((isLast: boolean) => typeof elements[0])) {\n  const arr = elements.slice(0, 1);\n  for(let i = 1; i < elements.length; ++i) {\n    const isLast = (elements.length - 1) === i;\n    arr.push(typeof(joiner) === 'function' ? joiner(isLast) : joiner);\n    arr.push(elements[i]);\n  }\n\n  return arr;\n}\n\n\nexport function join(elements: (Node | string)[], useLast: boolean, plain: true): string;\nexport function join(elements: (Node | string)[], useLast?: boolean, plain?: false): (string | Node)[];\nexport function join(elements: (Node | string)[], useLast: boolean, plain: boolean): string | (string | Node)[];\nexport function join(elements: (Node | string)[], useLast = true, plain?: boolean): string | (string | Node)[] {\n  const joined = joinElementsWith(elements, (isLast) => {\n    const langPackKey: LangPackKey = isLast && useLast ? 'AutoDownloadSettings.LastDelimeter' : 'AutoDownloadSettings.Delimeter';\n    return plain ? I18n.format(langPackKey, true) : i18n(langPackKey);\n  });\n\n  return plain ? joined.join('') : joined;\n}\n\nMOUNT_CLASS_TO.I18n = I18n;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type addAnchorListener from '../../helpers/addAnchorListener';\nimport {PHONE_NUMBER_REG_EXP} from '.';\nimport {MOUNT_CLASS_TO} from '../../config/debug';\nimport matchUrlProtocol from './matchUrlProtocol';\nimport {T_ME_PREFIXES} from '../mtproto/mtproto_config';\n\nexport default function wrapUrl(url: string, unsafe?: number | boolean) {\n  if(!matchUrlProtocol(url)) {\n    url = 'https://' + url;\n  }\n\n  const out: {url: string, onclick?: Parameters<typeof addAnchorListener>[0]['name']} = {url};\n  let tgMeMatch, telescoPeMatch, tgMatch;\n  let onclick: typeof out['onclick'];\n  /* if(unsafe === 2) {\n    url = 'tg://unsafe_url?url=' + encodeURIComponent(url);\n  } else  */if((tgMeMatch = url.match(/^(?:https?:\\/\\/)?(?:(.+?)\\.)?(?:(?:web|k|z|a)\\.)?t(?:elegram)?\\.me(?:\\/(.+))?/))) {\n    const u = new URL(url);\n    let prefix = tgMeMatch[1];\n    if(prefix && T_ME_PREFIXES.has(tgMeMatch[1])) {\n      prefix = undefined;\n    }\n\n    if(prefix) {\n      u.pathname = prefix + (u.pathname === '/' ? '' : u.pathname);\n    }\n\n    const fullPath = u.pathname.slice(1);\n    const path = fullPath.split('/');\n\n    if(path[0] && path[0][0] === '$' && path[0].length > 1) {\n      onclick = 'invoice';\n    } else if(/^\\+/.test(fullPath) && !PHONE_NUMBER_REG_EXP.test(fullPath)) { // second regexp is for phone numbers (t.me/+38050...)\n      onclick = 'joinchat';\n    } else if(path[0]) switch(path[0]) {\n      case 'addlist':\n      case 'joinchat':\n      case 'addstickers':\n      case 'addemoji':\n      case 'voicechat':\n      case 'invoice':\n        if(path.length !== 1 && !prefix) {\n          onclick = path[0];\n          break;\n        }\n\n      default:\n        if(path.length <= 2 || path[1]?.match(/^\\d+(?:\\?(?:comment|thread)=\\d+)?$/)) {\n          onclick = 'im';\n          break;\n        }\n\n        break;\n    }\n  } else if((telescoPeMatch = url.match(/^(?:https?:\\/\\/)?telesco\\.pe\\/([^/?]+)\\/(\\d+)/))) {\n    onclick = 'im';\n  } else if((tgMatch = url.match(/tg:(?:\\/\\/)?(.+?)(?:\\?|$)/))) {\n    onclick = 'tg_' + tgMatch[1] as any;\n  }/*  else if(unsafe) {\n    url = 'tg://unsafe_url?url=' + encodeURIComponent(url);\n  } */\n\n  if(!(window as any)[onclick]) {\n    onclick = undefined;\n  }\n\n  out.onclick = onclick;\n  return out;\n}\n\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.wrapUrl = wrapUrl);\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// import I18n from '../../lib/langPack';\n\nexport default function setInnerHTML(elem: Element, html: string | DocumentFragment | Element) {\n  setDirection(elem);\n  if(html === undefined) {\n    elem.replaceChildren();\n  } else if(typeof(html) === 'string') {\n    if(!html) elem.replaceChildren();\n    else elem.textContent = html;\n  } else {\n    elem.replaceChildren(html);\n  }\n}\n\nexport function setDirection(elem: Element) {\n  // if(!I18n.isRTL) {\n  elem.setAttribute('dir', 'auto');\n  // }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {MOUNT_CLASS_TO} from '../config/debug';\nimport I18n, {i18n} from '../lib/langPack';\nimport capitalizeFirstLetter from './string/capitalizeFirstLetter';\n\nexport const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nexport const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nexport const monthsLocalized = months.slice();\nexport const daysLocalized = days.slice();\n\nexport const ONE_DAY = 86400;\n\nexport function getWeekDays() {\n  const dateTimeFormat = I18n.getDateTimeFormat({weekday: 'long'});\n  const date = new Date(Date.UTC(2017, 0, 2));\n  const out: string[] = [];\n  for(let i = 0; i < 7; ++i) {\n    out.push(capitalizeFirstLetter(dateTimeFormat.format(date)));\n    date.setDate(date.getDate() + 1);\n  }\n  return out;\n}\n\nexport function getMonths() {\n  const dateTimeFormat = I18n.getDateTimeFormat({month: 'long'});\n  const date = new Date(Date.UTC(2017, 0, 1));\n  const out: string[] = [];\n  for(let i = 0; i < 12; ++i) {\n    out.push(capitalizeFirstLetter(dateTimeFormat.format(date)));\n    date.setMonth(date.getMonth() + 1);\n  }\n  return out;\n}\n\nexport function fillLocalizedDates() {\n  monthsLocalized.splice(0, monthsLocalized.length, ...getMonths());\n  daysLocalized.splice(0, daysLocalized.length, ...getWeekDays());\n}\n\n// https://stackoverflow.com/a/6117889\nexport const getWeekNumber = (date: Date) => {\n  const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n  const dayNum = d.getUTCDay() || 7;\n  d.setUTCDate(d.getUTCDate() + 4 - dayNum);\n  const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n  return Math.ceil((((d.getTime() - yearStart.getTime()) / ONE_DAY) + 1) / 7);\n};\n\nexport function formatDateAccordingToTodayNew(time: Date) {\n  const today = new Date();\n  const now = today.getTime() / 1000 | 0;\n  const timestamp = time.getTime() / 1000 | 0;\n\n  const options: Intl.DateTimeFormatOptions = {};\n  if((now - timestamp) < ONE_DAY && today.getDate() === time.getDate()) { // if the same day\n    options.hour = options.minute = '2-digit';\n  } else if(today.getFullYear() !== time.getFullYear()) { // different year\n    options.year = options.day = 'numeric';\n    options.month = '2-digit';\n  } else if((now - timestamp) < (ONE_DAY * 7) && getWeekNumber(today) === getWeekNumber(time)) { // current week\n    options.weekday = 'short';\n  } else { // same year\n    options.month = 'short';\n    options.day = 'numeric';\n  }\n\n  return new I18n.IntlDateElement({\n    date: time,\n    options\n  }).element;\n}\n\nexport function formatFullSentTimeRaw(timestamp: number, options: {\n  capitalize?: boolean\n} = {}) {\n  const date = new Date();\n  const time = new Date(timestamp * 1000);\n  const now = date.getTime() / 1000;\n\n  const timeEl = formatTime(time);\n\n  let dateEl: Node | string;\n  if((now - timestamp) < ONE_DAY && date.getDate() === time.getDate()) { // if the same day\n    dateEl = i18n(options.capitalize ? 'Date.Today' : 'Peer.Status.Today');\n  } else if((now - timestamp) < (ONE_DAY * 2) && (date.getDate() - 1) === time.getDate()) { // yesterday\n    dateEl = i18n(options.capitalize ? 'Yesterday' : 'Peer.Status.Yesterday');\n\n    if(options.capitalize) {\n      (dateEl as HTMLElement).style.textTransform = 'capitalize';\n    }\n  } else if(date.getFullYear() !== time.getFullYear()) { // different year\n    dateEl = new I18n.IntlDateElement({\n      date: time,\n      options: {\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric'\n      }\n    }).element;\n    // dateStr = months[time.getMonth()].slice(0, 3) + ' ' + time.getDate() + ', ' + time.getFullYear();\n  } else {\n    dateEl = new I18n.IntlDateElement({\n      date: time,\n      options: {\n        month: 'short',\n        day: 'numeric'\n      }\n    }).element;\n    // dateStr = months[time.getMonth()].slice(0, 3) + ' ' + time.getDate();\n  }\n\n  return {dateEl, timeEl};\n}\n\nexport function formatFullSentTime(timestamp: number, capitalize = true) {\n  const {dateEl, timeEl} = formatFullSentTimeRaw(timestamp, {\n    capitalize\n  });\n\n  const fragment = document.createDocumentFragment();\n  fragment.append(dateEl, ' ', i18n('ScheduleController.at'), ' ', timeEl);\n  return fragment;\n}\n\nexport function formatTime(date: Date) {\n  return new I18n.IntlDateElement({\n    date,\n    options: {\n      hour: '2-digit',\n      minute: '2-digit'\n    }\n  }).element;\n}\n\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.formatDateAccordingToTodayNew = formatDateAccordingToTodayNew);\n\nexport const getFullDate = (date: Date, options: Partial<{\n  noTime: true,\n  noSeconds: true,\n  monthAsNumber: true,\n  leadingZero: true\n}> = {}) => {\n  const joiner = options.monthAsNumber ? '.' : ' ';\n  const time = ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2) + (options.noSeconds ? '' : ':' + ('0' + date.getSeconds()).slice(-2));\n\n  return (options.leadingZero ? ('0' + date.getDate()).slice(-2) : date.getDate()) +\n    joiner + (options.monthAsNumber ? ('0' + (date.getMonth() + 1)).slice(-2) : months[date.getMonth()]) +\n    joiner + date.getFullYear() +\n    (options.noTime ? '' : ', ' + time);\n};\n\n// https://github.com/DrKLO/Telegram/blob/d52b2c921abd3c1e8d6368858313ad0cb0468c07/TMessagesProj/src/main/java/org/telegram/ui/Adapters/FiltersView.java\nconst minYear = 2013;\nconst yearPattern = new RegExp('20[0-9]{1,2}');\nconst anyLetterRegExp = `\\\\p{L}`;\nconst monthPattern = new RegExp(`(${anyLetterRegExp}{3,})`, 'iu');\nconst monthYearOrDayPattern = new RegExp(`(${anyLetterRegExp}{3,}) ([0-9]{0,4})`, 'iu');\nconst yearOrDayAndMonthPattern = new RegExp(`([0-9]{0,4}) (${anyLetterRegExp}{2,})`, 'iu');\nconst shortDate = new RegExp('^([0-9]{1,4})(\\\\.| |/|\\\\-)([0-9]{1,4})$', 'i');\nconst longDate = new RegExp('^([0-9]{1,2})(\\\\.| |/|\\\\-)([0-9]{1,2})(\\\\.| |/|\\\\-)([0-9]{1,4})$', 'i');\nconst numberOfDaysEachMonth = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nexport type DateData = {\n  title: string,\n  minDate: number,\n  maxDate: number,\n};\nexport function fillTipDates(query: string, dates: DateData[]) {\n  const q = query.trim().toLowerCase();\n\n  if(q.length < 3) {\n    return;\n  }\n\n  if(['today', I18n.format('Peer.Status.Today', true)].some((haystack) => haystack.indexOf(q) === 0)) {\n    const date = new Date();\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    date.setFullYear(year, month, day);\n    date.setHours(0, 0, 0);\n\n    const minDate = date.getTime();\n    date.setFullYear(year, month, day + 1);\n    date.setHours(0, 0, 0);\n\n    const maxDate = date.getTime() - 1;\n    dates.push({\n      title: I18n.format('Date.Today', true),\n      minDate,\n      maxDate\n    });\n    return;\n  }\n\n  if(['yesterday', I18n.format('Peer.Status.Yesterday', true)].some((haystack) => haystack.indexOf(q) === 0)) {\n    const date = new Date();\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    date.setFullYear(year, month, day);\n    date.setHours(0, 0, 0);\n\n    const minDate = date.getTime() - 86400000;\n    date.setFullYear(year, month, day + 1);\n    date.setHours(0, 0, 0);\n\n    const maxDate = date.getTime() - 86400001;\n    dates.push({\n      title: capitalizeFirstLetter(I18n.format('Yesterday', true)),\n      minDate,\n      maxDate\n    });\n    return;\n  }\n\n  const dayOfWeek = getDayOfWeek(q);\n  if(dayOfWeek >= 0) {\n    const date = new Date();\n    const now = date.getTime();\n    const currentDay = date.getDay();\n    const distance = dayOfWeek - currentDay;\n    date.setDate(date.getDate() + distance);\n    if(date.getTime() > now) {\n      date.setTime(date.getTime() - 604800000);\n    }\n    const year = date.getFullYear()\n    const month = date.getMonth();\n    const day = date.getDate();\n    date.setFullYear(year, month, day);\n    date.setHours(0, 0, 0);\n\n    const minDate = date.getTime();\n    date.setFullYear(year, month, day + 1);\n    date.setHours(0, 0, 0);\n\n    const maxDate = date.getTime() - 1;\n    dates.push({\n      title: formatWeekLong(minDate),\n      minDate,\n      maxDate\n    });\n    return;\n  }\n\n  let matches: any[];\n  if((matches = shortDate.exec(q)) !== null) {\n    const g1 = matches[1];\n    const g2 = matches[3];\n    const k = parseInt(g1);\n    const k1 = parseInt(g2);\n    if(k > 0 && k <= 31) {\n      if(k1 >= minYear && k <= 12) {\n        const selectedYear = k1;\n        const month = k - 1;\n        createForMonthYear(dates, month, selectedYear);\n        return;\n      } else if(k1 <= 12) {\n        const day = k - 1;\n        const month = k1 - 1;\n        createForDayMonth(dates, day, month);\n      }\n    } else if(k >= minYear && k1 <= 12) {\n      const selectedYear = k;\n      const month = k1 - 1;\n      createForMonthYear(dates, month, selectedYear);\n    }\n\n    return;\n  }\n\n  if((matches = longDate.exec(q)) !== null) {\n    const g1 = matches[1];\n    const g2 = matches[3];\n    const g3 = matches[5];\n    if(!matches[2] === matches[4]) {\n      return;\n    }\n\n    const day = parseInt(g1);\n    const month = parseInt(g2) - 1;\n    let year = parseInt(g3);\n    if(year >= 10 && year <= 99) {\n      year += 2000;\n    }\n\n    const currentYear = new Date().getFullYear();\n    if(validDateForMonth(day - 1, month) && year >= minYear && year <= currentYear) {\n      const date = new Date();\n      date.setFullYear(year, month, day);\n      date.setHours(0, 0, 0);\n\n      const minDate = date.getTime();\n      date.setFullYear(year, month, day + 1);\n      date.setHours(0, 0, 0);\n\n      const maxDate = date.getTime() - 1;\n      dates.push({\n        title: formatterYearMax(minDate),\n        minDate,\n        maxDate\n      });\n      return;\n    }\n\n    return;\n  }\n\n  if((matches = monthYearOrDayPattern.exec(q)) !== null) {\n    const g1 = matches[1];\n    const g2 = matches[2];\n    const month = getMonth(g1);\n    if(month >= 0) {\n      const k = +g2 || new Date().getUTCFullYear();\n      if(k > 0 && k <= 31) {\n        const day = k - 1;\n        createForDayMonth(dates, day, month);\n        return;\n      } else if(k >= minYear) {\n        const selectedYear = k;\n        createForMonthYear(dates, month, selectedYear);\n        return;\n      }\n    }\n  }\n\n  if((matches = yearOrDayAndMonthPattern.exec(q)) !== null) {\n    const g1 = matches[1];\n    const g2 = matches[2];\n    const month = getMonth(g2);\n    if(month >= 0) {\n      const k = +g1;\n      if(k > 0 && k <= 31) {\n        const day = k - 1;\n        createForDayMonth(dates, day, month);\n        return;\n      } else if(k >= minYear) {\n        const selectedYear = k;\n        createForMonthYear(dates, month, selectedYear);\n      }\n    }\n  }\n\n  if((matches = monthPattern.exec(q)) !== null) {\n    const g1 = matches[1];\n    const month = getMonth(g1);\n    if(month >= 0) {\n      const currentYear = new Date().getFullYear();\n      for(let i = currentYear; i >= minYear; --i) {\n        createForMonthYear(dates, month, i);\n      }\n    }\n  }\n\n  if((matches = yearPattern.exec(q)) !== null) {\n    let selectedYear = +matches[0];\n    const currentYear = new Date().getFullYear();\n    if(selectedYear < minYear) {\n      selectedYear = minYear;\n      for(let i = currentYear; i >= selectedYear; i--) {\n        const date = new Date();\n        date.setFullYear(i, 0, 1);\n        date.setHours(0, 0, 0);\n\n        const minDate = date.getTime();\n        date.setFullYear(i + 1, 0, 1);\n        date.setHours(0, 0, 0);\n\n        const maxDate = date.getTime() - 1;\n        dates.push({\n          title: '' + i,\n          minDate,\n          maxDate\n        });\n      }\n    } else if(selectedYear <= currentYear) {\n      const date = new Date();\n      date.setFullYear(selectedYear, 0, 1);\n      date.setHours(0, 0, 0);\n\n      const minDate = date.getTime();\n      date.setFullYear(selectedYear + 1, 0, 1);\n      date.setHours(0, 0, 0);\n\n      const maxDate = date.getTime() - 1;\n      dates.push({\n        title: '' + selectedYear,\n        minDate,\n        maxDate\n      });\n    }\n\n    return;\n  }\n}\n\nfunction createForMonthYear(dates: DateData[], month: number, selectedYear: number) {\n  const currentYear = new Date().getFullYear();\n  const today = Date.now();\n  if(selectedYear >= minYear && selectedYear <= currentYear) {\n    const date = new Date();\n    date.setFullYear(selectedYear, month, 1);\n    date.setHours(0, 0, 0);\n    const minDate = date.getTime();\n    if(minDate > today) {\n      return;\n    }\n    date.setMonth(date.getMonth() + 1);\n    const maxDate = date.getTime() - 1;\n\n    dates.push({\n      title: formatterMonthYear(minDate),\n      minDate,\n      maxDate\n    });\n  }\n}\n\nfunction createForDayMonth(dates: DateData[], day: number, month: number) {\n  if(validDateForMonth(day, month)) {\n    const currentYear = new Date().getFullYear();\n    const today = Date.now();\n\n    for(let i = currentYear; i >= minYear; i--) {\n      if(month === 1 && day === 28 && !isLeapYear(i)) {\n        continue;\n      }\n\n      const date = new Date();\n      date.setFullYear(i, month, day + 1);\n      date.setHours(0, 0, 0);\n\n      const minDate = date.getTime();\n      if(minDate > today) {\n        continue;\n      }\n\n      date.setFullYear(i, month, day + 2);\n      date.setHours(0, 0, 0);\n      const maxDate = date.getTime() - 1;\n      if(i === currentYear) {\n        dates.push({\n          title: formatterDayMonth(minDate),\n          minDate,\n          maxDate\n        });\n      } else {\n        dates.push({\n          title: formatterYearMax(minDate),\n          minDate,\n          maxDate\n        });\n      }\n    }\n  }\n}\n\nfunction formatterMonthYear(timestamp: number) {\n  const date = new Date(timestamp);\n  return monthsLocalized[date.getMonth()]/* .slice(0, 3) */ + ' ' + date.getFullYear();\n}\n\nfunction formatterDayMonth(timestamp: number) {\n  const date = new Date(timestamp);\n  return monthsLocalized[date.getMonth()]/* .slice(0, 3) */ + ' ' + date.getDate();\n}\n\nfunction formatterYearMax(timestamp: number) {\n  const date = new Date(timestamp);\n  return ('0' + date.getDate()).slice(-2) + '.' + ('0' + (date.getMonth() + 1)).slice(-2) + '.' + date.getFullYear();\n}\n\nfunction formatWeekLong(timestamp: number) {\n  const date = new Date(timestamp);\n  return daysLocalized[date.getDay()];\n}\n\nfunction validDateForMonth(day: number, month: number) {\n  if(month >= 0 && month < 12) {\n    if(day >= 0 && day < numberOfDaysEachMonth[month]) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isLeapYear(year: number) {\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n}\n\nfunction getMonth(q: string) {\n  q = q.toLowerCase();\n  for(let i = 0; i < 12; i++) {\n    if([months[i], monthsLocalized[i]].some((month) => month.toLowerCase().indexOf(q) === 0)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction getDayOfWeek(q: string) {\n  const c = new Date();\n  if(q.length <= 3) {\n    return -1;\n  }\n\n  for(let i = 0; i < 7; i++) {\n    c.setDate(c.getDate() + 1);\n\n    if(formatWeekLong(c.getTime()).toLowerCase().indexOf(q) === 0) {\n      return c.getDay();\n    }\n  }\n  return -1;\n}\n\nMOUNT_CLASS_TO.fillTipDates = fillTipDates;\n","/**\n * Will be used for FILE_REFERENCE_EXPIRED\n * @param key\n * @param wasObject\n * @param newObject\n */\nexport default function safeReplaceArrayInObject<K>(key: K, wasObject: any, newObject: any) {\n  if('byteLength' in newObject[key]) { // Uint8Array\n    newObject[key] = [...newObject[key]];\n  }\n\n  if(wasObject && wasObject[key] !== newObject[key]) {\n    wasObject[key].length = newObject[key].length;\n    (newObject[key] as any[]).forEach((v, i) => {\n      wasObject[key][i] = v;\n    });\n\n    /* wasObject[key].set(newObject[key]); */\n    newObject[key] = wasObject[key];\n  }\n}\n","export const EXTENSION_MIME_TYPE_MAP: {[ext in MTFileExtension]: MTMimeType} = {\n  pdf: 'application/pdf',\n  tgv: 'application/x-tgwallpattern',\n  tgs: 'application/x-tgsticker',\n  json: 'application/json',\n  wav: 'audio/wav',\n  mp3: 'audio/mpeg',\n  ogg: 'audio/ogg',\n  jpeg: 'image/jpeg',\n  jpg: 'image/jpeg',\n  png: 'image/png',\n  gif: 'image/gif',\n  webp: 'image/webp',\n  mp4: 'video/mp4',\n  webm: 'video/webm',\n  mov: 'video/quicktime',\n  svg: 'image/svg+xml'\n};\n\nexport const MIME_TYPE_EXTENSION_MAP: {[mimeType in MTMimeType]?: MTFileExtension} = {};\n\nfor(const ext in EXTENSION_MIME_TYPE_MAP) {\n  MIME_TYPE_EXTENSION_MAP[EXTENSION_MIME_TYPE_MAP[ext as MTFileExtension]] = ext as MTFileExtension;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {ThumbCache} from '../storages/thumbs';\nimport {AccountWallPapers, Document, DocumentAttribute, MessagesSavedGifs, PhotoSize, WallPaper} from '../../layer';\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport {getFullDate} from '../../helpers/date';\nimport isObject from '../../helpers/object/isObject';\nimport safeReplaceArrayInObject from '../../helpers/object/safeReplaceArrayInObject';\nimport {AppManager} from './manager';\nimport wrapPlainText from '../richTextProcessor/wrapPlainText';\nimport assumeType from '../../helpers/assumeType';\nimport {getEnvironment} from '../../environment/utils';\nimport {isServiceWorkerOnline} from '../mtproto/mtproto.worker';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\nimport getDocumentInputFileLocation from './utils/docs/getDocumentInputFileLocation';\nimport getDocumentURL from './utils/docs/getDocumentURL';\nimport makeError from '../../helpers/makeError';\nimport {EXTENSION_MIME_TYPE_MAP} from '../../environment/mimeTypeMap';\nimport {THUMB_TYPE_FULL} from '../mtproto/mtproto_config';\nimport tsNow from '../../helpers/tsNow';\n\nexport type MyDocument = Document.document;\n\n// TODO: если залить картинку файлом, а потом перезайти в диалог - превьюшка заново скачается\n\ntype WallPaperId = WallPaper.wallPaper['id'];\n\nlet uploadWallPaperTempId = 0;\n\nexport class AppDocsManager extends AppManager {\n  private docs: {\n    [docId: DocId]: MyDocument\n  };\n\n  private stickerCachedThumbs: {\n    [docId: DocId]: {\n      [toneIndex: number | string]: {\n        url: string,\n        w: number,\n        h: number\n      }\n    }\n  };\n\n  private uploadingWallPapers: {\n    [id: WallPaperId]: {\n      cacheContext: ThumbCache,\n      file: File\n    }\n  };\n\n  protected after() {\n    this.docs = {};\n    this.stickerCachedThumbs = {};\n    this.uploadingWallPapers = {};\n\n    MTProtoMessagePort.getInstance<false>().addEventListener('serviceWorkerOnline', (online) => {\n      if(!online) {\n        this.onServiceWorkerFail();\n      }\n    });\n  }\n\n  private onServiceWorkerFail = () => {\n    for(const id in this.docs) {\n      const doc = this.docs[id];\n\n      if(doc.supportsStreaming) {\n        delete doc.supportsStreaming;\n        this.thumbsStorage.deleteCacheContext(doc);\n      }\n    }\n  };\n\n  public saveDoc(doc: Document, context?: ReferenceContext): MyDocument {\n    if(!doc || doc._ === 'documentEmpty') {\n      return;\n    }\n\n    const oldDoc = this.docs[doc.id];\n\n    if(doc.file_reference) { // * because we can have a new object w/o the file_reference while sending\n      safeReplaceArrayInObject('file_reference', oldDoc, doc);\n      this.referenceDatabase.saveContext(doc.file_reference, context);\n    }\n\n    // console.log('saveDoc', apiDoc, this.docs[apiDoc.id]);\n    // if(oldDoc) {\n    //   //if(doc._ !== 'documentEmpty' && doc._ === d._) {\n    //     if(doc.thumbs) {\n    //       if(!oldDoc.thumbs) oldDoc.thumbs = doc.thumbs;\n    //       /* else if(apiDoc.thumbs[0].bytes && !d.thumbs[0].bytes) {\n    //         d.thumbs.unshift(apiDoc.thumbs[0]);\n    //       } else if(d.thumbs[0].url) { // fix for converted thumb in safari\n    //         apiDoc.thumbs[0] = d.thumbs[0];\n    //       } */\n    //     }\n\n    //   //}\n\n    //   return oldDoc;\n\n    //   //return Object.assign(d, apiDoc, context);\n    //   //return context ? Object.assign(d, context) : d;\n    // }\n\n    if(!oldDoc) {\n      this.docs[doc.id] = doc;\n    }\n\n    // * exclude from state\n    // defineNotNumerableProperties(doc, [/* 'thumbs',  */'type', 'h', 'w', 'file_name',\n    // 'file', 'duration', 'downloaded', 'url', 'audioTitle',\n    // 'audioPerformer', 'sticker', 'stickerEmoji', 'stickerEmojiRaw',\n    // 'stickerSetInput', 'stickerThumbConverted', 'animated', 'supportsStreaming']);\n\n    for(let i = 0, length = doc.attributes.length; i < length; ++i) {\n      const attribute = doc.attributes[i];\n      switch(attribute._) {\n        case 'documentAttributeFilename': {\n          doc.file_name = wrapPlainText(attribute.file_name);\n          break;\n        }\n\n        case 'documentAttributeAudio': {\n          if(doc.type === 'round') {\n            break;\n          }\n\n          doc.duration = attribute.duration;\n          doc.type = attribute.pFlags.voice && doc.mime_type === EXTENSION_MIME_TYPE_MAP.ogg ? 'voice' : 'audio';\n          break;\n        }\n\n        case 'documentAttributeVideo': {\n          doc.duration = attribute.duration;\n          doc.w = attribute.w;\n          doc.h = attribute.h;\n          // apiDoc.supportsStreaming = attribute.pFlags?.supports_streaming/*  && apiDoc.size > 524288 */;\n          if(/* apiDoc.thumbs &&  */attribute.pFlags.round_message) {\n            doc.type = 'round';\n          } else /* if(apiDoc.thumbs) */ {\n            doc.type = 'video';\n          }\n          break;\n        }\n\n        case 'documentAttributeCustomEmoji':\n        case 'documentAttributeSticker': {\n          if(attribute.alt !== undefined) {\n            doc.stickerEmojiRaw = attribute.alt;\n          }\n\n          if(attribute.stickerset) {\n            if(attribute.stickerset._ === 'inputStickerSetEmpty') {\n              delete attribute.stickerset;\n            } else if(attribute.stickerset._ === 'inputStickerSetID') {\n              doc.stickerSetInput = attribute.stickerset;\n            }\n          }\n\n          // * there can be no thumbs, then it is a document\n          if(/* apiDoc.thumbs &&  */doc.mime_type === EXTENSION_MIME_TYPE_MAP.webp && (doc.thumbs || getEnvironment().IS_WEBP_SUPPORTED)) {\n            doc.type = 'sticker';\n            doc.sticker = 1;\n          } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.webm) {\n            if(!getEnvironment().IS_WEBM_SUPPORTED) {\n              break;\n            }\n\n            doc.type = 'sticker';\n            doc.sticker = 3;\n            doc.animated = true;\n          }\n          break;\n        }\n\n        case 'documentAttributeImageSize': {\n          doc.type = 'photo';\n          doc.w = attribute.w;\n          doc.h = attribute.h;\n          break;\n        }\n\n        case 'documentAttributeAnimated': {\n          if((doc.mime_type === EXTENSION_MIME_TYPE_MAP.gif || doc.mime_type === EXTENSION_MIME_TYPE_MAP.mp4)/*  && apiDoc.thumbs */) {\n            doc.type = 'gif';\n          }\n\n          doc.animated = true;\n          break;\n        }\n      }\n    }\n\n    if(!doc.mime_type) {\n      const ext = (doc.file_name || '').split('.').pop();\n      const mappedMimeType = ext && EXTENSION_MIME_TYPE_MAP[ext.toLowerCase() as any as MTFileExtension];\n      if(mappedMimeType) {\n        doc.mime_type = mappedMimeType;\n      } else {\n        switch(doc.type) {\n          case 'gif':\n          case 'video':\n          case 'round':\n            doc.mime_type = EXTENSION_MIME_TYPE_MAP.mp4;\n            break;\n          case 'sticker':\n            doc.mime_type = EXTENSION_MIME_TYPE_MAP.webp;\n            break;\n          case 'audio':\n            doc.mime_type = EXTENSION_MIME_TYPE_MAP.mp3;\n            break;\n          case 'voice':\n            doc.mime_type = EXTENSION_MIME_TYPE_MAP.ogg;\n            break;\n          default:\n            doc.mime_type = 'application/octet-stream';\n            break;\n        }\n      }\n    } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.pdf) {\n      doc.type = 'pdf';\n    } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.gif) {\n      doc.type = 'gif';\n    } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.tgs && doc.file_name === 'AnimatedSticker.tgs') {\n      doc.type = 'sticker';\n      doc.animated = true;\n      doc.sticker = 2;\n    }\n\n    if(doc.type === 'voice' || doc.type === 'round') {\n      // browser will identify extension\n      const attribute = doc.attributes.find((attribute) => attribute._ === 'documentAttributeFilename') as DocumentAttribute.documentAttributeFilename;\n      const ext = attribute && attribute.file_name.split('.').pop();\n      const date = getFullDate(new Date(doc.date * 1000), {monthAsNumber: true, leadingZero: true}).replace(/[:\\.]/g, '-').replace(', ', '_');\n      doc.file_name = `${doc.type}_${date}${ext ? '.' + ext : ''}`;\n    }\n\n    if(isServiceWorkerOnline() && ((doc.type === 'gif' && doc.size > 8e6) || doc.type === 'audio' || doc.type === 'video')/*  || doc.mime_type.indexOf('video/') === 0 */) {\n      doc.supportsStreaming = true;\n\n      const cacheContext = this.thumbsStorage.getCacheContext(doc);\n      if(!cacheContext.url) {\n        this.thumbsStorage.setCacheContextURL(doc, undefined, getDocumentURL(doc), 0);\n      }\n    } else {\n      doc.supportsStreaming = false;\n    }\n\n    // for testing purposes\n    // doc.supportsStreaming = false;\n    // doc.url = ''; // * this will break upload urls\n\n    doc.file_name ||= '';\n\n    /* if(!doc.url) {\n      doc.url = this.getFileURL(doc);\n    } */\n\n    if(oldDoc) {\n      return Object.assign(oldDoc, doc);\n    }\n\n    return doc;\n  }\n\n  public getDoc(docId: DocId | MyDocument): MyDocument {\n    return isObject<MyDocument>(docId) ? docId : this.docs[docId];\n  }\n\n  public downloadDoc(doc: MyDocument, queueId?: number, onlyCache?: boolean) {\n    return this.apiFileManager.downloadMedia({\n      media: doc,\n      queueId,\n      onlyCache\n    });\n  }\n\n  public getLottieCachedThumb(docId: DocId, toneIndex: number | string) {\n    const cached = this.stickerCachedThumbs[docId];\n    return cached?.[toneIndex];\n  }\n\n  public saveLottiePreview(docId: DocId, blob: Blob, width: number, height: number, toneIndex: number | string) {\n    const doc = this.getDoc(docId);\n    if(!doc) {\n      return;\n    }\n\n    const cached = this.stickerCachedThumbs[doc.id] ??= {};\n\n    const thumb = cached[toneIndex];\n    if(thumb && thumb.w >= width && thumb.h >= height) {\n      return;\n    }\n\n    cached[toneIndex] = {\n      url: URL.createObjectURL(blob),\n      w: width,\n      h: height\n    };\n  }\n\n  public clearColoredStickerThumbs() {\n    for(const docId in this.stickerCachedThumbs) {\n      const cache = this.stickerCachedThumbs[docId];\n      for(const toneIndex in cache) {\n        if(isNaN(+toneIndex)) {\n          const thumb = cache[toneIndex];\n          URL.revokeObjectURL(thumb.url);\n          delete cache[toneIndex];\n        }\n      }\n    }\n  }\n\n  public saveWebPConvertedStrippedThumb(docId: DocId, bytes: Uint8Array) {\n    const doc = this.getDoc(docId);\n    if(!doc) {\n      return;\n    }\n\n    const thumb = doc.thumbs && doc.thumbs.find((thumb) => thumb._ === 'photoStrippedSize') as PhotoSize.photoStrippedSize;\n    if(!thumb) {\n      return;\n    }\n\n    doc.pFlags.stickerThumbConverted = true;\n    thumb.bytes = bytes;\n  }\n\n  public prepareWallPaperUpload(file: File) {\n    const id = 'wallpaper-upload-' + ++uploadWallPaperTempId;\n\n    const thumb = {\n      _: 'photoSize',\n      h: 0,\n      w: 0,\n      location: {} as any,\n      size: file.size,\n      type: THUMB_TYPE_FULL\n    } as PhotoSize.photoSize;\n    let document: MyDocument = {\n      _: 'document',\n      access_hash: '',\n      attributes: [],\n      dc_id: 0,\n      file_reference: [],\n      id,\n      mime_type: file.type as MTMimeType,\n      size: file.size,\n      date: tsNow(true),\n      pFlags: {},\n      thumbs: [thumb],\n      file_name: file.name\n    };\n\n    document = this.saveDoc(document);\n\n    const cacheContext = this.thumbsStorage.setCacheContextURL(document, undefined, URL.createObjectURL(file), file.size);\n\n    const wallpaper: WallPaper.wallPaper = {\n      _: 'wallPaper',\n      access_hash: '',\n      document: document,\n      id,\n      slug: id,\n      pFlags: {}\n    };\n\n    this.uploadingWallPapers[id] = {\n      cacheContext,\n      file\n    };\n\n    return wallpaper;\n  }\n\n  public uploadWallPaper(id: WallPaperId) {\n    const {cacheContext, file} = this.uploadingWallPapers[id];\n    delete this.uploadingWallPapers[id];\n\n    const upload = this.apiFileManager.upload({file, fileName: file.name});\n    return upload.then((inputFile) => {\n      return this.apiManager.invokeApi('account.uploadWallPaper', {\n        file: inputFile,\n        mime_type: file.type,\n        settings: {\n          _: 'wallPaperSettings',\n          pFlags: {}\n        }\n      }).then((wallPaper) => {\n        assumeType<WallPaper.wallPaper>(wallPaper);\n        wallPaper.document = this.saveDoc(wallPaper.document);\n        this.thumbsStorage.setCacheContextURL(wallPaper.document, undefined, cacheContext.url, cacheContext.downloaded);\n\n        return wallPaper;\n      });\n    });\n  }\n\n  public getGifs() {\n    return this.apiManager.invokeApiHashable({\n      method: 'messages.getSavedGifs',\n      processResult: (res) => {\n        assumeType<MessagesSavedGifs.messagesSavedGifs>(res);\n        return res.gifs.map((doc) => this.saveDoc(doc));\n      }\n    });\n  }\n\n  public requestDocPart(docId: DocId, dcId: number, offset: number, limit: number) {\n    const doc = this.getDoc(docId);\n    if(!doc) return Promise.reject(makeError('NO_DOC'));\n    return this.apiFileManager.requestFilePart(dcId, getDocumentInputFileLocation(doc), offset, limit);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {FileURLType, getFileURL} from '../../../../helpers/fileName';\nimport {Document, PhotoSize} from '../../../../layer';\nimport getDocumentDownloadOptions from './getDocumentDownloadOptions';\n\nexport default function getDocumentURL(doc: Document.document, download = false, thumb?: PhotoSize.photoSize) {\n  let type: FileURLType;\n  if(download) {\n    type = 'download';\n  } else if(thumb) {\n    type = 'thumb';\n  } else if(doc.supportsStreaming) {\n    type = 'stream';\n  } else {\n    type = 'document';\n  }\n\n  return getFileURL(type, getDocumentDownloadOptions(doc, thumb));\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {MessageEntity, DraftMessage, MessagesSaveDraft} from '../../layer';\nimport tsNow from '../../helpers/tsNow';\nimport stateStorage from '../stateStorage';\nimport assumeType from '../../helpers/assumeType';\nimport {AppManager} from './manager';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\nimport draftsAreEqual from './utils/drafts/draftsAreEqual';\n\nexport type MyDraftMessage = DraftMessage.draftMessage;\n\nexport class AppDraftsManager extends AppManager {\n  private drafts: {[peerIdAndThreadId: string]: MyDraftMessage} = {};\n  private getAllDraftPromise: Promise<void>;\n\n  protected after() {\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateDraftMessage: (update) => {\n        const peerId = this.appPeersManager.getPeerId(update.peer);\n        this.saveDraft({\n          peerId,\n          threadId: update.threadId,\n          draft: update.draft,\n          notify: true\n        });\n      }\n    });\n\n    /* return  */stateStorage.get('drafts').then((drafts) => {\n      this.drafts = drafts || {};\n    });\n  }\n\n  private getKey(peerId: PeerId, threadId?: number) {\n    return '' + peerId + (threadId ? '_' + threadId : '');\n  }\n\n  public getDraft(peerId: PeerId, threadId?: number) {\n    return this.drafts[this.getKey(peerId, threadId)];\n  }\n\n  public addMissedDialogs() {\n    return this.getAllDrafts().then(() => {\n      for(const key in this.drafts) {\n        if(key.indexOf('_') !== -1) { // exclude threads\n          continue;\n        }\n\n        const peerId = key.toPeerId();\n        const dialog = this.appMessagesManager.getDialogOnly(peerId);\n        if(!dialog) {\n          this.appMessagesManager.reloadConversation(peerId);\n          /* const dialog = appMessagesManager.generateDialog(peerId);\n          dialog.draft = this.drafts[key];\n          appMessagesManager.saveConversation(dialog);\n          appMessagesManager.newDialogsToHandle[peerId] = dialog;\n          appMessagesManager.scheduleHandleNewDialogs(); */\n        }\n      }\n    });\n  }\n\n  private getAllDrafts() {\n    return this.getAllDraftPromise ??= this.apiManager.invokeApi('messages.getAllDrafts')\n    .then((updates) => {\n      const p = this.apiUpdatesManager.updatesState.syncLoading || Promise.resolve();\n      p.then(() => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n      });\n    });\n  }\n\n  public saveDraft({\n    peerId,\n    threadId,\n    draft: apiDraft,\n    notify,\n    force\n  }: {\n    peerId: PeerId,\n    threadId?: number,\n    draft: DraftMessage,\n    notify?: boolean,\n    force?: boolean\n  }) {\n    const draft = this.processApiDraft(apiDraft, peerId);\n\n    const key = this.getKey(peerId, threadId);\n    if(draft) {\n      this.drafts[key] = draft;\n    } else {\n      delete this.drafts[key];\n    }\n\n    stateStorage.set({\n      drafts: this.drafts\n    });\n\n    if(notify) {\n      // console.warn(dT(), 'save draft', peerId, apiDraft, options)\n      this.rootScope.dispatchEvent('draft_updated', {\n        peerId,\n        threadId,\n        draft,\n        force\n      });\n    }\n\n    return draft;\n  }\n\n  private isEmptyDraft(draft: DraftMessage) {\n    if(draft?._ !== 'draftMessage') {\n      return true;\n    }\n\n    if(draft.reply_to_msg_id !== undefined && draft.reply_to_msg_id > 0) {\n      return false;\n    }\n\n    if(!draft.message.length) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private processApiDraft(draft: DraftMessage, peerId: PeerId): MyDraftMessage {\n    if(draft?._ !== 'draftMessage') {\n      return undefined;\n    }\n\n    if(draft.reply_to_msg_id) {\n      const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\n      draft.reply_to_msg_id = this.appMessagesIdsManager.generateMessageId(draft.reply_to_msg_id, channelId);\n    }\n\n    return draft;\n  }\n\n  public syncDraft(peerId: PeerId, threadId: number, localDraft?: DraftMessage, saveOnServer = true, force = false) {\n    // console.warn(dT(), 'sync draft', peerID)\n    const serverDraft = this.getDraft(peerId, threadId);\n    if(draftsAreEqual(serverDraft, localDraft)) {\n      // console.warn(dT(), 'equal drafts', localDraft, serverDraft)\n      return true;\n    }\n\n    // console.warn(dT(), 'changed draft', localDraft, serverDraft)\n    const params: MessagesSaveDraft = {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      message: ''\n    };\n\n    let draftObj: DraftMessage;\n    if(this.isEmptyDraft(localDraft)) {\n      draftObj = {_: 'draftMessageEmpty'};\n    } else {\n      assumeType<DraftMessage.draftMessage>(localDraft);\n      const message = localDraft.message;\n      const entities: MessageEntity[] = localDraft.entities;\n\n      if(localDraft.reply_to_msg_id) {\n        params.reply_to_msg_id = getServerMessageId(localDraft.reply_to_msg_id);\n      }\n\n      if(entities?.length) {\n        params.entities = this.appMessagesManager.getInputEntities(entities);\n      }\n\n      if(localDraft.pFlags.no_webpage) {\n        params.no_webpage = localDraft.pFlags.no_webpage;\n      }\n\n      params.message = message;\n    }\n\n    if(threadId) {\n      params.top_msg_id = getServerMessageId(threadId);\n    }\n\n    const saveLocalDraft = draftObj || localDraft;\n    saveLocalDraft.date = tsNow(true) + this.timeManager.getServerTimeOffset();\n\n    this.saveDraft({\n      peerId,\n      threadId,\n      draft: saveLocalDraft,\n      notify: true,\n      force\n    });\n\n    if(saveOnServer) {\n      return this.apiManager.invokeApi('messages.saveDraft', params);\n    }\n\n    return true;\n  }\n\n  public clearAllDrafts() {\n    return this.apiManager.invokeApi('messages.clearAllDrafts').then((bool) => {\n      if(!bool) {\n        return;\n      }\n\n      for(const combined in this.drafts) {\n        const [peerId, threadId] = combined.split('_');\n        this.rootScope.dispatchEvent('draft_updated', {\n          peerId: peerId.toPeerId(),\n          threadId: threadId ? +threadId : undefined,\n          draft: undefined\n        });\n      }\n    });\n  }\n\n  public clearDraft(peerId: PeerId, threadId: number) {\n    const emptyDraft: DraftMessage.draftMessageEmpty = {\n      _: 'draftMessageEmpty'\n    };\n\n    if(threadId) {\n      this.syncDraft(peerId, threadId, emptyDraft as any, false, true);\n    } else {\n      this.saveDraft({\n        peerId,\n        threadId,\n        draft: emptyDraft,\n        notify: true,\n        force: true\n      });\n    }\n  }\n\n  public setDraft(peerId: PeerId, threadId: number, message: string, entities?: MessageEntity[]) {\n    const draft: DraftMessage.draftMessage = {\n      _: 'draftMessage',\n      date: tsNow(true),\n      message,\n      pFlags: {},\n      entities\n    };\n\n    if(threadId) {\n      this.syncDraft(peerId, threadId, draft, false, true);\n    } else {\n      this.saveDraft({\n        peerId,\n        threadId,\n        draft,\n        notify: true,\n        force: true\n      });\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {MyDocument} from './appDocsManager';\nimport App from '../../config/app';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport isObject from '../../helpers/object/isObject';\nimport validateInitObject from '../../helpers/object/validateInitObject';\nimport fixEmoji from '../richTextProcessor/fixEmoji';\nimport SearchIndex from '../searchIndex';\nimport stateStorage from '../stateStorage';\nimport {AppManager} from './manager';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport pause from '../../helpers/schedulers/pause';\n\ntype EmojiLangPack = {\n  keywords: {\n    [keyword: string]: string[],\n  },\n  version: number,\n  langCode: string\n};\n\nconst EMOJI_LANG_PACK: EmojiLangPack = {\n  keywords: {},\n  version: 0,\n  langCode: App.langPackCode\n};\n\nconst RECENT_MAX_LENGTH = 32;\n\ntype EmojiType = 'native' | 'custom';\n\nexport class AppEmojiManager extends AppManager {\n  private static POPULAR_EMOJI = ['😂', '😘', '❤️', '😍', '😊', '😁', '👍', '☺️', '😔', '😄', '😭', '💋', '😒', '😳', '😜', '🙈', '😉', '😃', '😢', '😝', '😱', '😡', '😏', '😞', '😅', '😚', '🙊', '😌', '😀', '😋', '😆', '👌', '😐', '😕'];\n  private keywordLangPacks: {\n    [langCode: string]: EmojiLangPack\n  } = {};\n\n  private index: SearchIndex<EmojiLangPack['keywords'][keyof EmojiLangPack['keywords']]>;\n  private indexedLangPacks: {[langCode: string]: boolean} = {};\n\n  private getKeywordsPromises: {[langCode: string]: Promise<EmojiLangPack>} = {};\n\n  private recent: {native?: string[], custom?: DocId[]} = {};\n  private getRecentEmojisPromises: {native?: Promise<string[]>, custom?: Promise<DocId[]>} = {};\n\n  private getCustomEmojiDocumentsPromise: Promise<any>;\n  private getCustomEmojiDocumentPromises: Map<DocId, CancellablePromise<MyDocument>> = new Map();\n\n  /* public getPopularEmoji() {\n    return stateStorage.get('emojis_popular').then((popEmojis) => {\n      var result = []\n      if (popEmojis && popEmojis.length) {\n        for (var i = 0, len = popEmojis.length; i < len; i++) {\n          result.push({code: popEmojis[i][0], rate: popEmojis[i][1]})\n        }\n        callback(result)\n        return\n      }\n\n      return stateStorage.get('emojis_recent').then((recentEmojis) => {\n        recentEmojis = recentEmojis || popular || []\n        var shortcut\n        var code\n        for (var i = 0, len = recentEmojis.length; i < len; i++) {\n          shortcut = recentEmojis[i]\n          if (Array.isArray(shortcut)) {\n            shortcut = shortcut[0]\n          }\n          if (shortcut && typeof shortcut === 'string') {\n            if (shortcut.charAt(0) == ':') {\n              shortcut = shortcut.substr(1, shortcut.length - 2)\n            }\n            if (code = shortcuts[shortcut]) {\n              result.push({code: code, rate: 1})\n            }\n          }\n        }\n        callback(result)\n      });\n    });\n  }\n\n  function pushPopularEmoji (code) {\n    getPopularEmoji(function (popularEmoji) {\n      var exists = false\n      var count = popularEmoji.length\n      var result = []\n      for (var i = 0; i < count; i++) {\n        if (popularEmoji[i].code == code) {\n          exists = true\n          popularEmoji[i].rate++\n        }\n        result.push([popularEmoji[i].code, popularEmoji[i].rate])\n      }\n      if (exists) {\n        result.sort(function (a, b) {\n          return b[1] - a[1]\n        })\n      } else {\n        if (result.length > 41) {\n          result = result.slice(0, 41)\n        }\n        result.push([code, 1])\n      }\n      ConfigStorage.set({emojis_popular: result})\n    })\n  } */\n\n  public getEmojiKeywords(langCode: string = App.langPackCode) {\n    const promise = this.getKeywordsPromises[langCode];\n    if(promise) {\n      return promise;\n    }\n\n    const storageKey: any = 'emojiKeywords_' + langCode;\n    return this.getKeywordsPromises[langCode] = stateStorage.get(storageKey).then((pack: EmojiLangPack) => {\n      if(!isObject(pack)) {\n        pack = {} as any;\n      }\n\n      validateInitObject(EMOJI_LANG_PACK, pack);\n\n      // important\n      pack.langCode = langCode;\n      this.keywordLangPacks[langCode] = pack;\n\n      return this.apiManager.invokeApi('messages.getEmojiKeywordsDifference', {\n        lang_code: pack.langCode,\n        from_version: pack.version\n      }).then((keywordsDifference) => {\n        pack.version = keywordsDifference.version;\n\n        const packKeywords = pack.keywords;\n        const keywords = keywordsDifference.keywords;\n        for(let i = 0, length = keywords.length; i < length; ++i) {\n          const {keyword, emoticons} = keywords[i];\n          packKeywords[keyword] = emoticons;\n        }\n\n        stateStorage.set({\n          [storageKey]: pack\n        });\n\n        return pack;\n      }, () => {\n        return pack;\n      });\n    });\n  }\n\n  public getBothEmojiKeywords() {\n    const promises: Promise<any>[] = [\n      this.getEmojiKeywords()\n    ];\n\n    if(this.networkerFactory.language !== App.langPackCode) {\n      promises.push(this.getEmojiKeywords(this.networkerFactory.language));\n    }\n\n    if(!this.recent.native) {\n      promises.push(this.getRecentEmojis('native'));\n    }\n\n    return Promise.all(promises);\n  }\n\n  private indexEmojis() {\n    if(!this.index) {\n      this.index = new SearchIndex(undefined, 2);\n    }\n\n    for(const langCode in this.keywordLangPacks) {\n      if(this.indexedLangPacks[langCode]) {\n        continue;\n      }\n\n      const pack = this.keywordLangPacks[langCode];\n      const keywords = pack.keywords;\n\n      for(const keyword in keywords) {\n        const emoticons = keywords[keyword];\n        this.index.indexObject(emoticons, keyword);\n      }\n\n      this.indexedLangPacks[langCode] = true;\n    }\n  }\n\n  public searchEmojis(q: string) {\n    this.indexEmojis();\n\n    q = q.toLowerCase().replace(/_/g, ' ');\n\n    // const perf = performance.now();\n    let emojis: Array<string>;\n    if(q.trim()) {\n      const set = this.index.search(q);\n      emojis = Array.from(set).reduce((acc, v) => acc.concat(v), []);\n    } else {\n      emojis = this.recent.native.concat(AppEmojiManager.POPULAR_EMOJI).slice(0, RECENT_MAX_LENGTH);\n    }\n\n    emojis = Array.from(new Set(emojis));\n    // console.log('searchEmojis', q, 'time', performance.now() - perf);\n\n    /* for(let i = 0, length = emojis.length; i < length; ++i) {\n      if(emojis[i].includes(zeroWidthJoiner) && !emojis[i].includes('\\ufe0f')) {\n        emojis[i] += '\\ufe0f';\n      }\n    } */\n\n    return emojis;\n  }\n\n  public getRecentEmojis<T extends EmojiType>(type: 'custom'): Promise<DocId[]>;\n  public getRecentEmojis<T extends EmojiType>(type: 'native'): Promise<string[]>;\n  public getRecentEmojis<T extends EmojiType>(type: T): Promise<string[] | DocId[]> {\n    const promises = this.getRecentEmojisPromises;\n    return promises[type] ??= this.appStateManager.getState().then((state) => {\n      let recent: string[] | DocId[] = [];\n      if(type === 'native') {\n        const {recentEmoji} = state;\n        recent = Array.isArray(recentEmoji) && recentEmoji.length ? recentEmoji : AppEmojiManager.POPULAR_EMOJI;\n      } else {\n        const {recentCustomEmoji} = state;\n        recent = Array.isArray(recentCustomEmoji) && recentCustomEmoji.length ? recentCustomEmoji : [];\n      }\n\n      return this.recent[type] = recent as any;\n    }) as any;\n  }\n\n  public pushRecentEmoji(emoji: AppEmoji) {\n    const type: EmojiType = emoji.docId ? 'custom' : 'native';\n    emoji.emoji = fixEmoji(emoji.emoji);\n    // @ts-ignore\n    this.getRecentEmojis(type).then((recent) => {\n      const i = emoji.docId || emoji.emoji;\n      indexOfAndSplice(recent, i);\n      recent.unshift(i);\n      recent.splice(RECENT_MAX_LENGTH, recent.length - RECENT_MAX_LENGTH);\n\n      this.appStateManager.pushToState(type === 'custom' ? 'recentCustomEmoji' : 'recentEmoji', recent);\n      this.rootScope.dispatchEvent('emoji_recent', emoji);\n    });\n  }\n\n  public getCustomEmojiDocuments(docIds: DocId[]) {\n    if(!docIds.length) return Promise.resolve([] as MyDocument[]);\n    return this.apiManager.invokeApi('messages.getCustomEmojiDocuments', {document_id: docIds}).then((documents) => {\n      return documents.map((doc) => {\n        return this.appDocsManager.saveDoc(doc, {\n          type: 'customEmoji',\n          docId: doc.id\n        });\n      });\n    });\n  }\n\n  public getCachedCustomEmojiDocuments(docIds: DocId[]) {\n    return docIds.map((docId) => this.appDocsManager.getDoc(docId));\n  }\n\n  private setDebouncedGetCustomEmojiDocuments() {\n    if(this.getCustomEmojiDocumentsPromise || !this.getCustomEmojiDocumentPromises.size) {\n      return;\n    }\n\n    this.getCustomEmojiDocumentsPromise = pause(0).then(() => {\n      const allIds = [...this.getCustomEmojiDocumentPromises.keys()];\n      const promises: Promise<any>[] = [];\n      do {\n        const ids = allIds.splice(0, 100);\n        const promise = this.getCustomEmojiDocuments(ids).then((docs) => {\n          docs.forEach((doc, idx) => {\n            const docId = ids[idx];\n            const deferred = this.getCustomEmojiDocumentPromises.get(docId);\n            this.getCustomEmojiDocumentPromises.delete(docId);\n            deferred.resolve(doc);\n          });\n        });\n\n        promises.push(promise);\n      } while(allIds.length);\n\n      return Promise.all(promises);\n    }).finally(() => {\n      this.getCustomEmojiDocumentsPromise = undefined;\n      this.setDebouncedGetCustomEmojiDocuments();\n    });\n  }\n\n  public getCustomEmojiDocument(id: DocId) {\n    let promise = this.getCustomEmojiDocumentPromises.get(id);\n    if(promise) {\n      return promise;\n    }\n\n    const doc = this.appDocsManager.getDoc(id);\n    if(doc) {\n      return doc;\n    }\n\n    promise = deferredPromise();\n    this.getCustomEmojiDocumentPromises.set(id, promise);\n\n    this.setDebouncedGetCustomEmojiDocuments();\n\n    return promise;\n  }\n\n  public getCustomEmojis() {\n    return this.appStickersManager.getEmojiStickers();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/evgeny-nadymov/telegram-react\n * Copyright (C) 2018 Evgeny Nadymov\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\n */\n\nimport type GroupCallConnectionInstance from '../calls/groupCallConnectionInstance';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport {nextRandomUint} from '../../helpers/random';\nimport {DataJSON, GroupCall, GroupCallParticipant, GroupCallParticipantVideoSourceGroup, InputGroupCall, PhoneJoinGroupCall, PhoneJoinGroupCallPresentation, Update, Updates} from '../../layer';\nimport {logger} from '../logger';\nimport {NULL_PEER_ID} from '../mtproto/mtproto_config';\nimport {AppManager} from './manager';\nimport getPeerId from './utils/peers/getPeerId';\n\nexport type GroupCallId = GroupCall['id'];\nexport type MyGroupCall = GroupCall | InputGroupCall;\n\nexport type GroupCallConnectionType = 'main' | 'presentation';\n\nexport type JoinGroupCallJsonPayload = {\n  fingerprints: {\n    fingerprint: string;\n    setup: string;\n    hash: string;\n  }[];\n  pwd: string;\n  ssrc: number;\n  'ssrc-groups': GroupCallParticipantVideoSourceGroup.groupCallParticipantVideoSourceGroup[];\n  ufrag: string;\n};\n\nconst GET_PARTICIPANTS_LIMIT = 100;\n\nexport type GroupCallOutputSource = 'main' | 'presentation' | number;\n\nexport class AppGroupCallsManager extends AppManager {\n  private log: ReturnType<typeof logger>;\n\n  private groupCalls: Map<GroupCallId, MyGroupCall>;\n  private participants: Map<GroupCallId, Map<PeerId, GroupCallParticipant>>;\n  private nextOffsets: Map<GroupCallId, string>;\n\n  // private doNotDispatchParticipantUpdate: PeerId;\n\n  protected after() {\n    this.log = logger('GROUP-CALLS');\n\n    this.groupCalls = new Map();\n    this.participants = new Map();\n    this.nextOffsets = new Map();\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateGroupCall: (update) => {\n        this.saveGroupCall(update.call, update.chat_id);\n      },\n\n      updateGroupCallParticipants: (update) => {\n        this.saveGroupCall(update.call);\n\n        // this.getGroupCallFull(update.call.id, true); // ! WARNING TEMP\n\n        const groupCallId = update.call.id;\n        this.saveApiParticipants(groupCallId, update.participants);\n      }\n    });\n\n    this.rootScope.addEventListener('group_call_update', (groupCall) => {\n      if(groupCall._ === 'groupCallDiscarded') {\n        this.participants.delete(groupCall.id);\n      }\n    });\n  }\n\n  public getCachedParticipants(groupCallId: GroupCallId) {\n    let participants = this.participants.get(groupCallId);\n    if(!participants) {\n      this.participants.set(groupCallId, participants = new Map());\n    }\n\n    return participants;\n  }\n\n  private prepareToSavingNextOffset(groupCallId: GroupCallId) {\n    const nextOffsetsMap = this.nextOffsets;\n\n    const setNextOffset = (newNextOffset: string) => {\n      if(nextOffsetsMap.get(groupCallId) === nextOffset) {\n        nextOffsetsMap.set(groupCallId, newNextOffset);\n      }\n    };\n\n    const nextOffset = nextOffsetsMap.get(groupCallId);\n    return {\n      nextOffset,\n      setNextOffset\n    };\n  }\n\n  public saveApiParticipant(groupCallId: GroupCallId, participant: GroupCallParticipant, skipCounterUpdating?: boolean) {\n    const participants = this.getCachedParticipants(groupCallId);\n\n    const peerId = getPeerId(participant.peer);\n\n    const oldParticipant = participants.get(peerId);\n    const hasLeft = participant.pFlags.left;\n    if(!oldParticipant && hasLeft) {\n      return;\n    }\n\n    // * fix missing flag\n    if(!participant.pFlags.muted && !participant.pFlags.can_self_unmute) {\n      participant.pFlags.can_self_unmute = true;\n    }\n\n    if(oldParticipant) {\n      safeReplaceObject(oldParticipant, participant);\n      participant = oldParticipant;\n    } else {\n      participants.set(peerId, participant);\n    }\n\n    // if(!skipCounterUpdating) {\n    const groupCall = this.getGroupCall(groupCallId);\n    if(groupCall?._ === 'groupCall') {\n      let modified = false;\n      if(hasLeft) {\n        --groupCall.participants_count;\n        modified = true;\n      } else if(participant.pFlags.just_joined && !oldParticipant && !participant.pFlags.self) {\n        ++groupCall.participants_count;\n        modified = true;\n      }\n\n      if(modified) {\n        this.rootScope.dispatchEvent('group_call_update', groupCall);\n      }\n    }\n    // }\n\n    if(hasLeft) {\n      participants.delete(peerId);\n    }\n\n    if(oldParticipant || true/*  && this.doNotDispatchParticipantUpdate !== peerId */) {\n      this.rootScope.dispatchEvent('group_call_participant', {\n        groupCallId,\n        participant\n      });\n    }\n  }\n\n  public saveApiParticipants(groupCallId: GroupCallId, apiParticipants: GroupCallParticipant[], skipCounterUpdating?: boolean) {\n    if((apiParticipants as any).saved) return;\n    (apiParticipants as any).saved = true;\n    apiParticipants.forEach((p) => this.saveApiParticipant(groupCallId, p, skipCounterUpdating));\n  }\n\n  public async editParticipant(groupCallId: GroupCallId, participant: GroupCallParticipant, options: Partial<{\n    muted: boolean,\n    volume: number,\n    raiseHand: boolean,\n    videoStopped: boolean,\n    videoPaused: boolean,\n    presentationPaused: boolean\n  }>) {\n    this.saveApiParticipant(groupCallId, participant);\n\n    const peerId = participant.pFlags.self ? NULL_PEER_ID : getPeerId(participant.peer);\n    const updates = await this.apiManager.invokeApiSingle('phone.editGroupCallParticipant', {\n      call: this.getGroupCallInput(groupCallId),\n      participant: peerId === NULL_PEER_ID ? this.appPeersManager.getInputPeerSelf() : this.appPeersManager.getInputPeerById(peerId),\n      muted: options.muted,\n      volume: options.volume,\n      raise_hand: options.raiseHand,\n      video_paused: options.videoPaused,\n      video_stopped: options.videoStopped,\n      presentation_paused: options.presentationPaused\n    });\n\n    // do not replace with peerId because it can be null\n    // if(!processUpdate) this.doNotDispatchParticipantUpdate = getPeerId(participant.peer);\n    this.apiUpdatesManager.processUpdateMessage(updates);\n    // if(!processUpdate) this.doNotDispatchParticipantUpdate = undefined;\n  }\n\n  public getGroupCall(id: GroupCallId) {\n    return this.groupCalls.get(id);\n  }\n\n  public async getGroupCallFull(id: GroupCallId, override?: boolean): Promise<GroupCall> {\n    const call = this.getGroupCall(id);\n    if(call && call._ !== 'inputGroupCall' && !override) {\n      return call;\n    }\n\n    const limit = this.getCachedParticipants(id).size ? 0 : GET_PARTICIPANTS_LIMIT;\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'phone.getGroupCall',\n      params: {\n        call: this.getGroupCallInput(id),\n        limit\n      },\n      processResult: (groupCall) => {\n        // ? maybe I should save group call after participants so I can avoid passing the 'skipCounterUpdating' flag ?\n        this.appUsersManager.saveApiUsers(groupCall.users);\n        this.appChatsManager.saveApiChats(groupCall.chats);\n        this.saveApiParticipants(id, groupCall.participants, true);\n        const call = this.saveGroupCall(groupCall.call) as GroupCall;\n\n        if(limit && this.nextOffsets.get(id) === undefined) {\n          this.nextOffsets.set(id, groupCall.participants_next_offset);\n        }\n\n        return call;\n      }\n    });\n  }\n\n  public saveGroupCall(call: MyGroupCall, chatId?: ChatId) {\n    const oldCall = this.groupCalls.get(call.id);\n    const shouldUpdate = call._ !== 'inputGroupCall' && (!oldCall || oldCall._ !== 'groupCallDiscarded');\n    if(oldCall) {\n      if(shouldUpdate) {\n        safeReplaceObject(oldCall, call);\n      }\n\n      call = oldCall;\n    } else {\n      this.groupCalls.set(call.id, call);\n    }\n\n    if(shouldUpdate) {\n      this.rootScope.dispatchEvent('group_call_update', call as any);\n    }\n\n    return call;\n  }\n\n  public async createGroupCall(chatId: ChatId, scheduleDate?: number, title?: string) {\n    const updates = await this.apiManager.invokeApi('phone.createGroupCall', {\n      peer: this.appPeersManager.getInputPeerById(chatId.toPeerId(true)),\n      random_id: nextRandomUint(32),\n      schedule_date: scheduleDate,\n      title\n    });\n\n    this.apiUpdatesManager.processUpdateMessage(updates);\n\n    const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateGroupCall') as Update.updateGroupCall;\n    return update.call;\n  }\n\n  public getGroupCallInput(id: GroupCallId): InputGroupCall {\n    const groupCall = this.getGroupCall(id);\n    return {\n      _: 'inputGroupCall',\n      id: groupCall.id,\n      access_hash: groupCall.access_hash\n    };\n  }\n\n  // public generateSelfParticipant(): GroupCallParticipant {\n  //   const mainSources = this.currentGroupCall.connections.main.sources;\n  //   const presentationSources = this.currentGroupCall.connections.presentation?.sources;\n  //   return {\n  //     _: 'groupCallParticipant',\n  //     pFlags: {\n  //       can_self_unmute: true,\n  //       self: true\n  //     },\n  //     source: mainSources.audio.source,\n  //     video: this.generateSelfVideo(mainSources.video),\n  //     presentation: presentationSources && this.generateSelfVideo(presentationSources.video, presentationSources.audio?.source),\n  //     date: tsNow(true),\n  //     peer: this.appPeersManager.getOutputPeer(rootScope.myId)\n  //   };\n  // }\n\n  public async getGroupCallParticipants(id: GroupCallId) {\n    const {nextOffset, setNextOffset} = this.prepareToSavingNextOffset(id);\n\n    if(nextOffset !== '') {\n      await this.apiManager.invokeApiSingleProcess({\n        method: 'phone.getGroupParticipants',\n        params: {\n          call: this.getGroupCallInput(id),\n          ids: [],\n          sources: [],\n          offset: nextOffset || '',\n          limit: GET_PARTICIPANTS_LIMIT\n        },\n        processResult: (groupCallParticipants) => {\n          const newNextOffset = groupCallParticipants.count === groupCallParticipants.participants.length ? '' : groupCallParticipants.next_offset;\n\n          this.appChatsManager.saveApiChats(groupCallParticipants.chats);\n          this.appUsersManager.saveApiUsers(groupCallParticipants.users);\n          this.saveApiParticipants(id, groupCallParticipants.participants);\n\n          setNextOffset(newNextOffset);\n        }\n      });\n    }\n\n    return {\n      participants: this.getCachedParticipants(id),\n      isEnd: this.nextOffsets.get(id) === ''\n    };\n  }\n\n  public hangUp(id: GroupCallId, discard?: boolean | number) {\n    const groupCallInput = this.getGroupCallInput(id);\n    let promise: Promise<Updates>;\n    if(typeof(discard) === 'boolean' && discard) {\n      promise = this.apiManager.invokeApi('phone.discardGroupCall', {\n        call: groupCallInput\n      });\n    } else if(typeof(discard) === 'number') {\n      promise = this.apiManager.invokeApi('phone.leaveGroupCall', {\n        call: groupCallInput,\n        source: discard\n      });\n    } else {\n      promise = this.apiManager.invokeApi('phone.joinGroupCall', {\n        call: groupCallInput,\n        join_as: this.appPeersManager.getInputPeerSelf(),\n        muted: true,\n        video_stopped: true,\n        params: {\n          _: 'dataJSON',\n          data: ''\n        }\n      });\n    }\n\n    return promise.then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public async joinGroupCall(groupCallId: GroupCallId, params: DataJSON, options: GroupCallConnectionInstance['options']) {\n    const groupCallInput = this.getGroupCallInput(groupCallId);\n    let promise: Promise<Updates>;\n    if(options.type === 'main') {\n      const request: PhoneJoinGroupCall = {\n        call: groupCallInput,\n        join_as: this.appPeersManager.getInputPeerSelf(),\n        params,\n        muted: options.isMuted,\n        video_stopped: !options.joinVideo\n      };\n\n      promise = this.apiManager.invokeApi('phone.joinGroupCall', request);\n      this.log(`[api] joinGroupCall id=${groupCallId}`, request);\n    } else {\n      const request: PhoneJoinGroupCallPresentation = {\n        call: groupCallInput,\n        params\n      };\n\n      promise = this.apiManager.invokeApi('phone.joinGroupCallPresentation', request);\n      this.log(`[api] joinGroupCallPresentation id=${groupCallId}`, request);\n    }\n\n    const updates = await promise;\n    this.apiUpdatesManager.processUpdateMessage(updates);\n\n    const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateGroupCallConnection') as Update.updateGroupCallConnection;\n    return update;\n  }\n\n  public leaveGroupCallPresentation(groupCallId: GroupCallId) {\n    return this.apiManager.invokeApi('phone.leaveGroupCallPresentation', {\n      call: this.getGroupCallInput(groupCallId)\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {InputPhoto} from '../../../../layer';\nimport {MyPhoto} from '../../appPhotosManager';\n\nexport default function getPhotoInput(photo: MyPhoto): InputPhoto.inputPhoto {\n  return {\n    _: 'inputPhoto',\n    id: photo.id,\n    access_hash: photo.access_hash,\n    file_reference: photo.file_reference\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {InputMedia} from '../../../../layer';\nimport {MyPhoto} from '../../appPhotosManager';\nimport getPhotoInput from './getPhotoInput';\n\nexport default function getPhotoMediaInput(photo: MyPhoto): InputMedia.inputMediaPhoto {\n  return {\n    _: 'inputMediaPhoto',\n    id: getPhotoInput(photo),\n    ttl_seconds: 0,\n    pFlags: {}\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {Document, InputMedia} from '../../../../layer';\n\nexport default function getMediaInput(doc: Document.document): InputMedia.inputMediaDocument {\n  return {\n    _: 'inputMediaDocument',\n    id: {\n      _: 'inputDocument',\n      id: doc.id,\n      access_hash: doc.access_hash,\n      file_reference: doc.file_reference\n    },\n    ttl_seconds: 0,\n    pFlags: {}\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {MyDocument} from './appDocsManager';\nimport type {MyPhoto} from './appPhotosManager';\nimport type {MyTopPeer} from './appUsersManager';\nimport type {AppMessagesManager, MessageSendingParams} from './appMessagesManager';\nimport {BotInlineResult, GeoPoint, InputGeoPoint, InputMedia, MessageEntity, MessageMedia, MessagesBotResults, ReplyMarkup} from '../../layer';\nimport insertInDescendSortedArray from '../../helpers/array/insertInDescendSortedArray';\nimport {AppManager} from './manager';\nimport getPhotoMediaInput from './utils/photos/getPhotoMediaInput';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\nimport generateQId from './utils/inlineBots/generateQId';\nimport getDocumentMediaInput from './utils/docs/getDocumentMediaInput';\n\nexport class AppInlineBotsManager extends AppManager {\n  private inlineResults: {[queryAndResultIds: string]: BotInlineResult} = {};\n  private setHash: {\n    [botId: UserId]: {\n      peerId: PeerId,\n      time: number\n    }\n  } = {};\n\n  public getGeoInput(geo: GeoPoint): InputGeoPoint {\n    return geo._ === 'geoPoint' ? {\n      _: 'inputGeoPoint',\n      lat: geo.lat,\n      long: geo.long,\n      accuracy_radius: geo.accuracy_radius\n    } : {\n      _: 'inputGeoPointEmpty'\n    };\n  }\n\n  public getInlineResults(peerId: PeerId, botId: BotId, query = '', offset = '', geo?: GeoPoint) {\n    return this.apiManager.invokeApi('messages.getInlineBotResults', {\n      bot: this.appUsersManager.getUserInput(botId),\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      query,\n      geo_point: geo ? this.getGeoInput(geo) : undefined,\n      offset\n    }, {/* timeout: 1,  */stopTime: -1, noErrorBox: true}).then((botResults) => {\n      const queryId = botResults.query_id;\n\n      /* if(botResults.switch_pm) {\n        botResults.switch_pm.rText = wrapRichText(botResults.switch_pm.text, {noLinebreaks: true, noLinks: true});\n      } */\n\n      botResults.results.forEach((result) => {\n        if(result._ === 'botInlineMediaResult') {\n          result.document = this.appDocsManager.saveDoc(result.document);\n          result.photo = this.appPhotosManager.savePhoto(result.photo);\n        } else {\n          result.content = this.appWebDocsManager.saveWebDocument(result.content);\n          result.thumb = this.appWebDocsManager.saveWebDocument(result.thumb);\n        }\n\n        this.inlineResults[generateQId(queryId, result.id)] = result;\n      });\n\n      return botResults;\n    });\n  }\n\n  private pushPopularBot(botId: BotId) {\n    this.appUsersManager.getTopPeers('bots_inline').then((topPeers) => {\n      const botPeerId = botId.toPeerId();\n      const index = topPeers.findIndex((topPeer) => topPeer.id === botPeerId);\n      let topPeer: MyTopPeer;\n      if(index !== -1) {\n        topPeer = topPeers[index];\n      } else {\n        topPeer = {\n          id: botPeerId,\n          rating: 0\n        };\n      }\n\n      ++topPeer.rating;\n      insertInDescendSortedArray(topPeers, topPeer, 'rating');\n\n      this.appStateManager.setKeyValueToStorage('topPeersCache');\n\n      // rootScope.$broadcast('inline_bots_popular')\n    });\n  }\n\n  public switchToPM(fromPeerId: PeerId, botId: BotId, startParam: string) {\n    this.setHash[botId] = {peerId: fromPeerId, time: Date.now()};\n    return this.appMessagesManager.startBot(botId, undefined, startParam);\n  }\n\n  /*\n  function resolveInlineMention (username) {\n    return AppPeersManager.resolveUsername(username).then(function (peerId) {\n      if (peerId.isUser()) {\n        var bot = AppUsersManager.getUser(peerId)\n        if (bot.pFlags.bot && bot.bot_inline_placeholder !== undefined) {\n          var resolvedBot = {\n            username: username,\n            id: peerId,\n            placeholder: bot.bot_inline_placeholder\n          }\n          if (bot.pFlags.bot_inline_geo &&\n            GeoLocationManager.isAvailable()) {\n              return checkGeoLocationAccess(peerId).then(function () {\n                return GeoLocationManager.getPosition().then(function (coords) {\n                  resolvedBot.geo = coords\n                  return qSync.when(resolvedBot)\n                })\n              })['catch'](function () {\n                return qSync.when(resolvedBot)\n              })\n            }\n            return qSync.when(resolvedBot)\n          }\n        }\n        return $q.reject()\n      }, function (error) {\n        error.handled = true\n        return $q.reject(error)\n      })\n    }\n\n    function regroupWrappedResults (results, rowW, rowH) {\n      if (!results ||\n        !results[0] ||\n        ['photo', 'gif', 'sticker'].indexOf(results[0].type) === -1) {\n          return\n        }\n        var ratios = []\n        angular.forEach(results, function (result) {\n          var w\n          var h, doc\n          var photo\n          if (result._ === 'botInlineMediaResult') {\n            if (doc = result.document) {\n              w = result.document.w\n              h = result.document.h\n            }\n            else if (photo = result.photo) {\n              var photoSize = (photo.sizes || [])[0]\n              w = photoSize && photoSize.w\n              h = photoSize && photoSize.h\n            }\n          }else {\n            w = result.w\n            h = result.h\n          }\n          if (!w || !h) {\n            w = h = 1\n          }\n          ratios.push(w / h)\n        })\n\n        var rows = []\n        var curCnt = 0\n        var curW = 0\n        angular.forEach(ratios, function (ratio) {\n          var w = ratio * rowH\n          curW += w\n          if (!curCnt || curCnt < 4 && curW < (rowW * 1.1)) {\n            curCnt++\n          } else {\n            rows.push(curCnt)\n            curCnt = 1\n            curW = w\n          }\n        })\n        if (curCnt) {\n          rows.push(curCnt)\n        }\n\n        var i = 0\n        var thumbs = []\n        var lastRowI = rows.length - 1\n        angular.forEach(rows, function (rowCnt, rowI) {\n          var lastRow = rowI === lastRowI\n          var curRatios = ratios.slice(i, i + rowCnt)\n          var sumRatios = 0\n          angular.forEach(curRatios, function (ratio) {\n            sumRatios += ratio\n          })\n          angular.forEach(curRatios, function (ratio, j) {\n            var thumbH = rowH\n            var thumbW = rowW * ratio / sumRatios\n            var realW = thumbH * ratio\n            if (lastRow && thumbW > realW) {\n              thumbW = realW\n            }\n            var result = results[i + j]\n            result.thumbW = Math.floor(thumbW) - 2\n            result.thumbH = Math.floor(thumbH) - 2\n          })\n\n          i += rowCnt\n        })\n      } */\n\n  public async checkSwitchReturn(botId: BotId) {\n    const bot = this.appUsersManager.getUser(botId);\n    if(!bot || !bot.pFlags.bot || !bot.bot_inline_placeholder) {\n      return;\n    }\n\n    const peerData = this.setHash[botId];\n    if(peerData) {\n      delete this.setHash[botId];\n      if((Date.now() - peerData.time) < 3600e3) {\n        return peerData.peerId;\n      }\n    }\n  }\n\n  public switchInlineQuery(peerId: PeerId, threadId: number, botId: BotId, query: string) {\n    const message = '@' + this.appPeersManager.getPeerUsername(botId.toPeerId()) + ' ' + query;\n    this.appDraftsManager.setDraft(peerId, threadId, message);\n  }\n\n  public callbackButtonClick(peerId: PeerId, mid: number, button: any) {\n    return this.apiManager.invokeApi('messages.getBotCallbackAnswer', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid),\n      data: button.data\n    }, {/* timeout: 1,  */stopTime: -1, noErrorBox: true});\n  }\n\n  /* function gameButtonClick (id) {\n    var message = AppMessagesManager.getMessage(id)\n    var peerId = AppMessagesManager.getMessagePeer(message)\n\n    return MtpApiManager.invokeApi('messages.getBotCallbackAnswer', {\n      peer: AppPeersManager.getInputPeerByID(peerId),\n      msg_id: AppMessagesIDsManager.getMessageLocalID(id)\n    }, {timeout: 1, stopTime: -1, noErrorBox: true}).then(function (callbackAnswer) {\n      if (typeof callbackAnswer.message === 'string' &&\n      callbackAnswer.message.length) {\n        showCallbackMessage(callbackAnswer.message, callbackAnswer.pFlags.alert)\n      }\n      else if (typeof callbackAnswer.url === 'string') {\n        AppGamesManager.openGame(message.media.game.id, id, callbackAnswer.url)\n      }\n    })\n  } */\n\n  public sendInlineResult(\n    peerId: PeerId,\n    botId: BotId,\n    queryAndResultIds: string,\n    options: Parameters<AppMessagesManager['sendOther']>[2] = {}\n  ) {\n    const inlineResult = this.inlineResults[queryAndResultIds];\n    if(!inlineResult) {\n      return;\n    }\n\n    this.pushPopularBot(botId);\n    const splitted = queryAndResultIds.split('_');\n    const queryId = splitted.shift();\n    const resultId = splitted.join('_');\n    options.viaBotId = botId;\n    options.queryId = queryId;\n    options.resultId = resultId;\n    if(inlineResult.send_message.reply_markup) {\n      options.replyMarkup = inlineResult.send_message.reply_markup;\n    }\n\n    if(inlineResult.send_message._ === 'botInlineMessageText') {\n      this.appMessagesManager.sendText(peerId, inlineResult.send_message.message, {\n        ...options,\n        entities: inlineResult.send_message.entities\n      });\n    } else {\n      let caption = '';\n      let inputMedia: Parameters<AppMessagesManager['sendOther']>[1], messageMedia: MessageMedia;\n      const sendMessage = inlineResult.send_message;\n      switch(sendMessage._) {\n        case 'botInlineMessageMediaAuto': {\n          caption = sendMessage.message;\n\n          if(inlineResult._ === 'botInlineMediaResult') {\n            const {document, photo} = inlineResult;\n            if(document) {\n              inputMedia = getDocumentMediaInput(document as MyDocument);\n            } else {\n              inputMedia = getPhotoMediaInput(photo as MyPhoto);\n            }\n          } else {\n            const webDocument = inlineResult.content || inlineResult.thumb;\n\n            if(webDocument) {\n              if(inlineResult.type === 'photo') {\n                inputMedia = {\n                  _: 'inputMediaPhotoExternal',\n                  pFlags: {},\n                  url: webDocument.url\n                };\n              } else {\n                inputMedia = {\n                  _: 'inputMediaDocumentExternal',\n                  pFlags: {},\n                  url: webDocument.url\n                };\n              }\n\n              options.webDocument = webDocument;\n            }\n          }\n\n          break;\n        }\n\n        case 'botInlineMessageMediaGeo': {\n          inputMedia = {\n            _: 'inputMediaGeoPoint',\n            geo_point: this.getGeoInput(sendMessage.geo)\n          };\n\n          options.geoPoint = sendMessage.geo;\n\n          break;\n        }\n\n        case 'botInlineMessageMediaVenue': {\n          inputMedia = {\n            _: 'inputMediaVenue',\n            geo_point: this.getGeoInput(sendMessage.geo),\n            title: sendMessage.title,\n            address: sendMessage.address,\n            provider: sendMessage.provider,\n            venue_id: sendMessage.venue_id,\n            venue_type: sendMessage.venue_type\n          };\n\n          options.geoPoint = sendMessage.geo;\n\n          break;\n        }\n\n        case 'botInlineMessageMediaContact': {\n          inputMedia = {\n            _: 'inputMediaContact',\n            phone_number: sendMessage.phone_number,\n            first_name: sendMessage.first_name,\n            last_name: sendMessage.last_name,\n            vcard: sendMessage.vcard\n          };\n\n          break;\n        }\n\n        case 'botInlineMessageMediaInvoice': {\n          // const photo = sendMessage.photo;\n          // inputMedia = {\n          //   _: 'inputMediaInvoice',\n          //   description: sendMessage.description,\n          //   title: sendMessage.title,\n          //   photo: photo && {\n          //     _: 'inputWebDocument',\n          //     attributes: photo.attributes,\n          //     mime_type: photo.mime_type,\n          //     size: photo.size,\n          //     url: photo.url\n          //   },\n          //   invoice: undefined,\n          //   payload: undefined,\n          //   provider: undefined,\n          //   provider_data: undefined,\n          //   start_param: undefined\n          // };\n\n          messageMedia = {\n            _: 'messageMediaInvoice',\n            title: sendMessage.title,\n            description: sendMessage.description,\n            photo: sendMessage.photo,\n            currency: sendMessage.currency,\n            total_amount: sendMessage.total_amount,\n            pFlags: {\n              shipping_address_requested: sendMessage.pFlags.shipping_address_requested,\n              test: sendMessage.pFlags.test\n            },\n            start_param: undefined\n          };\n\n          break;\n        }\n      }\n\n      if(!inputMedia && messageMedia) {\n        inputMedia = {\n          _: 'messageMediaPending',\n          messageMedia\n        };\n      }\n\n      this.appMessagesManager.sendOther(peerId, inputMedia, options);\n    }\n  }\n\n  /* function checkGeoLocationAccess (botID) {\n    var key = 'bot_access_geo' + botID\n    return Storage.get(key).then(function (geoAccess) {\n      if (geoAccess && geoAccess.granted) {\n        return true\n      }\n      return ErrorService.confirm({\n        type: 'BOT_ACCESS_GEO_INLINE'\n      }).then(function () {\n        var setHash = {}\n        setHash[key] = {granted: true, time: tsNow()}\n        Storage.set(setHash)\n        return true\n      }, function () {\n        var setHash = {}\n        setHash[key] = {denied: true, time: tsNow()}\n        Storage.set(setHash)\n        return $q.reject()\n      })\n    })\n  } */\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {MESSAGE_ID_OFFSET} from '../mtproto/mtproto_config';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\n\nexport class AppMessagesIdsManager {\n  // private channelLocals: {[channelId: ChatId]: number} = {};\n  // private channelsByLocals: {[local: number]: ChatId} = {};\n  // private channelCurLocal = 0;\n\n  public generateTempMessageId(messageId: number, channelId: ChatId) {\n    return +(this.generateMessageId(messageId, channelId) + 0.0001).toFixed(4);\n  }\n\n  public generateMessageId(messageId: number, channelId: ChatId) {\n    if(\n      !channelId ||\n      !Number.isInteger(messageId) ||\n      messageId <= 0\n    ) {\n      return messageId;\n    }\n\n    messageId = getServerMessageId(messageId);\n    // let localStart = this.channelLocals[channelId];\n    const localStart = MESSAGE_ID_OFFSET;\n    // if(!localStart) {\n    //   localStart = ++this.channelCurLocal * MESSAGE_ID_OFFSET;\n    //   this.channelsByLocals[localStart] = channelId;\n    //   this.channelLocals[channelId] = localStart;\n    // }\n\n    return localStart + messageId;\n  }\n\n  public isLegacyMessageId(messageId: number) {\n    return typeof(messageId) === 'number' && messageId < MESSAGE_ID_OFFSET;\n  }\n\n  public incrementMessageId(messageId: number, increment: number) {\n    return this.generateMessageId(getServerMessageId(messageId) + increment, this.isLegacyMessageId(messageId) ? 1 : 0);\n  }\n\n  public getMessageIdInfo(mid: number, channelId?: ChatId) {\n    const messageId = getServerMessageId(mid);\n    return {messageId, channelId: mid === messageId ? undefined : channelId};\n    // if(mid === messageId) {\n    //   return {messageId, channelId: undefined as number};\n    // }\n\n    // const channelId = this.channelsByLocals[mid - messageId];\n    // return {messageId, channelId};\n  }\n\n  public splitMessageIdsByChannels(mids: number[], _channelId?: ChatId) {\n    const out: Array<[ChatId, {mids: number[], messageIds: number[]}]> = [];\n    let prevItem: typeof out[0];\n    for(let i = 0, length = mids.length; i < length; ++i) {\n      const mid = mids[i];\n      const {messageId, channelId} = this.getMessageIdInfo(mid, _channelId);\n      if(!prevItem || prevItem[0] !== channelId) {\n        prevItem = [channelId, {mids: [], messageIds: []}];\n        out.push(prevItem);\n      }\n\n      prevItem[1].mids.push(mid);\n      prevItem[1].messageIds.push(messageId);\n    }\n\n    return out;\n  }\n}\n","export default function splitStringByLength(str: string, maxLength: number) {\n  if(str.length < maxLength) return [str];\n  let length = 0, lastSliceStartIndex = 0, arrayIndex = 0;\n  const delimiter = ' ';// '\\n';\n  const out: string[] = [];\n\n  const cut = (end?: number) => {\n    let part = str.slice(lastSliceStartIndex, end);\n    const _arrayIndex = arrayIndex++;\n    if(part.length > maxLength) {\n      const overflowPart = part.slice(maxLength);\n      const splitted = splitStringByLength(overflowPart, maxLength);\n      splitted.forEach((part) => {\n        out[arrayIndex++] = part;\n      });\n\n      part = part.slice(0, maxLength);\n    }\n\n    lastSliceStartIndex = end;\n    length = 0;\n    out[_arrayIndex] = (out[_arrayIndex] || '') + part;\n  };\n\n  let lastIndex = 0;\n  do {\n    let index = str.indexOf(delimiter, lastIndex);\n    if(index === -1) {\n      if(lastIndex !== (str.length - 1)) {\n        cut();\n      }\n\n      break;\n    }\n\n    index += delimiter.length;\n\n    const partLength = index - lastIndex;\n    if((length + partLength) > maxLength) {\n      cut(length);\n    }\n\n    lastIndex = index;\n    length += partLength;\n  } while(true);\n\n  return out;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {TabState} from '../mtproto/mtprotoworker';\nimport {MOUNT_CLASS_TO} from '../../config/debug';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\n\ntype Tab = {\n  source: MessageEventSource,\n  state: TabState\n};\n\nexport class AppTabsManager {\n  private tabs: Map<Tab['source'], Tab>;\n\n  constructor() {\n    this.tabs = new Map();\n  }\n\n  public start() {\n    const port = MTProtoMessagePort.getInstance<false>();\n\n    port.addEventListener('tabState', (state, source) => {\n      const tab = this.tabs.get(source);\n      tab.state = state;\n    });\n  }\n\n  public getTabs() {\n    return [...this.tabs.values()].filter((tab) => !!tab.state);\n  }\n\n  public addTab(source: MessageEventSource) {\n    const tab: Tab = {\n      source,\n      state: undefined\n    };\n\n    this.tabs.set(source, tab);\n  }\n\n  public deleteTab(source: MessageEventSource) {\n    this.tabs.delete(source);\n  }\n}\n\nconst appTabsManager = new AppTabsManager();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appTabsManager = appTabsManager);\nexport default appTabsManager;\n","import {InputDocument} from '../../../../layer';\nimport type {MyDocument} from '../../appDocsManager';\n\nexport default function getDocumentInput(doc: MyDocument): InputDocument {\n  return {\n    _: 'inputDocument',\n    id: doc.id,\n    access_hash: doc.access_hash,\n    file_reference: doc.file_reference\n  };\n}\n","export default function setBooleanFlag<T extends any>(obj: T, key: keyof T, value: boolean) {\n  // @ts-ignore\n  if(value) obj[key] = true;\n  else delete obj[key];\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {ApiFileManager} from '../mtproto/apiFileManager';\nimport type {MediaSize} from '../../helpers/mediaSize';\nimport type {Progress} from './appDownloadManager';\nimport type {VIDEO_MIME_TYPE} from '../../environment/videoMimeTypesSupport';\nimport LazyLoadQueueBase from '../../components/lazyLoadQueueBase';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport tsNow from '../../helpers/tsNow';\nimport {randomLong} from '../../helpers/random';\nimport {Chat, ChatFull, Dialog as MTDialog, DialogPeer, DocumentAttribute, InputMedia, InputMessage, InputPeerNotifySettings, InputSingleMedia, Message, MessageAction, MessageEntity, MessageFwdHeader, MessageMedia, MessageReplies, MessageReplyHeader, MessagesDialogs, MessagesFilter, MessagesMessages, MethodDeclMap, NotifyPeer, PeerNotifySettings, PhotoSize, SendMessageAction, Update, Photo, Updates, ReplyMarkup, InputPeer, InputPhoto, InputDocument, InputGeoPoint, WebPage, GeoPoint, ReportReason, MessagesGetDialogs, InputChannel, InputDialogPeer, ReactionCount, MessagePeerReaction, MessagesSearchCounter, Peer, MessageReactions, Document, InputFile, Reaction, ForumTopic as MTForumTopic, MessagesForumTopics, MessagesGetReplies, MessagesGetHistory, MessagesAffectedHistory, UrlAuthResult, MessagesTranscribedAudio, ReadParticipantDate, WebDocument, MessagesSearch, MessagesSearchGlobal} from '../../layer';\nimport {ArgumentTypes, InvokeApiOptions, Modify} from '../../types';\nimport {logger, LogTypes} from '../logger';\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport DialogsStorage, {GLOBAL_FOLDER_ID} from '../storages/dialogs';\nimport {ChatRights} from './appChatsManager';\nimport {MyDocument} from './appDocsManager';\nimport {MyPhoto} from './appPhotosManager';\nimport {getFileNameByLocation} from '../../helpers/fileName';\nimport DEBUG from '../../config/debug';\nimport SlicedArray, {Slice, SliceEnd} from '../../helpers/slicedArray';\nimport {FOLDER_ID_ALL, GENERAL_TOPIC_ID, MUTE_UNTIL, NULL_PEER_ID, REAL_FOLDER_ID, REPLIES_HIDDEN_CHANNEL_ID, REPLIES_PEER_ID, SERVICE_PEER_ID, THUMB_TYPE_FULL} from '../mtproto/mtproto_config';\n// import telegramMeWebManager from '../mtproto/telegramMeWebManager';\nimport {getMiddleware} from '../../helpers/middleware';\nimport assumeType from '../../helpers/assumeType';\nimport copy from '../../helpers/object/copy';\nimport getObjectKeysAndSort from '../../helpers/object/getObjectKeysAndSort';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport deepEqual from '../../helpers/object/deepEqual';\nimport splitStringByLength from '../../helpers/string/splitStringByLength';\nimport debounce from '../../helpers/schedulers/debounce';\nimport {AppManager} from './manager';\nimport getPhotoMediaInput from './utils/photos/getPhotoMediaInput';\nimport getPhotoDownloadOptions from './utils/photos/getPhotoDownloadOptions';\nimport fixEmoji from '../richTextProcessor/fixEmoji';\nimport mergeEntities from '../richTextProcessor/mergeEntities';\nimport parseEntities from '../richTextProcessor/parseEntities';\nimport parseMarkdown from '../richTextProcessor/parseMarkdown';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\nimport filterMessagesByInputFilter from './utils/messages/filterMessagesByInputFilter';\nimport ctx from '../../environment/ctx';\nimport {getEnvironment} from '../../environment/utils';\nimport getDialogIndex from './utils/dialogs/getDialogIndex';\nimport defineNotNumerableProperties from '../../helpers/object/defineNotNumerableProperties';\nimport getDocumentMediaInput from './utils/docs/getDocumentMediaInput';\nimport getDocumentInputFileName from './utils/docs/getDocumentInputFileName';\nimport getFileNameForUpload from '../../helpers/getFileNameForUpload';\nimport noop from '../../helpers/noop';\nimport appTabsManager from './appTabsManager';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\nimport getAlbumText from './utils/messages/getAlbumText';\nimport pause from '../../helpers/schedulers/pause';\nimport makeError from '../../helpers/makeError';\nimport getStickerEffectThumb from './utils/stickers/getStickerEffectThumb';\nimport getDocumentInput from './utils/docs/getDocumentInput';\nimport reactionsEqual from './utils/reactions/reactionsEqual';\nimport getPeerActiveUsernames from './utils/peers/getPeerActiveUsernames';\nimport {BroadcastEvents} from '../rootScope';\nimport setBooleanFlag from '../../helpers/object/setBooleanFlag';\nimport getMessageThreadId from './utils/messages/getMessageThreadId';\n\n// console.trace('include');\n// TODO: если удалить диалог находясь в папке, то он не удалится из папки и будет виден в настройках\n\nconst APITIMEOUT = 0;\nconst DO_NOT_READ_HISTORY = false;\nconst DO_NOT_SEND_MESSAGES = false;\n\nexport type SendFileDetails = {\n  file: File | Blob | MyDocument,\n} & Partial<{\n  duration: number,\n  width: number,\n  height: number,\n  objectURL: string,\n  thumb: {\n    blob: Blob,\n    url: string,\n    size: MediaSize\n  },\n  strippedBytes: PhotoSize.photoStrippedSize['bytes'],\n  spoiler: boolean\n}>;\n\nexport type HistoryStorage = {\n  count: number | null,\n  history: SlicedArray<number>,\n\n  maxId?: number,\n  readPromise?: Promise<void>,\n  readMaxId?: number,\n  readOutboxMaxId?: number,\n  triedToReadMaxId?: number,\n\n  maxOutId?: number,\n  replyMarkup?: Exclude<ReplyMarkup, ReplyMarkup.replyInlineMarkup>,\n\n  type: 'history' | 'replies' | 'search',\n};\n\nexport type HistoryResult = {\n  count: number,\n  history: number[],\n  isEnd: ReturnType<Slice<number>['getEnds']>,\n  offsetIdOffset?: number,\n  nextRate?: number,\n  messages?: MyMessage[]\n};\n\nexport type Dialog = MTDialog.dialog;\nexport type ForumTopic = MTForumTopic.forumTopic;\n\nexport type MyMessage = Message.message | Message.messageService;\nexport type MyInputMessagesFilter = 'inputMessagesFilterEmpty'\n  | 'inputMessagesFilterPhotos'\n  | 'inputMessagesFilterPhotoVideo'\n  | 'inputMessagesFilterVideo'\n  | 'inputMessagesFilterDocument'\n  | 'inputMessagesFilterVoice'\n  | 'inputMessagesFilterRoundVoice'\n  | 'inputMessagesFilterRoundVideo'\n  | 'inputMessagesFilterMusic'\n  | 'inputMessagesFilterUrl'\n  | 'inputMessagesFilterMyMentions'\n  | 'inputMessagesFilterChatPhotos'\n  | 'inputMessagesFilterPinned';\n\nexport type PinnedStorage = Partial<{\n  promise: Promise<PinnedStorage>,\n  count: number,\n  maxId: number\n}>;\nexport type MessagesStorage = Map<number, Message.message | Message.messageService> & {peerId: PeerId, type: MessagesStorageType, key: MessagesStorageKey};\nexport type MessagesStorageType = 'scheduled' | 'history' | 'grouped';\nexport type MessagesStorageKey = `${PeerId}_${MessagesStorageType}`;\n\nexport type MyMessageActionType = Message.messageService['action']['_'];\n\ntype PendingAfterMsg = Partial<InvokeApiOptions & {\n  afterMessageId: string,\n  messageId: string\n}>;\n\ntype MapValueType<A> = A extends Map<any, infer V> ? V : never;\n\nexport type BatchUpdates = {\n  'messages_reactions': AppMessagesManager['batchUpdateReactions'],\n  'messages_views': AppMessagesManager['batchUpdateViews']\n};\n\ntype PendingMessageDetails = {\n  peerId: PeerId,\n  tempId: number,\n  threadId: number,\n  storage: MessagesStorage,\n  sequential?: boolean\n};\n\nconst processAfter = (cb: () => void) => {\n  // setTimeout(cb, 0);\n  cb();\n};\n\nexport type MessageSendingParams = Partial<{\n  threadId: number,\n  replyToMsgId: number,\n  scheduleDate: number,\n  silent: boolean,\n  sendAsPeerId: number,\n  updateStickersetOrder: boolean\n}>;\n\ntype RequestHistoryOptions = {\n  peerId?: PeerId;\n  offsetId?: number;\n  offsetPeerId?: PeerId; // to get the offset message\n  limit?: number;\n  addOffset?: number;\n  offsetDate?: number;\n  threadId?: number;\n  // search\n  nextRate?: number;\n  folderId?: number;\n  query?: string;\n  inputFilter?: {\n    _: MyInputMessagesFilter;\n  };\n  minDate?: number;\n  maxDate?: number;\n  recursion?: boolean; // ! FOR INNER USE ONLY\n};\n\nexport class AppMessagesManager extends AppManager {\n  private messagesStorageByPeerId: {[peerId: string]: MessagesStorage};\n  private groupedMessagesStorage: {[groupId: string]: MessagesStorage}; // will be used for albums\n  private scheduledMessagesStorage: {[peerId: PeerId]: MessagesStorage};\n  private historiesStorage: {\n    [peerId: PeerId]: HistoryStorage\n  };\n  private threadsStorage: {\n    [peerId: PeerId]: {\n      [threadId: string]: HistoryStorage\n    }\n  };\n  private searchesStorage: {\n    [peerId: PeerId]: {\n      [inputFilter in MyInputMessagesFilter]?: HistoryStorage\n    }\n  };\n  private pinnedMessages: {[key: string]: PinnedStorage};\n\n  private threadsServiceMessagesIdsStorage: {[peerId_threadId: string]: number};\n  private threadsToReplies: {\n    [peerId_threadId: string]: string;\n  };\n\n  private pendingByRandomId: {\n    [randomId: string]: PendingMessageDetails\n  } = {};\n  private pendingByMessageId: {[mid: string]: Long} = {};\n  private pendingAfterMsgs: {[peerId: PeerId]: PendingAfterMsg} = {};\n  public pendingTopMsgs: {[peerId: PeerId]: number} = {};\n  private tempFinalizeCallbacks: {\n    [tempId: string]: {\n      [callbackName: string]: Partial<{\n        deferred: CancellablePromise<void>,\n        callback: (message: MyMessage) => Promise<any>\n      }>\n    }\n  } = {};\n\n  private sendSmthLazyLoadQueue = new LazyLoadQueueBase(10);\n\n  private needSingleMessages: Map<PeerId, Map<number, CancellablePromise<Message.message | Message.messageService>>> = new Map();\n  private fetchSingleMessagesPromise: Promise<void>;\n  private extendedMedia: Map<PeerId, Map<number, CancellablePromise<void>>> = new Map();\n\n  private maxSeenId = 0;\n\n  public migratedFromTo: {[peerId: PeerId]: PeerId} = {};\n  public migratedToFrom: {[peerId: PeerId]: PeerId} = {};\n\n  private newDialogsHandlePromise: Promise<any>;\n  private newDialogsToHandle: Map<PeerId, {dialog?: Dialog, topics?: Map<number, ForumTopic>}> = new Map();\n  public newUpdatesAfterReloadToHandle: {[key: string]: Set<Update>} = {};\n\n  private notificationsHandlePromise: number;\n  private notificationsToHandle: {[key: string]: {\n    fwdCount: number,\n    fromId: PeerId,\n    topMessage?: MyMessage\n  }} = {};\n\n  private reloadConversationsPromise: Promise<void>;\n  private reloadConversationsPeers: Map<PeerId, {inputDialogPeer: InputDialogPeer, promise: CancellablePromise<Dialog>}> = new Map();\n\n  public log = logger('MESSAGES', LogTypes.Error | LogTypes.Debug | LogTypes.Log | LogTypes.Warn);\n\n  private groupedTempId = 0;\n\n  private typings: {[key: string]: {action: SendMessageAction, timeout?: number}} = {};\n\n  private middleware: ReturnType<typeof getMiddleware>;\n\n  private unreadMentions: {[key: string]: SlicedArray<number>} = {};\n  private goToNextMentionPromises: {[key: string]: Promise<number>} = {};\n\n  private batchUpdates: {\n    [k in keyof BatchUpdates]?: {\n      callback: BatchUpdates[k],\n      batch: ArgumentTypes<BatchUpdates[k]>[0]\n    }\n  } = {};\n  private batchUpdatesDebounced: () => Promise<void>;\n\n  private uploadFilePromises: {[fileName: string]: CancellablePromise<any>};\n\n  private tempMids: {[peerId: PeerId]: number} = {};\n\n  protected after() {\n    this.clear(true);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateMessageID: this.onUpdateMessageId,\n\n      updateNewDiscussionMessage: this.onUpdateNewMessage,\n      updateNewMessage: this.onUpdateNewMessage,\n      updateNewChannelMessage: this.onUpdateNewMessage,\n\n      updateDialogUnreadMark: this.onUpdateDialogUnreadMark,\n\n      updateEditMessage: this.onUpdateEditMessage,\n      updateEditChannelMessage: this.onUpdateEditMessage,\n\n      updateMessageReactions: this.onUpdateMessageReactions,\n\n      updateReadChannelDiscussionInbox: this.onUpdateReadHistory,\n      updateReadChannelDiscussionOutbox: this.onUpdateReadHistory,\n      updateReadHistoryInbox: this.onUpdateReadHistory,\n      updateReadHistoryOutbox: this.onUpdateReadHistory,\n      updateReadChannelInbox: this.onUpdateReadHistory,\n      updateReadChannelOutbox: this.onUpdateReadHistory,\n\n      updateChannelReadMessagesContents: this.onUpdateReadMessagesContents,\n      updateReadMessagesContents: this.onUpdateReadMessagesContents,\n\n      updateChannelAvailableMessages: this.onUpdateChannelAvailableMessages,\n\n      updateDeleteMessages: this.onUpdateDeleteMessages,\n      updateDeleteChannelMessages: this.onUpdateDeleteMessages,\n\n      updateChannel: this.onUpdateChannel,\n\n      updateChannelReload: this.onUpdateChannelReload,\n\n      updateChannelMessageViews: this.onUpdateChannelMessageViews,\n\n      updateServiceNotification: this.onUpdateServiceNotification,\n\n      updatePinnedMessages: this.onUpdatePinnedMessages,\n      updatePinnedChannelMessages: this.onUpdatePinnedMessages,\n\n      updateNotifySettings: this.onUpdateNotifySettings,\n\n      updateNewScheduledMessage: this.onUpdateNewScheduledMessage,\n\n      updateDeleteScheduledMessages: this.onUpdateDeleteScheduledMessages,\n\n      updateMessageExtendedMedia: this.onUpdateMessageExtendedMedia,\n\n      updateTranscribedAudio: this.onUpdateTranscribedAudio\n    });\n\n    // ! Invalidate notify settings, can optimize though\n    this.rootScope.addEventListener('notify_peer_type_settings', ({key, settings}) => {\n      const dialogs = this.dialogsStorage.getFolderDialogs(0).concat(this.dialogsStorage.getFolderDialogs(1));\n      let filterFunc: (dialog: typeof dialogs[0]) => boolean;\n      if(key === 'notifyUsers') filterFunc = (dialog) => dialog.peerId.isUser();\n      else if(key === 'notifyBroadcasts') filterFunc = (dialog) => this.appPeersManager.isBroadcast(dialog.peerId);\n      else filterFunc = (dialog) => this.appPeersManager.isAnyGroup(dialog.peerId);\n\n      dialogs\n      .filter(filterFunc)\n      .forEach((dialog) => {\n        this.rootScope.dispatchEvent('dialog_notify_settings', dialog);\n      });\n    });\n\n    this.rootScope.addEventListener('webpage_updated', ({id, msgs}) => {\n      msgs.forEach(({peerId, mid, isScheduled}) => {\n        const storage = isScheduled ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\n        const message = this.getMessageFromStorage(storage, mid) as Message.message;\n        if(!message) return;\n        message.media = {\n          _: 'messageMediaWebPage',\n          webpage: this.appWebPagesManager.getCachedWebPage(id)\n        };\n\n        this.rootScope.dispatchEvent('message_edit', {\n          storageKey: storage.key,\n          peerId,\n          mid,\n          message\n        });\n      });\n    });\n\n    this.rootScope.addEventListener('draft_updated', ({peerId, threadId, draft}) => {\n      const dialog = this.dialogsStorage.getDialogOrTopic(peerId, threadId);\n      if(dialog) {\n        dialog.draft = draft;\n\n        let drop = false;\n        if(!draft && !getServerMessageId(dialog.top_message)) {\n          this.dialogsStorage.dropDialog(peerId);\n          drop = true;\n        } else {\n          this.dialogsStorage.generateIndexForDialog(dialog);\n          this.dialogsStorage.pushDialog({dialog});\n        }\n\n        this.rootScope.dispatchEvent('dialog_draft', {\n          peerId,\n          dialog,\n          drop,\n          draft\n        });\n      } else if(threadId) {\n        const chat = this.appChatsManager.getChat(peerId.toChatId());\n        if(!chat) {\n          this.reloadConversation(peerId);\n        } else if((chat as Chat.channel).pFlags.forum) {\n          this.dialogsStorage.getForumTopicById(peerId, threadId);\n        }\n      } else {\n        this.reloadConversation(peerId);\n      }\n    });\n\n    this.rootScope.addEventListener('poll_update', ({poll}) => {\n      const set = this.appPollsManager.pollToMessages[poll.id];\n      if(set) {\n        for(const key of set) {\n          const [peerId, mid] = key.split('_');\n\n          const message = this.getMessageByPeer(peerId.toPeerId(), +mid);\n          if(message) {\n            this.setDialogToStateIfMessageIsTop(message);\n          }\n        }\n      }\n    });\n\n    // * clear forum cache\n    this.rootScope.addEventListener('chat_toggle_forum', ({chatId, enabled}) => {\n      const peerId = chatId.toPeerId(true);\n      if(!enabled) {\n        delete this.threadsStorage[peerId];\n\n        for(const key in this.pinnedMessages) {\n          if(+key === peerId && key.startsWith(peerId + '_')) {\n            delete this.pinnedMessages[key];\n          }\n        }\n      }\n    });\n\n    this.batchUpdatesDebounced = debounce(() => {\n      for(const event in this.batchUpdates) {\n        const details = this.batchUpdates[event as keyof BatchUpdates];\n        delete this.batchUpdates[event as keyof BatchUpdates];\n\n        // @ts-ignore\n        const result = details.callback(details.batch);\n        if(result && (!(result instanceof Array) || result.length)) {\n          // @ts-ignore\n          rootScope.dispatchEvent(event as keyof BatchUpdates, result);\n        }\n      }\n    }, 33, false, true);\n\n    return this.appStateManager.getState().then((state) => {\n      if(state.maxSeenMsgId) {\n        this.maxSeenId = state.maxSeenMsgId;\n      }\n    });\n  }\n\n  public clear = (init?: boolean) => {\n    if(this.middleware) {\n      this.middleware.clean();\n    } else {\n      this.middleware = getMiddleware();\n      this.uploadFilePromises = {};\n    }\n\n    this.messagesStorageByPeerId = {};\n    this.groupedMessagesStorage = {};\n    this.scheduledMessagesStorage = {};\n    this.historiesStorage = {};\n    this.threadsStorage = {};\n    this.searchesStorage = {};\n    this.pinnedMessages = {};\n    this.threadsServiceMessagesIdsStorage = {};\n    this.threadsToReplies = {};\n\n    this.dialogsStorage && this.dialogsStorage.clear(init);\n    this.filtersStorage && this.filtersStorage.clear(init);\n  };\n\n  public getInputEntities(entities: MessageEntity[]) {\n    const sendEntites = copy(entities);\n    sendEntites.forEach((entity) => {\n      if(entity._ === 'messageEntityMentionName') {\n        (entity as any as MessageEntity.inputMessageEntityMentionName)._ = 'inputMessageEntityMentionName';\n        (entity as any as MessageEntity.inputMessageEntityMentionName).user_id = this.appUsersManager.getUserInput(entity.user_id);\n      }\n    });\n    return sendEntites;\n  }\n\n  public invokeAfterMessageIsSent(tempId: number, callbackName: string, callback: (message: MyMessage) => Promise<any>) {\n    const finalize = this.tempFinalizeCallbacks[tempId] ??= {};\n    const obj = finalize[callbackName] ??= {deferred: deferredPromise<void>()};\n\n    obj.callback = callback;\n\n    return obj.deferred;\n  }\n\n  public editMessage(message: any, text: string, options: Partial<{\n    noWebPage: true,\n    newMedia: any,\n    scheduleDate: number,\n    entities: MessageEntity[]\n  }> = {}): Promise<void> {\n    /* if(!this.canEditMessage(messageId)) {\n      return Promise.reject({type: 'MESSAGE_EDIT_FORBIDDEN'});\n    } */\n\n    const {mid, peerId} = message;\n\n    if(message.pFlags.is_outgoing) {\n      return this.invokeAfterMessageIsSent(mid, 'edit', (message) => {\n        // this.log('invoke editMessage callback', message);\n        return this.editMessage(message, text, options);\n      });\n    }\n\n    const entities = options.entities || [];\n    if(text) {\n      text = parseMarkdown(text, entities);\n    }\n\n    const schedule_date = options.scheduleDate || (message.pFlags.is_scheduled ? message.date : undefined);\n    return this.apiManager.invokeApi('messages.editMessage', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: message.id,\n      message: text,\n      media: options.newMedia,\n      entities: entities.length ? this.getInputEntities(entities) : undefined,\n      no_webpage: options.noWebPage,\n      schedule_date\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    }, (error) => {\n      this.log.error('editMessage error:', error);\n\n      if(error && error.type === 'MESSAGE_NOT_MODIFIED') {\n        error.handled = true;\n        return;\n      }\n      if(error && error.type === 'MESSAGE_EMPTY') {\n        error.handled = true;\n      }\n      return Promise.reject(error);\n    });\n  }\n\n  public async transcribeAudio(message: Message.message): Promise<MessagesTranscribedAudio> {\n    const {id, peerId} = message;\n\n    const process = (result: MessagesTranscribedAudio) => {\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateTranscribedAudio',\n        msg_id: message.id,\n        peer: this.appPeersManager.getOutputPeer(peerId),\n        pFlags: result.pFlags,\n        text: result.text,\n        transcription_id: result.transcription_id\n      });\n    };\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.transcribeAudio',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        msg_id: id\n      },\n      processResult: (result) => {\n        process(result);\n        return result;\n      },\n      processError: (error) => {\n        if(error.type === 'TRANSCRIPTION_FAILED' || error.type === 'MSG_VOICE_MISSING') {\n          process({\n            _: 'messages.transcribedAudio',\n            transcription_id: 0,\n            text: '',\n            pFlags: {}\n          });\n        }\n\n        throw error;\n      }\n    });\n  }\n\n  public async sendText(peerId: PeerId, text: string, options: MessageSendingParams & Partial<{\n    entities: MessageEntity[],\n    viaBotId: BotId,\n    queryId: string,\n    resultId: string,\n    noWebPage: true,\n    replyMarkup: ReplyMarkup,\n    clearDraft: true,\n    webPage: WebPage,\n  }> = {}): Promise<void> {\n    if(!text.trim()) {\n      return;\n    }\n\n    options.entities ??= [];\n\n    // this.checkSendOptions(options);\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    const config = await this.apiManager.getConfig();\n    const MAX_LENGTH = config.message_length_max;\n    const splitted = splitStringByLength(text, MAX_LENGTH);\n    text = splitted[0];\n    if(splitted.length > 1) {\n      if(options.webPage?._ === 'webPage' && !text.includes(options.webPage.url)) {\n        delete options.webPage;\n      }\n    }\n\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    const entities = options.entities;\n    if(!options.viaBotId) {\n      text = parseMarkdown(text, entities);\n      // entities = mergeEntities(entities, parseEntities(text));\n    }\n\n    let sendEntites = this.getInputEntities(entities);\n    if(!sendEntites.length) {\n      sendEntites = undefined;\n    }\n\n    const message = this.generateOutgoingMessage(peerId, options);\n    message.entities = entities;\n    message.message = text;\n\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n    const isChannel = this.appPeersManager.isChannel(peerId);\n\n    if(options.webPage) {\n      message.media = {\n        _: 'messageMediaWebPage',\n        webpage: options.webPage\n      };\n    }\n\n    const toggleError = (error?: ApiError) => {\n      this.onMessagesSendError([message], error);\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    message.send = () => {\n      toggleError();\n      const sentRequestOptions: PendingAfterMsg = {};\n      if(this.pendingAfterMsgs[peerId]) {\n        sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n      }\n\n      const sendAs = options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\n      let apiPromise: any;\n      if(options.viaBotId) {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendInlineBotResult', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          query_id: options.queryId,\n          id: options.resultId,\n          clear_draft: options.clearDraft,\n          send_as: sendAs\n        }, sentRequestOptions);\n      } else {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendMessage', {\n          no_webpage: options.noWebPage,\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          message: text,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          entities: sendEntites,\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate || undefined,\n          silent: options.silent,\n          send_as: sendAs,\n          update_stickersets_order: options.updateStickersetOrder\n        }, sentRequestOptions);\n      }\n\n      /* function is<T>(value: any, condition: boolean): value is T {\n        return condition;\n      } */\n\n      // this.log('sendText', message.mid);\n      this.pendingAfterMsgs[peerId] = sentRequestOptions;\n\n      return apiPromise.then((updates: Updates) => {\n        // this.log('sendText sent', message.mid);\n        // if(is<Updates.updateShortSentMessage>(updates, updates._ === 'updateShortSentMessage')) {\n        if(updates._ === 'updateShortSentMessage') {\n          // assumeType<Updates.updateShortSentMessage>(updates);\n\n          // * fix copying object with promise\n          const promise = message.promise;\n          delete message.promise;\n          const newMessage = copy(message);\n          defineNotNumerableProperties(message, ['promise']);\n          message.promise = promise;\n\n          newMessage.date = updates.date;\n          newMessage.id = updates.id;\n          newMessage.media = updates.media;\n          newMessage.entities = updates.entities;\n          this.wrapMessageEntities(newMessage);\n          if(updates.pFlags.out) {\n            newMessage.pFlags.out = true;\n          }\n\n          // * override with new updates\n          updates = {\n            _: 'updates',\n            users: [],\n            chats: [],\n            seq: 0,\n            date: undefined,\n            updates: [{\n              _: 'updateMessageID',\n              random_id: message.random_id,\n              id: newMessage.id\n            }, {\n              _: options.scheduleDate ? 'updateNewScheduledMessage' : (isChannel ? 'updateNewChannelMessage' : 'updateNewMessage'),\n              message: newMessage,\n              pts: updates.pts,\n              pts_count: updates.pts_count\n            }]\n          };\n        } else if((updates as Updates.updates).updates) {\n          (updates as Updates.updates).updates.forEach((update) => {\n            if(update._ === 'updateDraftMessage') {\n              update.local = true;\n            }\n          });\n        }\n\n        // this.reloadConversation(peerId);\n\n        // setTimeout(() => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n        // }, 5000);\n        message.promise.resolve();\n      }, (error: ApiError) => {\n        toggleError(error);\n        message.promise.reject(error);\n        throw error;\n      }).finally(() => {\n        if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n          delete this.pendingAfterMsgs[peerId];\n        }\n      });\n    };\n\n    this.beforeMessageSending(message, {\n      isScheduled: !!options.scheduleDate || undefined,\n      threadId: options.threadId,\n      clearDraft: options.clearDraft,\n      sequential: true\n    });\n\n    const promises: ReturnType<AppMessagesManager['sendText']>[] = [message.promise];\n    for(let i = 1; i < splitted.length; ++i) {\n      promises.push(this.sendText(peerId, splitted[i], options));\n    }\n\n    return Promise.all(promises).then(noop);\n  }\n\n  public sendFile(peerId: PeerId, options: MessageSendingParams & SendFileDetails & Partial<{\n    isRoundMessage: boolean,\n    isVoiceMessage: boolean,\n    isGroupedItem: boolean,\n    isMedia: boolean,\n\n    groupId: string,\n    caption: string,\n    entities: MessageEntity[],\n    background: boolean,\n    clearDraft: boolean,\n    noSound: boolean,\n\n    waveform: Uint8Array,\n\n    // ! only for internal use\n    processAfter?: typeof processAfter\n  }>) {\n    const file = options.file;\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    // this.checkSendOptions(options);\n\n    const message = this.generateOutgoingMessage(peerId, options);\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n\n    let attachType: 'document' | 'audio' | 'video' | 'voice' | 'photo', apiFileName: string;\n\n    const fileType = 'mime_type' in file ? file.mime_type : file.type;\n    const fileName = file instanceof File ? file.name : '';\n    const isDocument = !(file instanceof File) && !(file instanceof Blob);\n    let caption = options.caption || '';\n\n    this.log('sendFile', file, fileType);\n\n    const entities = options.entities || [];\n    if(caption) {\n      caption = parseMarkdown(caption, entities);\n    }\n\n    const attributes: DocumentAttribute[] = [];\n\n    const isPhoto = getEnvironment().IMAGE_MIME_TYPES_SUPPORTED.has(fileType);\n\n    const strippedPhotoSize: PhotoSize.photoStrippedSize = options.strippedBytes && {\n      _: 'photoStrippedSize',\n      bytes: options.strippedBytes,\n      type: 'i'\n    };\n\n    let photo: MyPhoto, document: MyDocument;\n\n    let actionName: Extract<SendMessageAction['_'], 'sendMessageUploadAudioAction' | 'sendMessageUploadDocumentAction' | 'sendMessageUploadPhotoAction' | 'sendMessageUploadVideoAction'>;\n    if(isDocument) { // maybe it's a sticker or gif\n      attachType = 'document';\n      apiFileName = '';\n    } else if(fileType.indexOf('audio/') === 0 || ['video/ogg'].indexOf(fileType) >= 0) {\n      attachType = 'audio';\n      apiFileName = 'audio.' + (fileType.split('/')[1] === 'ogg' ? 'ogg' : 'mp3');\n      actionName = 'sendMessageUploadAudioAction';\n\n      if(options.isVoiceMessage) {\n        attachType = 'voice';\n        message.pFlags.media_unread = true;\n      }\n\n      const attribute: DocumentAttribute.documentAttributeAudio = {\n        _: 'documentAttributeAudio',\n        pFlags: {\n          voice: options.isVoiceMessage || undefined\n        },\n        waveform: options.waveform,\n        duration: options.duration || undefined\n      };\n\n      attributes.push(attribute);\n    } else if(!options.isMedia) {\n      attachType = 'document';\n      apiFileName = 'document.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadDocumentAction';\n    } else if(isPhoto) {\n      attachType = 'photo';\n      apiFileName = 'photo.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadPhotoAction';\n\n      const photoSize = {\n        _: 'photoSize',\n        w: options.width,\n        h: options.height,\n        type: THUMB_TYPE_FULL,\n        location: null,\n        size: file.size\n      } as PhotoSize.photoSize;\n\n      photo = {\n        _: 'photo',\n        id: '' + message.id,\n        sizes: [photoSize],\n        w: options.width,\n        h: options.height\n      } as any;\n\n      if(strippedPhotoSize) {\n        photo.sizes.unshift(strippedPhotoSize);\n      }\n\n      const cacheContext = this.thumbsStorage.getCacheContext(photo, photoSize.type);\n      cacheContext.downloaded = file.size;\n      cacheContext.url = options.objectURL || '';\n\n      photo = this.appPhotosManager.savePhoto(photo);\n    } else if(getEnvironment().VIDEO_MIME_TYPES_SUPPORTED.has(fileType as VIDEO_MIME_TYPE)) {\n      attachType = 'video';\n      apiFileName = 'video.mp4';\n      actionName = 'sendMessageUploadVideoAction';\n\n      const videoAttribute: DocumentAttribute.documentAttributeVideo = {\n        _: 'documentAttributeVideo',\n        pFlags: {\n          round_message: options.isRoundMessage || undefined,\n          supports_streaming: true\n        },\n        duration: options.duration,\n        w: options.width,\n        h: options.height\n      };\n\n      attributes.push(videoAttribute);\n\n      // * must follow after video attribute\n      if(options.noSound &&\n        file.size > (10 * 1024) &&\n        file.size < (10 * 1024 * 1024)) {\n        attributes.push({\n          _: 'documentAttributeAnimated'\n        });\n      }\n    } else {\n      attachType = 'document';\n      apiFileName = 'document.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadDocumentAction';\n    }\n\n    attributes.push({_: 'documentAttributeFilename', file_name: fileName || apiFileName});\n\n    if((['document', 'video', 'audio', 'voice'] as (typeof attachType)[]).indexOf(attachType) !== -1 && !isDocument) {\n      const thumbs: PhotoSize[] = [];\n      document = {\n        _: 'document',\n        id: '' + message.id,\n        duration: options.duration,\n        attributes,\n        w: options.width,\n        h: options.height,\n        thumbs,\n        mime_type: fileType,\n        size: file.size\n      } as any;\n\n      if(options.objectURL) {\n        const cacheContext = this.thumbsStorage.getCacheContext(document);\n        cacheContext.downloaded = file.size;\n        cacheContext.url = options.objectURL;\n      }\n\n      let thumb: PhotoSize.photoSize;\n      if(isPhoto) {\n        attributes.push({\n          _: 'documentAttributeImageSize',\n          w: options.width,\n          h: options.height\n        });\n\n        thumb = {\n          _: 'photoSize',\n          w: options.width,\n          h: options.height,\n          type: THUMB_TYPE_FULL,\n          size: file.size\n        };\n      } else if(attachType === 'video') {\n        if(options.thumb) {\n          thumb = {\n            _: 'photoSize',\n            w: options.thumb.size.width,\n            h: options.thumb.size.height,\n            type: 'local-thumb',\n            size: options.thumb.blob.size\n          };\n\n          const thumbCacheContext = this.thumbsStorage.getCacheContext(document, thumb.type);\n          thumbCacheContext.downloaded = thumb.size;\n          thumbCacheContext.url = options.thumb.url;\n        }\n      }\n\n      if(thumb) {\n        thumbs.push(thumb);\n      }\n\n      if(strippedPhotoSize) {\n        thumbs.unshift(strippedPhotoSize);\n      }\n\n      /* if(thumbs.length) {\n        const thumb = thumbs[0] as PhotoSize.photoSize;\n        const docThumb = appPhotosManager.getDocumentCachedThumb(document.id);\n        docThumb.downloaded = thumb.size;\n        docThumb.url = thumb.url;\n      } */\n\n      document = this.appDocsManager.saveDoc(document);\n    }\n\n    this.log('sendFile', attachType, apiFileName, file.type, options);\n\n    const sentDeferred = deferredPromise<InputMedia>();\n    // sentDeferred.cancel = () => {\n    //   const error = new Error('Download canceled');\n    //   error.name = 'AbortError';\n    //   sentDeferred.reject(error);\n\n    //   if(uploadPromise?.cancel) {\n    //     uploadPromise.cancel();\n    //   }\n    // };\n\n    const media: MessageMedia = isDocument ? undefined : {\n      _: photo ? 'messageMediaPhoto' : 'messageMediaDocument',\n      pFlags: {},\n      // preloader,\n      photo,\n      document\n    };\n\n    if(media) {\n      defineNotNumerableProperties(media as any, ['promise']);\n      (media as any).promise = sentDeferred;\n\n      if(options.spoiler) {\n        (media as MessageMedia.messageMediaPhoto).pFlags.spoiler = true;\n      }\n    }\n\n    message.entities = entities;\n    message.message = caption;\n    message.media = isDocument ? {\n      _: 'messageMediaDocument',\n      pFlags: {},\n      document: file\n    } as MessageMedia.messageMediaDocument : media;\n\n    const uploadingFileName = !isDocument ? getFileNameForUpload(file) : undefined;\n    message.uploadingFileName = uploadingFileName;\n\n    if(uploadingFileName) {\n      this.uploadFilePromises[uploadingFileName] = sentDeferred;\n    }\n\n    const toggleError = (error?: ApiError) => {\n      this.onMessagesSendError([message], error);\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    let uploaded = false,\n      uploadPromise: ReturnType<ApiFileManager['upload']> = null;\n\n    message.send = () => {\n      if(isDocument) {\n        const inputMedia: InputMedia = {\n          _: 'inputMediaDocument',\n          id: getDocumentInput(file),\n          pFlags: {}\n        };\n\n        sentDeferred.resolve(inputMedia);\n      } else if(file instanceof File || file instanceof Blob) {\n        const load = () => {\n          if(!uploaded || message.error) {\n            uploaded = false;\n\n            uploadPromise = this.apiFileManager.upload({file, fileName: uploadingFileName});\n            uploadPromise.catch((err) => {\n              if(!uploaded) {\n                this.log('cancelling upload', media);\n\n                this.cancelPendingMessage(message.random_id);\n                this.setTyping(peerId, {_: 'sendMessageCancelAction'}, undefined, options.threadId);\n                sentDeferred.reject(err);\n              }\n            });\n\n            uploadPromise.addNotifyListener((progress: Progress) => {\n              /* if(DEBUG) {\n                this.log('upload progress', progress);\n              } */\n\n              const percents = Math.max(1, Math.floor(100 * progress.done / progress.total));\n              if(actionName) {\n                this.setTyping(peerId, {_: actionName, progress: percents | 0}, undefined, options.threadId);\n              }\n              sentDeferred.notifyAll(progress);\n            });\n\n            sentDeferred.notifyAll({done: 0, total: file.size});\n          }\n\n          let thumbUploadPromise: typeof uploadPromise;\n          if(attachType === 'video' && options.objectURL && options.thumb?.blob) {\n            thumbUploadPromise = this.apiFileManager.upload({file: options.thumb.blob});\n          }\n\n          uploadPromise && uploadPromise.then(async(inputFile) => {\n            /* if(DEBUG) {\n              this.log('appMessagesManager: sendFile uploaded:', inputFile);\n            } */\n\n            inputFile.name = apiFileName;\n            uploaded = true;\n            let inputMedia: InputMedia;\n            switch(attachType) {\n              case 'photo':\n                inputMedia = {\n                  _: 'inputMediaUploadedPhoto',\n                  file: inputFile,\n                  pFlags: {\n                    spoiler: options.spoiler || undefined\n                  }\n                };\n                break;\n\n              default:\n                inputMedia = {\n                  _: 'inputMediaUploadedDocument',\n                  file: inputFile,\n                  mime_type: fileType,\n                  pFlags: {\n                    force_file: actionName === 'sendMessageUploadDocumentAction' || undefined,\n                    spoiler: options.spoiler || undefined\n                    // nosound_video: options.noSound ? true : undefined\n                  },\n                  attributes\n                };\n            }\n\n            if(thumbUploadPromise) {\n              try {\n                const inputFile = await thumbUploadPromise;\n                (inputMedia as InputMedia.inputMediaUploadedDocument).thumb = inputFile;\n              } catch(err) {\n                this.log.error('sendFile thumb upload error:', err);\n              }\n            }\n\n            sentDeferred.resolve(inputMedia);\n          }, (error: ApiError) => {\n            toggleError(error);\n            throw error;\n          });\n\n          return sentDeferred;\n        };\n\n        if(options.isGroupedItem) {\n          load();\n        } else {\n          this.sendSmthLazyLoadQueue.push({\n            load\n          });\n        }\n      }\n\n      return sentDeferred;\n    };\n\n    this.beforeMessageSending(message, {\n      isGroupedItem: options.isGroupedItem,\n      isScheduled: !!options.scheduleDate || undefined,\n      threadId: options.threadId,\n      clearDraft: options.clearDraft,\n      processAfter: options.processAfter\n    });\n\n    if(!options.isGroupedItem) {\n      sentDeferred.then((inputMedia) => {\n        this.setTyping(peerId, {_: 'sendMessageCancelAction'}, undefined, options.threadId);\n\n        return this.apiManager.invokeApi('messages.sendMedia', {\n          background: options.background,\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          media: inputMedia,\n          message: caption,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId,\n          schedule_date: options.scheduleDate,\n          silent: options.silent,\n          entities,\n          clear_draft: options.clearDraft,\n          send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined,\n          update_stickersets_order: options.updateStickersetOrder\n        }).then((updates) => {\n          this.apiUpdatesManager.processUpdateMessage(updates);\n        }, (error: ApiError) => {\n          if(attachType === 'photo' &&\n            error.code === 400 &&\n            (error.type === 'PHOTO_INVALID_DIMENSIONS' ||\n            error.type === 'PHOTO_SAVE_FILE_INVALID')) {\n            error.handled = true;\n            attachType = 'document';\n            message.send();\n            return;\n          }\n\n          toggleError(error);\n          throw error;\n        });\n      });\n\n      sentDeferred.then(message.promise.resolve, message.promise.reject);\n    }\n\n    const ret: {\n      message: typeof message,\n      promise: typeof sentDeferred\n    } = {\n      message\n    } as any;\n\n    defineNotNumerableProperties(ret, ['promise']);\n    ret.promise = sentDeferred;\n\n    return ret;\n  }\n\n  public async sendAlbum(peerId: PeerId, options: MessageSendingParams & {\n    isMedia?: boolean,\n    entities?: MessageEntity[],\n    caption?: string,\n    sendFileDetails: SendFileDetails[],\n    clearDraft?: boolean\n  }) {\n    // this.checkSendOptions(options);\n\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    if(options.sendFileDetails.length === 1) {\n      return this.sendFile(peerId, {...options, ...options.sendFileDetails[0]});\n    }\n\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n\n    let caption = options.caption || '';\n    let entities = options.entities || [];\n    if(caption) {\n      caption = parseMarkdown(caption, entities);\n    }\n\n    const log = this.log.bindPrefix('sendAlbum');\n    log(options);\n\n    const groupId = '' + ++this.groupedTempId;\n\n    const callbacks: Array<() => void> = [];\n    const processAfter = (cb: () => void) => {\n      callbacks.push(cb);\n    };\n\n    const messages = options.sendFileDetails.map((details, idx) => {\n      const o: Parameters<AppMessagesManager['sendFile']>[1] = {\n        isGroupedItem: true,\n        isMedia: options.isMedia,\n        scheduleDate: options.scheduleDate,\n        silent: options.silent,\n        replyToMsgId,\n        threadId: options.threadId,\n        sendAsPeerId: options.sendAsPeerId,\n        groupId,\n        processAfter,\n        ...details\n      };\n\n      if(idx === 0) {\n        o.caption = caption;\n        o.entities = entities;\n        // o.replyToMsgId = replyToMsgId;\n      }\n\n      return this.sendFile(peerId, o).message;\n    });\n\n    if(options.clearDraft) {\n      callbacks.push(() => {\n        this.appDraftsManager.clearDraft(peerId, options.threadId);\n      });\n    }\n\n    callbacks.forEach((callback) => {\n      callback();\n    });\n\n    // * test pending\n    if(DO_NOT_SEND_MESSAGES) {\n      return;\n    }\n\n    const toggleError = (message: Message.message, error?: ApiError) => {\n      this.onMessagesSendError([message], error);\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    const inputPeer = this.appPeersManager.getInputPeerById(peerId);\n    const invoke = (multiMedia: InputSingleMedia[]) => {\n      this.setTyping(peerId, {_: 'sendMessageCancelAction'}, undefined, options.threadId);\n\n      const deferred = deferredPromise<void>();\n      this.sendSmthLazyLoadQueue.push({\n        load: () => {\n          return this.apiManager.invokeApi('messages.sendMultiMedia', {\n            peer: inputPeer,\n            multi_media: multiMedia,\n            reply_to_msg_id: replyToMsgId,\n            schedule_date: options.scheduleDate,\n            silent: options.silent,\n            clear_draft: options.clearDraft,\n            send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined,\n            update_stickersets_order: options.updateStickersetOrder\n          }).then((updates) => {\n            this.apiUpdatesManager.processUpdateMessage(updates);\n            deferred.resolve();\n          }, (error: ApiError) => {\n            messages.forEach((message) => toggleError(message, error));\n            deferred.reject(error);\n          });\n        }\n      });\n\n      return deferred;\n    };\n\n    const promises: Promise<InputSingleMedia>[] = messages.map(async(message) => {\n      let inputMedia: InputMedia;\n      try {\n        inputMedia = await message.send() as InputMedia;\n      } catch(err) {\n        if((err as ApiError).type === 'UPLOAD_CANCELED') {\n          return undefined;\n        }\n\n        log.error('upload item error:', err, message);\n        toggleError(message, err);\n        throw err;\n      }\n\n      let messageMedia: MessageMedia;\n      try {\n        messageMedia = await this.apiManager.invokeApi('messages.uploadMedia', {\n          peer: inputPeer,\n          media: inputMedia\n        });\n      } catch(err) {\n        log.error('uploadMedia error:', err, message);\n        toggleError(message, err);\n        throw err;\n      }\n\n      const originalInputMedia = inputMedia;\n      if(messageMedia._ === 'messageMediaPhoto') {\n        const photo = this.appPhotosManager.savePhoto(messageMedia.photo);\n        inputMedia = getPhotoMediaInput(photo);\n      } else if(messageMedia._ === 'messageMediaDocument') {\n        const doc = this.appDocsManager.saveDoc(messageMedia.document);\n        inputMedia = getDocumentMediaInput(doc);\n      }\n\n      // copy original flags\n      const copyProperties: (keyof InputMedia.inputMediaPhoto)[] = [\n        'pFlags',\n        'ttl_seconds'\n      ];\n\n      copyProperties.forEach((property) => {\n        // @ts-ignore\n        inputMedia[property] = originalInputMedia[property] ?? inputMedia[property];\n      });\n\n      const inputSingleMedia: InputSingleMedia = {\n        _: 'inputSingleMedia',\n        media: inputMedia,\n        random_id: message.random_id,\n        message: caption,\n        entities\n      };\n\n      // * only 1 caption for all inputs\n      if(caption) {\n        caption = '';\n        entities = [];\n      }\n\n      return inputSingleMedia;\n    });\n\n    return Promise.all(promises).then((inputs) => {\n      return invoke(inputs.filter(Boolean));\n    });\n  }\n\n  public sendContact(peerId: PeerId, contactPeerId: PeerId) {\n    return this.sendOther(peerId, this.appUsersManager.getContactMediaInput(contactPeerId));\n  }\n\n  public sendOther(\n    peerId: PeerId,\n    inputMedia: InputMedia | {_: 'messageMediaPending', messageMedia: MessageMedia},\n    options: MessageSendingParams & Partial<{\n      viaBotId: BotId,\n      replyMarkup: ReplyMarkup,\n      clearDraft: true,\n      queryId: string\n      resultId: string,\n      geoPoint: GeoPoint,\n      webDocument?: WebDocument\n    }> = {}\n  ) {\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    const noOutgoingMessage = /* inputMedia?._ === 'inputMediaPhotoExternal' ||  */inputMedia?._ === 'inputMediaDocumentExternal';\n    // this.checkSendOptions(options);\n    const message = this.generateOutgoingMessage(peerId, options);\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n\n    let media: MessageMedia;\n    switch(inputMedia._) {\n      case 'inputMediaPoll': {\n        const pollId = '' + message.id;\n        inputMedia.poll.id = pollId;\n        this.appPollsManager.savePoll(inputMedia.poll, {\n          _: 'pollResults',\n          total_voters: 0,\n          pFlags: {},\n          recent_voters: []\n        });\n\n        const {poll, results} = this.appPollsManager.getPoll(pollId);\n        media = {\n          _: 'messageMediaPoll',\n          poll,\n          results\n        };\n\n        break;\n      }\n\n      case 'inputMediaPhoto': {\n        media = {\n          _: 'messageMediaPhoto',\n          photo: this.appPhotosManager.getPhoto((inputMedia.id as InputPhoto.inputPhoto).id),\n          pFlags: {}\n        };\n        break;\n      }\n\n      case 'inputMediaDocument': {\n        const doc = this.appDocsManager.getDoc((inputMedia.id as InputDocument.inputDocument).id);\n        /* if(doc.sticker && doc.stickerSetInput) {\n          appStickersManager.pushPopularSticker(doc.id);\n        } */\n        media = {\n          _: 'messageMediaDocument',\n          document: doc,\n          pFlags: {}\n        };\n        break;\n      }\n\n      case 'inputMediaContact': {\n        media = {\n          _: 'messageMediaContact',\n          phone_number: inputMedia.phone_number,\n          first_name: inputMedia.first_name,\n          last_name: inputMedia.last_name,\n          user_id: inputMedia.user_id ?? '0',\n          vcard: inputMedia.vcard\n        };\n        break;\n      }\n\n      case 'inputMediaGeoPoint': {\n        media = {\n          _: 'messageMediaGeo',\n          geo: options.geoPoint\n        };\n        break;\n      }\n\n      case 'inputMediaVenue': {\n        media = {\n          _: 'messageMediaVenue',\n          geo: options.geoPoint,\n          title: inputMedia.title,\n          address: inputMedia.address,\n          provider: inputMedia.provider,\n          venue_id: inputMedia.venue_id,\n          venue_type: inputMedia.venue_type\n        };\n        break;\n      }\n\n      case 'inputMediaPhotoExternal': {\n        if(noOutgoingMessage) {\n          break;\n        }\n\n        media = {\n          _: 'messageMediaPhotoExternal',\n          photo: options.webDocument\n        };\n        break;\n      }\n\n      case 'inputMediaDocumentExternal': {\n        if(noOutgoingMessage) {\n          break;\n        }\n\n        media = {\n          _: 'messageMediaDocumentExternal',\n          document: options.webDocument\n        };\n        break;\n      }\n\n      case 'messageMediaPending': {\n        media = (inputMedia as any).messageMedia;\n        break;\n      }\n    }\n\n    message.media = media;\n\n    const toggleError = (error?: ApiError) => {\n      this.onMessagesSendError([message], error);\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    message.send = () => {\n      const sentRequestOptions: PendingAfterMsg = {};\n      if(this.pendingAfterMsgs[peerId]) {\n        sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n      }\n\n      const sendAs = options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined;\n      let apiPromise: Promise<any>;\n      if(options.viaBotId) {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendInlineBotResult', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          query_id: options.queryId,\n          id: options.resultId,\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate,\n          silent: options.silent,\n          send_as: sendAs\n        }, sentRequestOptions);\n      } else {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendMedia', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          media: inputMedia as InputMedia,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          message: '',\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate,\n          silent: options.silent,\n          send_as: sendAs,\n          update_stickersets_order: options.updateStickersetOrder\n        }, sentRequestOptions);\n      }\n\n      this.pendingAfterMsgs[peerId] = sentRequestOptions;\n\n      return apiPromise.then((updates) => {\n        if(updates.updates) {\n          updates.updates.forEach((update: Update) => {\n            if(update._ === 'updateDraftMessage') {\n              update.local = true;\n            }\n          });\n        }\n\n        this.apiUpdatesManager.processUpdateMessage(updates);\n      }, (error: ApiError) => {\n        toggleError(error);\n        throw error;\n      }).finally(() => {\n        if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n          delete this.pendingAfterMsgs[peerId];\n        }\n      });\n    };\n\n    this.beforeMessageSending(message, {\n      isScheduled: !!options.scheduleDate || undefined,\n      threadId: options.threadId,\n      clearDraft: options.clearDraft,\n      sequential: true,\n      noOutgoingMessage\n    });\n\n    return message.promise;\n  }\n\n  /* private checkSendOptions(options: Partial<{\n    scheduleDate: number\n  }>) {\n    if(options.scheduleDate) {\n      const minTimestamp = (Date.now() / 1000 | 0) + 10;\n      if(options.scheduleDate <= minTimestamp) {\n        delete options.scheduleDate;\n      }\n    }\n  } */\n\n  private beforeMessageSending(message: Message.message, options: Pick<MessageSendingParams, 'threadId'> & Partial<{\n    isGroupedItem: boolean,\n    isScheduled: boolean,\n    clearDraft: boolean,\n    sequential: boolean,\n    processAfter?: (cb: () => void) => void,\n    noOutgoingMessage?: boolean\n  }> = {}) {\n    const messageId = message.id;\n    const peerId = this.getMessagePeer(message);\n    const storage = options.isScheduled ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\n    message.storageKey = storage.key;\n    const callbacks: Array<() => void> = [];\n    if(options.isScheduled && !options.noOutgoingMessage) {\n      // if(!options.isGroupedItem) {\n      this.saveMessages([message], {storage, isScheduled: true, isOutgoing: true});\n      callbacks.push(() => {\n        this.rootScope.dispatchEvent('scheduled_new', message);\n      });\n    } else if(!options.noOutgoingMessage) {\n      /* if(options.threadId && this.threadsStorage[peerId]) {\n        delete this.threadsStorage[peerId][options.threadId];\n      } */\n      const storages: HistoryStorage[] = [\n        this.getHistoryStorage(peerId),\n        options.threadId ? this.getHistoryStorage(peerId, options.threadId) : undefined\n      ];\n\n      for(const storage of storages) {\n        if(storage) {\n          storage.history.unshift(messageId);\n        }\n      }\n\n      this.saveMessages([message], {storage, isOutgoing: true});\n      this.setDialogTopMessage(message);\n\n      if(options.threadId) {\n        const forumTopic = this.dialogsStorage.getForumTopic(peerId, options.threadId);\n        if(forumTopic) {\n          this.setDialogTopMessage(message, forumTopic);\n        }\n      }\n\n      callbacks.push(() => {\n        this.rootScope.dispatchEvent('history_append', {storageKey: storage.key, message});\n      });\n    }\n\n    let pending: PendingMessageDetails;\n    if(!options.noOutgoingMessage) {\n      pending = this.pendingByRandomId[message.random_id] = {\n        peerId,\n        tempId: messageId,\n        threadId: options.threadId,\n        storage,\n        sequential: options.sequential\n      };\n\n      this.pendingTopMsgs[peerId] = messageId;\n    }\n\n    if(!options.isGroupedItem && message.send) {\n      callbacks.push(() => {\n        if(options.clearDraft) {\n          this.appDraftsManager.clearDraft(peerId, options.threadId);\n        }\n\n        if(!DO_NOT_SEND_MESSAGES) {\n          message.send();\n        }\n      });\n    }\n\n    if(callbacks.length) {\n      (options.processAfter || processAfter)(() => {\n        for(const callback of callbacks) {\n          callback();\n        }\n      });\n    }\n\n    return pending;\n  }\n\n  private generateOutgoingMessage(\n    peerId: PeerId,\n    options: MessageSendingParams & Partial<{\n      viaBotId: BotId,\n      groupId: string,\n      replyMarkup: ReplyMarkup,\n    }>\n  ) {\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    let postAuthor: string;\n    const isBroadcast = this.appPeersManager.isBroadcast(peerId);\n    if(isBroadcast) {\n      const chat = this.appPeersManager.getPeer(peerId) as Chat.channel;\n      if(chat.pFlags.signatures) {\n        const user = this.appUsersManager.getSelf();\n        const fullName = user.first_name + (user.last_name ? ' ' + user.last_name : '');\n        postAuthor = fullName;\n      }\n    }\n\n    const message: Message.message = {\n      _: 'message',\n      id: this.generateTempMessageId(peerId),\n      from_id: options.sendAsPeerId ? this.appPeersManager.getOutputPeer(options.sendAsPeerId) : this.generateFromId(peerId),\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\n      post_author: postAuthor,\n      pFlags: this.generateFlags(peerId),\n      date: options.scheduleDate || (tsNow(true) + this.timeManager.getServerTimeOffset()),\n      message: '',\n      grouped_id: options.groupId,\n      random_id: randomLong(),\n      reply_to: this.generateReplyHeader(peerId, options.replyToMsgId, options.threadId),\n      via_bot_id: options.viaBotId,\n      reply_markup: options.replyMarkup,\n      replies: this.generateReplies(peerId),\n      views: isBroadcast && 1,\n      pending: true\n    };\n\n    defineNotNumerableProperties(message, ['send', 'promise']);\n    if(options.groupId === undefined) {\n      message.promise = deferredPromise();\n    }\n\n    return message;\n  }\n\n  private generateReplyHeader(peerId: PeerId, replyToMsgId: number, replyToTopId?: number) {\n    const isForum = this.appPeersManager.isForum(peerId);\n    if(isForum && !replyToTopId) {\n      const originalMessage = this.getMessageByPeer(peerId, replyToMsgId);\n      if(originalMessage) {\n        replyToTopId = getMessageThreadId(originalMessage, true);\n      }\n    }\n\n    const header: MessageReplyHeader = {\n      _: 'messageReplyHeader',\n      reply_to_msg_id: replyToMsgId || replyToTopId,\n      pFlags: {}\n    };\n\n    if(replyToTopId && isForum && GENERAL_TOPIC_ID !== replyToTopId) {\n      header.pFlags.forum_topic = true;\n    }\n\n    if(replyToTopId && header.reply_to_msg_id !== replyToTopId) {\n      header.reply_to_top_id = replyToTopId;\n    }\n\n    return header;\n  }\n\n  private generateReplies(peerId: PeerId) {\n    let replies: MessageReplies.messageReplies;\n    if(this.appPeersManager.isBroadcast(peerId)) {\n      const channelFull = this.appProfileManager.getCachedFullChat(peerId.toChatId()) as ChatFull.channelFull;\n      if(channelFull?.linked_chat_id) {\n        replies = {\n          _: 'messageReplies',\n          pFlags: {\n            comments: true\n          },\n          channel_id: channelFull.linked_chat_id,\n          replies: 0,\n          replies_pts: 0\n        };\n      }\n    }\n\n    return replies;\n  }\n\n  /**\n   * Generate correct from_id according to anonymous or broadcast\n   * Won't return peer if message is sent by the peer\n   */\n  public generateFromId(peerId: PeerId) {\n    if(this.appPeersManager.isAnyChat(peerId) && (this.appPeersManager.isBroadcast(peerId) || this.isAnonymousSending(peerId))) {\n      return undefined;\n    } else {\n      return this.appPeersManager.getOutputPeer(this.appUsersManager.getSelf().id.toPeerId());\n    }\n  }\n\n  private generateFlags(peerId: PeerId) {\n    const pFlags: Message.message['pFlags'] = {};\n    const fromId = this.appUsersManager.getSelf().id;\n    if(peerId !== fromId) {\n      pFlags.out = true;\n\n      if(!this.appPeersManager.isChannel(peerId) && !this.appUsersManager.isBot(peerId)) {\n        pFlags.unread = true;\n      }\n    }\n\n    if(this.appPeersManager.isBroadcast(peerId)) {\n      pFlags.post = true;\n    }\n\n    return pFlags;\n  }\n\n  private generateForwardHeader(peerId: PeerId, originalMessage: Message.message) {\n    const myId = this.appUsersManager.getSelf().id.toPeerId();\n    const fromId = originalMessage.fromId;\n    if(fromId === myId && originalMessage.peerId === myId && !originalMessage.fwd_from) {\n      return;\n    }\n\n    const fwdHeader: MessageFwdHeader.messageFwdHeader = {\n      _: 'messageFwdHeader',\n      date: originalMessage.date,\n      pFlags: {}\n    };\n\n    let isUserHidden = false;\n    if(originalMessage.fwd_from) {\n      fwdHeader.from_id = originalMessage.fwd_from.from_id;\n      fwdHeader.from_name = originalMessage.fwd_from.from_name;\n      fwdHeader.post_author = originalMessage.fwd_from.post_author;\n    } else {\n      fwdHeader.post_author = originalMessage.post_author;\n\n      if(fromId.isUser()) {\n        const userFull = this.appProfileManager.getCachedFullUser(fromId.toUserId());\n        if(userFull?.private_forward_name) {\n          fwdHeader.from_name = userFull.private_forward_name;\n          isUserHidden = true;\n        }\n      }\n\n      if(!isUserHidden) {\n        fwdHeader.from_id = this.appPeersManager.getOutputPeer(fromId);\n      }\n    }\n\n    if(this.appPeersManager.isBroadcast(originalMessage.peerId)) {\n      if(originalMessage.post_author) {\n        fwdHeader.post_author = originalMessage.post_author;\n      }\n\n      fwdHeader.channel_post = originalMessage.id;\n    }\n\n    if(peerId === myId && !isUserHidden) {\n      fwdHeader.saved_from_msg_id = originalMessage.id;\n      fwdHeader.saved_from_peer = this.appPeersManager.getOutputPeer(originalMessage.peerId);\n    }\n\n    return fwdHeader;\n  }\n\n  public generateFakeAvatarMessage(peerId: PeerId, photo: Photo) {\n    const maxId = Number.MAX_SAFE_INTEGER;\n    const message: Message.messageService = {\n      _: 'messageService',\n      pFlags: {},\n      action: {\n        _: 'messageActionChannelEditPhoto',\n        photo\n      },\n      id: maxId,\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\n      mid: maxId,\n      peerId,\n      date: (photo as Photo.photo).date,\n      fromId: peerId\n    };\n\n    this.getHistoryMessagesStorage(peerId).set(maxId, message);\n    return message;\n  }\n\n  public getUploadPromise(uploadFileName: string) {\n    return this.uploadFilePromises[uploadFileName];\n  }\n\n  public isAnonymousSending(peerId: PeerId): boolean {\n    if(!peerId.isAnyChat()) {\n      return false;\n    }\n\n    const chat = this.appPeersManager.getPeer(peerId);\n    return (chat as Chat.channel).admin_rights?.pFlags?.anonymous;\n  }\n\n  public setDialogTopMessage(\n    message: MyMessage,\n    dialog: MTDialog.dialog | ForumTopic = this.getDialogOnly(message.peerId)\n  ) {\n    if(!dialog) {\n      return;\n    }\n\n    dialog.top_message = message.mid;\n\n    const historyStorage = this.getHistoryStorage(message.peerId, dialog._ === 'forumTopic' ? dialog.id : undefined);\n    historyStorage.maxId = message.mid;\n\n    this.dialogsStorage.generateIndexForDialog(dialog, false, message);\n\n    this.scheduleHandleNewDialogs(message.peerId, dialog);\n  }\n\n  public cancelPendingMessage(randomId: string) {\n    const pendingData = this.pendingByRandomId[randomId];\n\n    /* if(DEBUG) {\n      this.log('cancelPendingMessage', randomId, pendingData);\n    } */\n\n    if(pendingData) {\n      const {peerId, tempId, storage} = pendingData;\n      const historyStorage = this.getHistoryStorage(peerId);\n\n      if(this.appPeersManager.isChannel(peerId)) {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateDeleteChannelMessages',\n          channel_id: peerId.toChatId(),\n          messages: [tempId],\n          pts: undefined,\n          pts_count: undefined\n        });\n      } else {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateDeleteMessages',\n          messages: [tempId],\n          pts: undefined,\n          pts_count: undefined\n        });\n      }\n\n      historyStorage.history.delete(tempId);\n\n      delete this.pendingByRandomId[randomId];\n      this.deleteMessageFromStorage(storage, tempId);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /* public async refreshConversations() {\n    const limit = 200, outDialogs: Dialog[] = [];\n    for(let folderId = 0; folderId < 2; ++folderId) {\n      let offsetDate = 0;\n      for(;;) {\n        const {dialogs, isEnd} = await this.getTopMessages(limit, folderId, offsetDate);\n\n        if(dialogs.length) {\n          outDialogs.push(...dialogs as Dialog[]);\n          const dialog = dialogs[dialogs.length - 1];\n\n          // * get peerId and mid manually, because dialog can be migrated peer and it won't be saved\n          const peerId = getPeerId(dialog.peer);\n          const mid = this.appMessagesIdsManager.generateMessageId(dialog.top_message);\n          offsetDate = this.getMessageByPeer(peerId, mid).date;\n\n          if(!offsetDate) {\n            console.error('refreshConversations: got no offsetDate', dialog);\n            break;\n          }\n        }\n\n        if(isEnd) {\n          break;\n        }\n      }\n    }\n\n    let obj: {[peerId: string]: Dialog} = {};\n    outDialogs.forEach((dialog) => {\n      obj[dialog.peerId] = dialog;\n    });\n    rootScope.dispatchEvent('dialogs_multiupdate', obj);\n\n    return outDialogs;\n  } */\n\n  public async fillConversations(folderId = GLOBAL_FOLDER_ID): Promise<void> {\n    const middleware = this.middleware.get();\n    while(!this.dialogsStorage.isDialogsLoaded(folderId)) {\n      const result = await this.getTopMessages({limit: 100, folderId});\n      if(!middleware() || result.isEnd) {\n        break;\n      }\n    }\n  }\n\n  /* public async getConversationsAll(query = '', folderId = 0) {\n    const limit = 200, outDialogs: Dialog[] = [];\n    for(; folderId < 2; ++folderId) {\n      let offsetIndex = 0;\n      for(;;) {\n        const {dialogs} = await appMessagesManager.getConversations(query, offsetIndex, limit, folderId).promise;\n\n        if(dialogs.length) {\n          outDialogs.push(...dialogs);\n          offsetIndex = dialogs[dialogs.length - 1].index || 0;\n        } else {\n          break;\n        }\n      }\n    }\n\n    return outDialogs;\n  } */\n\n  public getReadMaxIdIfUnread(peerId: PeerId, threadId?: number) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    if(threadId && !this.appChatsManager.isForum(peerId.toChatId())) {\n      const chatHistoryStorage = this.getHistoryStorage(peerId);\n      const readMaxId = Math.max(chatHistoryStorage.readMaxId ?? 0, historyStorage.readMaxId);\n      const message = this.getMessageByPeer(peerId, historyStorage.maxId); // usually message is missing, so pFlags.out won't be there anyway\n      return !message?.pFlags?.out && readMaxId < historyStorage.maxId ? readMaxId : 0;\n    } else {\n      const message = this.getMessageByPeer(peerId, historyStorage.maxId);\n      const readMaxId = peerId.isUser() ? Math.max(historyStorage.readMaxId, historyStorage.readOutboxMaxId) : historyStorage.readMaxId;\n      // readMaxId can be 4294967295 (0)\n      return !message?.pFlags?.out && readMaxId < historyStorage.maxId && getServerMessageId(readMaxId) ? readMaxId : 0;\n    }\n  }\n\n  // public lolSet = new Set();\n  public getTopMessages({limit, folderId}: {\n    limit: number,\n    folderId: number\n  }) {\n    // const dialogs = this.dialogsStorage.getFolder(folderId);\n    const offsetId = 0;\n    let offsetPeerId: PeerId;\n    let offsetIndex = 0;\n\n    let offsetDate = this.dialogsStorage.getOffsetDate(folderId);\n    if(offsetDate) {\n      offsetIndex = offsetDate * 0x10000;\n      offsetDate += this.timeManager.getServerTimeOffset();\n    }\n\n    const useLimit = 100;\n    const middleware = this.middleware.get();\n    const peerId = this.dialogsStorage.isFilterIdForForum(folderId) ? folderId : undefined;\n\n    const processResult = (result: MessagesDialogs | MessagesForumTopics) => {\n      if(!middleware() || result._ === 'messages.dialogsNotModified') return null;\n\n      if(DEBUG) {\n        this.log('messages.getDialogs result:', result);\n      }\n\n      // can reset pinned order here\n      if(!peerId && !offsetId && !offsetDate && !offsetPeerId && folderId !== GLOBAL_FOLDER_ID) {\n        this.dialogsStorage.resetPinnedOrder(folderId);\n      }\n\n      if(!peerId && !offsetDate) {\n        // telegramMeWebManager.setAuthorized(true);\n        this.appDraftsManager.addMissedDialogs();\n      }\n\n      this.appUsersManager.saveApiUsers(result.users);\n      this.appChatsManager.saveApiChats(result.chats);\n      this.saveMessages(result.messages);\n\n      let maxSeenIdIncremented = offsetDate ? true : false;\n      let hasPrepend = false;\n      const noIdsDialogs: BroadcastEvents['dialogs_multiupdate'] = new Map();\n      const setFolderId: REAL_FOLDER_ID = folderId === GLOBAL_FOLDER_ID ? FOLDER_ID_ALL : folderId as REAL_FOLDER_ID;\n      const saveGlobalOffset = !!peerId || folderId === GLOBAL_FOLDER_ID;\n      const items: Array<Dialog | ForumTopic> =\n        (result as MessagesDialogs.messagesDialogsSlice).dialogs as Dialog[] ||\n        (result as MessagesForumTopics).topics as ForumTopic[];\n      forEachReverse(items, (dialog) => {\n        if(!dialog) {\n          return;\n        }\n\n        // const d = Object.assign({}, dialog);\n        // ! нужно передавать folderId, так как по папке !== 0 нет свойства folder_id\n        if(!peerId) {\n          (dialog as Dialog).folder_id ??= setFolderId;\n        }\n\n        this.dialogsStorage.saveDialog({\n          dialog,\n          ignoreOffsetDate: true,\n          saveGlobalOffset\n        });\n\n        if(dialog.peerId === undefined) {\n          this.log.error('bugged dialog?', dialog);\n          debugger;\n          return;\n        }\n\n        if(!maxSeenIdIncremented &&\n          !this.appPeersManager.isChannel(dialog.peerId || this.appPeersManager.getPeerId(dialog.peer))) {\n          this.incrementMaxSeenId(dialog.top_message);\n          maxSeenIdIncremented = true;\n        }\n\n        // if(!folderId && !dialog.folder_id) {\n        //   this.lolSet.add(dialog.peerId);\n        // }\n\n        if(offsetIndex && getDialogIndex(dialog) > offsetIndex) {\n          this.scheduleHandleNewDialogs(dialog.peerId, dialog);\n          hasPrepend = true;\n        }\n\n        // ! это может случиться, если запрос идёт не по папке 0, а по 1. почему-то read'ов нет\n        // ! в итоге, чтобы получить 1 диалог, делается первый запрос по папке 0, потом запрос для архивных по папке 1, и потом ещё перезагрузка архивного диалога\n        if(!peerId && !getServerMessageId(dialog.read_inbox_max_id) && !getServerMessageId(dialog.read_outbox_max_id)) {\n          noIdsDialogs.set(dialog.peerId, {dialog: dialog as Dialog});\n\n          this.log.error('noIdsDialogs', dialog, params);\n        } else if(dialog.top_message) { // * fix sending status\n          const topMessage = this.getMessageByPeer(dialog.peerId, dialog.top_message);\n          if(topMessage) {\n            this.setMessageUnreadByDialog(topMessage, dialog);\n            this.dialogsStorage.setDialogToState(dialog);\n          }\n        }\n      });\n\n      if(noIdsDialogs.size) {\n        // setTimeout(() => { // test bad situation\n        const peerIds = [...noIdsDialogs.keys()];\n        const promises = peerIds.map((peerId) => this.reloadConversation(peerId));\n        Promise.all(promises).then(() => {\n          this.rootScope.dispatchEvent('dialogs_multiupdate', noIdsDialogs);\n\n          for(let i = 0; i < peerIds.length; ++i) {\n            const peerId = peerIds[i];\n            this.rootScope.dispatchEvent('dialog_unread', {\n              peerId,\n              dialog: this.getDialogOnly(peerId)\n            });\n          }\n        });\n        // }, 10e3);\n      }\n\n      const count = (result as MessagesDialogs.messagesDialogsSlice).count;\n\n      // exclude empty draft dialogs\n      const folderDialogs = this.dialogsStorage.getFolderDialogs(folderId, false);\n      let dialogsLength = 0;\n      for(let i = 0, length = folderDialogs.length; i < length; ++i) {\n        const dialog = folderDialogs[i];\n        if(getServerMessageId(dialog.top_message)) {\n          ++dialogsLength;\n        } else {\n          this.log.error('something strange with dialog', dialog);\n        }\n      }\n\n      const isEnd = /* limit > dialogsResult.dialogs.length || */\n        !count ||\n        dialogsLength >= count ||\n        !items.length;\n      if(isEnd) {\n        this.dialogsStorage.setDialogsLoaded(folderId, true);\n      }\n\n      if(hasPrepend) {\n        this.scheduleHandleNewDialogs();\n      } else {\n        this.rootScope.dispatchEvent('dialogs_multiupdate', new Map());\n      }\n\n      const dialogs = items;\n      const slicedDialogs = limit === useLimit ? dialogs : dialogs.slice(0, limit);\n      return {\n        isEnd: isEnd && slicedDialogs[slicedDialogs.length - 1] === dialogs[dialogs.length - 1],\n        count,\n        dialogs: slicedDialogs\n      };\n    };\n\n    let promise: Promise<ReturnType<typeof processResult>>, params: any;\n    if(peerId) {\n      promise = this.apiManager.invokeApiSingleProcess({\n        method: 'channels.getForumTopics',\n        params: params = {\n          channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\n          limit: useLimit,\n          offset_date: offsetDate,\n          offset_id: offsetId,\n          offset_topic: 0\n        },\n        options: {\n          // timeout: APITIMEOUT,\n          noErrorBox: true\n        },\n        processResult: (result) => {\n          result = this.dialogsStorage.processTopics(peerId, result);\n          return processResult(result);\n        }\n      });\n    } else {\n      // ! ВНИМАНИЕ: ОЧЕНЬ СЛОЖНАЯ ЛОГИКА:\n      // ! если делать запрос сначала по папке 0, потом по папке 1, по индексу 0 в массиве будет один и тот же диалог, с dialog.pFlags.pinned, ЛОЛ???\n      // ! т.е., с запросом folder_id: 1, и exclude_pinned: 0, в результате будут ещё и закреплённые с папки 0\n      promise = this.apiManager.invokeApiSingleProcess({\n        method: 'messages.getDialogs',\n        params: params = {\n          folder_id: folderId,\n          offset_date: offsetDate,\n          offset_id: offsetId,\n          offset_peer: this.appPeersManager.getInputPeerById(offsetPeerId),\n          limit: useLimit,\n          hash: '0'\n        },\n        options: {\n          // timeout: APITIMEOUT,\n          noErrorBox: true\n        },\n        processResult\n      });\n    }\n\n    return promise;\n  }\n\n  public async forwardMessages(\n    peerId: PeerId,\n    fromPeerId: PeerId,\n    mids: number[],\n    options: MessageSendingParams & Partial<{\n      withMyScore: true,\n      dropAuthor: boolean,\n      dropCaptions: boolean\n    }> = {}\n  ) {\n    delete options.replyToMsgId;\n    delete options.threadId;\n\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n    mids = mids.slice().sort((a, b) => a - b);\n\n    for(let i = 0, length = mids.length; i < length; ++i) {\n      const mid = mids[i];\n      const originalMessage = this.getMessageByPeer(fromPeerId, mid) as Message.message;\n      if(originalMessage.pFlags.is_outgoing) { // this can happen when forwarding a changelog\n        this.sendText(peerId, originalMessage.message, {\n          entities: originalMessage.entities,\n          scheduleDate: options.scheduleDate,\n          silent: options.silent\n        });\n\n        mids.splice(i--, 1);\n        --length;\n      }\n    }\n\n    if(!mids.length) {\n      return Promise.resolve();\n    }\n\n    const config = await this.apiManager.getConfig();\n    const overflowMids = mids.splice(config.forwarded_count_max, mids.length - config.forwarded_count_max);\n\n    if(options.dropCaptions) {\n      options.dropAuthor = true;\n    }\n\n    const groups: {\n      [groupId: string]: {\n        tempId: string,\n        messages: Message.message[]\n      }\n    } = {};\n\n    const newMids: number[] = [];\n    const newMessages = mids.map((mid) => {\n      const originalMessage = this.getMessageByPeer(fromPeerId, mid) as Message.message;\n      const message: Message.message = this.generateOutgoingMessage(peerId, options);\n      newMids.push(message.id);\n\n      const keys: Array<keyof Message.message> = [\n        'entities',\n        'media'\n        // 'reply_markup'\n      ];\n\n      if(!options.dropAuthor) {\n        message.fwd_from = this.generateForwardHeader(peerId, originalMessage);\n        keys.push('views', 'forwards');\n\n        if(message.fwd_from?.from_name && peerId === this.appPeersManager.peerId) {\n          delete message.from_id;\n        }\n      }\n\n      if(!options.dropCaptions || !originalMessage.media) {\n        keys.push('message');\n      }\n\n      const replyToMid = originalMessage.reply_to?.reply_to_msg_id;\n      const replyToMessageIdx = mids.indexOf(replyToMid);\n      if(replyToMid && replyToMessageIdx !== -1) {\n        const newReplyToMid = newMids[replyToMessageIdx];\n        message.reply_to = {\n          _: 'messageReplyHeader',\n          reply_to_msg_id: newReplyToMid,\n          pFlags: {}\n        };\n\n        /* this.invokeAfterMessageIsSent(newReplyToMid, 'reply', async(originalMessage) => {\n          message.reply_to.reply_to_msg_id = originalMessage.mid;\n        }); */\n      }\n\n      keys.forEach((key) => {\n        // @ts-ignore\n        message[key] = copy(originalMessage[key]);\n      });\n\n      const document = (message.media as MessageMedia.messageMediaDocument)?.document as MyDocument;\n      if(document) {\n        const types: MyDocument['type'][] = ['round', 'voice'];\n        if(types.includes(document.type)) {\n          (message as MyMessage).pFlags.media_unread = true;\n        }\n\n        if(document.sticker && !this.rootScope.premium) {\n          const effectThumb = getStickerEffectThumb(document);\n          if(effectThumb) {\n            (message.media as MessageMedia.messageMediaDocument).pFlags.nopremium = true;\n          }\n        }\n      }\n\n      if(originalMessage.grouped_id) {\n        const group = groups[originalMessage.grouped_id] ??= {tempId: '' + ++this.groupedTempId, messages: []};\n        group.messages.push(message);\n      }\n\n      return message;\n    });\n\n    for(const groupId in groups) {\n      const group = groups[groupId];\n      if(group.messages.length > 1) {\n        group.messages.forEach((message) => {\n          message.grouped_id = group.tempId;\n        });\n      }\n    }\n\n    newMessages.forEach((message) => {\n      this.beforeMessageSending(message, {\n        isScheduled: !!options.scheduleDate || undefined,\n        sequential: true\n      });\n    });\n\n    const sentRequestOptions: PendingAfterMsg = {};\n    if(this.pendingAfterMsgs[peerId]) {\n      sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n    }\n\n    const promise = /* true ? Promise.resolve() :  */this.apiManager.invokeApiAfter('messages.forwardMessages', {\n      from_peer: this.appPeersManager.getInputPeerById(fromPeerId),\n      id: mids.map((mid) => getServerMessageId(mid)),\n      random_id: newMessages.map((message) => message.random_id),\n      to_peer: this.appPeersManager.getInputPeerById(peerId),\n      with_my_score: options.withMyScore,\n      silent: options.silent,\n      schedule_date: options.scheduleDate,\n      drop_author: options.dropAuthor,\n      drop_media_captions: options.dropCaptions,\n      send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\n    }, sentRequestOptions).then((updates) => {\n      this.log('forwardMessages updates:', updates);\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    }, (error: ApiError) => {\n      this.onMessagesSendError(newMessages, error);\n      throw error;\n    }).finally(() => {\n      if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n        delete this.pendingAfterMsgs[peerId];\n      }\n    });\n\n    this.pendingAfterMsgs[peerId] = sentRequestOptions;\n\n    const promises: (typeof promise)[] = [promise];\n    if(overflowMids.length) {\n      promises.push(this.forwardMessages(peerId, fromPeerId, overflowMids, options));\n    }\n\n    return Promise.all(promises).then(noop);\n  }\n\n  public generateEmptyMessage(mid: number): Message.message | Message.messageService {\n    return undefined;\n    // return {\n    //   _: 'messageEmpty',\n    //   id: getServerMessageId(mid),\n    //   mid,\n    //   deleted: true,\n    //   pFlags: {}\n    // };\n  }\n\n  private onMessagesSendError(messages: Message.message[], error?: ApiError) {\n    messages.forEach((message) => {\n      if(message.error === error) {\n        return;\n      }\n\n      if(error) {\n        message.error = error;\n        this.rootScope.dispatchEvent('message_error', {storageKey: message.storageKey, tempId: message.mid, error});\n\n        const dialog = this.getDialogOnly(message.peerId);\n        if(dialog) {\n          this.rootScope.dispatchEvent('dialog_unread', {peerId: message.peerId, dialog});\n        }\n      } else {\n        delete message.error;\n      }\n    });\n  }\n\n  public getMessagesStorageByKey(key: MessagesStorageKey) {\n    const s = key.split('_');\n    const peerId: PeerId = +s[0];\n    const type: MessagesStorageType = s[1] as any;\n    return type === 'scheduled' ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\n  }\n\n  public getMessageFromStorage(storage: MessagesStorage | MessagesStorageKey, mid: number) {\n    storage = this.getMessagesStorage(storage);\n\n    // * use global storage instead\n    if(storage?.type === 'history' && this.appMessagesIdsManager.isLegacyMessageId(mid)) {\n      storage = this.getGlobalHistoryMessagesStorage();\n    }\n\n    return storage?.get(mid)/*  || this.generateEmptyMessage(mid) */;\n  }\n\n  public setMessageToStorage(storage: MessagesStorage | MessagesStorageKey, message: MyMessage) {\n    storage = this.getMessagesStorage(storage);\n\n    const {mid} = message;\n    // * global storage mirror\n    if(storage?.type === 'history' && this.appMessagesIdsManager.isLegacyMessageId(mid)) {\n      const globalStorage = this.getGlobalHistoryMessagesStorage();\n      globalStorage.set(mid, message);\n    }\n\n    return storage?.set(mid, message);\n  }\n\n  public deleteMessageFromStorage(storage: MessagesStorage, mid: number) {\n    if(storage?.peerId && this.appMessagesIdsManager.isLegacyMessageId(mid)) {\n      const globalStorage = this.getGlobalHistoryMessagesStorage();\n      globalStorage.delete(mid);\n    }\n\n    return storage?.delete(mid);\n  }\n\n  private createMessageStorage(peerId: PeerId, type: MessagesStorageType) {\n    const storage: MessagesStorage = new Map() as any;\n    storage.peerId = peerId;\n    storage.type = type;\n    storage.key = `${peerId}_${type}`;\n\n    /* let num = 0;\n    Object.defineProperty(storage, 'num', {\n      get: () => ++num,\n      set: (_num: number) => num = _num,\n      enumerable: false\n    });\n\n    Object.defineProperty(storage, 'generateIndex', {\n      value: (message: any) => {\n        if(message.index === undefined) {\n          message.index = (message.date * 0x10000) + (storage.num & 0xFFFF);\n        }\n      },\n      enumerable: false\n    }); */\n\n    return storage;\n  }\n\n  public getHistoryMessagesStorage(peerId: PeerId) {\n    return this.messagesStorageByPeerId[peerId] ??= this.createMessageStorage(peerId, 'history');\n  }\n\n  public getGlobalHistoryMessagesStorage() {\n    return this.getHistoryMessagesStorage(NULL_PEER_ID);\n  }\n\n  public getMessagesStorage(key: MessagesStorageKey | MessagesStorage): MessagesStorage {\n    if(typeof(key) === 'object') {\n      return key;\n    } else {\n      return this.getMessagesStorageByKey(key);\n    }\n  }\n\n  public getMessageById(messageId: number) {\n    if(this.appMessagesIdsManager.isLegacyMessageId(messageId)) {\n      return this.getMessageFromStorage(this.getGlobalHistoryMessagesStorage(), messageId);\n    }\n\n    return this.generateEmptyMessage(messageId);\n\n    // for(const peerId in this.messagesStorageByPeerId) {\n    //   if(this.appPeersManager.isChannel(peerId.toPeerId())) {\n    //     continue;\n    //   }\n\n    //   const message = this.messagesStorageByPeerId[peerId].get(messageId);\n    //   if(message) {\n    //     return message;\n    //   }\n    // }\n\n    // return this.getMessageFromStorage(null, messageId);\n  }\n\n  public getMessageByPeer(peerId: PeerId, messageId: number) {\n    if(!peerId) {\n      return this.getMessageById(messageId);\n    }\n\n    return this.getMessageFromStorage(this.getHistoryMessagesStorage(peerId), messageId);\n  }\n\n  public getMessagePeer(message: any): PeerId {\n    const toId = message?.peer_id && this.appPeersManager.getPeerId(message.peer_id) || NULL_PEER_ID;\n\n    return toId;\n  }\n\n  public getDialogOnly(peerId: PeerId) {\n    return this.dialogsStorage.getDialogOnly(peerId);\n  }\n\n  public cantForwardDeleteMids(storageKey: MessagesStorageKey, mids: number[]) {\n    const storage = this.getMessagesStorage(storageKey);\n    let cantForward = !mids.length, cantDelete = !mids.length;\n    for(const mid of mids) {\n      const message = this.getMessageFromStorage(storage, mid);\n      if(!cantForward) {\n        cantForward = !this.canForward(message);\n      }\n\n      if(!cantDelete) {\n        cantDelete = !this.canDeleteMessage(message);\n      }\n\n      if(cantForward && cantDelete) break;\n    }\n\n    return {cantForward, cantDelete};\n  }\n\n  public reloadConversationOrTopic(peerId: PeerId, threadId?: number) {\n    if(threadId) {\n      this.dialogsStorage.getForumTopicById(peerId, threadId);\n    } else {\n      this.reloadConversation(peerId);\n    }\n  }\n\n  public reloadConversation(inputPeer?: PeerId | InputPeer): CancellablePromise<Dialog>;\n  public reloadConversation(inputPeer: PeerId | InputPeer) {\n    let promise: CancellablePromise<Dialog>;\n    if(inputPeer !== undefined) {\n      const peerId = this.appPeersManager.getPeerId(inputPeer);\n      this.log.warn('reloadConversation', peerId);\n\n      let obj = this.reloadConversationsPeers.get(peerId);\n      if(obj) {\n        promise = obj.promise;\n      }\n\n      if(promise) {\n        return promise;\n      }\n\n      promise = deferredPromise();\n      this.reloadConversationsPeers.set(peerId, obj = {\n        inputDialogPeer: this.appPeersManager.getInputDialogPeerById(inputPeer),\n        promise\n      });\n    }\n\n    if(this.reloadConversationsPromise) {\n      return promise || this.reloadConversationsPromise;\n    }\n\n    this.reloadConversationsPromise = pause(0).then(() => {\n      const inputDialogPeers: InputDialogPeer[] = [];\n      const promises: {[peerId: string]: typeof promise} = {};\n      for(const [peerId, {inputDialogPeer, promise}] of this.reloadConversationsPeers) {\n        inputDialogPeers.push(inputDialogPeer);\n        promises[peerId] = promise;\n      }\n\n      const fullfillLeft = () => {\n        for(const peerId in promises) {\n          this.reloadConversationsPeers.delete(+peerId);\n          promises[peerId].resolve(undefined);\n        }\n      };\n\n      const invoke = async() => {\n        for(;;) {\n          const result = await this.apiManager.invokeApi('messages.getPeerDialogs', {peers: inputDialogPeers});\n          const currentState = this.apiUpdatesManager.updatesState;\n          const {state} = result;\n          if(currentState.pts && currentState.pts !== state.pts) {\n            await pause(500);\n            continue;\n          }\n\n          return result;\n        }\n      };\n\n      return invoke().then((result) => {\n        for(const peerId in promises) {\n          this.reloadConversationsPeers.delete(+peerId);\n        }\n\n        this.dialogsStorage.applyDialogs(result);\n\n        result.dialogs.forEach((dialog) => {\n          const peerId = dialog.peerId;\n          if(peerId) {\n            promises[peerId].resolve(dialog as Dialog);\n            delete promises[peerId];\n          }\n        });\n      }, noop).then(() => {\n        fullfillLeft();\n\n        this.reloadConversationsPromise = null;\n        if(this.reloadConversationsPeers.size) {\n          this.reloadConversation();\n        }\n      });\n    });\n\n    return promise || this.reloadConversationsPromise;\n  }\n\n  private doFlushHistory(peerId: PeerId, just_clear?: boolean, revoke?: boolean, threadId?: number): Promise<true> {\n    let promise: Promise<true>;\n    const processResult = (affectedHistory: MessagesAffectedHistory) => {\n      this.apiUpdatesManager.processUpdateMessage({\n        _: 'updateShort',\n        update: {\n          _: 'updatePts',\n          pts: affectedHistory.pts,\n          pts_count: affectedHistory.pts_count\n        }\n      });\n\n      if(!affectedHistory.offset) {\n        return true;\n      }\n\n      return this.doFlushHistory(peerId, just_clear, revoke, threadId);\n    };\n\n    if(!threadId) {\n      promise = this.apiManager.invokeApiSingleProcess({\n        method: 'messages.deleteHistory',\n        params: {\n          just_clear,\n          revoke,\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          max_id: 0\n        },\n        processResult\n      });\n    } else {\n      promise = this.apiManager.invokeApiSingleProcess({\n        method: 'channels.deleteTopicHistory',\n        params: {\n          channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\n          top_msg_id: getServerMessageId(threadId)\n        },\n        processResult\n      });\n    }\n\n    return promise;\n  }\n\n  public async flushHistory(peerId: PeerId, justClear?: boolean, revoke?: boolean, threadId?: number) {\n    if(this.appPeersManager.isChannel(peerId) && !threadId) {\n      const promise = this.getHistory({\n        peerId,\n        offsetId: 0,\n        limit: 1\n      });\n\n      const historyResult = await promise;\n\n      const channelId = peerId.toChatId();\n      const maxId = historyResult.history[0] || 0;\n      return this.apiManager.invokeApiSingle('channels.deleteHistory', {\n        channel: this.appChatsManager.getChannelInput(channelId),\n        max_id: getServerMessageId(maxId)\n      }).then((bool) => {\n        if(bool) {\n          this.apiUpdatesManager.processLocalUpdate({\n            _: 'updateChannelAvailableMessages',\n            channel_id: channelId,\n            available_min_id: maxId\n          });\n        }\n\n        return bool;\n      });\n    }\n\n    return this.doFlushHistory(peerId, justClear, revoke, threadId).then(() => {\n      if(!threadId) {\n        this.flushStoragesByPeerId(peerId);\n      }\n\n      if(justClear) {\n        this.rootScope.dispatchEvent('dialog_flush', {peerId, dialog: this.getDialogOnly(peerId)});\n      } else {\n        const key = this.getTypingKey(peerId, threadId);\n        delete this.notificationsToHandle[key];\n        delete this.typings[key];\n\n        if(!threadId) {\n          const c = this.reloadConversationsPeers.get(peerId);\n          if(c) {\n            this.reloadConversationsPeers.delete(peerId);\n            c.promise.resolve(undefined);\n          }\n        }\n\n        this.dialogsStorage.dropDialogOnDeletion(peerId, threadId);\n      }\n    });\n  }\n\n  private flushStoragesByPeerId(peerId: PeerId) {\n    [\n      this.historiesStorage,\n      this.threadsStorage,\n      this.searchesStorage,\n      this.pendingAfterMsgs,\n      this.pendingTopMsgs\n    ].forEach((s) => {\n      delete s[peerId];\n    });\n\n    for(const key in this.pinnedMessages) {\n      if(+key === peerId || key.startsWith(peerId + '_')) {\n        delete this.pinnedMessages[key];\n      }\n    }\n\n    const needSingleMessages = this.needSingleMessages.get(peerId);\n    if(needSingleMessages) {\n      for(const [mid, promise] of needSingleMessages) {\n        promise.resolve(this.generateEmptyMessage(mid));\n      }\n\n      needSingleMessages.clear();\n    }\n\n    [\n      this.messagesStorageByPeerId,\n      this.scheduledMessagesStorage\n    ].forEach((s) => {\n      const ss = s[peerId];\n      if(!ss) {\n        return;\n      }\n\n      if(ss.type === 'history' && !this.appPeersManager.isChannel(peerId)) {\n        const globalStorage = this.getGlobalHistoryMessagesStorage();\n        ss.forEach((message, mid) => {\n          this.deleteMessageFromStorage(globalStorage, mid);\n        });\n      }\n\n      ss.clear();\n      delete s[peerId];\n    });\n\n    this.dialogsStorage.flushForumTopicsCache(peerId);\n  }\n\n  public hidePinnedMessages(peerId: PeerId) {\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.getPinnedMessage(peerId)\n    ])\n    .then(([state, pinned]) => {\n      state.hiddenPinnedMessages[peerId] = pinned.maxId;\n      this.rootScope.dispatchEvent('peer_pinned_hidden', {peerId, maxId: pinned.maxId});\n    });\n  }\n\n  public getPinnedMessagesKey(peerId: PeerId, threadId?: number) {\n    return peerId + (threadId ? '_' + threadId : '');\n  }\n\n  public getPinnedMessage(peerId: PeerId, threadId?: number) {\n    const p = this.pinnedMessages[this.getPinnedMessagesKey(peerId, threadId)] ??= {};\n    if(p.promise) return p.promise;\n    else if(p.maxId) return Promise.resolve(p);\n\n    return p.promise = Promise.resolve(this.getHistory({\n      peerId,\n      inputFilter: {_: 'inputMessagesFilterPinned'},\n      offsetId: 0,\n      limit: 1,\n      threadId\n    })).then((result) => {\n      p.count = result.count;\n      p.maxId = result.history[0];\n      return p;\n    }).finally(() => {\n      delete p.promise;\n    });\n  }\n\n  public getPinnedMessagesCount(peerId: PeerId, threadId?: number) {\n    return this.pinnedMessages[this.getPinnedMessagesKey(peerId, threadId)]?.count;\n  }\n\n  public getPinnedMessagesMaxId(peerId: PeerId, threadId?: number) {\n    return this.pinnedMessages[this.getPinnedMessagesKey(peerId, threadId)]?.maxId;\n  }\n\n  public updatePinnedMessage(peerId: PeerId, mid: number, unpin?: boolean, silent?: boolean, pm_oneside?: boolean) {\n    return this.apiManager.invokeApi('messages.updatePinnedMessage', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      unpin,\n      silent,\n      pm_oneside,\n      id: getServerMessageId(mid)\n    }).then((updates) => {\n      // this.log('pinned updates:', updates);\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public unpinAllMessages(peerId: PeerId): Promise<boolean> {\n    return this.apiManager.invokeApiSingle('messages.unpinAllMessages', {\n      peer: this.appPeersManager.getInputPeerById(peerId)\n    }).then((affectedHistory) => {\n      this.apiUpdatesManager.processUpdateMessage({\n        _: 'updateShort',\n        update: {\n          _: 'updatePts',\n          pts: affectedHistory.pts,\n          pts_count: affectedHistory.pts_count\n        }\n      });\n\n      if(!affectedHistory.offset) {\n        const storage = this.getHistoryMessagesStorage(peerId);\n        storage.forEach((message) => {\n          if((message as Message.message).pFlags.pinned) {\n            delete (message as Message.message).pFlags.pinned;\n          }\n        });\n\n        this.rootScope.dispatchEvent('peer_pinned_messages', {peerId, unpinAll: true});\n        delete this.pinnedMessages[this.getPinnedMessagesKey(peerId)];\n\n        return true;\n      }\n\n      return this.unpinAllMessages(peerId);\n    });\n  }\n\n  public getAlbumText(grouped_id: string) {\n    const group = this.groupedMessagesStorage[grouped_id];\n    return getAlbumText(Array.from(group.values()) as Message.message[]);\n  }\n\n  public getGroupsFirstMessage(message: Message.message) {\n    if(!message?.grouped_id) return message;\n\n    const storage = this.groupedMessagesStorage[message.grouped_id];\n    let minMid = Number.MAX_SAFE_INTEGER;\n    for(const [mid, message] of storage) {\n      if(message.mid < minMid) {\n        minMid = message.mid;\n      }\n    }\n\n    return this.getMessageFromStorage(storage, minMid) as Message.message;\n  }\n\n  public getMidsByAlbum(groupedId: string, sort: 'asc' | 'desc' = 'asc') {\n    return getObjectKeysAndSort(this.groupedMessagesStorage[groupedId], sort);\n  }\n\n  public getMessagesByAlbum(groupedId: string) {\n    const mids = this.getMidsByAlbum(groupedId, 'asc');\n    const storage = this.groupedMessagesStorage[groupedId];\n    return mids.map((mid) => this.getMessageFromStorage(storage, mid) as Message.message);\n  }\n\n  public getMidsByMessage(message: Message) {\n    if(!message) return [];\n    else if((message as Message.message).grouped_id) return this.getMidsByAlbum((message as Message.message).grouped_id);\n    else return [message.mid];\n  }\n\n  public filterMessages(message: MyMessage, verify: (message: MyMessage) => boolean) {\n    const out: MyMessage[] = [];\n    if((message as Message.message).grouped_id) {\n      const storage = this.groupedMessagesStorage[(message as Message.message).grouped_id];\n      for(const [mid, message] of storage) {\n        if(verify(message)) {\n          out.push(message);\n        }\n      }\n    } else {\n      if(verify(message)) {\n        out.push(message);\n      }\n    }\n\n    return out;\n  }\n\n  public generateTempMessageId(peerId: PeerId) {\n    const dialog = this.getDialogOnly(peerId);\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\n\n    let topMessage = dialog?.top_message || 0;\n    let tempMid = this.tempMids[peerId];\n    if(tempMid && tempMid > topMessage) {\n      topMessage = tempMid;\n    }\n\n    tempMid = this.appMessagesIdsManager.generateTempMessageId(topMessage, channelId);\n    return this.tempMids[peerId] = tempMid;\n  }\n\n  public setMessageUnreadByDialog(\n    message: MyMessage,\n    dialog: Dialog | ForumTopic = this.getDialogOnly(message.peerId)\n  ) {\n    if(dialog && message.mid) {\n      if(message.mid > dialog[message.pFlags.out ?\n        'read_outbox_max_id' :\n        'read_inbox_max_id']) {\n        message.pFlags.unread = true;\n      }\n    }\n  }\n\n  public saveMessage(message: Message, options: Partial<{\n    storage: MessagesStorage,\n    isScheduled: true,\n    isOutgoing: true,\n    // isNew: boolean, // * new - from update\n  }> = {}) {\n    if(!message || message._ === 'messageEmpty') {\n      return;\n    }\n\n    message.pFlags ??= {};\n\n    // * exclude from state\n    // defineNotNumerableProperties(message, ['rReply', 'mid', 'savedFrom', 'fwdFromId', 'fromId', 'peerId', 'reply_to_mid', 'viaBotId']);\n\n    const peerId = this.getMessagePeer(message);\n    const storage = options.storage || this.getHistoryMessagesStorage(peerId);\n    const isChannel = message.peer_id._ === 'peerChannel';\n    const isBroadcast = isChannel && this.appChatsManager.isBroadcast(peerId.toChatId());\n    const isMessage = message._ === 'message';\n    const channelId = isChannel ? peerId.toChatId() : undefined;\n\n    if(options.isOutgoing) {\n      message.pFlags.is_outgoing = true;\n    }\n\n    const mid = this.appMessagesIdsManager.generateMessageId(message.id, channelId);\n    message.mid = mid;\n\n    if(isMessage) {\n      if(options.isScheduled) {\n        message.pFlags.is_scheduled = true;\n      }\n\n      if(message.grouped_id) {\n        const storage = this.groupedMessagesStorage[message.grouped_id] ??= this.createMessageStorage(peerId, 'grouped');\n        this.setMessageToStorage(storage, message);\n      }\n\n      if(message.via_bot_id) {\n        // ! WARNING\n        message.viaBotId = message.via_bot_id as any;\n      }\n    }\n\n    // this.log(dT(), 'msg unread', mid, apiMessage.pFlags.out, dialog && dialog[apiMessage.pFlags.out ? 'read_outbox_max_id' : 'read_inbox_max_id'])\n\n    const replyTo = message.reply_to;\n    if(replyTo) {\n      const replyToChannelId = (replyTo.reply_to_peer_id as Peer.peerChannel)?.channel_id || channelId;\n\n      if(replyTo.reply_to_msg_id) {\n        replyTo.reply_to_msg_id = message.reply_to_mid = this.appMessagesIdsManager.generateMessageId(replyTo.reply_to_msg_id, replyToChannelId);\n      }\n\n      if(replyTo.reply_to_top_id) {\n        replyTo.reply_to_top_id = this.appMessagesIdsManager.generateMessageId(replyTo.reply_to_top_id, replyToChannelId);\n      }\n    }\n\n    const replies = isMessage && message.replies;\n    if(replies) {\n      if(replies.max_id) replies.max_id = this.appMessagesIdsManager.generateMessageId(replies.max_id, replies.channel_id);\n      if(replies.read_max_id) replies.read_max_id = this.appMessagesIdsManager.generateMessageId(replies.read_max_id, replies.channel_id);\n    }\n\n    const overwriting = !!peerId;\n    if(!overwriting) {\n      message.date -= this.timeManager.getServerTimeOffset();\n    }\n\n    // storage.generateIndex(message);\n    const myId = this.appPeersManager.peerId;\n\n    const fwdHeader = isMessage && (message as Message.message).fwd_from;\n\n    message.peerId = peerId;\n    if(peerId === myId/*  && !message.from_id && !message.fwd_from */) {\n      message.fromId = fwdHeader ? (fwdHeader.from_id ? this.appPeersManager.getPeerId(fwdHeader.from_id) : NULL_PEER_ID) : myId;\n    } else {\n      // message.fromId = message.pFlags.post || (!message.pFlags.out && !message.from_id) ? peerId : appPeersManager.getPeerId(message.from_id);\n      message.fromId = message.pFlags.post || !message.from_id ? peerId : this.appPeersManager.getPeerId(message.from_id);\n    }\n\n    this.setMessageUnreadByDialog(message);\n\n    if(fwdHeader) {\n      // if(peerId === myID) {\n      if(fwdHeader.saved_from_msg_id) fwdHeader.saved_from_msg_id = this.appMessagesIdsManager.generateMessageId(fwdHeader.saved_from_msg_id, (fwdHeader.saved_from_peer as Peer.peerChannel).channel_id);\n      if(fwdHeader.channel_post) fwdHeader.channel_post = this.appMessagesIdsManager.generateMessageId(fwdHeader.channel_post, (fwdHeader.from_id as Peer.peerChannel).channel_id);\n\n      const peer = fwdHeader.saved_from_peer || fwdHeader.from_id;\n      const msgId = fwdHeader.saved_from_msg_id || fwdHeader.channel_post;\n      if(peer && msgId) {\n        const savedFromPeerId = this.appPeersManager.getPeerId(peer);\n        const savedFromMid = this.appMessagesIdsManager.generateMessageId(msgId, (peer as Peer.peerChannel).channel_id);\n        message.savedFrom = savedFromPeerId + '_' + savedFromMid;\n      }\n\n      /* if(peerId.isAnyChat() || peerId === myID) {\n          message.fromId = appPeersManager.getPeerID(!message.from_id || deepEqual(message.from_id, fwdHeader.from_id) ? fwdHeader.from_id : message.from_id);\n        } */\n      /* } else {\n        apiMessage.fwdPostID = fwdHeader.channel_post;\n      } */\n\n      message.fwdFromId = this.appPeersManager.getPeerId(fwdHeader.from_id);\n\n      if(!overwriting) {\n        fwdHeader.date -= this.timeManager.getServerTimeOffset();\n      }\n    }\n\n    const mediaContext: ReferenceContext = {\n      type: 'message',\n      peerId,\n      messageId: mid\n    };\n\n    /* if(isMessage) {\n      const entities = message.entities;\n      if(entities && entities.find((entity) => entity._ === 'messageEntitySpoiler')) {\n        message.media = {_: 'messageMediaUnsupported'};\n      }\n    } */\n\n    let unsupported = false;\n    const media = isMessage && message.media;\n    if(media) {\n      switch(media._) {\n        case 'messageMediaEmpty': {\n          delete message.media;\n          break;\n        }\n\n        case 'messageMediaPhoto': {\n          if(media.ttl_seconds) {\n            unsupported = true;\n          } else {\n            media.photo = this.appPhotosManager.savePhoto(media.photo, mediaContext);\n          }\n\n          if(!(media as MessageMedia.messageMediaPhoto).photo) { // * found this bug on test DC\n            delete message.media;\n          }\n\n          break;\n        }\n\n        case 'messageMediaPoll': {\n          const result = this.appPollsManager.savePoll(media.poll, media.results, message);\n          media.poll = result.poll;\n          media.results = result.results;\n          break;\n        }\n\n        case 'messageMediaDocument': {\n          if(media.ttl_seconds) {\n            unsupported = true;\n          } else {\n            const originalDoc = media.document;\n            media.document = this.appDocsManager.saveDoc(originalDoc, mediaContext); // 11.04.2020 warning\n\n            if(!media.document && originalDoc._ !== 'documentEmpty') {\n              unsupported = true;\n            }\n          }\n\n          break;\n        }\n\n        case 'messageMediaWebPage': {\n          const messageKey = this.appWebPagesManager.getMessageKeyForPendingWebPage(peerId, mid, options.isScheduled);\n          media.webpage = this.appWebPagesManager.saveWebPage(media.webpage, messageKey, mediaContext);\n\n          if(!media.webpage) {\n            delete message.media;\n          }\n\n          break;\n        }\n\n        /* case 'messageMediaGame':\n          AppGamesManager.saveGame(apiMessage.media.game, apiMessage.mid, mediaContext);\n          apiMessage.media.handleMessage = true;\n          break; */\n\n        case 'messageMediaInvoice': {\n          media.photo = this.appWebDocsManager.saveWebDocument(media.photo);\n          const extendedMedia = media.extended_media;\n          if(extendedMedia?._ === 'messageExtendedMedia') {\n            const extendedMediaMedia = extendedMedia.media;\n            (extendedMediaMedia as MessageMedia.messageMediaPhoto).photo = this.appPhotosManager.savePhoto((extendedMediaMedia as MessageMedia.messageMediaPhoto).photo, mediaContext);\n            (extendedMediaMedia as MessageMedia.messageMediaDocument).document = this.appDocsManager.saveDoc((extendedMediaMedia as MessageMedia.messageMediaDocument).document, mediaContext);\n          }\n          break;\n        }\n\n        case 'messageMediaUnsupported': {\n          unsupported = true;\n          break;\n        }\n      }\n    }\n\n    // if(isMessage && !unsupported && message.entities) {\n    //   unsupported = message.entities.some((entity) => entity._ === 'messageEntityCustomEmoji');\n    // }\n\n    if(isMessage && unsupported) {\n      message.media = {_: 'messageMediaUnsupported'};\n      message.message = '';\n      delete message.entities;\n      delete message.totalEntities;\n    }\n\n    if(!isMessage && message.action) {\n      const action = message.action as MessageAction;\n      const suffix = message.fromId === this.appUsersManager.getSelf().id ? 'You' : '';\n      let migrateFrom: PeerId, migrateTo: PeerId;\n\n      if((action as MessageAction.messageActionChatEditPhoto).photo) {\n        (action as MessageAction.messageActionChatEditPhoto).photo = this.appPhotosManager.savePhoto((action as MessageAction.messageActionChatEditPhoto).photo, mediaContext);\n      }\n\n      if((action as any).document) {\n        (action as any).document = this.appDocsManager.saveDoc((action as any).photo, mediaContext);\n      }\n\n      switch(action._) {\n        // case 'messageActionChannelEditPhoto':\n        case 'messageActionChatEditPhoto':\n          // action.photo = appPhotosManager.savePhoto(action.photo, mediaContext);\n          if((action.photo as Photo.photo)?.video_sizes) {\n            // @ts-ignore\n            action._ = isBroadcast ? 'messageActionChannelEditVideo' : 'messageActionChatEditVideo';\n          } else {\n            if(isBroadcast) { // ! messageActionChannelEditPhoto не существует в принципе, это используется для перевода.\n              // @ts-ignore\n              action._ = 'messageActionChannelEditPhoto';\n            }\n          }\n          break;\n\n        case 'messageActionGroupCall': {\n          // assumeType<MessageAction.messageActionGroupCall>(action);\n\n          this.appGroupCallsManager.saveGroupCall(action.call);\n\n          let type: string;\n          if(action.duration === undefined) {\n            type = 'started';\n          } else {\n            type = 'ended'\n          }\n\n          if(!isBroadcast) {\n            type += '_by' + suffix;\n          }\n\n          // @ts-ignore\n          action.type = type;\n\n          break;\n        }\n\n        case 'messageActionChatEditTitle':\n          /* if(options.isNew) {\n            const chat = appChatsManager.getChat(peerId.toChatId());\n            chat.title = action.title;\n            appChatsManager.saveApiChat(chat, true);\n          } */\n\n          if(isBroadcast) {\n            // @ts-ignore\n            action._ = 'messageActionChannelEditTitle';\n          }\n          break;\n\n        case 'messageActionChatDeletePhoto':\n          if(isBroadcast) {\n            // @ts-ignore\n            action._ = 'messageActionChannelDeletePhoto';\n          }\n          break;\n\n        case 'messageActionChatAddUser':\n          if(action.users.length === 1) {\n            // @ts-ignore\n            action.user_id = action.users[0];\n            // @ts-ignore\n            if(message.fromId === action.user_id) {\n              if(isChannel) {\n                // @ts-ignore\n                action._ = 'messageActionChatJoined' + suffix;\n              } else {\n                // @ts-ignore\n                action._ = 'messageActionChatReturn' + suffix;\n              }\n            }\n          } else if(action.users.length > 1) {\n            // @ts-ignore\n            action._ = 'messageActionChatAddUsers';\n          }\n          break;\n\n        case 'messageActionChatDeleteUser':\n          if(message.fromId === action.user_id) {\n            // @ts-ignore\n            action._ = 'messageActionChatLeave' + suffix;\n          }\n          break;\n\n        case 'messageActionChannelMigrateFrom':\n          migrateFrom = action.chat_id.toPeerId(true);\n          migrateTo = peerId;\n          break\n\n        case 'messageActionChatMigrateTo':\n          migrateFrom = peerId;\n          migrateTo = action.channel_id.toPeerId(true);\n          break;\n\n        case 'messageActionHistoryClear':\n          // apiMessage.deleted = true;\n          message.clear_history = true;\n          delete message.pFlags.out;\n          delete message.pFlags.unread;\n          break;\n\n        case 'messageActionPhoneCall':\n          // @ts-ignore\n          action.type =\n            (action.pFlags.video ? 'video_' : '') +\n            (action.duration !== undefined ? (message.pFlags.out ? 'out_' : 'in_') : '') +\n            (\n              action.duration !== undefined ? 'ok' : (\n                action.reason._ === 'phoneCallDiscardReasonMissed' ?\n                  'missed' :\n                  'cancelled'\n              )\n            );\n          break;\n      }\n\n      if(migrateFrom &&\n          migrateTo &&\n          !this.getMigration(migrateFrom)) {\n        this.migrateChecks(migrateFrom, migrateTo);\n      }\n    }\n\n    if(isMessage && message.message.length && !message.totalEntities) {\n      this.wrapMessageEntities(message);\n    }\n\n    this.setMessageToStorage(storage, message);\n\n    return message;\n  }\n\n  public saveMessages(messages: any[], options: Partial<{\n    storage: MessagesStorage,\n    isScheduled: true,\n    isOutgoing: true,\n    // isNew: boolean, // * new - from update\n  }> = {}): (Message.message | Message.messageService)[] {\n    if((messages as any).saved) return messages;\n    (messages as any).saved = true;\n    messages.forEach((message, idx, arr) => {\n      arr[idx] = this.saveMessage(message, options);\n    });\n\n    return messages;\n  }\n\n  public async getFirstMessageToEdit(peerId: PeerId, threadId?: number) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    const slice = historyStorage.history.slice;\n    if(slice.isEnd(SliceEnd.Bottom) && slice.length) {\n      let goodMessage: Message.message | Message.messageService;\n      const myPeerId = this.appPeersManager.peerId;\n      for(const mid of slice) {\n        const message = this.getMessageByPeer(peerId, mid);\n        const good = myPeerId === peerId ? message.fromId === myPeerId : message.pFlags.out;\n\n        if(good) {\n          if(await this.canEditMessage(message, 'text')) {\n            goodMessage = message;\n            break;\n          }\n\n          // * this check will allow editing only last message\n          // break;\n        }\n      }\n\n      return goodMessage;\n    }\n  }\n\n  private wrapMessageEntities(message: Message.message) {\n    const apiEntities = message.entities ? message.entities.slice() : [];\n    message.message = fixEmoji(message.message, apiEntities);\n\n    const myEntities = parseEntities(message.message);\n    message.totalEntities = mergeEntities(apiEntities, myEntities); // ! only in this order, otherwise bold and emoji formatting won't work\n  }\n\n  public reportMessages(peerId: PeerId, mids: number[], reason: ReportReason['_'], message?: string) {\n    return this.apiManager.invokeApiSingle('messages.report', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid)),\n      reason: {\n        _: reason\n      },\n      message\n    });\n  }\n\n  public startBot(botId: BotId, chatId?: ChatId, startParam?: string) {\n    const peerId = chatId ? chatId.toPeerId(true) : botId.toPeerId();\n    if(startParam) {\n      const randomId = randomLong();\n\n      return this.apiManager.invokeApi('messages.startBot', {\n        bot: this.appUsersManager.getUserInput(botId),\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        random_id: randomId,\n        start_param: startParam\n      }).then((updates) => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n      });\n    }\n\n    const str = '/start';\n    if(chatId) {\n      let promise: Promise<void>;\n      if(this.appChatsManager.isChannel(chatId)) {\n        promise = this.appChatsManager.inviteToChannel(chatId, [botId]);\n      } else {\n        promise = this.appChatsManager.addChatUser(chatId, botId, 0);\n      }\n\n      return promise.catch((error: ApiError) => {\n        if(error?.type == 'USER_ALREADY_PARTICIPANT') {\n          error.handled = true;\n          return;\n        }\n\n        throw error;\n      }).then(() => {\n        return this.sendText(peerId, str + '@' + this.appPeersManager.getPeerUsername(botId.toPeerId()));\n      });\n    }\n\n    return this.sendText(peerId, str);\n  }\n\n  public editPeerFolders(peerIds: PeerId[], folderId: number) {\n    this.apiManager.invokeApi('folders.editPeerFolders', {\n      folder_peers: peerIds.map((peerId) => {\n        return {\n          _: 'inputFolderPeer',\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          folder_id: folderId\n        };\n      })\n    }).then((updates) => {\n      // this.log('editPeerFolders updates:', updates);\n      this.apiUpdatesManager.processUpdateMessage(updates); // WARNING! возможно тут нужно добавлять channelId, и вызывать апдейт для каждого канала отдельно\n    });\n  }\n\n  public getFilter(filterId: number) {\n    return this.filtersStorage.getFilter(filterId);\n  }\n\n  public async toggleDialogPin(options: {\n    peerId: PeerId,\n    filterId?: number,\n    topicId?: number\n  }) {\n    const {peerId, topicId, filterId = topicId ? peerId : undefined} = options;\n    if(filterId === undefined) {\n      throw new Error('No filterId');\n    }\n\n    if(filterId > 1) {\n      return this.filtersStorage.toggleDialogPin(peerId, filterId);\n    }\n\n    const dialog = this.dialogsStorage.getDialogOrTopic(peerId, topicId);\n    if(!dialog) throw undefined;\n\n    const pinned = dialog.pFlags?.pinned ? undefined : true;\n\n    if(pinned) {\n      const max = await this.apiManager.getLimit(topicId ? 'topicPin' : (filterId === 1 ? 'folderPin' : 'pin'));\n      if(this.dialogsStorage.getPinnedOrders(filterId).length >= max) {\n        throw makeError(topicId ? 'PINNED_TOO_MUCH' : 'PINNED_DIALOGS_TOO_MUCH');\n      }\n    }\n\n    if(topicId) {\n      return this.appChatsManager.updatePinnedForumTopic(peerId.toChatId(), topicId, pinned);\n    }\n\n    return this.apiManager.invokeApi('messages.toggleDialogPin', {\n      peer: this.appPeersManager.getInputDialogPeerById(peerId),\n      pinned\n    }).then((bool) => {\n      const pFlags: Update.updateDialogPinned['pFlags'] = pinned ? {pinned} : {};\n      this.apiUpdatesManager.saveUpdate({\n        _: 'updateDialogPinned',\n        peer: this.appPeersManager.getDialogPeer(peerId),\n        folder_id: filterId,\n        pFlags\n      });\n    });\n  }\n\n  public markDialogUnread(peerId: PeerId, read?: true) {\n    const dialog = this.getDialogOnly(peerId);\n    if(!dialog) return Promise.reject();\n\n    const unread = read || dialog.pFlags?.unread_mark ? undefined : true;\n\n    if(!unread && dialog.unread_count) {\n      const promise = this.readHistory(peerId, dialog.top_message);\n      if(!dialog.pFlags.unread_mark) {\n        return promise;\n      }\n    }\n\n    return this.apiManager.invokeApi('messages.markDialogUnread', {\n      peer: this.appPeersManager.getInputDialogPeerById(peerId),\n      unread\n    }).then(() => {\n      const pFlags: Update.updateDialogUnreadMark['pFlags'] = unread ? {unread} : {};\n      this.onUpdateDialogUnreadMark({\n        _: 'updateDialogUnreadMark',\n        peer: this.appPeersManager.getDialogPeer(peerId),\n        pFlags\n      });\n    });\n  }\n\n  public migrateChecks(migrateFrom: PeerId, migrateTo: PeerId) {\n    if(!this.getMigration(migrateFrom) && this.appChatsManager.hasChat(migrateTo.toChatId())) {\n      const fromChat = this.appChatsManager.getChat(migrateFrom.toChatId()) as Chat.chat;\n      if(fromChat?.migrated_to && (fromChat.migrated_to as InputChannel.inputChannel).channel_id === migrateTo.toChatId()) {\n        this.migratedFromTo[migrateFrom] = migrateTo;\n        this.migratedToFrom[migrateTo] = migrateFrom;\n\n        this.rootScope.dispatchEvent('dialog_migrate', {migrateFrom, migrateTo});\n\n        this.dialogsStorage.dropDialogWithEvent(migrateFrom);\n      }\n    }\n  }\n\n  private canMessageBeEdited(message: Message, kind: 'text' | 'poll') {\n    if((message as Message.message)?.pFlags?.is_outgoing) {\n      return false;\n    }\n\n    const goodMedias = [\n      'messageMediaPhoto',\n      'messageMediaDocument',\n      'messageMediaWebPage'\n    ];\n\n    if(kind === 'poll') {\n      goodMedias.push('messageMediaPoll');\n    }\n\n    if(!message ||\n        message._ !== 'message' ||\n        message.deleted ||\n        message.fwd_from ||\n        message.via_bot_id ||\n        message.media && goodMedias.indexOf(message.media._) === -1 ||\n        message.fromId && this.appUsersManager.isBot(message.fromId)) {\n      return false;\n    }\n\n    if(message.media?._ === 'messageMediaDocument' &&\n        ((message.media.document as Document.document).sticker || (message.media.document as Document.document).type === 'round')) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public async canEditMessage(message: Message.message | Message.messageService, kind: 'text' | 'poll' = 'text') {\n    if(!message || !this.canMessageBeEdited(message, kind)) {\n      return false;\n    }\n\n    // * second rule for saved messages, because there is no 'out' flag\n    if(/* message.pFlags.out ||  */this.getMessagePeer(message) === this.appUsersManager.getSelf().id) {\n      return true;\n    }\n\n    const {peerId} = message;\n\n    const canEditMessageInPeer = this.appPeersManager.isBroadcast(peerId) ?\n      this.appChatsManager.hasRights(peerId.toChatId(), 'edit_messages') :\n      (\n        peerId.isAnyChat() && kind === 'text' ?\n          !this.getMigration(message.peerId)?.next && (this.appChatsManager.hasRights(peerId.toChatId(), 'send_plain') || this.appChatsManager.hasRights(peerId.toChatId(), 'send_media')) :\n          true\n      ) && message.pFlags.out;\n\n    if(\n      !canEditMessageInPeer || (\n        message.peer_id._ !== 'peerChannel' &&\n        message.date < (tsNow(true) - (await this.apiManager.getConfig()).edit_time_limit) &&\n        (message as Message.message).media?._ !== 'messageMediaPoll'\n      )\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public canDeleteMessage(message: MyMessage) {\n    return message && (\n      message.peerId.isUser() ||\n      message.pFlags.out ||\n      this.appChatsManager.getChat(message.peerId.toChatId())._ === 'chat' ||\n      this.appChatsManager.hasRights(message.peerId.toChatId(), 'delete_messages')\n    ) && (!message.pFlags.is_outgoing || !!message.error);\n  }\n\n  public getReplyKeyboard(peerId: PeerId) {\n    return this.getHistoryStorage(peerId).replyMarkup;\n  }\n\n  public mergeReplyKeyboard(historyStorage: HistoryStorage, message: Message.messageService | Message.message) {\n    // this.log('merge', message.mid, message.reply_markup, historyStorage.reply_markup)\n    if(!message) {\n      return false;\n    }\n\n    const messageReplyMarkup = (message as Message.message).reply_markup;\n    if(!messageReplyMarkup &&\n      !message.pFlags?.out &&\n      !(message as Message.messageService).action) {\n      return false;\n    }\n\n    if(messageReplyMarkup?._ === 'replyInlineMarkup') {\n      return false;\n    }\n\n    const lastReplyMarkup = historyStorage.replyMarkup;\n    if(messageReplyMarkup) {\n      if(lastReplyMarkup && lastReplyMarkup.mid >= message.mid) {\n        return false;\n      }\n\n      if(messageReplyMarkup.pFlags.selective) {\n        return false;\n      }\n\n      if(historyStorage.maxOutId &&\n        message.mid < historyStorage.maxOutId &&\n        (messageReplyMarkup as ReplyMarkup.replyKeyboardMarkup | ReplyMarkup.replyKeyboardForceReply).pFlags.single_use) {\n        (messageReplyMarkup as ReplyMarkup.replyKeyboardMarkup | ReplyMarkup.replyKeyboardForceReply).pFlags.hidden = true;\n      }\n\n      messageReplyMarkup.mid = message.mid;\n      /* messageReplyMarkup = Object.assign({\n        mid: message.mid\n      }, messageReplyMarkup); */\n\n      if(messageReplyMarkup._ !== 'replyKeyboardHide') {\n        messageReplyMarkup.fromId = this.appPeersManager.getPeerId(message.from_id || message.peer_id);\n      }\n\n      historyStorage.replyMarkup = messageReplyMarkup;\n      // this.log('set', historyStorage.reply_markup)\n      return true;\n    }\n\n    if(message.pFlags.out) {\n      if(lastReplyMarkup) {\n        assumeType<ReplyMarkup.replyKeyboardMarkup>(lastReplyMarkup);\n        if(lastReplyMarkup.pFlags.single_use &&\n          !lastReplyMarkup.pFlags.hidden &&\n          (message.mid > lastReplyMarkup.mid || message.pFlags.is_outgoing) &&\n          (message as Message.message).message) {\n          lastReplyMarkup.pFlags.hidden = true;\n          // this.log('set', historyStorage.reply_markup)\n          return true;\n        }\n      } else if(!historyStorage.maxOutId ||\n        message.mid > historyStorage.maxOutId) {\n        historyStorage.maxOutId = message.mid;\n      }\n    }\n\n    assumeType<Message.messageService>(message);\n    if(message.action?._ === 'messageActionChatDeleteUser' &&\n      (lastReplyMarkup ?\n        message.action.user_id === (lastReplyMarkup as ReplyMarkup.replyKeyboardMarkup).fromId :\n        this.appUsersManager.isBot(message.action.user_id)\n      )\n    ) {\n      historyStorage.replyMarkup = {\n        _: 'replyKeyboardHide',\n        mid: message.mid,\n        pFlags: {}\n      };\n      // this.log('set', historyStorage.reply_markup)\n      return true;\n    }\n\n    return false;\n  }\n\n  public getSearchStorage(peerId: PeerId, inputFilter: MyInputMessagesFilter) {\n    return (this.searchesStorage[peerId] ??= {})[inputFilter] ??= this.createHistoryStorage('search');\n  }\n\n  public getSearchCounters(\n    peerId: PeerId,\n    filters: MessagesFilter[],\n    canCache = true,\n    threadId?: number\n  ): Promise<MessagesSearchCounter[]> {\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n    if(this.appPeersManager.isPeerRestricted(peerId)) {\n      return Promise.resolve(filters.map((filter) => {\n        return {\n          _: 'messages.searchCounter',\n          pFlags: {},\n          filter: filter,\n          count: 0\n        };\n      }));\n    }\n\n    const migration = this.getMigration(peerId);\n\n    const method = 'messages.getSearchCounters';\n    const func = (canCache ? this.apiManager.invokeApiCacheable : this.apiManager.invokeApi).bind(this.apiManager);\n    const result = func(method, {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      filters,\n      top_msg_id: threadId ? getServerMessageId(threadId) : undefined\n    });\n\n    if(migration) {\n      const legacyResult = func(method, {\n        peer: this.appPeersManager.getInputPeerById(migration.prev),\n        filters\n      });\n\n      return Promise.all([result, legacyResult]).then(([searchCounters, legacySearchCounters]) => {\n        const out: MessagesSearchCounter[] = searchCounters.map((searchCounter, idx) => {\n          return {\n            ...searchCounter,\n            count: searchCounter.count + legacySearchCounters[idx].count\n          };\n        });\n\n        return out;\n      });\n    }\n\n    return result;\n  }\n\n  public filterMessagesByInputFilterFromStorage(inputFilter: MyInputMessagesFilter, history: number[], storage: MessagesStorage | MessagesStorageKey, limit: number) {\n    const _storage = this.getMessagesStorage(storage);\n    return filterMessagesByInputFilter(inputFilter, history.map((mid) => _storage.get(mid)), limit);\n  }\n\n  public subscribeRepliesThread(peerId: PeerId, mid: number) {\n    const repliesKey = peerId + '_' + mid;\n    for(const threadKey in this.threadsToReplies) {\n      if(this.threadsToReplies[threadKey] === repliesKey) return;\n    }\n\n    this.getDiscussionMessage(peerId, mid);\n  }\n\n  public generateThreadServiceStartMessage(message: Message.message | Message.messageService) {\n    const threadKey = message.peerId + '_' + message.mid;\n    if(this.threadsServiceMessagesIdsStorage[threadKey]) return;\n\n    const channelId = this.appPeersManager.isChannel(message.peerId) ? message.peerId.toChatId() : undefined;\n    const maxMessageId = getServerMessageId(Math.max(...this.getMidsByMessage(message)));\n    const serviceStartMessage: Message.messageService = {\n      _: 'messageService',\n      pFlags: {\n        is_single: true\n      },\n      id: this.appMessagesIdsManager.generateTempMessageId(maxMessageId, channelId),\n      date: message.date,\n      from_id: {_: 'peerUser', user_id: NULL_PEER_ID}/* message.from_id */,\n      peer_id: message.peer_id,\n      action: {\n        _: 'messageActionDiscussionStarted'\n      },\n      reply_to: this.generateReplyHeader(message.peerId, message.id)\n    };\n\n    this.saveMessages([serviceStartMessage], {isOutgoing: true});\n    this.threadsServiceMessagesIdsStorage[threadKey] = serviceStartMessage.mid;\n  }\n\n  public getThreadServiceMessageId(peerId: PeerId, threadId: number) {\n    return this.threadsServiceMessagesIdsStorage[peerId + '_' + threadId];\n  }\n\n  public getDiscussionMessage(peerId: PeerId, mid: number) {\n    return this.apiManager.invokeApiSingle('messages.getDiscussionMessage', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid)\n    }).then((result) => {\n      this.appChatsManager.saveApiChats(result.chats);\n      this.appUsersManager.saveApiUsers(result.users);\n      this.saveMessages(result.messages);\n\n      const message = this.getMessageWithReplies(result.messages[0] as Message.message);\n      const threadKey = message.peerId + '_' + message.mid;\n      const channelId = message.peerId.toChatId();\n\n      this.generateThreadServiceStartMessage(message);\n\n      const historyStorage = this.getHistoryStorage(message.peerId, message.mid);\n      const newMaxId = result.max_id = this.appMessagesIdsManager.generateMessageId(result.max_id, channelId) || 0;\n      result.read_inbox_max_id = historyStorage.readMaxId = this.appMessagesIdsManager.generateMessageId(result.read_inbox_max_id ?? message.mid, channelId);\n      result.read_outbox_max_id = historyStorage.readOutboxMaxId = this.appMessagesIdsManager.generateMessageId(result.read_outbox_max_id, channelId) || 0;\n\n      const first = historyStorage.history.first;\n      if(historyStorage.maxId && historyStorage.maxId < newMaxId && first.isEnd(SliceEnd.Bottom)) {\n        first.unsetEnd(SliceEnd.Bottom);\n      }\n      historyStorage.maxId = newMaxId;\n\n      this.threadsToReplies[threadKey] = peerId + '_' + mid;\n\n      return message;\n    });\n  }\n\n  private handleNewMessage(message: MyMessage) {\n    this.rootScope.dispatchEvent('history_multiappend', message);\n  }\n\n  private handleNewDialogs = () => {\n    let newMaxSeenId = 0;\n    const updateMap: BroadcastEvents['dialogs_multiupdate']= new Map();\n\n    const processDialog = (dialog: MTDialog.dialog | ForumTopic) => {\n      const {peerId} = dialog;\n      this.dialogsStorage.pushDialog({dialog});\n      if(!this.appPeersManager.isChannel(peerId)) {\n        newMaxSeenId = Math.max(newMaxSeenId, dialog.top_message || 0);\n      }\n\n      let cache = updateMap.get(peerId);\n      if(!cache) {\n        updateMap.set(peerId, cache = {});\n      }\n\n      if(dialog._ === 'forumTopic') {\n        (cache.topics ??= new Map()).set(dialog.id, dialog);\n      } else {\n        cache.dialog = dialog;\n      }\n    };\n\n    for(const [peerId, obj] of this.newDialogsToHandle) {\n      const isDialogDefined = 'dialog' in obj;\n      const {dialog, topics} = obj;\n\n      if(isDialogDefined) {\n        if(!dialog) {\n          this.reloadConversation(peerId.toPeerId());\n        } else if(this.dialogsStorage.getDialogOnly(peerId)) { // * can be already dropped\n          processDialog(dialog);\n        }\n      }\n\n      if(topics) {\n        topics?.forEach((topic, id) => {\n          if(!topic) {\n            this.dialogsStorage.getForumTopicById(peerId, id);\n          } else if(this.dialogsStorage.getForumTopic(peerId, id)) { // * can be already dropped\n            processDialog(topic);\n          }\n        });\n      }\n    }\n\n    // this.log('after order:', this.dialogsStorage[0].map((d) => d.peerId));\n\n    if(newMaxSeenId !== 0) {\n      this.incrementMaxSeenId(newMaxSeenId);\n    }\n\n    this.rootScope.dispatchEvent('dialogs_multiupdate', updateMap);\n    this.newDialogsToHandle.clear();\n  };\n\n  public scheduleHandleNewDialogs(peerId?: PeerId, dialog?: Dialog | ForumTopic | ForumTopic['id']) {\n    if(peerId !== undefined) {\n      let obj = this.newDialogsToHandle.get(peerId);\n      if(!obj) {\n        this.newDialogsToHandle.set(peerId, obj = {});\n      }\n\n      const isObject = typeof(dialog) === 'object';\n      if(!dialog || (isObject && dialog._ === 'dialog')) {\n        obj.dialog = dialog as Dialog;\n      } else {\n        obj.topics ??= new Map();\n        if(isObject) {\n          obj.topics.set((dialog as ForumTopic).id, dialog as ForumTopic);\n        } else {\n          obj.topics.set(dialog as number, undefined);\n        }\n      }\n    }\n\n    return this.newDialogsHandlePromise ??= pause(0).then(() => {\n      this.newDialogsHandlePromise = undefined;\n      this.handleNewDialogs();\n    });\n  }\n\n  private async deleteMessagesInner(channelId: ChatId, mids: number[], revoke?: boolean, isRecursion?: boolean) {\n    let promise: Promise<any>;\n\n    if(channelId && !isRecursion) {\n      const channel = this.appChatsManager.getChat(channelId) as Chat.channel;\n      if(!channel.pFlags.creator && !channel.admin_rights?.pFlags?.delete_messages) {\n        mids = mids.filter((mid) => {\n          const message = this.getMessageByPeer(channelId.toPeerId(true), mid);\n          return !!message.pFlags.out;\n        });\n\n        if(!mids.length) {\n          return;\n        }\n      }\n    }\n\n    const config = await this.apiManager.getConfig();\n    const overflowMids = mids.splice(config.forwarded_count_max, mids.length - config.forwarded_count_max);\n\n    const serverMessageIds = mids.map((mid) => {\n      const messageId = getServerMessageId(mid);\n      // filter outgoing messages\n      return this.appMessagesIdsManager.generateMessageId(messageId, channelId) === mid && messageId;\n    }).filter(Boolean);\n\n    if(channelId) {\n      promise = this.apiManager.invokeApi('channels.deleteMessages', {\n        channel: this.appChatsManager.getChannelInput(channelId),\n        id: serverMessageIds\n      }).then((affectedMessages) => {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateDeleteChannelMessages',\n          channel_id: channelId,\n          messages: mids,\n          pts: affectedMessages.pts,\n          pts_count: affectedMessages.pts_count\n        });\n      });\n    } else {\n      promise = this.apiManager.invokeApi('messages.deleteMessages', {\n        revoke,\n        id: serverMessageIds\n      }).then((affectedMessages) => {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateDeleteMessages',\n          messages: mids,\n          pts: affectedMessages.pts,\n          pts_count: affectedMessages.pts_count\n        });\n      });\n    }\n\n    const promises: (typeof promise)[] = [promise];\n    if(overflowMids.length) {\n      promises.push(this.deleteMessagesInner(channelId, overflowMids, revoke, true));\n    }\n\n    return Promise.all(promises).then(noop);\n  }\n\n  public deleteMessages(peerId: PeerId, mids: number[], revoke?: boolean) {\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\n    const splitted = this.appMessagesIdsManager.splitMessageIdsByChannels(mids, channelId);\n    const promises = splitted.map(([channelId, {mids}]) => {\n      return this.deleteMessagesInner(channelId, mids, revoke);\n    });\n\n    return Promise.all(promises);\n  }\n\n  public readHistory(peerId: PeerId, maxId = 0, threadId?: number, force = false) {\n    if(DO_NOT_READ_HISTORY) {\n      return Promise.resolve();\n    }\n\n    // console.trace('start read')\n    this.log('readHistory:', peerId, maxId, threadId);\n    const readMaxId = this.getReadMaxIdIfUnread(peerId, threadId);\n    if(!readMaxId) {\n      if(threadId && !force) {\n        const forumTopic = this.dialogsStorage.getForumTopic(peerId, threadId);\n        if(!getServerMessageId(forumTopic.read_inbox_max_id)) {\n          force = true;\n        }\n      }\n\n      if(!force) {\n        const dialog = this.appChatsManager.isForum(peerId.toChatId()) && threadId ?\n          this.dialogsStorage.getForumTopic(peerId, threadId) :\n          this.getDialogOnly(peerId);\n        if(dialog && this.isDialogUnread(dialog)) {\n          force = true;\n        }\n      }\n\n      if(!force) {\n        this.log('readHistory: isn\\'t unread');\n        return Promise.resolve();\n      }\n    }\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    if(historyStorage.triedToReadMaxId >= maxId) {\n      return Promise.resolve();\n    }\n\n    let apiPromise: Promise<any>;\n    if(threadId) {\n      if(!historyStorage.readPromise) {\n        apiPromise = this.apiManager.invokeApi('messages.readDiscussion', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          msg_id: getServerMessageId(threadId),\n          read_max_id: getServerMessageId(maxId)\n        });\n        // apiPromise = new Promise<void>((resolve) => resolve());\n      }\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadChannelDiscussionInbox',\n        channel_id: peerId.toChatId(),\n        top_msg_id: threadId,\n        read_max_id: maxId\n      });\n    } else if(this.appPeersManager.isChannel(peerId)) {\n      if(!historyStorage.readPromise) {\n        apiPromise = this.apiManager.invokeApi('channels.readHistory', {\n          channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\n          max_id: getServerMessageId(maxId)\n        });\n      }\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadChannelInbox',\n        max_id: maxId,\n        channel_id: peerId.toChatId(),\n        still_unread_count: undefined,\n        pts: undefined\n      });\n    } else {\n      if(!historyStorage.readPromise) {\n        apiPromise = this.apiManager.invokeApi('messages.readHistory', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          max_id: getServerMessageId(maxId)\n        }).then((affectedMessages) => {\n          this.apiUpdatesManager.processUpdateMessage({\n            _: 'updateShort',\n            update: {\n              _: 'updatePts',\n              pts: affectedMessages.pts,\n              pts_count: affectedMessages.pts_count\n            }\n          });\n        });\n      }\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadHistoryInbox',\n        max_id: maxId,\n        peer: this.appPeersManager.getOutputPeer(peerId),\n        still_unread_count: undefined,\n        pts: undefined,\n        pts_count: undefined\n      });\n    }\n\n    this.rootScope.dispatchEvent('notification_reset', this.appPeersManager.getPeerString(peerId));\n\n    if(historyStorage.readPromise) {\n      return historyStorage.readPromise;\n    }\n\n    historyStorage.triedToReadMaxId = maxId;\n\n    apiPromise.finally(() => {\n      delete historyStorage.readPromise;\n\n      const {readMaxId} = historyStorage;\n      this.log('readHistory: promise finally', maxId, readMaxId);\n\n      if(readMaxId > maxId) {\n        this.readHistory(peerId, readMaxId, threadId, true);\n      }\n    });\n\n    return historyStorage.readPromise = apiPromise;\n  }\n\n  public readAllHistory(peerId: PeerId, threadId?: number, force = false) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    if(historyStorage.maxId) {\n      this.readHistory(peerId, historyStorage.maxId, threadId, force); // lol\n    }\n  }\n\n  private getUnreadMentionsKey(peerId: PeerId, threadId?: number) {\n    return peerId + (threadId ? `_${threadId}` : '');\n  }\n\n  private fixDialogUnreadMentionsIfNoMessage(peerId: PeerId, threadId?: number) {\n    const dialog = this.dialogsStorage.getDialogOrTopic(peerId, threadId);\n    if(dialog?.unread_mentions_count) {\n      this.reloadConversationOrTopic(peerId);\n    }\n  }\n\n  private modifyCachedMentions(peerId: PeerId, mid: number, add: boolean, threadId?: number) {\n    const slicedArray = this.unreadMentions[this.getUnreadMentionsKey(peerId, threadId)];\n    if(!slicedArray) return;\n\n    if(add) {\n      if(slicedArray.first.isEnd(SliceEnd.Top)) {\n        slicedArray.insertSlice([mid]);\n      }\n    } else {\n      slicedArray.delete(mid);\n    }\n  }\n\n  private fixUnreadMentionsCountIfNeeded(peerId: PeerId, slicedArray: SlicedArray<number>, threadId?: number) {\n    const dialog = this.dialogsStorage.getDialogOrTopic(peerId, threadId);\n    if(!slicedArray.length && dialog?.unread_mentions_count) {\n      this.reloadConversationOrTopic(peerId);\n    }\n  }\n\n  public goToNextMention(peerId: PeerId, threadId?: number) {\n    /* this.getUnreadMentions(peerId, 1, 2, 0).then((messages) => {\n      console.log(messages);\n    }); */\n\n    const key = this.getUnreadMentionsKey(peerId, threadId);\n    const promise = this.goToNextMentionPromises[key];\n    if(promise) {\n      return promise;\n    }\n\n    const slicedArray = this.unreadMentions[peerId] ??= new SlicedArray();\n    const length = slicedArray.length;\n    const isTopEnd = slicedArray.first.isEnd(SliceEnd.Top);\n    if(!length && isTopEnd) {\n      this.fixUnreadMentionsCountIfNeeded(peerId, slicedArray, threadId);\n      return Promise.resolve();\n    }\n\n    let loadNextPromise = Promise.resolve();\n    if(!isTopEnd && length < 25) {\n      loadNextPromise = this.loadNextMentions(peerId, threadId);\n    }\n\n    return this.goToNextMentionPromises[key] = loadNextPromise.then(() => {\n      const last = slicedArray.last;\n      const mid = last && last[last.length - 1];\n      if(mid) {\n        slicedArray.delete(mid);\n        return mid;\n      } else {\n        this.fixUnreadMentionsCountIfNeeded(peerId, slicedArray, threadId);\n      }\n    }).finally(() => {\n      delete this.goToNextMentionPromises[key];\n    });\n  }\n\n  private loadNextMentions(peerId: PeerId, threadId?: number) {\n    const slicedArray = this.unreadMentions[peerId];\n    const maxId = slicedArray.first[0] || 1;\n\n    const backLimit = 50;\n    const addOffset = -backLimit;\n    const limit = backLimit;\n    return this.getUnreadMentions(peerId, maxId, addOffset, limit, undefined, undefined, threadId)\n    .then((messages) => {\n      this.mergeHistoryResult({\n        slicedArray,\n        historyResult: messages,\n        offsetId: maxId === 1 ? 0 : maxId,\n        limit,\n        addOffset,\n        peerId\n      });\n    });\n  }\n\n  private getUnreadMentions(\n    peerId: PeerId,\n    offsetId: number,\n    add_offset: number,\n    limit: number,\n    maxId = 0,\n    minId = 0,\n    threadId?: number\n  ) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getUnreadMentions',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        offset_id: getServerMessageId(offsetId),\n        add_offset,\n        limit,\n        max_id: getServerMessageId(maxId),\n        min_id: getServerMessageId(minId),\n        top_msg_id: threadId ? getServerMessageId(threadId) : undefined\n      },\n      processResult: (messagesMessages) => {\n        assumeType<Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>>(messagesMessages);\n        this.appUsersManager.saveApiUsers(messagesMessages.users);\n        this.appChatsManager.saveApiChats(messagesMessages.chats);\n        this.saveMessages(messagesMessages.messages);\n\n        return messagesMessages;\n      }\n    });\n  }\n\n  public readMessages(peerId: PeerId, msgIds: number[]) {\n    if(DO_NOT_READ_HISTORY) {\n      return Promise.resolve();\n    }\n\n    if(!msgIds.length) {\n      return Promise.resolve();\n    }\n\n    msgIds = msgIds.map((mid) => getServerMessageId(mid));\n    let promise: Promise<any>, update: Update.updateChannelReadMessagesContents | Update.updateReadMessagesContents;\n    if(peerId.isAnyChat() && this.appPeersManager.isChannel(peerId)) {\n      const channelId = peerId.toChatId();\n\n      update = {\n        _: 'updateChannelReadMessagesContents',\n        channel_id: channelId,\n        messages: msgIds\n      };\n\n      promise = this.apiManager.invokeApi('channels.readMessageContents', {\n        channel: this.appChatsManager.getChannelInput(channelId),\n        id: msgIds\n      });\n    } else {\n      update = {\n        _: 'updateReadMessagesContents',\n        messages: msgIds,\n        pts: undefined,\n        pts_count: undefined\n      };\n\n      promise = this.apiManager.invokeApi('messages.readMessageContents', {\n        id: msgIds\n      }).then((affectedMessages) => {\n        (update as Update.updateReadMessagesContents).pts = affectedMessages.pts;\n        (update as Update.updateReadMessagesContents).pts_count = affectedMessages.pts_count;\n        this.apiUpdatesManager.processLocalUpdate(update);\n      });\n    }\n\n    this.apiUpdatesManager.processLocalUpdate(update);\n\n    return promise;\n  }\n\n  public createHistoryStorage(type: HistoryStorage['type']): HistoryStorage {\n    return {count: null, history: new SlicedArray(), type};\n  }\n\n  public getHistoryStorage(peerId: PeerId, threadId?: number) {\n    if(threadId) {\n      // threadId = this.getLocalMessageId(threadId);\n      return (this.threadsStorage[peerId] ??= {})[threadId] ??= this.createHistoryStorage('replies');\n    }\n\n    return this.historiesStorage[peerId] ??= this.createHistoryStorage('history');\n  }\n\n  public getHistoryStorageTransferable(peerId: PeerId, threadId?: number) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    const {\n      count,\n      history,\n      maxId,\n      readMaxId,\n      readOutboxMaxId,\n      maxOutId,\n      replyMarkup\n    } = historyStorage;\n\n    return {\n      count,\n      history: undefined as HistoryStorage,\n      historySerialized: history.toJSON(),\n      maxId,\n      readMaxId,\n      readOutboxMaxId,\n      maxOutId,\n      replyMarkup\n    };\n  }\n\n  private getNotifyPeerSettings(peerId: PeerId, threadId?: number) {\n    const inputNotifyPeer = this.appPeersManager.getInputNotifyPeerById({peerId, ignorePeerId: true, threadId});\n    return Promise.all([\n      this.appNotificationsManager.getNotifyPeerTypeSettings(),\n      this.appNotificationsManager.getNotifySettings(inputNotifyPeer)\n    ]).then(([_, peerTypeNotifySettings]) => {\n      return {\n        muted: this.appNotificationsManager.isPeerLocalMuted({peerId, respectType: true, threadId}),\n        peerTypeNotifySettings\n      };\n    });\n  }\n\n  private handleNotifications = () => {\n    ctx.clearTimeout(this.notificationsHandlePromise);\n    this.notificationsHandlePromise = undefined;\n\n    // var timeout = $rootScope.idle.isIDLE && StatusManager.isOtherDeviceActive() ? 30000 : 1000;\n    // const timeout = 1000;\n\n    for(const key in this.notificationsToHandle) {\n      const [peerId, threadId] = key.split('_');\n      // if(rootScope.peerId === peerId && !rootScope.idle.isIDLE) {\n      // continue;\n      // }\n\n      const notifyPeerToHandle = this.notificationsToHandle[key];\n      this.getNotifyPeerSettings(peerId.toPeerId(), threadId ? +threadId : undefined)\n      .then(({muted, peerTypeNotifySettings}) => {\n        const topMessage = notifyPeerToHandle.topMessage;\n        if((muted && !topMessage.pFlags.mentioned) || !topMessage.pFlags.unread) {\n          return;\n        }\n\n        // setTimeout(() => {\n        if(topMessage.pFlags.unread) {\n          this.notifyAboutMessage(topMessage, {\n            fwdCount: notifyPeerToHandle.fwdCount,\n            peerTypeNotifySettings\n          });\n        }\n        // }, timeout);\n      });\n    }\n\n    this.notificationsToHandle = {};\n  };\n\n  public getUpdateAfterReloadKey(peerId: PeerId, threadId?: number) {\n    return peerId + (threadId ? '_' + threadId : '');\n  }\n\n  private handleNewUpdateAfterReload(peerId: PeerId, update: Update, threadId?: number) {\n    const set = this.newUpdatesAfterReloadToHandle[this.getUpdateAfterReloadKey(peerId, threadId)] ??= new Set();\n    if(set.has(update)) {\n      this.log.error('here we go again', peerId);\n      return;\n    }\n\n    (update as any).ignoreExisting = true;\n    set.add(update);\n    this.scheduleHandleNewDialogs(peerId, threadId);\n  }\n\n  private onUpdateMessageId = (update: Update.updateMessageID) => {\n    const randomId = update.random_id;\n    const pendingData = this.pendingByRandomId[randomId];\n    if(!pendingData) {\n      return;\n    }\n\n    const {peerId} = pendingData;\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\n    const mid = this.appMessagesIdsManager.generateMessageId(update.id, channelId);\n    this.pendingByMessageId[mid] = randomId;\n    // const {storage} = pendingData;\n    // const message = this.getMessageFromStorage(storage, mid);\n    // if(message) { // if message somehow already exists\n    //   this.checkPendingMessage(message);\n    // }\n  };\n\n  private onUpdateNewMessage = (update: Update.updateNewDiscussionMessage | Update.updateNewMessage | Update.updateNewChannelMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n    const storage = this.getHistoryMessagesStorage(peerId);\n\n    // * local update\n    const isLocalThreadUpdate = update._ === 'updateNewDiscussionMessage';\n\n    // * temporary save the message for info (peerId, reply mids...)\n    this.saveMessages([message], {storage: this.createMessageStorage(peerId, 'history')});\n\n    // * check if sent message is already in storage\n    // const oldMessage = this.getMessageFromStorage(storage, message.mid);\n    // if(\n    //   (message as Message.message).pFlags.is_outgoing &&\n    //   oldMessage &&\n    //   !(oldMessage as Message.message).pFlags.is_outgoing\n    // ) {\n    //   this.checkPendingMessage(message);\n    //   return;\n    // }\n\n    const isForum = this.appPeersManager.isForum(peerId);\n    const threadKey = this.getThreadKey(message);\n    const threadId = threadKey ? +threadKey.split('_')[1] : undefined;\n    const dialog = this.dialogsStorage.getDialogOrTopic(peerId, isLocalThreadUpdate ? threadId : undefined);\n\n    if((!dialog || this.reloadConversationsPeers.has(peerId)) && !isLocalThreadUpdate) {\n      let good = true;\n      if(peerId.isAnyChat()) {\n        good = this.appChatsManager.isInChat(peerId.toChatId());\n      }\n\n      if(good) {\n        this.handleNewUpdateAfterReload(peerId, update);\n        return;\n      }\n\n      // return;\n    }\n\n    if(threadId && !isLocalThreadUpdate) {\n      const threadStorage = this.threadsStorage[peerId]?.[threadId];\n      const update = {\n        _: 'updateNewDiscussionMessage',\n        message\n      } as Update.updateNewDiscussionMessage;\n\n      if(this.appChatsManager.isForum(peerId.toChatId()) && !this.dialogsStorage.getForumTopic(peerId, threadId)) {\n        // this.dialogsStorage.getForumTopicById(peerId, threadId);\n        this.handleNewUpdateAfterReload(peerId, update, threadId);\n      } else if(threadStorage) {\n        this.onUpdateNewMessage(update);\n      }\n    }\n\n    if(message._ === 'messageService') {\n      const {action} = message;\n      if(action._ === 'messageActionPaymentSent' && message.reply_to) {\n        this.rootScope.dispatchEvent('payment_sent', {\n          peerId: message.reply_to.reply_to_peer_id ?\n            this.appPeersManager.getPeerId(message.reply_to.reply_to_peer_id) :\n            message.peerId,\n          mid: message.reply_to_mid,\n          receiptMessage: message\n        });\n      }\n\n      if(action._ === 'messageActionTopicEdit' && !isLocalThreadUpdate) {\n        const topic = this.dialogsStorage.getForumTopic(peerId, threadId);\n        if(!topic) {\n          this.dialogsStorage.getForumTopicById(peerId, threadId);\n        } else {\n          const oldTopic = copy(topic);\n\n          if(action.title !== undefined) {\n            topic.title = action.title;\n          }\n\n          if(action.closed !== undefined) {\n            setBooleanFlag(topic.pFlags, 'closed', action.closed);\n          }\n\n          if(action.hidden !== undefined) {\n            setBooleanFlag(topic.pFlags, 'hidden', action.hidden);\n          }\n\n          if(action.icon_emoji_id !== undefined) {\n            topic.icon_emoji_id = action.icon_emoji_id;\n          }\n\n          this.scheduleHandleNewDialogs(peerId, topic);\n\n          this.dialogsStorage.processTopicUpdate(topic, oldTopic);\n        }\n      }\n    }\n\n    /* if(update._ === 'updateNewChannelMessage') {\n      const chat = appChatsManager.getChat(peerId.toChatId());\n      if(chat.pFlags && (chat.pFlags.left || chat.pFlags.kicked)) {\n        return;\n      }\n    } */\n\n    this.saveMessages([message], {storage});\n    // this.log.warn(dT(), 'message unread', message.mid, message.pFlags.unread)\n\n    /* if((message as Message.message).grouped_id) {\n      this.log('updateNewMessage', message);\n    } */\n\n    this.checkPendingMessage(message);\n    const historyStorage = this.getHistoryStorage(peerId, isLocalThreadUpdate ? threadId : undefined);\n\n    if(!isLocalThreadUpdate) {\n      this.updateMessageRepliesIfNeeded(message);\n    }\n\n    // * so message can exist if reloadConversation came back earlier with mid\n    const ignoreExisting: boolean = (update as any).ignoreExisting;\n    const isExisting = !!historyStorage.history.findSlice(message.mid);\n    if(isExisting) {\n      if(!ignoreExisting) {\n        return false;\n      }\n    } else {\n      // * catch situation with disconnect. if message's id is lower than we already have (in bottom end slice), will sort it\n      const firstSlice = historyStorage.history.first;\n      if(firstSlice.isEnd(SliceEnd.Bottom)) {\n        let i = 0;\n        for(const length = firstSlice.length; i < length; ++i) {\n          if(message.mid > firstSlice[i]) {\n            break;\n          }\n        }\n\n        firstSlice.splice(i, 0, message.mid);\n      } else {\n        historyStorage.history.unshift(message.mid);\n      }\n\n      if(historyStorage.count !== null) {\n        ++historyStorage.count;\n      }\n    }\n\n    if(!historyStorage.maxId || message.mid > historyStorage.maxId) {\n      historyStorage.maxId = message.mid;\n    }\n\n    if(this.mergeReplyKeyboard(historyStorage, message)) {\n      this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n    }\n\n    const fromId = message.fromId;\n    if(fromId.isUser() && !message.pFlags.out && message.from_id) {\n      this.appUsersManager.forceUserOnline(fromId, message.date);\n\n      const action: SendMessageAction = {\n        _: 'sendMessageCancelAction'\n      };\n\n      let update: Update.updateUserTyping | Update.updateChatUserTyping | Update.updateChannelUserTyping;\n      if(peerId.isUser()) {\n        update = {\n          _: 'updateUserTyping',\n          action,\n          user_id: fromId\n        };\n      } else if(this.appPeersManager.isChannel(peerId)) {\n        update = {\n          _: 'updateChannelUserTyping',\n          action,\n          channel_id: peerId.toChatId(),\n          from_id: this.appPeersManager.getOutputPeer(fromId),\n          top_msg_id: threadId ? getServerMessageId(threadId) : undefined\n        };\n      } else {\n        update = {\n          _: 'updateChatUserTyping',\n          action,\n          chat_id: peerId.toChatId(),\n          from_id: this.appPeersManager.getOutputPeer(fromId)\n        };\n      }\n\n      this.apiUpdatesManager.processLocalUpdate(update);\n    }\n\n    // commented to render the message if it's been sent faster than history_append came to main thread\n    // if(!pendingMessage) {\n    this.handleNewMessage(message);\n    // }\n\n    const isTopic = dialog?._ === 'forumTopic';\n    if((isLocalThreadUpdate && !isTopic) || !dialog) {\n      return;\n    }\n\n    const inboxUnread = !message.pFlags.out && message.pFlags.unread;\n\n    {\n      if(inboxUnread && message.mid > dialog.top_message) {\n        const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\n\n        ++dialog.unread_count;\n        if(message.pFlags.mentioned) {\n          ++dialog.unread_mentions_count;\n          this.modifyCachedMentions(peerId, message.mid, true, isTopic ? threadId : undefined);\n        }\n\n        releaseUnreadCount();\n      }\n\n      if(message.mid >= dialog.top_message) {\n        this.setDialogTopMessage(message, dialog);\n      }\n    }\n\n    if(((!isLocalThreadUpdate && !isForum) || isTopic) && inboxUnread) {\n      const notifyPeer = threadKey || peerId;\n      const notifyPeerToHandle = this.notificationsToHandle[notifyPeer] ??= {\n        fwdCount: 0,\n        fromId: NULL_PEER_ID\n      };\n\n      if(notifyPeerToHandle.fromId !== fromId) {\n        notifyPeerToHandle.fromId = fromId;\n        notifyPeerToHandle.fwdCount = 0;\n      }\n\n      if((message as Message.message).fwd_from) {\n        ++notifyPeerToHandle.fwdCount;\n      }\n\n      notifyPeerToHandle.topMessage = message;\n\n      this.notificationsHandlePromise ??= ctx.setTimeout(this.handleNotifications, 0);\n    }\n  };\n\n  private onUpdateMessageReactions = (update: Update.updateMessageReactions) => {\n    const {peer, msg_id, reactions} = update;\n    const channelId = (peer as Peer.peerChannel).channel_id;\n    const mid = this.appMessagesIdsManager.generateMessageId(msg_id, channelId);\n    const peerId = this.appPeersManager.getPeerId(peer);\n    const message: MyMessage = this.getMessageByPeer(peerId, mid);\n\n    if(message?._ !== 'message') {\n      return;\n    }\n\n    const recentReactions = reactions?.recent_reactions;\n    if(recentReactions?.length && message.pFlags.out) {\n      const recentReaction = recentReactions[recentReactions.length - 1];\n      const previousReactions = message.reactions;\n      const previousRecentReactions = previousReactions?.recent_reactions;\n      if(\n        this.appPeersManager.getPeerId(recentReaction.peer_id) !== this.appPeersManager.peerId && (\n          !previousRecentReactions ||\n          previousRecentReactions.length <= recentReactions.length\n        ) && (\n          !previousRecentReactions ||\n          !deepEqual(recentReaction, previousRecentReactions[previousRecentReactions.length - 1])\n        )\n      ) {\n        this.getNotifyPeerSettings(peerId).then(({muted, peerTypeNotifySettings}) => {\n          if(/* muted ||  */!peerTypeNotifySettings.show_previews) return;\n          this.notifyAboutMessage(message, {\n            peerReaction: recentReaction,\n            peerTypeNotifySettings\n          });\n        });\n      }\n    }\n\n    const key = message.peerId + '_' + message.mid;\n    this.pushBatchUpdate('messages_reactions', this.batchUpdateReactions, key, () => copy(message.reactions));\n\n    message.reactions = reactions;\n\n    if(!update.local) {\n      this.setDialogToStateIfMessageIsTop(message);\n    }\n  };\n\n  private onUpdateDialogUnreadMark = (update: Update.updateDialogUnreadMark) => {\n    // this.log('updateDialogUnreadMark', update);\n    const peerId = this.appPeersManager.getPeerId((update.peer as DialogPeer.dialogPeer).peer);\n    const dialog = this.getDialogOnly(peerId);\n\n    if(!dialog) {\n      this.scheduleHandleNewDialogs(peerId);\n    } else {\n      const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\n\n      if(!update.pFlags.unread) {\n        delete dialog.pFlags.unread_mark;\n      } else {\n        dialog.pFlags.unread_mark = true;\n      }\n\n      releaseUnreadCount();\n      this.dialogsStorage.setDialogToState(dialog);\n      this.rootScope.dispatchEvent('dialogs_multiupdate', new Map([[peerId, {dialog}]]));\n    }\n  };\n\n  private onUpdateEditMessage = (update: Update.updateEditMessage | Update.updateEditChannelMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\n    const mid = this.appMessagesIdsManager.generateMessageId(message.id, channelId);\n    const storage = this.getHistoryMessagesStorage(peerId);\n    if(!storage.has(mid)) {\n      // this.fixDialogUnreadMentionsIfNoMessage(peerId);\n      return;\n    }\n\n    // console.trace(dT(), 'edit message', message)\n\n    const oldMessage: Message = this.getMessageFromStorage(storage, mid);\n    this.saveMessages([message], {storage});\n    const newMessage: Message = this.getMessageFromStorage(storage, mid);\n\n    this.handleEditedMessage(oldMessage, newMessage, storage);\n\n    const dialog = this.getDialogOnly(peerId);\n\n    // if sender erased mention\n    /* if(dialog.unread_mentions_count && (oldMessage as Message.message)?.pFlags?.mentioned && !message.pFlags.mentioned) {\n      --dialog.unread_mentions_count;\n      this.modifyCachedMentions(peerId, mid, false);\n    } */\n\n    const isTopMessage = dialog?.top_message === mid;\n    if((message as Message.messageService).clear_history) {\n      if(isTopMessage) {\n        this.rootScope.dispatchEvent('dialog_flush', {peerId, dialog});\n      }\n    } else {\n      let dispatchEditEvent = true;\n      // no sense in dispatching message_edit since only reactions have changed\n      if(oldMessage?._ === 'message' && !deepEqual(oldMessage.reactions, (newMessage as Message.message).reactions)) {\n        const newReactions = (newMessage as Message.message).reactions;\n        (newMessage as Message.message).reactions = oldMessage.reactions;\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateMessageReactions',\n          peer: this.appPeersManager.getOutputPeer(peerId),\n          msg_id: message.id,\n          reactions: newReactions\n        });\n\n        dispatchEditEvent = false;\n      }\n\n      dispatchEditEvent && this.rootScope.dispatchEvent('message_edit', {\n        storageKey: storage.key,\n        peerId,\n        mid,\n        message\n      });\n\n      if(isTopMessage) {\n        this.dialogsStorage.setDialogToState(dialog);\n      }\n\n      const map: BroadcastEvents['dialogs_multiupdate'] = new Map();\n      const getUpdateCache = () => {\n        let cache = map.get(peerId);\n        if(!cache) {\n          map.set(peerId, cache = {});\n        }\n\n        return cache;\n      };\n\n      if((isTopMessage || (message as Message.message).grouped_id) && dialog) {\n        getUpdateCache().dialog = dialog;\n      }\n\n      const threadKey = this.getThreadKey(message);\n      if(threadKey) {\n        const topicId = +threadKey.split('_')[1];\n        const topic = this.dialogsStorage.getForumTopic(peerId, topicId);\n        if(topic) {\n          (getUpdateCache().topics ??= new Map()).set(topicId, topic);\n        }\n      }\n\n      if(map.size) {\n        this.rootScope.dispatchEvent('dialogs_multiupdate', map);\n      }\n    }\n  };\n\n  private onUpdateReadHistory = (update: Update.updateReadChannelDiscussionInbox | Update.updateReadChannelDiscussionOutbox\n    | Update.updateReadHistoryInbox | Update.updateReadHistoryOutbox\n    | Update.updateReadChannelInbox | Update.updateReadChannelOutbox) => {\n    const channelId = (update as Update.updateReadChannelInbox).channel_id;\n    const maxId = this.appMessagesIdsManager.generateMessageId((update as Update.updateReadChannelInbox).max_id || (update as Update.updateReadChannelDiscussionInbox).read_max_id, channelId);\n    const threadId = this.appMessagesIdsManager.generateMessageId((update as Update.updateReadChannelDiscussionInbox).top_msg_id, channelId);\n    const peerId = channelId ? channelId.toPeerId(true) : this.appPeersManager.getPeerId((update as Update.updateReadHistoryInbox).peer);\n\n    const isOut = update._ === 'updateReadHistoryOutbox' ||\n      update._ === 'updateReadChannelOutbox' ||\n      update._ === 'updateReadChannelDiscussionOutbox' ? true : undefined;\n\n    const isForum = channelId ? this.appChatsManager.isForum(channelId) : false;\n    const storage = this.getHistoryMessagesStorage(peerId);\n    const history = getObjectKeysAndSort(storage, 'desc');\n    const foundDialog = threadId && isForum ?\n      this.dialogsStorage.getForumTopic(peerId, threadId) :\n      this.getDialogOnly(peerId);\n    const stillUnreadCount = (update as Update.updateReadChannelInbox).still_unread_count;\n    let newUnreadCount = 0;\n    let newUnreadMentionsCount = 0;\n    let foundAffected = false;\n\n    // this.log.warn(dT(), 'read', peerId, isOut ? 'out' : 'in', maxId)\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    if(peerId.isUser() && isOut) {\n      this.appUsersManager.forceUserOnline(peerId.toUserId());\n    }\n\n    if(threadId) {\n      const repliesKey = this.threadsToReplies[peerId + '_' + threadId];\n      if(repliesKey) {\n        const [peerId, mid] = repliesKey.split('_');\n        this.updateMessage(peerId.toPeerId(), +mid, 'replies_updated');\n      }\n    }\n\n    const releaseUnreadCount = foundDialog && this.dialogsStorage.prepareDialogUnreadCountModifying(foundDialog);\n    const readMaxId = this.getReadMaxIdIfUnread(peerId, threadId);\n\n    for(let i = 0, length = history.length; i < length; i++) {\n      const mid = history[i];\n      if(mid > maxId) {\n        continue;\n      }\n\n      const message: MyMessage = storage.get(mid);\n\n      if(message.pFlags.out !== isOut) {\n        continue;\n      }\n\n      const messageThreadId = getMessageThreadId(message, isForum);\n      if(threadId && messageThreadId !== threadId) {\n        continue;\n      }\n\n      const isUnread = message.pFlags.unread || (readMaxId && readMaxId < mid);\n\n      if(!isUnread) {\n        break;\n      }\n\n      // this.log.warn('read', messageId, isUnread, message)\n      delete message.pFlags.unread;\n      foundAffected ||= true;\n\n      if(!message.pFlags.out && foundDialog) {\n        if(stillUnreadCount === undefined) {\n          newUnreadCount = --foundDialog.unread_count;\n        }\n\n        if(message.pFlags.mentioned) {\n          newUnreadMentionsCount = --foundDialog.unread_mentions_count;\n          this.modifyCachedMentions(peerId, message.mid, false);\n        }\n      }\n\n      this.rootScope.dispatchEvent('notification_cancel', 'msg' + mid);\n    }\n\n    if(isOut) historyStorage.readOutboxMaxId = maxId;\n    else historyStorage.readMaxId = maxId;\n\n    if(foundDialog) {\n      if(isOut) foundDialog.read_outbox_max_id = maxId;\n      else foundDialog.read_inbox_max_id = maxId;\n\n      if(!isOut) {\n        let setCount: number;\n        if(stillUnreadCount !== undefined) {\n          setCount = stillUnreadCount;\n        } else if(\n          newUnreadCount < 0 ||\n          maxId >= foundDialog.top_message ||\n          !readMaxId\n        ) {\n          setCount = 0;\n        } else if(newUnreadCount && foundDialog.top_message > maxId) {\n          setCount = newUnreadCount;\n        }\n\n        if(setCount !== undefined) {\n          foundDialog.unread_count = setCount;\n        }\n\n        if(newUnreadMentionsCount < 0 || !foundDialog.unread_count) {\n          foundDialog.unread_mentions_count = 0;\n        }\n      }\n\n      releaseUnreadCount?.();\n\n      this.dialogsStorage.processDialogForFilters(foundDialog);\n\n      this.rootScope.dispatchEvent('dialog_unread', {peerId, dialog: foundDialog});\n      this.dialogsStorage.setDialogToState(foundDialog);\n\n      if(!foundAffected && stillUnreadCount === undefined && !isOut && foundDialog.unread_count) {\n        if(foundDialog._ === 'forumTopic') {\n          this.dialogsStorage.getForumTopicById(peerId, threadId);\n        } else  {\n          this.reloadConversation(peerId);\n        }\n      }\n    }\n\n    if(foundAffected) {\n      this.rootScope.dispatchEvent('messages_read');\n    }\n\n    if(!threadId && channelId) {\n      const threadKeyPart = peerId + '_';\n      for(const threadKey in this.threadsToReplies) {\n        if(threadKey.indexOf(threadKeyPart) === 0) {\n          const [peerId, mid] = this.threadsToReplies[threadKey].split('_');\n          this.rootScope.dispatchEvent('replies_updated', this.getMessageByPeer(peerId.toPeerId(), +mid) as Message.message);\n        }\n      }\n    }\n  };\n\n  private onUpdateReadMessagesContents = (update: Update.updateChannelReadMessagesContents | Update.updateReadMessagesContents) => {\n    const channelId = (update as Update.updateChannelReadMessagesContents).channel_id;\n    const topMsgId = (update as Update.updateChannelReadMessagesContents).top_msg_id;\n    const threadId = topMsgId ? this.appMessagesIdsManager.generateMessageId(topMsgId, channelId) : undefined;\n    const mids = (update as Update.updateReadMessagesContents).messages.map((id) => this.appMessagesIdsManager.generateMessageId(id, channelId));\n    const peerId = channelId ? channelId.toPeerId(true) : this.findPeerIdByMids(mids);\n    for(let i = 0, length = mids.length; i < length; ++i) {\n      const mid = mids[i];\n      const message: MyMessage = this.getMessageByPeer(peerId, mid);\n      if(message) {\n        if(message.pFlags.media_unread) {\n          delete message.pFlags.media_unread;\n          this.setDialogToStateIfMessageIsTop(message);\n\n          if(!message.pFlags.out && message.pFlags.mentioned) {\n            this.modifyCachedMentions(peerId, mid, false, threadId);\n          }\n        }\n      } else {\n        this.fixDialogUnreadMentionsIfNoMessage(peerId, threadId);\n      }\n    }\n\n    this.rootScope.dispatchEvent('messages_media_read', {peerId, mids});\n  };\n\n  private onUpdateChannelAvailableMessages = (update: Update.updateChannelAvailableMessages) => {\n    const channelId = update.channel_id;\n    const peerId = channelId.toPeerId(true);\n    const history = this.getHistoryStorage(peerId).history.slice;\n    const availableMinId = this.appMessagesIdsManager.generateMessageId(update.available_min_id, channelId);\n    const messages = history.filter((mid) => mid <= availableMinId);\n\n    (update as any as Update.updateDeleteChannelMessages).messages = messages;\n    this.onUpdateDeleteMessages(update as any as Update.updateDeleteChannelMessages);\n  };\n\n  private onUpdateDeleteMessages = (update: Update.updateDeleteMessages | Update.updateDeleteChannelMessages) => {\n    const channelId = (update as Update.updateDeleteChannelMessages).channel_id;\n    // const messages = (update as any as Update.updateDeleteChannelMessages).messages;\n    const messages = (update as any as Update.updateDeleteChannelMessages).messages.map((id) => this.appMessagesIdsManager.generateMessageId(id, channelId));\n    const peerId: PeerId = channelId ? channelId.toPeerId(true) : this.findPeerIdByMids(messages);\n\n    if(!peerId) {\n      return;\n    }\n\n    this.apiManager.clearCache('messages.getSearchCounters', (params) => {\n      return this.appPeersManager.getPeerId(params.peer) === peerId;\n    });\n\n    const threadKeys: Set<string> = new Set(), topics: Map<number, ForumTopic> = new Map();\n    for(const mid of messages) {\n      const message = this.getMessageByPeer(peerId, mid);\n      const threadKey = this.getThreadKey(message);\n      if(!threadKey) {\n        continue;\n      }\n\n      const threadId = +threadKey.split('_')[1];\n      if(this.threadsStorage[peerId]?.[threadId]) {\n        threadKeys.add(threadKey);\n\n        if(!topics.has(threadId)) {\n          const topic = this.dialogsStorage.getForumTopic(peerId, threadId);\n          if(topic) {\n            topics.set(threadId, topic);\n          }\n        }\n      }\n    }\n\n    const historyUpdated = this.handleDeletedMessages(\n      peerId,\n      this.getHistoryMessagesStorage(peerId),\n      messages\n    );\n\n    const threadsStorages = Array.from(threadKeys).map((threadKey) => {\n      const [peerId, mid] = threadKey.split('_');\n      return this.getHistoryStorage(peerId.toPeerId(), +mid);\n    });\n\n    const historyStorages = [\n      this.getHistoryStorage(peerId),\n      ...threadsStorages\n    ];\n    historyStorages.forEach((historyStorage) => {\n      for(const mid of historyUpdated.msgs) {\n        historyStorage.history.delete(mid);\n      }\n\n      if(historyUpdated.count && historyStorage.count) {\n        historyStorage.count = Math.max(0, historyStorage.count - historyUpdated.count);\n      }\n    });\n\n    this.rootScope.dispatchEvent('history_delete', {peerId, msgs: historyUpdated.msgs});\n\n    const dialogs: (MTDialog.dialog | ForumTopic)[] = [\n      ...topics.values()\n    ];\n\n    const dialog = this.getDialogOnly(peerId);\n    if(dialog) {\n      dialogs.unshift(dialog);\n    }\n\n    dialogs.forEach((dialog) => {\n      const isTopic = dialog._ === 'forumTopic';\n      const affected = historyUpdated.unreadMentions || historyUpdated.unread;\n      const releaseUnreadCount = affected && this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\n\n      if(historyUpdated.unread) {\n        dialog.unread_count = Math.max(0, dialog.unread_count - historyUpdated.unread);\n      }\n\n      if(historyUpdated.unreadMentions) {\n        dialog.unread_mentions_count = !dialog.unread_count ? 0 : Math.max(0, dialog.unread_mentions_count - historyUpdated.unreadMentions);\n      }\n\n      if(affected) {\n        releaseUnreadCount();\n\n        if(!isTopic) {\n          this.rootScope.dispatchEvent('dialog_unread', {peerId, dialog});\n        }\n      }\n\n      if(historyUpdated.msgs.has(dialog.top_message)) {\n        const historyStorage = this.getHistoryStorage(dialog.peerId, isTopic ? dialog.id : undefined);\n        const slice = historyStorage.history.first;\n        if(slice.isEnd(SliceEnd.Bottom) && slice.length) {\n          const mid = slice[0];\n          const message = this.getMessageByPeer(peerId, mid);\n          this.setDialogTopMessage(message, dialog);\n        } else if(isTopic) {\n          this.dialogsStorage.getForumTopicById(peerId, dialog.id);\n        } else {\n          this.reloadConversation(peerId);\n        }\n      }\n    });\n  };\n\n  private onUpdateChannel = (update: Update.updateChannel) => {\n    const channelId = update.channel_id;\n    const peerId = channelId.toPeerId(true);\n    const channel = this.appChatsManager.getChat(channelId) as Chat.channel;\n\n    const needDialog = this.appChatsManager.isInChat(channelId);\n\n    const canViewHistory = !!getPeerActiveUsernames(channel)[0] || !channel.pFlags.left;\n    const hasHistory = this.historiesStorage[peerId] !== undefined;\n\n    if(canViewHistory !== hasHistory) {\n      delete this.historiesStorage[peerId];\n      this.rootScope.dispatchEvent('history_forbidden', peerId);\n    }\n\n    const dialog = this.getDialogOnly(peerId);\n    if(!!dialog !== needDialog) {\n      if(needDialog) {\n        this.reloadConversation(peerId);\n      } else {\n        this.dialogsStorage.dropDialogOnDeletion(peerId);\n      }\n    }\n\n    this.rootScope.dispatchEvent('channel_update', channelId);\n  };\n\n  private onUpdateChannelReload = (update: Update.updateChannelReload) => {\n    const peerId = update.channel_id.toPeerId(true);\n\n    // if(this.appPeersManager.isForum(peerId)) {\n    //   const cache = this.dialogsStorage.getForumTopicsCache(peerId);\n    //   if(cache.topics.size) {\n\n    //   }\n    // }\n\n    this.flushStoragesByPeerId(peerId);\n    Promise.all([\n      this.reloadConversation(peerId)\n    ]).then(() => {\n      this.rootScope.dispatchEvent('history_reload', peerId);\n    });\n  };\n\n  private onUpdateChannelMessageViews = (update: Update.updateChannelMessageViews) => {\n    const views = update.views;\n    const peerId = update.channel_id.toPeerId(true);\n    const mid = this.appMessagesIdsManager.generateMessageId(update.id, update.channel_id);\n    const message = this.getMessageByPeer(peerId, mid) as Message.message;\n    if(message?.views !== undefined && message.views < views) {\n      message.views = views;\n      this.pushBatchUpdate('messages_views', this.batchUpdateViews, message.peerId + '_' + message.mid);\n      this.setDialogToStateIfMessageIsTop(message);\n    }\n  };\n\n  private onUpdateServiceNotification = (update: Update.updateServiceNotification) => {\n    // this.log('updateServiceNotification', update);\n    if(update.pFlags?.popup) {\n      this.rootScope.dispatchEvent('service_notification', update);\n      return;\n    }\n\n    const fromId = SERVICE_PEER_ID;\n    const peerId = fromId;\n    const messageId = this.generateTempMessageId(peerId);\n    const message: Message.message = {\n      _: 'message',\n      id: messageId,\n      from_id: this.appPeersManager.getOutputPeer(fromId),\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\n      pFlags: {unread: true},\n      date: (update.inbox_date || tsNow(true)) + this.timeManager.getServerTimeOffset(),\n      message: update.message,\n      media: update.media,\n      entities: update.entities\n    };\n    if(!this.appUsersManager.hasUser(fromId)) {\n      this.appUsersManager.saveApiUsers([{\n        _: 'user',\n        id: fromId,\n        pFlags: {verified: true},\n        access_hash: '0',\n        first_name: 'Telegram',\n        phone: '42777'\n      }]);\n    }\n    this.saveMessages([message], {isOutgoing: true});\n\n    if(update.inbox_date) {\n      this.pendingTopMsgs[peerId] = messageId;\n      this.onUpdateNewMessage({\n        _: 'updateNewMessage',\n        message,\n        pts: undefined,\n        pts_count: undefined\n      });\n    }\n  };\n\n  private onUpdatePinnedMessages = (update: Update.updatePinnedMessages | Update.updatePinnedChannelMessages) => {\n    const channelId = update._ === 'updatePinnedChannelMessages' ? update.channel_id : undefined;\n    const peerId = channelId ? channelId.toPeerId(true) : this.appPeersManager.getPeerId((update as Update.updatePinnedMessages).peer);\n\n    /* const storage = this.getSearchStorage(peerId, 'inputMessagesFilterPinned');\n    if(storage.count !== storage.history.length) {\n      if(storage.count !== undefined) {\n        delete this.searchesStorage[peerId]['inputMessagesFilterPinned'];\n      }\n\n      rootScope.broadcast('peer_pinned_messages', peerId);\n      break;\n    } */\n\n    const messages = update.messages.map((id) => this.appMessagesIdsManager.generateMessageId(id, channelId));\n\n    const storage = this.getHistoryMessagesStorage(peerId);\n    const missingMessages = messages.filter((mid) => !storage.has(mid));\n    const getMissingPromise = missingMessages.length ? Promise.all(missingMessages.map((mid) => this.reloadMessages(peerId, mid))) : Promise.resolve();\n    getMissingPromise.finally(() => {\n      const werePinned = update.pFlags?.pinned;\n      if(werePinned) {\n        for(const mid of messages) {\n          // storage.history.push(mid);\n          const message = storage.get(mid) as Message.message;\n          message.pFlags.pinned = true;\n        }\n\n        /* if(this.pinnedMessages[peerId]?.maxId) {\n          const maxMid = Math.max(...messages);\n          this.pinnedMessages\n        } */\n\n        // storage.history.sort((a, b) => b - a);\n      } else {\n        for(const mid of messages) {\n          // storage.history.findAndSplice((_mid) => _mid === mid);\n          const message = storage.get(mid) as Message.message;\n          delete message.pFlags.pinned;\n        }\n      }\n\n      /* const info = this.pinnedMessages[peerId];\n      if(info) {\n        info.count += messages.length * (werePinned ? 1 : -1);\n      } */\n\n      delete this.pinnedMessages[this.getPinnedMessagesKey(peerId)];\n      this.appStateManager.getState().then((state) => {\n        delete state.hiddenPinnedMessages[peerId];\n        this.rootScope.dispatchEvent('peer_pinned_messages', {peerId, mids: messages, pinned: werePinned});\n      });\n    });\n  };\n\n  private onUpdateNotifySettings = (update: Update.updateNotifySettings) => {\n    const {peer, notify_settings} = update;\n    const isTopic = peer._ === 'notifyForumTopic';\n    const isPeerType = peer._ === 'notifyPeer' || isTopic;\n    if(!isPeerType) {\n      return;\n    }\n\n    const peerId = this.appPeersManager.getPeerId(peer.peer);\n    const dialog = this.dialogsStorage.getDialogOrTopic(peerId, isTopic ? this.appMessagesIdsManager.generateMessageId(peer.top_msg_id, (peer.peer as Peer.peerChannel).channel_id) : undefined);\n    if(!dialog) {\n      return;\n    }\n\n    dialog.notify_settings = notify_settings;\n    this.rootScope.dispatchEvent('dialog_notify_settings', dialog);\n    this.dialogsStorage.setDialogToState(dialog);\n  };\n\n  private onUpdateNewScheduledMessage = (update: Update.updateNewScheduledMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n\n    const storage = this.scheduledMessagesStorage[peerId];\n    if(!storage) {\n      return;\n    }\n\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\n    const mid = this.appMessagesIdsManager.generateMessageId(message.id, channelId);\n\n    const oldMessage = this.getMessageFromStorage(storage, mid);\n    this.saveMessages([message], {storage, isScheduled: true});\n    const newMessage = this.getMessageFromStorage(storage, mid);\n\n    if(oldMessage) {\n      this.handleEditedMessage(oldMessage, newMessage, storage);\n      this.rootScope.dispatchEvent('message_edit', {storageKey: storage.key, peerId, mid: message.mid, message});\n    } else {\n      const pendingMessage = this.checkPendingMessage(message);\n      if(!pendingMessage) {\n        this.rootScope.dispatchEvent('scheduled_new', message as Message.message);\n      }\n    }\n  };\n\n  private onUpdateDeleteScheduledMessages = (update: Update.updateDeleteScheduledMessages) => {\n    const channelId = (update.peer as Peer.peerChannel).channel_id;\n    const peerId = this.appPeersManager.getPeerId(update.peer);\n\n    const storage = this.scheduledMessagesStorage[peerId];\n    if(storage) {\n      const mids = update.messages.map((id) => this.appMessagesIdsManager.generateMessageId(id, channelId));\n      this.handleDeletedMessages(peerId, storage, mids);\n\n      this.rootScope.dispatchEvent('scheduled_delete', {peerId, mids});\n    }\n  };\n\n  private onUpdateMessageExtendedMedia = (update: Update.updateMessageExtendedMedia) => {\n    const channelId = (update.peer as Peer.peerChannel).channel_id;\n    const peerId = this.appPeersManager.getPeerId(update.peer);\n    const mid = this.appMessagesIdsManager.generateMessageId(update.msg_id, channelId);\n    const storage = this.getHistoryMessagesStorage(peerId);\n    if(!storage.has(mid)) {\n      // this.fixDialogUnreadMentionsIfNoMessage(peerId);\n      return;\n    }\n\n    const message = this.getMessageFromStorage(storage, mid) as Message.message;\n    const messageMedia = message.media as MessageMedia.messageMediaInvoice;\n    if(messageMedia.extended_media?._ === 'messageExtendedMedia') {\n      return;\n    }\n\n    messageMedia.extended_media = update.extended_media;\n    this.onUpdateEditMessage({\n      _: 'updateEditMessage',\n      message,\n      pts: 0,\n      pts_count: 0\n    });\n  };\n\n  private onUpdateTranscribedAudio = (update: Update.updateTranscribedAudio) => {\n    const channelId = (update.peer as Peer.peerChannel).channel_id;\n    const peerId = this.appPeersManager.getPeerId(update.peer);\n    const text = update.text;\n    const mid = this.appMessagesIdsManager.generateMessageId(update.msg_id, channelId);\n\n    this.rootScope.dispatchEvent('message_transcribed', {peerId, mid, text, pending: update.pFlags.pending});\n  };\n\n  public setDialogToStateIfMessageIsTop(message: MyMessage) {\n    if(this.isMessageIsTopMessage(message)) {\n      this.dialogsStorage.setDialogToState(this.getDialogOnly(message.peerId));\n    }\n  }\n\n  public isMessageIsTopMessage(message: MyMessage) {\n    const dialog = this.getDialogOnly(message.peerId);\n    return dialog && dialog.top_message === message.mid;\n  }\n\n  private updateMessageRepliesIfNeeded(threadMessage: MyMessage) {\n    try { // * на всякий случай, скорее всего это не понадобится\n      const threadKey = this.getThreadKey(threadMessage);\n      if(threadKey) {\n        const repliesKey = this.threadsToReplies[threadKey];\n        if(repliesKey) {\n          const [peerId, mid] = repliesKey.split('_');\n\n          this.updateMessage(peerId.toPeerId(), +mid, 'replies_updated');\n        }\n      }\n    } catch(err) {\n      this.log.error('incrementMessageReplies err', err, threadMessage);\n    }\n  }\n\n  private getThreadKey(threadMessage: MyMessage) {\n    let threadKey = '';\n    if(threadMessage?.peerId?.isAnyChat()) {\n      const threadId = getMessageThreadId(threadMessage, this.appChatsManager.isForum(threadMessage.peerId.toChatId()));\n      if(threadId) {\n        threadKey = threadMessage.peerId + '_' + threadId;\n      }\n    }\n\n    return threadKey;\n  }\n\n  public updateMessage(peerId: PeerId, mid: number, broadcastEventName?: 'replies_updated'): Promise<Message.message> {\n    const promise: Promise<Message.message> = this.reloadMessages(peerId, mid, true).then(() => {\n      const message = this.getMessageByPeer(peerId, mid) as Message.message;\n      if(!message) {\n        return;\n      }\n\n      if(broadcastEventName) {\n        this.rootScope.dispatchEvent(broadcastEventName, message);\n      }\n\n      return message;\n    });\n\n    return promise;\n  }\n\n  private checkPendingMessage(message: MyMessage) {\n    const randomId = this.pendingByMessageId[message.mid];\n    let pendingMessage: ReturnType<AppMessagesManager['finalizePendingMessage']>;\n    if(randomId) {\n      const pendingData = this.pendingByRandomId[randomId];\n      if(pendingMessage = this.finalizePendingMessage(randomId, message)) {\n        this.rootScope.dispatchEvent('history_update', {\n          storageKey: pendingData.storage.key,\n          message,\n          sequential: pendingData.sequential\n        });\n      }\n\n      delete this.pendingByMessageId[message.mid];\n    }\n\n    return pendingMessage;\n  }\n\n  public mutePeer(options: {peerId: PeerId, muteUntil: number, threadId?: number}) {\n    if(!(options = this.appNotificationsManager.validatePeerSettings(options))) {\n      return;\n    }\n\n    const {peerId, muteUntil, threadId} = options;\n    const settings: InputPeerNotifySettings = {\n      _: 'inputPeerNotifySettings'\n    };\n\n    settings.mute_until = muteUntil;\n\n    const peer = this.appPeersManager.getInputPeerById(peerId);\n    return this.appNotificationsManager.updateNotifySettings(threadId ? {\n      _: 'inputNotifyForumTopic',\n      peer,\n      top_msg_id: getServerMessageId(threadId)\n    } : {\n      _: 'inputNotifyPeer',\n      peer\n    }, settings);\n  }\n\n  public togglePeerMute({peerId, mute, threadId}: {peerId: PeerId, mute?: boolean, threadId?: number}) {\n    if(mute === undefined) {\n      mute = !this.appNotificationsManager.isPeerLocalMuted({peerId, respectType: false, threadId});\n    }\n\n    return this.mutePeer({peerId, muteUntil: mute ? MUTE_UNTIL : 0, threadId});\n  }\n\n  private findPeerIdByMids(mids: number[]) {\n    for(let length = mids.length, i = length - 1; i >= 0; --i) {\n      const mid = mids[i];\n      const message = this.getMessageById(mid);\n      if(message) {\n        return message.peerId;\n      }\n    }\n  }\n\n  public canSendToPeer(peerId: PeerId, threadId?: number, action: ChatRights = 'send_messages') {\n    if(this.appPeersManager.isPeerRestricted(peerId)) {\n      return false;\n    }\n\n    if(peerId.isAnyChat()) {\n      const chatId = peerId.toChatId();\n      if(threadId) {\n        const topic = this.dialogsStorage.getForumTopic(peerId, threadId);\n        if(topic?.pFlags?.closed && !this.appChatsManager.hasRights(chatId, 'manage_topics')) {\n          return false;\n        }\n      }\n\n      // const isChannel = appPeersManager.isChannel(peerId);\n      const chat = this.appChatsManager.getChat(chatId) as Chat.chat;\n      const hasRights = /* isChannel &&  */this.appChatsManager.hasRights(chatId, action, undefined, !!threadId);\n      return /* !isChannel ||  */hasRights && (!chat.pFlags.left || !!threadId);\n    } else {\n      return this.appUsersManager.canSendToUser(peerId);\n    }\n  }\n\n  public finalizePendingMessage(randomId: Long, finalMessage: MyMessage) {\n    const pendingData = this.pendingByRandomId[randomId];\n    if(!pendingData) {\n      return;\n    }\n\n    const {peerId, tempId, threadId, storage} = pendingData;\n\n    [\n      this.getHistoryStorage(peerId),\n      threadId ? this.getHistoryStorage(peerId, threadId) : undefined\n    ]\n    .filter(Boolean)\n    .forEach((storage) => {\n      storage.history.delete(tempId);\n    });\n\n    // this.log('pending', randomID, historyStorage.pending)\n\n    const tempMessage: MyMessage = this.getMessageFromStorage(storage, tempId);\n    if(tempMessage) {\n      delete finalMessage.pFlags.is_outgoing;\n      delete finalMessage.pending;\n      delete finalMessage.error;\n      delete finalMessage.random_id;\n      delete finalMessage.send;\n    }\n\n    this.rootScope.dispatchEvent('messages_pending');\n\n    delete this.pendingByRandomId[randomId];\n\n    this.finalizePendingMessageCallbacks(storage, tempId, finalMessage);\n\n    return tempMessage;\n  }\n\n  public finalizePendingMessageCallbacks(storage: MessagesStorage, tempId: number, message: MyMessage) {\n    const callbacks = this.tempFinalizeCallbacks[tempId];\n    // this.log.warn(callbacks, tempId);\n    if(callbacks !== undefined) {\n      for(const name in callbacks) {\n        const {deferred, callback} = callbacks[name];\n        // this.log(`finalizePendingMessageCallbacks: will invoke ${name} callback`);\n        callback(message).then(deferred.resolve, deferred.reject);\n      }\n\n      delete this.tempFinalizeCallbacks[tempId];\n    }\n\n    // set cached url to media\n    if((message as Message.message).media) {\n      assumeType<Message.message>(message);\n      const {photo: newPhoto, document: newDoc} = message.media as any;\n      if(newPhoto) {\n        const photo = this.appPhotosManager.getPhoto('' + tempId);\n        if(/* photo._ !== 'photoEmpty' */photo) {\n          const newPhotoSize = newPhoto.sizes[newPhoto.sizes.length - 1];\n          const cacheContext = this.thumbsStorage.getCacheContext(newPhoto, newPhotoSize.type);\n          const oldCacheContext = this.thumbsStorage.getCacheContext(photo, THUMB_TYPE_FULL);\n          Object.assign(cacheContext, oldCacheContext);\n\n          const photoSize = newPhoto.sizes[newPhoto.sizes.length - 1] as PhotoSize.photoSize;\n\n          const downloadOptions = getPhotoDownloadOptions(newPhoto, photoSize);\n          const fileName = getFileNameByLocation(downloadOptions.location);\n          // this.appDownloadManager.fakeDownload(fileName, oldCacheContext.url);\n        }\n      } else if(newDoc) {\n        const oldDoc = this.appDocsManager.getDoc('' + tempId);\n        if(oldDoc) {\n          const oldCacheContext = this.thumbsStorage.getCacheContext(oldDoc);\n          if(\n            /* doc._ !== 'documentEmpty' &&  */\n            oldDoc.type &&\n            oldDoc.type !== 'sticker' &&\n            oldDoc.mime_type !== 'image/gif' &&\n            oldCacheContext.url\n          ) {\n            const cacheContext = this.thumbsStorage.getCacheContext(newDoc);\n            Object.assign(cacheContext, oldCacheContext);\n\n            const fileName = getDocumentInputFileName(newDoc);\n            // this.appDownloadManager.fakeDownload(fileName, oldCacheContext.url);\n          }\n        }\n      } else if((message.media as MessageMedia.messageMediaPoll).poll) {\n        delete this.appPollsManager.polls[tempId];\n        delete this.appPollsManager.results[tempId];\n      }\n    }\n\n    const tempMessage = this.getMessageFromStorage(storage, tempId);\n    this.deleteMessageFromStorage(storage, tempId);\n\n    if(!(tempMessage as Message.message).reply_markup && (message as Message.message).reply_markup) {\n      setTimeout(() => { // TODO: refactor it to normal buttons adding\n        if(!this.getMessageFromStorage(storage, message.mid)) {\n          return;\n        }\n\n        this.rootScope.dispatchEvent('message_edit', {storageKey: storage.key, peerId: message.peerId, mid: message.mid, message});\n      }, 0);\n    }\n\n    this.handleReleasingMessage(tempMessage, storage);\n\n    this.rootScope.dispatchEvent('message_sent', {storageKey: storage.key, tempId, tempMessage, mid: message.mid, message});\n  }\n\n  public incrementMaxSeenId(maxId: number) {\n    if(!maxId || !(!this.maxSeenId || maxId > this.maxSeenId)) {\n      return false;\n    }\n\n    this.maxSeenId = maxId;\n    this.appStateManager.pushToState('maxSeenMsgId', maxId);\n\n    this.apiManager.invokeApi('messages.receivedMessages', {\n      max_id: getServerMessageId(maxId)\n    });\n  }\n\n  public async getMessageReactionsListAndReadParticipants(\n    message: Message.message,\n    limit?: number,\n    reaction?: Reaction,\n    offset?: string,\n    skipReadParticipants?: boolean,\n    skipReactionsList?: boolean\n  ) {\n    const emptyMessageReactionsList = {\n      reactions: [] as MessagePeerReaction[],\n      count: 0,\n      next_offset: undefined as string\n    };\n\n    const canViewMessageReadParticipants = await this.canViewMessageReadParticipants(message);\n    limit ??= canViewMessageReadParticipants ? 100 : 50;\n\n    return Promise.all([\n      canViewMessageReadParticipants && !reaction && !skipReadParticipants ? this.getMessageReadParticipants(message.peerId, message.mid).catch(() => [] as ReadParticipantDate[]) : [] as ReadParticipantDate[],\n\n      message.reactions?.recent_reactions?.length && !skipReactionsList ? this.appReactionsManager.getMessageReactionsList(message.peerId, message.mid, limit, reaction, offset).catch((err) => emptyMessageReactionsList) : emptyMessageReactionsList\n    ]).then(([readParticipantDates, messageReactionsList]) => {\n      const filteredReadParticipants = readParticipantDates.slice();\n      forEachReverse(filteredReadParticipants, ({user_id}, idx, arr) => {\n        if(messageReactionsList.reactions.some((reaction) => this.appPeersManager.getPeerId(reaction.peer_id) === user_id.toPeerId())) {\n          arr.splice(idx, 1);\n        }\n      });\n\n      let combined: {\n        peerId: PeerId,\n        date?: number,\n        reaction?: Reaction\n      }[] = messageReactionsList.reactions.map((reaction) => {\n        return {\n          peerId: this.appPeersManager.getPeerId(reaction.peer_id),\n          reaction: reaction.reaction,\n          date: reaction.date\n        };\n      });\n\n      combined = combined.concat(filteredReadParticipants.map(({user_id, date}) => ({date, peerId: user_id.toPeerId()})));\n\n      return {\n        reactions: messageReactionsList.reactions,\n        reactionsCount: messageReactionsList.count,\n        readParticipantDates: readParticipantDates,\n        combined: combined,\n        nextOffset: messageReactionsList.next_offset\n      };\n    });\n  }\n\n  public getMessageReadParticipants(peerId: PeerId, mid: number) {\n    return this.apiManager.invokeApiSingle('messages.getMessageReadParticipants', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid)\n    }).then((readParticipantDates) => { // ! convert long to number\n      readParticipantDates.forEach((readParticipantDate) => readParticipantDate.user_id = readParticipantDate.user_id.toUserId());\n      return readParticipantDates;\n    });\n  }\n\n  public async canViewMessageReadParticipants(message: Message) {\n    if(\n      message?._ !== 'message' ||\n      message.pFlags.is_outgoing ||\n      !message.pFlags.out ||\n      !this.appPeersManager.isAnyGroup(message.peerId)\n    ) {\n      return false;\n    }\n\n    const chat = this.appChatsManager.getChat(message.peerId.toChatId()) as Chat.chat | Chat.channel;\n    const appConfig = await this.apiManager.getAppConfig();\n    return chat.participants_count <= appConfig.chat_read_mark_size_threshold &&\n      (tsNow(true) - message.date) < appConfig.chat_read_mark_expire_period;\n  }\n\n  public incrementMessageViews(peerId: PeerId, mids: number[]) {\n    if(!mids.length) {\n      return;\n    }\n\n    return this.apiManager.invokeApiSingle('messages.getMessagesViews', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid)),\n      increment: true\n    }).then((views) => {\n      const updates: Update[] = new Array(mids.length);\n      for(let i = 0, length = mids.length; i < length; ++i) {\n        updates[i] = {\n          _: 'updateChannelMessageViews',\n          channel_id: peerId.toChatId(),\n          id: mids[i],\n          views: views.views[i].views\n        };\n      }\n\n      this.apiUpdatesManager.processUpdateMessage({\n        _: 'updates',\n        updates,\n        chats: views.chats,\n        users: views.users\n      });\n    });\n  }\n\n  private notifyAboutMessage(message: MyMessage, options: Partial<{\n    fwdCount: number,\n    peerReaction: MessagePeerReaction,\n    peerTypeNotifySettings: PeerNotifySettings\n  }> = {}) {\n    const peerId = this.getMessagePeer(message);\n\n    if(this.appPeersManager.isPeerRestricted(peerId)) {\n      return;\n    }\n\n    const tabs = appTabsManager.getTabs();\n    let tab = tabs.find((tab) => {\n      const {chatPeerIds} = tab.state;\n      return chatPeerIds[chatPeerIds.length - 1] === peerId;\n    });\n\n    if(!tab && tabs.length) {\n      tabs.sort((a, b) => a.state.idleStartTime - b.state.idleStartTime);\n      tab = !tabs[0].state.idleStartTime ? tabs[0] : tabs[tabs.length - 1];\n    }\n\n    const port = MTProtoMessagePort.getInstance<false>();\n    port.invokeVoid('notificationBuild', {\n      message,\n      ...options\n    }, tab?.source);\n  }\n\n  public getScheduledMessagesStorage(peerId: PeerId) {\n    return this.scheduledMessagesStorage[peerId] ??= this.createMessageStorage(peerId, 'scheduled');\n  }\n\n  public getScheduledMessageByPeer(peerId: PeerId, mid: number) {\n    return this.getMessageFromStorage(this.getScheduledMessagesStorage(peerId), mid);\n  }\n\n  public getScheduledMessages(peerId: PeerId) {\n    if(!this.canSendToPeer(peerId)) return;\n\n    const storage = this.getScheduledMessagesStorage(peerId);\n    if(storage.size) {\n      return [...storage.keys()];\n    }\n\n    return this.apiManager.invokeApiSingle('messages.getScheduledHistory', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      hash: ''\n    }).then((historyResult) => {\n      if(historyResult._ !== 'messages.messagesNotModified') {\n        this.appUsersManager.saveApiUsers(historyResult.users);\n        this.appChatsManager.saveApiChats(historyResult.chats);\n\n        const storage = this.getScheduledMessagesStorage(peerId);\n        this.saveMessages(historyResult.messages, {storage, isScheduled: true});\n        return [...storage.keys()];\n      }\n\n      return [];\n    });\n  }\n\n  public sendScheduledMessages(peerId: PeerId, mids: number[]) {\n    return this.apiManager.invokeApi('messages.sendScheduledMessages', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid))\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public deleteScheduledMessages(peerId: PeerId, mids: number[]) {\n    return this.apiManager.invokeApi('messages.deleteScheduledMessages', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid))\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public getMessageWithReplies(message: Message.message) {\n    return this.filterMessages(message, (message) => !!(message as Message.message).replies)[0] as any;\n  }\n\n  public getMessageWithCommentReplies(message: Message.message) {\n    if(message.peerId !== REPLIES_PEER_ID) {\n      message = this.getMessageWithReplies(message);\n      const replies = message?.replies;\n      if(!(replies && replies.pFlags.comments && replies.channel_id.toChatId() !== REPLIES_HIDDEN_CHANNEL_ID)) {\n        return;\n      }\n    }\n\n    return message;\n  }\n\n  public isFetchIntervalNeeded(peerId: PeerId) {\n    return peerId.isAnyChat() && (\n      !this.appChatsManager.isInChat(peerId.toChatId()) ||\n      this.appChatsManager.isForum(peerId.toChatId())\n    );\n  }\n\n  // public async getNewHistory(peerId: PeerId, threadId?: number) {\n  //   if(!this.isFetchIntervalNeeded(peerId)) {\n  //     return;\n  //   }\n\n  //   const historyStorage = this.getHistoryStorage(peerId, threadId);\n  //   const slice = historyStorage.history.slice;\n  //   if(!slice.isEnd(SliceEnd.Bottom)) {\n  //     return;\n  //   }\n\n  //   delete historyStorage.maxId;\n  //   slice.unsetEnd(SliceEnd.Bottom);\n\n  //   // if there is no id - then request by first id because cannot request by id 0 with backLimit\n  //   const historyResult = await this.getHistory({peerId, offsetId: slice[0] ?? 1, limit: 0, backLimit: 50, threadId});\n  //   for(let i = 0, length = historyResult.history.length; i < length; ++i) {\n  //     this.handleNewMessage(this.getMessageByPeer(peerId, historyResult.history[i]));\n  //   }\n\n  //   return {isBottomEnd: historyStorage.history.slice.isEnd(SliceEnd.Bottom)};\n  // }\n\n  public getMigration(peerId: PeerId) {\n    const next = this.migratedFromTo[peerId];\n    const prev = this.migratedToFrom[peerId];\n    return next || prev ? {next, prev} : undefined;\n  }\n\n  /**\n   * * https://core.telegram.org/api/offsets, offset_id is inclusive\n   */\n  public getHistory(options: RequestHistoryOptions & {\n    backLimit?: number,\n    historyStorage?: HistoryStorage\n  }): Promise<HistoryResult> | HistoryResult {\n    options.offsetId ??= 0;\n\n    if(options.addOffset === undefined) {\n      options.addOffset = 0;\n\n      if(options.backLimit) {\n        options.addOffset = -options.backLimit;\n        options.limit += options.backLimit;\n      }\n    }\n\n    options.historyStorage ??= options.inputFilter ? this.createHistoryStorage('search') : this.getHistoryStorage(options.peerId, options.threadId);\n\n    const {historyStorage, limit, addOffset, offsetId} = options;\n\n    if(this.appPeersManager.isPeerRestricted(options.peerId)) {\n      const first = historyStorage.history.first;\n      first.setEnd(SliceEnd.Both);\n\n      const slice = first.slice(0, 0);\n      slice.setEnd(SliceEnd.Both);\n\n      return {\n        count: 0,\n        history: Array.from(slice),\n        isEnd: slice.getEnds(),\n        offsetIdOffset: 0\n      };\n    }\n\n    const haveSlice = historyStorage.history.sliceMe(offsetId, addOffset, limit);\n    if(haveSlice && (haveSlice.slice.length === limit || (haveSlice.fulfilled & SliceEnd.Both) === SliceEnd.Both)) {\n      return {\n        count: historyStorage.count,\n        history: Array.from(haveSlice.slice),\n        isEnd: haveSlice.slice.getEnds(),\n        offsetIdOffset: haveSlice.offsetIdOffset\n      };\n    }\n\n    return this.fillHistoryStorage(\n      options as Modify<typeof options, {historyStorage: HistoryStorage}>\n    ).then((historyResult) => {\n      if(options.inputFilter) {\n        // const migration = this.getMigration(options.peerId);\n        // if(migration) {\n        //   const excludeMid = this.appMessagesIdsManager.generateMessageId(1, migration.next || options.peerId);\n        //   const idx = f.indexOf(excludeMid);\n        //   if(idx !== -1) {\n        //     f.splice(idx, 1);\n        //   }\n        // }\n\n        const mids = historyResult.messages.map((message) => message.mid);\n\n        return {\n          count: (historyResult as MessagesMessages.messagesMessagesSlice).count ?? historyStorage.count,\n          history: mids,\n          isEnd: historyStorage.history.slice.getEnds(),\n          offsetIdOffset: (historyResult as MessagesMessages.messagesMessagesSlice)?.offset_id_offset || 0,\n          nextRate: (historyResult as MessagesMessages.messagesMessagesSlice)?.next_rate,\n          messages: historyResult.messages as MyMessage[]\n        };\n      }\n\n      const slice = historyStorage.history.sliceMe(offsetId, addOffset, limit);\n      const f = slice?.slice || historyStorage.history.constructSlice();\n      return {\n        count: historyStorage.count,\n        history: Array.from(f),\n        isEnd: f.getEnds(),\n        offsetIdOffset: slice?.offsetIdOffset || historyStorage.count\n      };\n    });\n  }\n\n  public isHistoryResultEnd({\n    historyResult,\n    limit,\n    addOffset,\n    offsetId,\n    offsetPeerId,\n    inputFilter,\n    peerId\n  }: {\n    historyResult: Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>,\n  } & Pick<RequestHistoryOptions, 'limit' | 'addOffset' | 'offsetId' | 'offsetPeerId' | 'peerId' | 'inputFilter'>) {\n    const {offset_id_offset, messages} = historyResult as MessagesMessages.messagesMessagesSlice;\n\n    const mids = messages.map(({mid}) => mid);\n\n    const count = (historyResult as MessagesMessages.messagesMessagesSlice).count || messages.length;\n\n    const topWasMeantToLoad = addOffset < 0 ? limit + addOffset : limit;\n    const bottomWasMeantToLoad = Math.abs(addOffset);\n\n    // * means global search\n    // * have to reset offsetId, because messages aren't sorted and can be loaded only from the top\n    if(!peerId && inputFilter) {\n      offsetId = 0;\n    }\n\n    let offsetIdOffset = offset_id_offset;\n    let isTopEnd = false, isBottomEnd = !offsetId;\n    let topLoaded = messages.length, bottomLoaded = 0;\n    let isOffsetIncluded = false;\n\n    const serverOffsetId = offsetId && getServerMessageId(offsetId);\n    if(serverOffsetId) {\n      let i = 0;\n      for(const length = mids.length; i < length; ++i) {\n        if(offsetId > mids[i]) {\n          break;\n        }\n      }\n\n      isOffsetIncluded = mids.includes(offsetId);\n      topLoaded = messages.length - i;\n      bottomLoaded = i;\n    }\n\n    // offsetIdOffset = undefined;\n\n    // if(offsetIdOffset === undefined && !bottomWasMeantToLoad) {\n    //   offsetIdOffset = 0;\n    // }\n\n    if(offsetIdOffset !== undefined) {\n      isTopEnd = offsetIdOffset >= (count - topWasMeantToLoad) || count < topWasMeantToLoad;\n      isBottomEnd = !offsetIdOffset || (addOffset < 0 && (offsetIdOffset + addOffset) <= 0);\n    } else if(serverOffsetId) {\n      if(topWasMeantToLoad) isTopEnd = topLoaded < topWasMeantToLoad;\n      if(bottomWasMeantToLoad) isBottomEnd = bottomLoaded < bottomWasMeantToLoad;\n\n      if(isTopEnd || isBottomEnd) {\n        offsetIdOffset = isTopEnd ? count - topLoaded : bottomLoaded - +isOffsetIncluded;\n      }\n    } else if(messages.length >= count) {\n      isTopEnd = true;\n      isBottomEnd = true;\n    }\n\n    offsetIdOffset ??= 0;\n\n    return {\n      count,\n      offsetIdOffset,\n      isTopEnd,\n      isBottomEnd,\n      mids,\n      topWasMeantToLoad,\n      bottomWasMeantToLoad,\n      topLoaded,\n      bottomLoaded\n    };\n  }\n\n  public mergeHistoryResult(options: RequestHistoryOptions & {\n    slicedArray: SlicedArray<number>,\n    historyResult: Parameters<AppMessagesManager['isHistoryResultEnd']>[0]['historyResult'],\n    historyStorage?: HistoryStorage\n  }) {\n    const {\n      slicedArray,\n      historyResult,\n      offsetId,\n      peerId,\n      historyStorage\n    } = options;\n\n    const {messages} = historyResult as MessagesMessages.messagesMessagesSlice;\n    const isEnd = this.isHistoryResultEnd(options);\n    const {count, offsetIdOffset, mids} = isEnd;\n    const migration = this.getMigration(peerId);\n\n    if(migration && historyStorage && historyStorage.type !== 'replies') {\n      if(migration.prev) {\n        isEnd.isTopEnd = false;\n      } else if(migration.next) {\n        if(isEnd.isBottomEnd) {\n          mids.unshift(this.appMessagesIdsManager.generateMessageId(1, migration.next.toChatId()));\n          isEnd.isBottomEnd = false;\n        }\n      }\n    }\n\n    // * add bound manually.\n    // * offset_id will be inclusive only if there is 'add_offset' <= -1 (-1 - will only include the 'offset_id')\n    // * check that offset_id is not 0\n    if(offsetId && getServerMessageId(offsetId) && !mids.includes(offsetId) && offsetIdOffset < count) {\n      let i = 0;\n      for(const length = mids.length; i < length; ++i) {\n        if(offsetId > mids[i]) {\n          break;\n        }\n      }\n\n      mids.splice(i, 0, offsetId);\n    }\n\n    const slice = slicedArray.insertSlice(mids) || slicedArray.slice;\n    if(isEnd.isTopEnd) {\n      slice.setEnd(SliceEnd.Top);\n    }\n\n    if(isEnd.isBottomEnd) {\n      slice.setEnd(SliceEnd.Bottom);\n    }\n\n    return {slice, mids, messages, ...isEnd};\n  }\n\n  private async fillHistoryStorage(options: RequestHistoryOptions & {\n    historyStorage: HistoryStorage,\n    recursion?: boolean\n  }) {\n    const {\n      offsetId,\n      historyStorage,\n      inputFilter,\n      recursion       // save before setting\n    } = options;\n\n    options.recursion = true;\n\n    let {peerId} = options;\n\n    const wasMaxId = historyStorage.maxId;\n    const middleware = this.middleware.get();\n    let migration = this.getMigration(peerId);\n\n    let requestPeerId = peerId;\n    if(offsetId && migration?.prev && getServerMessageId(offsetId) === offsetId) {\n      requestPeerId = migration.prev;\n    }\n\n    peerId = options.peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    const isRequestingLegacy = requestPeerId !== peerId;\n\n    const historyResult = await this.requestHistory({\n      ...options,\n      peerId: requestPeerId\n    });\n\n    if(!middleware()) {\n      return;\n    }\n\n    const mergedResult = this.mergeHistoryResult({\n      ...options,\n      slicedArray: historyStorage.history,\n      historyResult,\n      peerId: requestPeerId\n    });\n\n    const {\n      count,\n      isBottomEnd,\n      isTopEnd,\n      slice,\n      messages,\n      topWasMeantToLoad,\n      bottomWasMeantToLoad,\n      topLoaded,\n      bottomLoaded\n    } = mergedResult;\n\n    if(!isRequestingLegacy) {\n      historyStorage.count = count;\n    }\n\n    if(!inputFilter) for(let i = 0, length = messages.length; i < length; ++i) {\n      const message = messages[i] as MyMessage;\n      if(this.mergeReplyKeyboard(historyStorage, message)) {\n        this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n      }\n    }\n\n    if(!inputFilter && isBottomEnd) {\n      const newMaxId = slice[0];\n\n      if(historyStorage.maxId === wasMaxId) {\n        const first = historyStorage.history.first;\n        if(first !== slice) {\n          historyStorage.history.deleteSlice(first);\n        }\n\n        if(historyStorage.maxId !== newMaxId) {\n          historyStorage.maxId = slice[0]; // ! WARNING\n\n          this.reloadConversation(peerId); // when top_message is deleted but cached\n        }\n      }\n    }\n\n    // * load album missing messages\n    const firstMessage = messages[0] as Message.message;\n    const lastMessage = messages[messages.length - 1] as Message.message;\n\n    if(!inputFilter && !isBottomEnd && firstMessage?.grouped_id) {\n      await this.getHistory({\n        ...options,\n        offsetId: firstMessage.mid,\n        limit: 20,\n        addOffset: -10\n      });\n\n      if(!middleware()) {\n        return;\n      }\n    }\n\n    if(!inputFilter && !isTopEnd && lastMessage?.grouped_id && lastMessage.grouped_id !== firstMessage?.grouped_id) {\n      await this.getHistory({\n        ...options,\n        offsetId: lastMessage.mid,\n        limit: 20,\n        addOffset: -10\n      });\n\n      if(!middleware()) {\n        return;\n      }\n    }\n    // * album end\n\n    if(options.threadId) {\n      return historyResult;\n    }\n\n    // * support migrated chats\n    // * if found migrated chat during the load\n    migration ??= this.getMigration(peerId);\n\n    if(migration?.prev && topWasMeantToLoad !== topLoaded && !isTopEnd) {\n      const toLoad = topWasMeantToLoad - topLoaded;\n      const migratedResult = await this.fillHistoryStorage({\n        ...options,\n        peerId: migration.prev,\n        offsetId: 0,\n        limit: toLoad,\n        addOffset: 0\n      });\n\n      historyResult.messages.push(...migratedResult.messages);\n\n      const migratedResultCount = (migratedResult as MessagesMessages.messagesMessagesSlice).count ?? migratedResult.messages.length;\n      (historyResult as MessagesMessages.messagesMessagesSlice).count = ((historyResult as MessagesMessages.messagesMessagesSlice).count || 0) + migratedResultCount;\n    }/*  else if(migration?.prev && inputFilter) {\n      const migratedResult = await this.requestHistory({\n        ...options,\n        peerId: migration.prev,\n        offsetId: 0,\n        limit: 1\n      });\n\n      const migratedResultCount = (migratedResult as MessagesMessages.messagesMessagesSlice).count ?? migratedResult.messages.length;\n      (historyResult as MessagesMessages.messagesMessagesSlice).count = ((historyResult as MessagesMessages.messagesMessagesSlice).count || 0) + migratedResultCount;\n\n      const offsetIdOffset = (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset || 0;\n      (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset = offsetIdOffset + migratedResultCount;\n    } */ else if((migration?.next || isRequestingLegacy) && bottomWasMeantToLoad !== bottomLoaded && !isBottomEnd) {\n      const toLoad = bottomWasMeantToLoad - bottomLoaded;\n      const migratedResult = await this.fillHistoryStorage({\n        ...options,\n        offsetId: this.appMessagesIdsManager.generateMessageId(1, peerId.toChatId()),\n        limit: toLoad,\n        addOffset: -toLoad\n      });\n\n      historyResult.messages.unshift(...migratedResult.messages);\n\n      const migratedResultCount = (migratedResult as MessagesMessages.messagesMessagesSlice).count ?? migratedResult.messages.length;\n      (historyResult as MessagesMessages.messagesMessagesSlice).count = ((historyResult as MessagesMessages.messagesMessagesSlice).count || 0) + migratedResultCount;\n\n      const offsetIdOffset = (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset || 0;\n      (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset = offsetIdOffset + migratedResultCount;\n    } else if(migration && inputFilter && !recursion) {\n      const migratedResult = await this.requestHistory({\n        ...options,\n        peerId: isRequestingLegacy ? peerId : migration.prev,\n        offsetId: 0,\n        limit: 1\n      });\n\n      const migratedResultCount = (migratedResult as MessagesMessages.messagesMessagesSlice).count ?? migratedResult.messages.length;\n      (historyResult as MessagesMessages.messagesMessagesSlice).count = ((historyResult as MessagesMessages.messagesMessagesSlice).count || 0) + migratedResultCount;\n\n      const offsetIdOffset = (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset || 0;\n      (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset = offsetIdOffset + migratedResultCount;\n    }\n\n    if(!middleware()) {\n      return;\n    }\n    // * migration end\n\n    return historyResult;\n  }\n\n  public requestHistory({\n    peerId,\n    offsetId = 0,\n    limit = 50,\n    addOffset = 0,\n    offsetDate = 0,\n    threadId = 0,\n\n    offsetPeerId,\n    nextRate,\n    folderId,\n    query,\n    inputFilter,\n    minDate,\n    maxDate\n  }: RequestHistoryOptions) {\n    const offsetMessage = offsetId && this.getMessageByPeer(offsetPeerId || peerId, offsetId);\n    offsetPeerId ??= offsetMessage?.peerId;\n\n    offsetId = getServerMessageId(offsetId) || 0;\n    threadId = getServerMessageId(threadId) || 0;\n\n    minDate = minDate ? minDate / 1000 | 0 : 0;\n    maxDate = maxDate ? maxDate / 1000 | 0 : 0;\n\n    let options: MessagesGetReplies | MessagesGetHistory | MessagesSearch | MessagesSearchGlobal;\n    let method: 'messages.getReplies' | 'messages.getHistory' | 'messages.search' | 'messages.searchGlobal';\n    const commonOptions = {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      offset_id: offsetId,\n      offset_date: offsetDate,\n      add_offset: addOffset,\n      limit,\n      max_id: 0,\n      min_id: 0,\n      hash: 0\n    };\n\n    if(inputFilter && peerId && !nextRate && folderId === undefined/*  || !query */) {\n      const searchOptions: MessagesSearch = {\n        ...commonOptions,\n        q: query || '',\n        filter: inputFilter as any as MessagesFilter,\n        min_date: minDate,\n        max_date: maxDate,\n        top_msg_id: threadId\n      };\n\n      method = 'messages.search';\n      options = searchOptions;\n    } else if(inputFilter) {\n      const searchGlobalOptions: MessagesSearchGlobal = {\n        ...commonOptions,\n        q: query || '',\n        filter: inputFilter as any as MessagesFilter,\n        min_date: minDate,\n        max_date: maxDate,\n        offset_rate: nextRate,\n        offset_peer: this.appPeersManager.getInputPeerById(offsetPeerId),\n        folder_id: folderId\n      };\n\n      method = 'messages.searchGlobal';\n      options = searchGlobalOptions;\n    } else if(threadId) {\n      const getRepliesOptions: MessagesGetReplies = {\n        ...commonOptions,\n        msg_id: threadId\n      };\n\n      method = 'messages.getReplies';\n      options = getRepliesOptions;\n    } else {\n      const getHistoryOptions: MessagesGetHistory = {\n        ...commonOptions\n      };\n\n      method = 'messages.getHistory';\n      options = getHistoryOptions;\n    }\n\n    const promise = this.apiManager.invokeApiSingle(\n      method,\n      options,\n      {\n        // timeout: APITIMEOUT,\n        noErrorBox: true\n      }\n    ) as Promise<Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>>;\n\n    return promise.then((historyResult) => {\n      if(DEBUG) {\n        this.log('requestHistory result:', peerId, historyResult, offsetId, limit, addOffset);\n      }\n\n      const {messages} = historyResult;\n\n      this.appUsersManager.saveApiUsers(historyResult.users);\n      this.appChatsManager.saveApiChats(historyResult.chats);\n      this.saveMessages(messages);\n\n      if('pts' in historyResult) {\n        this.apiUpdatesManager.addChannelState(peerId.toChatId(), historyResult.pts);\n      }\n\n      let length = messages.length,\n        count = (historyResult as MessagesMessages.messagesMessagesSlice).count;\n      if(length && !messages[length - 1]) {\n        messages.splice(length - 1, 1);\n        length--;\n        count--;\n      }\n\n      return historyResult;\n    }, (error: ApiError) => {\n      switch(error.type) {\n        case 'CHANNEL_PRIVATE':\n          let channel = this.appChatsManager.getChat(peerId.toChatId());\n          if(channel._ === 'channel') {\n            channel = {\n              _: 'channelForbidden',\n              id: channel.id,\n              access_hash: channel.access_hash,\n              title: channel.title,\n              pFlags: channel.pFlags\n            };\n          }\n\n          this.apiUpdatesManager.processUpdateMessage({\n            _: 'updates',\n            updates: [{\n              _: 'updateChannel',\n              channel_id: channel.id\n            }],\n            chats: [channel],\n            users: []\n          });\n          break;\n      }\n\n      throw error;\n    });\n  }\n\n  public fetchSingleMessages() {\n    if(this.fetchSingleMessagesPromise) {\n      return this.fetchSingleMessagesPromise;\n    }\n\n    return this.fetchSingleMessagesPromise = pause(0).then(() => {\n      const requestPromises: Promise<void>[] = [];\n\n      for(const [peerId, map] of this.needSingleMessages) {\n        const mids = [...map.keys()];\n        const msgIds: InputMessage[] = mids.map((mid) => {\n          return {\n            _: 'inputMessageID',\n            id: getServerMessageId(mid)\n          };\n        });\n\n        let promise: Promise<MethodDeclMap['channels.getMessages']['res'] | MethodDeclMap['messages.getMessages']['res']>;\n        const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : undefined;\n        if(channelId) {\n          promise = this.apiManager.invokeApiSingle('channels.getMessages', {\n            channel: this.appChatsManager.getChannelInput(channelId),\n            id: msgIds\n          });\n        } else {\n          promise = this.apiManager.invokeApiSingle('messages.getMessages', {\n            id: msgIds\n          });\n        }\n\n        const after = promise.then((getMessagesResult) => {\n          assumeType<Exclude<MessagesMessages.messagesMessages, MessagesMessages.messagesMessagesNotModified>>(getMessagesResult);\n\n          this.appUsersManager.saveApiUsers(getMessagesResult.users);\n          this.appChatsManager.saveApiChats(getMessagesResult.chats);\n          const messages = this.saveMessages(getMessagesResult.messages);\n\n          for(let i = 0; i < messages.length; ++i) {\n            const message = messages[i];\n            if(!message) {\n              continue;\n            }\n\n            const mid = this.appMessagesIdsManager.generateMessageId(message.id, channelId);\n            const promise = map.get(mid);\n            promise.resolve(message);\n            map.delete(mid);\n          }\n\n          if(map.size) {\n            for(const [mid, promise] of map) {\n              promise.resolve(this.generateEmptyMessage(mid));\n            }\n          }\n        }).finally(() => {\n          this.rootScope.dispatchEvent('messages_downloaded', {peerId, mids});\n        });\n\n        requestPromises.push(after);\n      }\n\n      this.needSingleMessages.clear();\n\n      return Promise.all(requestPromises).then(noop, noop).then(() => {\n        this.fetchSingleMessagesPromise = undefined;\n        if(this.needSingleMessages.size) this.fetchSingleMessages();\n      });\n    });\n  }\n\n  public reloadMessages(peerId: PeerId, mid: number, overwrite?: boolean): Promise<MyMessage>;\n  public reloadMessages(peerId: PeerId, mid: number[], overwrite?: boolean): Promise<MyMessage[]>;\n  public reloadMessages(peerId: PeerId, mid: number | number[], overwrite?: boolean): Promise<MyMessage | MyMessage[]> {\n    if(Array.isArray(mid)) {\n      return Promise.all(mid.map((mid) => {\n        return this.reloadMessages(peerId, mid, overwrite);\n      }));\n    }\n\n    if(peerId.isAnyChat() && this.appMessagesIdsManager.isLegacyMessageId(mid)) {\n      peerId = NULL_PEER_ID;\n    }\n\n    const message = this.getMessageByPeer(peerId, mid);\n    if(message && !overwrite) {\n      this.rootScope.dispatchEvent('messages_downloaded', {peerId, mids: [mid]});\n      return Promise.resolve(message);\n    } else {\n      let map = this.needSingleMessages.get(peerId);\n      if(!map) {\n        this.needSingleMessages.set(peerId, map = new Map());\n      }\n\n      let promise = map.get(mid);\n      if(promise) {\n        return promise;\n      }\n\n      promise = deferredPromise();\n      map.set(mid, promise);\n      this.fetchSingleMessages();\n      return promise;\n    }\n  }\n\n  public getExtendedMedia(peerId: PeerId, mids: number[]) {\n    let map = this.extendedMedia.get(peerId);\n    if(!map) {\n      this.extendedMedia.set(peerId, map = new Map());\n    }\n\n    const deferred = deferredPromise<void>();\n    const toRequest: number[] = [];\n    const promises = mids.map((mid) => {\n      let promise = map.get(mid);\n      if(!promise) {\n        map.set(mid, promise = deferred);\n        toRequest.push(mid);\n\n        promise.then(() => {\n          map.delete(mid);\n          if(!map.size && this.extendedMedia.get(peerId) === map) {\n            this.extendedMedia.delete(peerId);\n          }\n        });\n      }\n\n      return promise;\n    });\n\n    if(!toRequest.length) {\n      deferred.resolve();\n    } else {\n      this.apiManager.invokeApi('messages.getExtendedMedia', {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        id: toRequest.map((mid) => getServerMessageId(mid))\n      }).then((updates) => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n        deferred.resolve();\n      });\n    }\n\n    return Promise.all(promises);\n  }\n\n  public fetchMessageReplyTo(message: MyMessage) {\n    if(!message.reply_to_mid) return Promise.resolve(this.generateEmptyMessage(0));\n    const replyToPeerId = message.reply_to.reply_to_peer_id ? this.appPeersManager.getPeerId(message.reply_to.reply_to_peer_id) : message.peerId;\n    return this.reloadMessages(replyToPeerId, message.reply_to_mid).then((originalMessage) => {\n      if(!originalMessage) { // ! break the infinite loop\n        message = this.getMessageByPeer(message.peerId, message.mid); // message can come from other thread\n        delete message.reply_to_mid; // ! WARNING!\n      }\n\n      if(message._ === 'messageService') {\n        const peerId = message.peerId;\n        this.rootScope.dispatchEvent('message_edit', {\n          storageKey: `${peerId}_history`,\n          peerId: peerId,\n          mid: message.mid,\n          message\n        });\n\n        if(this.isMessageIsTopMessage(message)) {\n          this.rootScope.dispatchEvent('dialogs_multiupdate', new Map([[peerId, {dialog: this.getDialogOnly(peerId)}]]));\n        }\n      }\n\n      return originalMessage;\n    });\n  }\n\n  private getTypingKey(peerId: PeerId, threadId?: number) {\n    return threadId ? `${peerId}_${threadId}` : peerId;\n  }\n\n  public setTyping(\n    peerId: PeerId,\n    action: SendMessageAction,\n    force?: boolean,\n    threadId?: number\n  ): Promise<boolean> {\n    if(threadId && !this.appPeersManager.isForum(peerId)) {\n      threadId = undefined;\n    }\n\n    const key = this.getTypingKey(peerId, threadId);\n    let typing = this.typings[key];\n    if(\n      !peerId ||\n      !this.canSendToPeer(peerId) ||\n      peerId === this.appPeersManager.peerId ||\n      // (!force && deepEqual(typing?.action, action))\n      (!force && typing?.action?._ === action._)\n    ) {\n      return Promise.resolve(false);\n    }\n\n    if(typing?.timeout) {\n      clearTimeout(typing.timeout);\n    }\n\n    typing = this.typings[key] = {\n      action\n    };\n\n    return this.apiManager.invokeApi('messages.setTyping', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      action,\n      top_msg_id: threadId ? getServerMessageId(threadId) : undefined\n    }).finally(() => {\n      if(typing === this.typings[key]) {\n        typing.timeout = ctx.setTimeout(() => {\n          delete this.typings[key];\n        }, 6000);\n      }\n    });\n  }\n\n  private handleReleasingMessage(message: MyMessage, storage: MessagesStorage) {\n    const media = (message as Message.message).media;\n    if(media) {\n      const c = (media as MessageMedia.messageMediaWebPage).webpage as WebPage.webPage || media as MessageMedia.messageMediaPhoto | MessageMedia.messageMediaDocument;\n      const smth: Photo.photo | MyDocument = (c as MessageMedia.messageMediaPhoto).photo as any || (c as MessageMedia.messageMediaDocument).document as any;\n\n      if(smth?.file_reference) {\n        this.referenceDatabase.deleteContext(smth.file_reference, {type: 'message', peerId: message.peerId, messageId: message.mid});\n      }\n\n      if('webpage' in media && media.webpage) {\n        const isScheduled = this.getScheduledMessagesStorage(message.peerId) === storage;\n        const messageKey = this.appWebPagesManager.getMessageKeyForPendingWebPage(message.peerId, message.mid, isScheduled);\n        this.appWebPagesManager.deleteWebPageFromPending(media.webpage, messageKey);\n      }\n\n      if((media as MessageMedia.messageMediaPoll).poll) {\n        this.appPollsManager.updatePollToMessage(message as Message.message, false);\n      }\n    }\n  }\n\n  private handleDeletedMessages(peerId: PeerId, storage: MessagesStorage, messages: number[]) {\n    const history: {\n      count: number,\n      unread: number,\n      unreadMentions: number,\n      msgs: Set<number>,\n      albums?: {[groupId: string]: Set<number>},\n    } = {\n      count: 0,\n      unread: 0,\n      unreadMentions: 0,\n      msgs: new Set()\n    };\n\n    for(const mid of messages) {\n      const message: MyMessage = this.getMessageFromStorage(storage, mid);\n      if(!message) {\n        this.fixDialogUnreadMentionsIfNoMessage(peerId);\n        continue;\n      }\n\n      this.handleReleasingMessage(message, storage);\n\n      this.updateMessageRepliesIfNeeded(message);\n\n      if(!message.pFlags.out && !message.pFlags.is_outgoing && message.pFlags.unread) {\n        ++history.unread;\n        this.rootScope.dispatchEvent('notification_cancel', 'msg' + mid);\n\n        if(message.pFlags.mentioned) {\n          ++history.unreadMentions;\n          this.modifyCachedMentions(peerId, mid, false);\n        }\n      }\n\n      ++history.count;\n      history.msgs.add(mid);\n\n      message.deleted = true;\n\n      const groupedId = (message as Message.message).grouped_id;\n      if(groupedId) {\n        const groupedStorage = this.groupedMessagesStorage[groupedId];\n        if(groupedStorage) {\n          this.deleteMessageFromStorage(groupedStorage, mid);\n\n          if(!history.albums) history.albums = {};\n          (history.albums[groupedId] || (history.albums[groupedId] = new Set())).add(mid);\n\n          if(!groupedStorage.size) {\n            delete history.albums;\n            delete this.groupedMessagesStorage[groupedId];\n          }\n        }\n      }\n\n      this.deleteMessageFromStorage(storage, mid);\n    }\n\n    if(history.albums) {\n      for(const groupedId in history.albums) {\n        this.dispatchAlbumEdit(groupedId, storage, [...history.albums[groupedId]]);\n        /* const mids = this.getMidsByAlbum(groupId);\n        if(mids.length) {\n          const mid = Math.max(...mids);\n          rootScope.$broadcast('message_edit', {peerId, mid, justMedia: false});\n        } */\n      }\n    }\n\n    return history;\n  }\n\n  private handleEditedMessage(oldMessage: Message, newMessage: Message, storage: MessagesStorage) {\n    if(oldMessage._ === 'message') {\n      if((oldMessage.media as MessageMedia.messageMediaWebPage)?.webpage) {\n        const messageKey = this.appWebPagesManager.getMessageKeyForPendingWebPage(oldMessage.peerId, oldMessage.mid, !!oldMessage.pFlags.is_scheduled);\n        this.appWebPagesManager.deleteWebPageFromPending((oldMessage.media as MessageMedia.messageMediaWebPage).webpage, messageKey);\n      }\n\n      const groupedId = oldMessage.grouped_id;\n      if(groupedId) {\n        this.dispatchAlbumEdit(groupedId, storage, []);\n      }\n    }\n  }\n\n  private dispatchAlbumEdit(groupedId: string, storage: MessagesStorage, deletedMids?: number[]) {\n    const mids = this.getMidsByAlbum(groupedId);\n    const messages = mids.map((mid) => this.getMessageFromStorage(storage, mid)) as Message.message[];\n    this.rootScope.dispatchEvent('album_edit', {peerId: messages[0].peerId, groupId: groupedId, deletedMids: deletedMids || [], messages});\n  }\n\n  public getDialogUnreadCount(dialog: Dialog | ForumTopic) {\n    let unreadCount = dialog.unread_count;\n    if(!this.dialogsStorage.isTopic(dialog) && this.appPeersManager.isForum(dialog.peerId)) {\n      const forumUnreadCount = this.dialogsStorage.getForumUnreadCount(dialog.peerId);\n      if(forumUnreadCount instanceof Promise) {\n        unreadCount = 0;\n      } else {\n        unreadCount = forumUnreadCount.count;\n      }\n    }\n\n    return unreadCount || +!!(dialog as Dialog).pFlags?.unread_mark;\n  }\n\n  public isDialogUnread(dialog: Dialog | ForumTopic) {\n    return !!this.getDialogUnreadCount(dialog);\n  }\n\n  public canForward(message: Message.message | Message.messageService) {\n    return message?._ === 'message' && !(message as Message.message).pFlags.noforwards && !this.appPeersManager.noForwards(message.peerId);\n  }\n\n  private pushBatchUpdate<E extends keyof BatchUpdates, C extends BatchUpdates[E]>(\n    event: E,\n    callback: C,\n    key: string,\n    getElementCallback?: () => MapValueType<ArgumentTypes<C>[0]>\n  ) {\n    let details = this.batchUpdates[event];\n    if(!details) {\n      // @ts-ignore\n      details = this.batchUpdates[event] = {\n        callback,\n        batch: new Map()\n      };\n    }\n\n    if(!details.batch.has(key)) {\n      // @ts-ignore\n      details.batch.set(key, getElementCallback ? getElementCallback() : undefined);\n      this.batchUpdatesDebounced();\n    }\n  }\n\n  private getMessagesFromMap<T extends Map<any, any>>(map: T) {\n    const newMap: Map<Message.message, MapValueType<T>> = new Map();\n    for(const [key, value] of map) {\n      const [peerIdStr, mid] = key.split('_');\n      const message = this.getMessageByPeer(peerIdStr.toPeerId(), +mid) as Message.message;\n      if(!message) {\n        continue;\n      }\n\n      newMap.set(message, value);\n    }\n\n    return newMap;\n  }\n\n  private batchUpdateViews = (batch: Map<string, undefined>) => {\n    const toDispatch: {peerId: PeerId, mid: number, views: number}[] = [];\n\n    const map = this.getMessagesFromMap(batch);\n    for(const [message] of map) {\n      toDispatch.push({\n        peerId: message.peerId,\n        mid: message.mid,\n        views: message.views\n      })\n    }\n\n    return toDispatch;\n  };\n\n  private batchUpdateReactions = (batch: Map<string, MessageReactions>) => {\n    const toDispatch: {message: Message.message, changedResults: ReactionCount.reactionCount[]}[] = [];\n\n    const map = this.getMessagesFromMap(batch);\n    for(const [message, previousReactions] of map) {\n      const results = message.reactions?.results ?? [];\n      const previousResults = previousReactions?.results ?? [];\n      const changedResults = results.filter((reactionCount) => {\n        const previousReactionCount = previousResults.find((_reactionCount) => reactionsEqual(_reactionCount.reaction, reactionCount.reaction));\n        return (\n          message.pFlags.out && (\n            !previousReactionCount ||\n            reactionCount.count > previousReactionCount.count\n          )\n        ) || (\n          reactionCount.chosen_order !== undefined && (\n            !previousReactionCount ||\n            previousReactionCount.chosen_order === undefined\n          )\n        );\n      });\n\n      toDispatch.push({message, changedResults});\n    }\n\n    return toDispatch;\n  };\n\n  public saveDefaultSendAs(peerId: PeerId, sendAsPeerId: PeerId) {\n    const channelFull = this.appProfileManager.getCachedFullChat(peerId.toChatId()) as ChatFull.channelFull;\n    channelFull.default_send_as = this.appPeersManager.getOutputPeer(sendAsPeerId);\n    return this.apiManager.invokeApi('messages.saveDefaultSendAs', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      send_as: this.appPeersManager.getInputPeerById(sendAsPeerId)\n    });\n  }\n\n  public sendBotRequestedPeer(peerId: PeerId, mid: number, buttonId: number, requestedPeerId: PeerId) {\n    return this.apiManager.invokeApi('messages.sendBotRequestedPeer', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid),\n      button_id: buttonId,\n      requested_peer: this.appPeersManager.getInputPeerById(requestedPeerId)\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {getFileNameByLocation} from '../../../../helpers/fileName';\nimport {Document} from '../../../../layer';\nimport getDocumentInputFileLocation from './getDocumentInputFileLocation';\n\nexport default function getDocumentInputFileName(doc: Document.document, thumbSize?: string) {\n  return getFileNameByLocation(getDocumentInputFileLocation(doc, thumbSize), {fileName: doc.file_name});\n}\n","export default function convertInputKeyToKey<T extends string>(inputKey: string) {\n  const str = inputKey.replace('input', '');\n  return (str[0].toLowerCase() + str.slice(1)) as T;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport tsNow from '../../helpers/tsNow';\nimport {InputNotifyPeer, InputPeerNotifySettings, NotifyPeer, Peer, PeerNotifySettings, Update} from '../../layer';\nimport {MUTE_UNTIL} from '../mtproto/mtproto_config';\nimport throttle from '../../helpers/schedulers/throttle';\nimport convertInputKeyToKey from '../../helpers/string/convertInputKeyToKey';\nimport {AppManager} from './manager';\nimport ctx from '../../environment/ctx';\nimport assumeType from '../../helpers/assumeType';\n\ntype ImSadAboutIt = Promise<PeerNotifySettings> | PeerNotifySettings;\ntype MyNotifyPeer = Exclude<NotifyPeer['_'], 'notifyPeer' | 'notifyForumTopic'>;\ntype MyInputNotifyPeer = Exclude<InputNotifyPeer['_'], 'inputNotifyPeer' | 'inputNotifyForumTopic'>;\nexport class AppNotificationsManager extends AppManager {\n  private peerSettings = {\n    notifyPeer: {} as {[peerId: string]: ImSadAboutIt},\n    notifyUsers: null as ImSadAboutIt,\n    notifyChats: null as ImSadAboutIt,\n    notifyBroadcasts: null as ImSadAboutIt,\n    notifyForumTopic: {} as {[peerId_threadId: string]: ImSadAboutIt}\n  };\n  // private exceptions: {[peerId: string]: PeerNotifySettings} = {};\n\n  private getNotifyPeerTypePromise: Promise<any>;\n\n  private checkMuteUntilTimeout: number;\n  private checkMuteUntilThrottled: () => void;\n\n  private notifyContactsSignUp: Promise<boolean>;\n\n  protected after() {\n    this.checkMuteUntilThrottled = throttle(this.checkMuteUntil, 1000, false);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateNotifySettings: (update) => {\n        const {peer} = update;\n        const isTopic = peer._ === 'notifyForumTopic';\n        const isPeerType = peer._ === 'notifyPeer' || isTopic;\n        const peerId = isPeerType && this.appPeersManager.getPeerId(peer.peer);\n        const key = !isPeerType ? peer._ : undefined;\n        this.savePeerSettings({\n          key,\n          peerId,\n          threadId: isTopic ? this.appMessagesIdsManager.generateMessageId(peer.top_msg_id, (peer.peer as Peer.peerChannel).channel_id) : undefined,\n          settings: update.notify_settings\n        });\n        this.rootScope.dispatchEvent('notify_settings', update);\n      }\n    });\n\n    return this.appStateManager.getState().then((state) => {\n      if(state.notifySettings) {\n        for(const key in state.notifySettings) {\n          assumeType<MyNotifyPeer>(key);\n          this.savePeerSettings({\n            key,\n            settings: state.notifySettings[key]\n          });\n        }\n      }\n    });\n  }\n\n  public getNotifySettings(peer: InputNotifyPeer): ImSadAboutIt {\n    let key: any = convertInputKeyToKey(peer._);\n    let obj: any = this.peerSettings[key as MyNotifyPeer];\n\n    let peerId: PeerId;\n    if(peer._ === 'inputNotifyPeer') {\n      peerId = key = this.appPeersManager.getPeerId(peer.peer);\n      obj = obj[key];\n    }\n\n    if(obj) {\n      return obj;\n    }\n\n    return (obj || this.peerSettings)[key] = this.apiManager.invokeApi('account.getNotifySettings', {peer})\n    .then((settings) => {\n      this.savePeerSettings({\n        key,\n        peerId,\n        settings\n      });\n\n      return settings;\n    });\n  }\n\n  public getNotifyPeerTypeSettings() {\n    if(this.getNotifyPeerTypePromise) return this.getNotifyPeerTypePromise;\n\n    const promises = (['inputNotifyBroadcasts', 'inputNotifyUsers', 'inputNotifyChats'] as MyInputNotifyPeer[])\n    .map((inputKey) => {\n      return this.getNotifySettings({_: inputKey});\n    });\n\n    return this.getNotifyPeerTypePromise = Promise.all(promises);\n  }\n\n  public updateNotifySettings(peer: InputNotifyPeer, settings: InputPeerNotifySettings) {\n    // this.savePeerSettings(peerId, settings);\n\n    /* const inputSettings: InputPeerNotifySettings = copy(settings) as any;\n    inputSettings._ = 'inputPeerNotifySettings'; */\n\n    return this.apiManager.invokeApi('account.updateNotifySettings', {\n      peer,\n      settings\n    }).then((value) => {\n      if(value) {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateNotifySettings',\n          peer: {\n            ...peer as any,\n            _: convertInputKeyToKey(peer._)\n          },\n          notify_settings: { // ! WOW, IT WORKS !\n            ...settings,\n            _: 'peerNotifySettings'\n          }\n        });\n      }\n    });\n  }\n\n  // public getNotifyExceptions() {\n  //   apiManager.invokeApi('account.getNotifyExceptions', {compare_sound: true})\n  //   .then((updates) => {\n  //     apiUpdatesManager.processUpdateMessage(updates);\n  //   });\n  // }\n\n  public getContactSignUpNotification() {\n    if(this.notifyContactsSignUp) return this.notifyContactsSignUp;\n    return this.notifyContactsSignUp = this.apiManager.invokeApi('account.getContactSignUpNotification');\n  }\n\n  public setContactSignUpNotification(silent: boolean) {\n    this.apiManager.invokeApi('account.setContactSignUpNotification', {silent})\n    .then((value) => {\n      this.notifyContactsSignUp = Promise.resolve(!silent);\n    });\n  }\n\n  private checkMuteUntil = () => {\n    if(this.checkMuteUntilTimeout !== undefined) {\n      clearTimeout(this.checkMuteUntilTimeout);\n      this.checkMuteUntilTimeout = undefined;\n    }\n\n    const timestamp = tsNow(true);\n    let closestMuteUntil = MUTE_UNTIL;\n\n    const p = (peerNotifySettings: ImSadAboutIt): peerNotifySettings is PeerNotifySettings => {\n      if(peerNotifySettings instanceof Promise) {\n        return false;\n      }\n\n      const muteUntil = peerNotifySettings.mute_until;\n      if(!muteUntil) {\n        return false;\n      }\n\n      if(muteUntil <= timestamp) {\n        // ! do not delete it because peer's unique settings will be overwritten in getPeerLocalSettings with type's settings\n        peerNotifySettings.mute_until = 0;\n        return true;\n      } else if(muteUntil < closestMuteUntil) {\n        closestMuteUntil = muteUntil;\n      }\n\n      return false;\n    };\n\n    [\n      'notifyPeer' as const,\n      'notifyForumTopic' as const\n    ].forEach((typeKey) => {\n      for(const key in this.peerSettings[typeKey]) {\n        const peerNotifySettings = this.peerSettings[typeKey][key];\n        if(p(peerNotifySettings)) {\n          const [peerId, topicId] = key.split('_');\n          const peer = this.appPeersManager.getOutputPeer(peerId.toPeerId());\n          this.apiUpdatesManager.saveUpdate({\n            _: 'updateNotifySettings',\n            peer: topicId ? {\n              _: 'notifyForumTopic',\n              peer,\n              top_msg_id: +topicId\n            } : {\n              _: 'notifyPeer',\n              peer\n            },\n            notify_settings: peerNotifySettings\n          });\n        }\n      }\n    });\n\n    const timeout = Math.min(1800e3, (closestMuteUntil - timestamp) * 1000);\n    this.checkMuteUntilTimeout = ctx.setTimeout(this.checkMuteUntil, timeout);\n  };\n\n  public getPeerKey(peerId: PeerId, threadId?: number) {\n    return peerId + (threadId ? '_' + threadId : '');\n  }\n\n  public savePeerSettings({key, peerId, threadId, settings}: {\n    key?: Exclude<NotifyPeer['_'], 'notifyPeer'>,\n    peerId?: PeerId,\n    threadId?: number,\n    settings: PeerNotifySettings\n  }) {\n    let obj: any;\n    if(peerId) {\n      key = this.getPeerKey(peerId, threadId) as any;\n      obj = this.peerSettings[threadId ? 'notifyForumTopic' : 'notifyPeer'];\n    }\n\n    (obj || this.peerSettings)[key] = settings;\n\n    if(!peerId) {\n      this.rootScope.dispatchEvent('notify_peer_type_settings', {key, settings});\n      this.appStateManager.getState().then((state) => {\n        const notifySettings = state.notifySettings;\n        notifySettings[key] = settings;\n        this.appStateManager.pushToState('notifySettings', notifySettings);\n      });\n    } else {\n      this.checkMuteUntilThrottled();\n    }\n\n    // rootScope.broadcast('notify_settings', {peerId: peerId});\n  }\n\n  public isMuted(peerNotifySettings: PeerNotifySettings) {\n    return peerNotifySettings._ === 'peerNotifySettings' &&\n      (peerNotifySettings.silent || (peerNotifySettings.mute_until !== undefined && (peerNotifySettings.mute_until * 1000) > tsNow()));\n  }\n\n  private getPeerMuted(peerId: PeerId) {\n    const ret = this.getNotifySettings({_: 'inputNotifyPeer', peer: this.appPeersManager.getInputPeerById(peerId)});\n    return (ret instanceof Promise ? ret : Promise.resolve(ret))\n    .then((peerNotifySettings) => this.isMuted(peerNotifySettings));\n  }\n\n  private getPeerLocalSettings({\n    peerId,\n    respectType = true,\n    threadId\n  }: {\n    peerId: PeerId,\n    respectType?: boolean,\n    threadId?: number\n  }): PeerNotifySettings {\n    const n: PeerNotifySettings = {\n      _: 'peerNotifySettings'\n    };\n\n    const peerKey = this.getPeerKey(peerId, threadId);\n    const notifySettings = this.peerSettings[threadId ? 'notifyForumTopic' : 'notifyPeer'][peerKey];\n    // if(!notifySettings || (notifySettings instanceof Promise)) return false;\n    if(notifySettings && !(notifySettings instanceof Promise)) {\n      Object.assign(n, notifySettings);\n    }\n\n    if(respectType) {\n      const inputNotify = this.appPeersManager.getInputNotifyPeerById({peerId, ignorePeerId: true, threadId});\n      const key = convertInputKeyToKey(inputNotify._);\n      const typeNotifySettings = this.peerSettings[key as MyNotifyPeer];\n      if(typeNotifySettings && !(typeNotifySettings instanceof Promise)) {\n        for(const i in typeNotifySettings) {\n          // @ts-ignore\n          if(n[i] === undefined) {\n            // @ts-ignore\n            n[i] = typeNotifySettings[i];\n          }\n        }\n      }\n    }\n\n    return n;\n  }\n\n  public validatePeerSettings<T extends Parameters<AppNotificationsManager['getPeerLocalSettings']>[0]>(options: T): T {\n    if(options.peerId === this.appPeersManager.peerId) return;\n    if(options.threadId && !this.appPeersManager.isForum(options.peerId)) options.threadId = undefined;\n    return options;\n  }\n\n  public isPeerLocalMuted(options: Parameters<AppNotificationsManager['getPeerLocalSettings']>[0]): boolean {\n    if(!(options = this.validatePeerSettings(options))) return false;\n\n    if(options.threadId) {\n      const notifySettings = this.getPeerLocalSettings({...options, respectType: false});\n      if(notifySettings.silent !== undefined || notifySettings.mute_until !== undefined) {\n        return this.isMuted(notifySettings);\n      } else {\n        return this.isPeerLocalMuted({...options, threadId: undefined});\n      }\n    }\n\n    const notifySettings = this.getPeerLocalSettings(options);\n    const isMuted = this.isMuted(notifySettings);\n    return isMuted;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {Chat, ChatPhoto, DialogPeer, InputChannel, InputDialogPeer, InputNotifyPeer, InputPeer, Peer, Update, User, UserProfilePhoto} from '../../layer';\nimport type {LangPackKey} from '../langPack';\nimport {getRestrictionReason} from '../../helpers/restrictions';\nimport isObject from '../../helpers/object/isObject';\nimport {AppManager} from './manager';\nimport getPeerId from './utils/peers/getPeerId';\nimport isUser from './utils/peers/isUser';\nimport isAnyChat from './utils/peers/isAnyChat';\nimport {NULL_PEER_ID} from '../mtproto/mtproto_config';\nimport getPeerActiveUsernames from './utils/peers/getPeerActiveUsernames';\nimport isPeerRestricted from './utils/peers/isPeerRestricted';\nimport getPeerPhoto from './utils/peers/getPeerPhoto';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\n\nexport type PeerType = 'channel' | 'chat' | 'megagroup' | 'group' | 'saved';\nexport class AppPeersManager extends AppManager {\n  public get peerId() {\n    return this.appUsersManager.userId.toPeerId();\n  }\n  /* public savePeerInstance(peerId: PeerId, instance: any) {\n    if(peerId < 0) appChatsManager.saveApiChat(instance);\n    else appUsersManager.saveApiUser(instance);\n  } */\n\n  public canPinMessage(peerId: PeerId) {\n    return peerId.isUser() || this.appChatsManager.hasRights(peerId.toChatId(), 'pin_messages');\n  }\n\n  public getPeerPhoto(peerId: PeerId) {\n    const peer = this.getPeer(peerId) as User.user | Chat.channel;\n    return getPeerPhoto(peer);\n  }\n\n  public getPeerMigratedTo(peerId: PeerId) {\n    if(peerId.isUser()) {\n      return;\n    }\n\n    const chat = this.appChatsManager.getChat(peerId.toChatId()) as Chat.chat;\n    const migratedTo = chat?.migrated_to;\n    if(migratedTo && chat.pFlags.deactivated) {\n      return getPeerId(migratedTo);\n    }\n  }\n\n  public getOutputPeer(peerId: PeerId): Peer {\n    if(peerId.isUser()) {\n      return {_: 'peerUser', user_id: peerId.toUserId()};\n    }\n\n    const chatId = peerId.toChatId();\n    if(this.appChatsManager.isChannel(chatId)) {\n      return {_: 'peerChannel', channel_id: chatId};\n    }\n\n    return {_: 'peerChat', chat_id: chatId};\n  }\n\n  public getPeerString(peerId: PeerId) {\n    if(peerId.isUser()) {\n      return this.appUsersManager.getUserString(peerId.toUserId());\n    }\n    return this.appChatsManager.getChatString(peerId.toChatId());\n  }\n\n  public getPeerUsername(peerId: PeerId) {\n    return this.getPeerActiveUsernames(peerId)[0] || '';\n  }\n\n  public getPeerActiveUsernames(peerId: PeerId) {\n    const peer = this.getPeer(peerId);\n    return getPeerActiveUsernames(peer);\n  }\n\n  public getPeer(peerId: PeerId) {\n    return peerId.isUser() ?\n      this.appUsersManager.getUser(peerId.toUserId()) :\n      this.appChatsManager.getChat(peerId.toChatId());\n  }\n\n  public getPeerId(peerId: Parameters<typeof getPeerId>[0]) {\n    return getPeerId(peerId) || (isObject<InputPeer>(peerId) && peerId._ === 'inputPeerSelf' && this.peerId) || NULL_PEER_ID;\n  }\n\n  public getDialogPeer(peerId: PeerId): DialogPeer {\n    return {\n      _: 'dialogPeer',\n      peer: this.getOutputPeer(peerId)\n    };\n  }\n\n  public isChannel(peerId: PeerId): boolean {\n    return !peerId.isUser() && this.appChatsManager.isChannel(peerId.toChatId());\n  }\n\n  public isMegagroup(peerId: PeerId) {\n    return !peerId.isUser() && this.appChatsManager.isMegagroup(peerId.toChatId());\n  }\n\n  public isForum(peerId: PeerId) {\n    return !peerId.isUser() && this.appChatsManager.isForum(peerId.toChatId());\n  }\n\n  public isAnyGroup(peerId: PeerId): boolean {\n    return !peerId.isUser() && !this.appChatsManager.isBroadcast(peerId.toChatId());\n  }\n\n  public isBroadcast(peerId: PeerId): boolean {\n    return this.isChannel(peerId) && !this.isMegagroup(peerId);\n  }\n\n  public isBot(peerId: PeerId): boolean {\n    return peerId.isUser() && this.appUsersManager.isBot(peerId.toUserId());\n  }\n\n  public isContact(peerId: PeerId): boolean {\n    return peerId.isUser() && this.appUsersManager.isContact(peerId.toUserId());\n  }\n\n  public isUser(peerId: PeerId)/* : peerId is UserId */ {\n    return isUser(peerId);\n  }\n\n  public isRegularUser(peerId: PeerId) {\n    return this.isUser(peerId) && this.appUsersManager.isRegularUser(peerId);\n  }\n\n  public isAnyChat(peerId: PeerId) {\n    return isAnyChat(peerId);\n  }\n\n  public isPeerRestricted(peerId: PeerId) {\n    return isPeerRestricted(this.getPeer(peerId));\n  }\n\n  public getRestrictionReasonText(peerId: PeerId) {\n    const peer = this.getPeer(peerId) as Chat.channel | User.user;\n    const reason = peer.restriction_reason ? getRestrictionReason(peer.restriction_reason) : undefined;\n    if(reason) {\n      return reason.text;\n    } else {\n      return peerId.isUser() ? 'This user is restricted' : 'This chat is restricted';\n    }\n  }\n\n  /* public getInputPeer(peerString: string): InputPeer {\n    var firstChar = peerString.charAt(0);\n    var peerParams = peerString.substr(1).split('_');\n    let id = +peerParams[0];\n\n    if(firstChar === 'u') {\n      //appUsersManager.saveUserAccess(id, peerParams[1]);\n\n      return {\n        _: 'inputPeerUser',\n        user_id: id,\n        access_hash: peerParams[1]\n      };\n    } else if(firstChar === 'c' || firstChar === 's') {\n      //appChatsManager.saveChannelAccess(id, peerParams[1]);\n      if(firstChar === 's') {\n        appChatsManager.saveIsMegagroup(id);\n      }\n\n      return {\n        _: 'inputPeerChannel',\n        channel_id: id,\n        access_hash: peerParams[1] || '0'\n      };\n    } else {\n      return {\n        _: 'inputPeerChat',\n        chat_id: id\n      };\n    }\n  } */\n\n  // public getInputNotifyPeerById(peerId: PeerId, ignorePeerId: true): Exclude<InputNotifyPeer, InputNotifyPeer.inputNotifyPeer>;\n  // public getInputNotifyPeerById(peerId: PeerId, ignorePeerId?: false): InputNotifyPeer.inputNotifyPeer;\n  // public getInputNotifyPeerById(peerId: PeerId, ignorePeerId?: boolean): InputNotifyPeer {\n  public getInputNotifyPeerById<T extends {\n    peerId: PeerId,\n    ignorePeerId?: boolean,\n    threadId?: number\n  }>({\n    peerId,\n    ignorePeerId,\n    threadId\n  }: T): T['ignorePeerId'] extends true ? Exclude<InputNotifyPeer, InputNotifyPeer.inputNotifyPeer | InputNotifyPeer.inputNotifyForumTopic> : (T['threadId'] extends number ? InputNotifyPeer.inputNotifyForumTopic : InputNotifyPeer.inputNotifyPeer) {\n    if(ignorePeerId) {\n      if(peerId.isUser()) {\n        return {_: 'inputNotifyUsers'} as any;\n      } else {\n        if(this.isBroadcast(peerId)) {\n          return {_: 'inputNotifyBroadcasts'} as any;\n        } else {\n          return {_: 'inputNotifyChats'} as any;\n        }\n      }\n    } else if(threadId) {\n      return {\n        _: 'inputNotifyForumTopic',\n        peer: this.getInputPeerById(peerId),\n        top_msg_id: getServerMessageId(threadId)\n      } as any;\n    } else {\n      return {\n        _: 'inputNotifyPeer',\n        peer: this.getInputPeerById(peerId)\n      } as any;\n    }\n  }\n\n  public getInputPeerById(peerId: PeerId): InputPeer {\n    if(!peerId) {\n      return {_: 'inputPeerEmpty'};\n    }\n\n    if(!peerId.isUser()) {\n      const chatId = peerId.toChatId();\n      return this.appChatsManager.getInputPeer(chatId);\n    }\n\n    const userId = peerId.toUserId();\n    return this.appUsersManager.getUserInputPeer(userId);\n  }\n\n  /**\n   * ! use it only in safe places like requests\n   */\n  public getInputPeerSelf(): InputPeer.inputPeerSelf {\n    return {_: 'inputPeerSelf'};\n  }\n\n  public getInputDialogPeerById(peerId: PeerId | InputPeer): InputDialogPeer {\n    return {\n      _: 'inputDialogPeer',\n      peer: isObject<InputPeer>(peerId) ? peerId : this.getInputPeerById(peerId)\n    };\n  }\n\n  public getPeerSearchText(peerId: PeerId) {\n    let text: string;\n    if(this.isUser(peerId)) {\n      text = '%pu ' + this.appUsersManager.getUserSearchText(peerId.toUserId());\n    } else {\n      const chat = this.appChatsManager.getChat(peerId.toChatId());\n      text = '%pg ' + (chat.title || '');\n    }\n\n    return text;\n  }\n\n  public getDialogType(peerId: PeerId): PeerType {\n    if(this.isMegagroup(peerId)) {\n      return 'megagroup';\n    } else if(this.isChannel(peerId)) {\n      return 'channel';\n    } else if(!this.isUser(peerId)) {\n      return 'group';\n    } else {\n      return peerId === this.peerId ? 'saved' : 'chat';\n    }\n  }\n\n  public getDeleteButtonText(peerId: PeerId): Extract<LangPackKey, 'ChannelDelete' | 'ChatList.Context.LeaveChannel' | 'DeleteMega' | 'ChatList.Context.LeaveGroup' | 'ChatList.Context.DeleteChat'> {\n    switch(this.getDialogType(peerId)) {\n      case 'channel':\n        return this.appChatsManager.hasRights(peerId.toChatId(), 'delete_chat') ? 'ChannelDelete' : 'ChatList.Context.LeaveChannel';\n\n      case 'megagroup':\n      case 'group':\n        return this.appChatsManager.hasRights(peerId.toChatId(), 'delete_chat') ? 'DeleteMega' : 'ChatList.Context.LeaveGroup';\n\n      default:\n        return 'ChatList.Context.DeleteChat';\n    }\n  }\n\n  public noForwards(peerId: PeerId) {\n    if(peerId.isUser()) return false;\n    else {\n      const chat = this.appChatsManager.getChat(peerId.toChatId());\n      return !!(chat as Chat.chat).pFlags?.noforwards;\n    }\n  }\n}\n\nexport type IsPeerType = 'isChannel' | 'isMegagroup' | 'isAnyGroup' | 'isBroadcast' | 'isBot' | 'isContact' | 'isUser' | 'isAnyChat' | 'isRegularUser';\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {Photo, PhotoSize, PhotosPhotos} from '../../layer';\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport isObject from '../../helpers/object/isObject';\nimport safeReplaceArrayInObject from '../../helpers/object/safeReplaceArrayInObject';\nimport {AppManager} from './manager';\n\nexport type MyPhoto = Photo.photo;\n\n// TIMES = 2 DUE TO SIDEBAR AND CHAT\n// let TEST_FILE_REFERENCE = \"5440692274120994569\", TEST_FILE_REFERENCE_TIMES = 2;\n\nexport class AppPhotosManager extends AppManager {\n  private photos: {\n    [id: string]: MyPhoto\n  } = {};\n\n  public savePhoto(photo: Photo, context?: ReferenceContext) {\n    if(!photo || photo._ === 'photoEmpty') return;\n\n    /* if(photo.id === TEST_FILE_REFERENCE) {\n      console.warn('Testing FILE_REFERENCE_EXPIRED');\n      const bytes = [2, 67, 175, 43, 190, 0, 0, 20, 62, 95, 111, 33, 45, 99, 220, 116, 218, 11, 167, 127, 213, 18, 127, 32, 243, 202, 117, 80, 30];\n      //photo.file_reference = new Uint8Array(bytes);\n      photo.file_reference = bytes;\n      if(!--TEST_FILE_REFERENCE_TIMES) {\n        TEST_FILE_REFERENCE = '';\n      }\n    } */\n\n    const oldPhoto = this.photos[photo.id];\n    if(photo.file_reference) { // * because we can have a new object w/o the file_reference while sending\n      safeReplaceArrayInObject('file_reference', oldPhoto, photo);\n      this.referenceDatabase.saveContext(photo.file_reference, context);\n    }\n\n    if(photo.sizes?.length) {\n      // * sometimes photoStrippedSize can be the last item\n      photo.sizes.sort((a, b) => {\n        return ((a as PhotoSize.photoSize).size || ((a as PhotoSize.photoSizeProgressive).sizes ? Infinity : 0)) - ((b as PhotoSize.photoSize).size || ((b as PhotoSize.photoSizeProgressive).sizes ? Infinity : 0));\n      });\n\n      const size = photo.sizes[photo.sizes.length - 1];\n      if(size._ === 'photoSizeProgressive') {\n        size.size = size.sizes[size.sizes.length - 1];\n      }\n    }\n\n    if(oldPhoto) {\n      return Object.assign(oldPhoto, photo);\n    }\n\n    return this.photos[photo.id] = photo;\n  }\n\n  public getUserPhotos(userId: UserId, maxId: Photo.photo['id'] = '0', limit: number = 20) {\n    const inputUser = this.appUsersManager.getUserInput(userId);\n    return this.apiManager.invokeApiCacheable('photos.getUserPhotos', {\n      user_id: inputUser,\n      offset: 0,\n      limit,\n      max_id: maxId\n    }, {cacheSeconds: 60}).then((photosResult) => {\n      this.appUsersManager.saveApiUsers(photosResult.users);\n      const photoIds = photosResult.photos.map((photo, idx) => {\n        photosResult.photos[idx] = this.savePhoto(photo, {type: 'profilePhoto', peerId: userId.toPeerId()});\n        return photo.id;\n      });\n\n      // ! WARNING !\n      if(maxId !== '0' && maxId) {\n        const idx = photoIds.indexOf(maxId);\n        if(idx !== -1) {\n          photoIds.splice(idx, 1);\n        }\n      }\n\n      return {\n        count: (photosResult as PhotosPhotos.photosPhotosSlice).count || photoIds.length,\n        photos: photoIds\n      };\n    });\n  }\n\n  /* public getPhotoURL(photo: MTPhoto | MTMyDocument, photoSize: MTPhotoSize) {\n    const downloadOptions = this.getPhotoDownloadOptions(photo, photoSize);\n\n    return {url: getFileURL('photo', downloadOptions), location: downloadOptions.location};\n  } */\n\n  /* public isDownloaded(media: any) {\n    const isPhoto = media._ === 'photo';\n    const photo = isPhoto ? this.getPhoto(media.id) : null;\n    let isDownloaded: boolean;\n    if(photo) {\n      isDownloaded = photo.downloaded > 0;\n    } else {\n      const cachedThumb = this.getDocumentCachedThumb(media.id);\n      isDownloaded = cachedThumb?.downloaded > 0;\n    }\n\n    return isDownloaded;\n  } */\n\n  public getPhoto(photoId: any/* MyPhoto | string */): MyPhoto {\n    return isObject(photoId) ? photoId as MyPhoto : this.photos[photoId as any as string];\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport copy from '../../helpers/object/copy';\nimport {InputMedia, Message, MessageEntity, MessageMedia, Poll, PollResults} from '../../layer';\nimport {logger, LogTypes} from '../logger';\nimport parseMarkdown from '../richTextProcessor/parseMarkdown';\nimport {AppManager} from './manager';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\n\ntype PollId = Poll['id'];\n\nexport class AppPollsManager extends AppManager {\n  public polls: {[id: PollId]: Poll} = {};\n  public results: {[id: PollId]: PollResults} = {};\n  public pollToMessages: {[id: PollId]: Set<string>} = {};\n\n  private log = logger('POLLS', LogTypes.Error);\n\n  protected after() {\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateMessagePoll: (update) => {\n        this.log('updateMessagePoll:', update);\n\n        let poll: Poll = update.poll || this.polls[update.poll_id];\n        if(!poll) {\n          return;\n        }\n\n        let results = update.results;\n        const ret = this.savePoll(poll, results as any);\n        poll = ret.poll;\n        results = ret.results;\n\n        this.rootScope.dispatchEvent('poll_update', {poll, results: results as any});\n      }\n    });\n  }\n\n  public savePoll(poll: Poll, results: PollResults, message?: Message.message) {\n    if(message) {\n      this.updatePollToMessage(message, true);\n    }\n\n    const id = poll.id;\n    if(this.polls[id]) {\n      poll = Object.assign(this.polls[id], poll);\n      results = this.saveResults(poll, results);\n    } else {\n      this.polls[id] = poll;\n\n      poll.chosenIndexes = [];\n      results = this.saveResults(poll, results);\n    }\n\n    return {poll, results};\n  }\n\n  public saveResults(poll: Poll, results: PollResults) {\n    if(this.results[poll.id]) {\n      results = Object.assign(this.results[poll.id], results);\n    } else {\n      this.results[poll.id] = results;\n    }\n\n    if(!results.pFlags.min) { // ! https://core.telegram.org/constructor/pollResults - min\n      poll.chosenIndexes.length = 0;\n      if(results?.results?.length) {\n        results.results.forEach((answer, idx) => {\n          if(answer.pFlags?.chosen) {\n            poll.chosenIndexes.push(idx);\n          }\n        });\n      }\n    }\n\n    return results;\n  }\n\n  public getPoll(pollId: PollId): {poll: Poll, results: PollResults} {\n    return {\n      poll: this.polls[pollId],\n      results: this.results[pollId]\n    };\n  }\n\n  public getInputMediaPoll(poll: Poll, correctAnswers?: Uint8Array[], solution?: string, solutionEntities?: MessageEntity[]): InputMedia.inputMediaPoll {\n    if(solution) {\n      if(!solutionEntities) {\n        solutionEntities = [];\n      }\n\n      solution = parseMarkdown(solution, solutionEntities);\n    } else {\n      solution = undefined; // can be string here\n    }\n\n    return {\n      _: 'inputMediaPoll',\n      poll,\n      correct_answers: correctAnswers,\n      solution,\n      solution_entities: solution ? solutionEntities : undefined\n    };\n  }\n\n  public updatePollToMessage(message: Message.message, add: boolean) {\n    const {id} = (message.media as MessageMedia.messageMediaPoll).poll;\n    let set = this.pollToMessages[id];\n\n    if(!add && !set) {\n      return;\n    }\n\n    if(!set) {\n      set = this.pollToMessages[id] = new Set();\n    }\n\n    const key = message.peerId + '_' + message.mid;\n    if(add) set.add(key);\n    else set.delete(key);\n\n    if(!add && !set.size) {\n      delete this.polls[id];\n      delete this.results[id];\n      delete this.pollToMessages[id];\n    }\n  }\n\n  public sendVote(message: Message.message, optionIds: number[]): Promise<void> {\n    const poll: Poll = (message.media as MessageMedia.messageMediaPoll).poll;\n\n    const options: Uint8Array[] = optionIds.map((index) => {\n      return poll.answers[index].option;\n    });\n\n    const messageId = message.mid;\n    const peerId = message.peerId;\n    const inputPeer = this.appPeersManager.getInputPeerById(peerId);\n\n    if(message.pFlags.is_outgoing) {\n      return this.appMessagesManager.invokeAfterMessageIsSent(messageId, 'sendVote', (message) => {\n        this.log('invoke sendVote callback');\n        return this.sendVote(message as Message.message, optionIds);\n      });\n    }\n\n    return this.apiManager.invokeApi('messages.sendVote', {\n      peer: inputPeer,\n      msg_id: getServerMessageId(message.mid),\n      options\n    }).then((updates) => {\n      this.log('sendVote updates:', updates);\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public getResults(message: Message.message) {\n    const inputPeer = this.appPeersManager.getInputPeerById(message.peerId);\n\n    return this.apiManager.invokeApi('messages.getPollResults', {\n      peer: inputPeer,\n      msg_id: getServerMessageId(message.mid)\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n      this.log('getResults updates:', updates);\n    });\n  }\n\n  public getVotes(message: Message.message, option?: Uint8Array, offset?: string, limit = 20) {\n    return this.apiManager.invokeApi('messages.getPollVotes', {\n      peer: this.appPeersManager.getInputPeerById(message.peerId),\n      id: getServerMessageId(message.mid),\n      option,\n      offset,\n      limit\n    }).then((votesList) => {\n      this.log('getPollVotes messages:', votesList);\n\n      this.appUsersManager.saveApiUsers(votesList.users);\n\n      return votesList;\n    });\n  }\n\n  public stopPoll(message: Message.message) {\n    const poll: Poll = (message.media as MessageMedia.messageMediaPoll).poll;\n\n    if(poll.pFlags.closed) return Promise.resolve();\n\n    const newPoll = copy(poll);\n    newPoll.pFlags.closed = true;\n    return this.appMessagesManager.editMessage(message, undefined, {\n      newMedia: this.getInputMediaPoll(newPoll)\n    }).then(() => {\n      // console.log('stopped poll');\n    }, err => {\n      this.log.error('stopPoll error:', err);\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {InputPrivacyKey, InputPrivacyRule, PrivacyRule, PrivacyKey, GlobalPrivacySettings} from '../../layer';\nimport convertInputKeyToKey from '../../helpers/string/convertInputKeyToKey';\nimport {AppManager} from './manager';\n\nexport class AppPrivacyManager extends AppManager {\n  private privacy: Partial<{\n    [key in PrivacyKey['_']]: PrivacyRule[] | Promise<PrivacyRule[]>\n  }> = {};\n\n  protected after() {\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updatePrivacy: (update) => {\n        const key = update.key._;\n        this.privacy[key] = update.rules;\n        this.rootScope.dispatchEvent('privacy_update', update);\n      }\n    });\n  }\n\n  public setPrivacy(inputKey: InputPrivacyKey['_'], rules: InputPrivacyRule[]) {\n    return this.apiManager.invokeApi('account.setPrivacy', {\n      key: {\n        _: inputKey\n      },\n      rules\n    }).then((privacyRules) => {\n      this.appUsersManager.saveApiUsers(privacyRules.users);\n      this.appChatsManager.saveApiChats(privacyRules.chats);\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updatePrivacy',\n        key: {\n          _: convertInputKeyToKey(inputKey)\n        },\n        rules: rules.map((inputRule) => {\n          const rule: PrivacyRule = {} as any;\n          Object.assign(rule, inputRule);\n          rule._ = convertInputKeyToKey(rule._) as any;\n          return rule;\n        })\n      });\n\n      // console.log('privacy rules', inputKey, privacyRules, privacyRules.rules);\n\n      return privacyRules.rules;\n    });\n  }\n\n  public getPrivacy(inputKey: InputPrivacyKey['_']) {\n    const privacyKey: PrivacyKey['_'] = convertInputKeyToKey(inputKey) as any;\n    const rules = this.privacy[privacyKey];\n    if(rules) {\n      return Promise.resolve(rules);\n    }\n\n    return this.privacy[privacyKey] = this.apiManager.invokeApi('account.getPrivacy', {\n      key: {\n        _: inputKey\n      }\n    }).then((privacyRules) => {\n      this.appUsersManager.saveApiUsers(privacyRules.users);\n      this.appChatsManager.saveApiChats(privacyRules.chats);\n\n      // console.log('privacy rules', inputKey, privacyRules, privacyRules.rules);\n\n      return this.privacy[privacyKey] = privacyRules.rules;\n    });\n  }\n\n  public getGlobalPrivacySettings() {\n    return this.apiManager.invokeApi('account.getGlobalPrivacySettings');\n  }\n\n  public setGlobalPrivacySettings(settings: GlobalPrivacySettings) {\n    return this.apiManager.invokeApi('account.setGlobalPrivacySettings', {settings});\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {MyTopPeer} from './appUsersManager';\nimport tsNow from '../../helpers/tsNow';\nimport {ChannelParticipantsFilter, ChannelsChannelParticipants, ChannelParticipant, Chat, ChatFull, ChatParticipants, ChatPhoto, ExportedChatInvite, InputChannel, InputFile, SendMessageAction, Update, UserFull, Photo, PhotoSize, Updates} from '../../layer';\nimport SearchIndex from '../searchIndex';\nimport {AppManager} from './manager';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\nimport getPhotoInput from './utils/photos/getPhotoInput';\nimport getParticipantPeerId from './utils/chats/getParticipantPeerId';\nimport ctx from '../../environment/ctx';\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport assumeType from '../../helpers/assumeType';\nimport makeError from '../../helpers/makeError';\nimport callbackify from '../../helpers/callbackify';\n\nexport type UserTyping = Partial<{userId: UserId, action: SendMessageAction, timeout: number}>;\n\nconst PEER_FULL_TTL = 3 * 60e3;\n\nexport class AppProfileManager extends AppManager {\n  // private botInfos: any = {};\n  private usersFull: {[id: UserId]: UserFull.userFull} = {};\n  private chatsFull: {[id: ChatId]: ChatFull} = {};\n  private fullExpiration: {[peerId: PeerId]: number} = {};\n  private typingsInPeer: {[key: string]: UserTyping[]};\n\n  protected after() {\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateChatParticipants: this.onUpdateChatParticipants,\n\n      updateChatParticipantAdd: this.onUpdateChatParticipantAdd,\n\n      updateChatParticipantDelete: this.onUpdateChatParticipantDelete,\n\n      updateUserTyping: this.onUpdateUserTyping,\n      updateChatUserTyping: this.onUpdateUserTyping,\n      updateChannelUserTyping: this.onUpdateUserTyping,\n\n      updatePeerBlocked: this.onUpdatePeerBlocked\n    });\n\n    this.rootScope.addEventListener('chat_update', (chatId) => {\n      const fullChat = this.chatsFull[chatId];\n      const chat: Chat.chat | Chat.channel | Chat.chatForbidden | Chat.channelForbidden = this.appChatsManager.getChat(chatId);\n      if(!fullChat || !chat) {\n        return;\n      }\n\n      let updated = false;\n      if(!!fullChat.call !== !!(chat as Chat.chat).pFlags?.call_active) {\n        updated = true;\n      }\n\n      const {photo} = chat as Chat.chat;\n      if(photo) {\n        const hasChatPhoto = photo._ !== 'chatPhotoEmpty';\n        const hasFullChatPhoto = !!(fullChat.chat_photo && fullChat.chat_photo._ !== 'photoEmpty'); // chat_photo can be missing\n        if(\n          hasChatPhoto !== hasFullChatPhoto || (\n            hasChatPhoto &&\n            photo.photo_id !== fullChat.chat_photo?.id\n          )\n        ) {\n          updated = true;\n        }\n      }\n\n      if(updated) {\n        this.refreshFullPeer(chatId.toPeerId(true));\n      }\n    });\n\n    this.rootScope.addEventListener('channel_update', (chatId) => {\n      this.refreshFullPeer(chatId.toPeerId(true));\n    });\n\n    // * genius\n    this.rootScope.addEventListener('chat_full_update', (chatId) => {\n      this.rootScope.dispatchEvent('peer_full_update', chatId.toPeerId(true));\n    });\n\n    // * genius\n    this.rootScope.addEventListener('user_full_update', (userId) => {\n      this.rootScope.dispatchEvent('peer_full_update', userId.toPeerId(false));\n    });\n\n    this.rootScope.addEventListener('invalidate_participants', (chatId) => {\n      this.invalidateChannelParticipants(chatId);\n    });\n\n    this.typingsInPeer = {};\n  }\n\n  /* public saveBotInfo(botInfo: any) {\n    const botId = botInfo && botInfo.user_id;\n    if(!botId) {\n      return null;\n    }\n\n    const commands: any = {};\n    botInfo.commands.forEach((botCommand: any) => {\n      commands[botCommand.command] = botCommand.description;\n    });\n\n    return this.botInfos[botId] = {\n      id: botId,\n      version: botInfo.version,\n      shareText: botInfo.share_text,\n      description: botInfo.description,\n      commands: commands\n    };\n  } */\n\n  public getProfile(id: UserId, override?: true) {\n    if(this.usersFull[id] && !override && Date.now() < this.fullExpiration[id.toPeerId()]) {\n      return this.usersFull[id];\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'users.getFullUser',\n      params: {\n        id: this.appUsersManager.getUserInput(id)\n      },\n      processResult: (usersUserFull) => {\n        this.appChatsManager.saveApiChats(usersUserFull.chats, true);\n        this.appUsersManager.saveApiUsers(usersUserFull.users);\n\n        const userFull = usersUserFull.full_user;\n        const peerId = id.toPeerId(false);\n        if(userFull.profile_photo) {\n          userFull.profile_photo = this.appPhotosManager.savePhoto(userFull.profile_photo, {type: 'profilePhoto', peerId});\n        }\n\n        const botInfo = userFull.bot_info;\n        if(botInfo) {\n          const referenceContext: ReferenceContext = {type: 'userFull', userId: id};\n          botInfo.description_document = this.appDocsManager.saveDoc(botInfo.description_document, referenceContext);\n          botInfo.description_photo = this.appPhotosManager.savePhoto(botInfo.description_photo, referenceContext);\n        }\n\n        this.appNotificationsManager.savePeerSettings({\n          peerId,\n          settings: userFull.notify_settings\n        });\n\n        this.usersFull[id] = userFull;\n        this.fullExpiration[peerId] = Date.now() + PEER_FULL_TTL;\n\n        /* if(userFull.bot_info) {\n          userFull.bot_info = this.saveBotInfo(userFull.bot_info) as any;\n        } */\n\n        // appMessagesManager.savePinnedMessage(id, userFull.pinned_msg_id);\n\n        this.rootScope.dispatchEvent('user_full_update', id);\n        return userFull;\n      }\n    });\n  }\n\n  public getProfileByPeerId(peerId: PeerId, override?: true) {\n    if(this.appPeersManager.isAnyChat(peerId)) return this.getChatFull(peerId.toChatId(), override);\n    else return this.getProfile(peerId.toUserId(), override);\n  }\n\n  public getCachedFullChat(chatId: ChatId) {\n    return this.chatsFull[chatId];\n  }\n\n  public getCachedFullUser(userId: UserId) {\n    return this.usersFull[userId];\n  }\n\n  public getCachedProfileByPeerId(peerId: PeerId) {\n    return peerId.isUser() ? this.getCachedFullUser(peerId.toUserId()) : this.getCachedFullChat(peerId.toChatId());\n  }\n\n  public async getFullPhoto(peerId: PeerId) {\n    const profile = await this.getProfileByPeerId(peerId);\n    switch(profile._) {\n      case 'userFull':\n        return profile.profile_photo;\n      case 'channelFull':\n      case 'chatFull':\n        return profile.chat_photo;\n    }\n  }\n\n  /* public getPeerBots(peerId: PeerId) {\n    var peerBots: any[] = [];\n    if(peerId >= 0 && !appUsersManager.isBot(peerId) ||\n      (appPeersManager.isChannel(peerId) && !appPeersManager.isMegagroup(peerId))) {\n      return Promise.resolve(peerBots);\n    }\n    if(peerId >= 0) {\n      return this.getProfile(peerId).then((userFull: any) => {\n        var botInfo = userFull.bot_info;\n        if(botInfo && botInfo._ !== 'botInfoEmpty') {\n          peerBots.push(botInfo);\n        }\n        return peerBots;\n      });\n    }\n\n    return this.getChatFull(peerId.toChatId()).then((chatFull: any) => {\n      chatFull.bot_info.forEach((botInfo: any) => {\n        peerBots.push(this.saveBotInfo(botInfo))\n      });\n      return peerBots;\n    });\n  } */\n\n  public getChatFull(id: ChatId, override?: true) {\n    if(this.appChatsManager.isChannel(id)) {\n      return this.getChannelFull(id, override);\n    }\n\n    const peerId = id.toPeerId(true);\n    const fullChat = this.chatsFull[id] as ChatFull.chatFull;\n    if(fullChat && !override && Date.now() < this.fullExpiration[peerId]) {\n      const chat = this.appChatsManager.getChat(id) as Chat.chat;\n      if(\n        chat.pFlags.left ||\n        chat.pFlags.deactivated ||\n        chat.version === (fullChat.participants as ChatParticipants.chatParticipants).version\n      ) {\n        return fullChat as ChatFull;\n      }\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getFullChat',\n      params: {\n        chat_id: id\n      },\n      processResult: (result) => {\n        this.appChatsManager.saveApiChats(result.chats, true);\n        this.appUsersManager.saveApiUsers(result.users);\n        const chatFull = result.full_chat as ChatFull.chatFull;\n        if(chatFull && chatFull.chat_photo && chatFull.chat_photo.id) {\n          chatFull.chat_photo = this.appPhotosManager.savePhoto(chatFull.chat_photo, {type: 'profilePhoto', peerId});\n        }\n\n        if(chatFull.call) {\n          this.appGroupCallsManager.saveGroupCall(chatFull.call, id);\n        }\n\n        // appMessagesManager.savePinnedMessage(peerId, fullChat.pinned_msg_id);\n        this.appNotificationsManager.savePeerSettings({\n          peerId,\n          settings: chatFull.notify_settings\n        });\n\n        this.chatsFull[id] = chatFull;\n        this.fullExpiration[peerId] = Date.now() + PEER_FULL_TTL;\n        this.rootScope.dispatchEvent('chat_full_update', id);\n\n        return chatFull;\n      }\n    });\n  }\n\n  public async getChatInviteLink(id: ChatId, force?: boolean) {\n    const chatFull = await this.getChatFull(id);\n    if(!force &&\n      chatFull.exported_invite &&\n      chatFull.exported_invite._ == 'chatInviteExported') {\n      return chatFull.exported_invite.link;\n    }\n\n    return this.apiManager.invokeApi('messages.exportChatInvite', {\n      peer: this.appPeersManager.getInputPeerById(id.toPeerId(true))\n    }).then((exportedInvite) => {\n      if(this.chatsFull[id] !== undefined) {\n        this.chatsFull[id].exported_invite = exportedInvite;\n      }\n\n      return (exportedInvite as ExportedChatInvite.chatInviteExported).link;\n    });\n  }\n\n  public getParticipants(\n    id: ChatId,\n    filter: ChannelParticipantsFilter = {_: 'channelParticipantsRecent'},\n    limit = 200,\n    offset = 0\n  ) {\n    if(this.appChatsManager.isChannel(id)) {\n      return this.getChannelParticipants(id, filter, limit, offset);\n    }\n\n    return callbackify(this.getChatFull(id), (chatFull) => {\n      const chatParticipants = (chatFull as ChatFull.chatFull).participants;\n      if(chatParticipants._ !== 'chatParticipants') {\n        throw makeError('CHAT_PRIVATE');\n      }\n\n      if(filter._ === 'channelParticipantsSearch' && filter.q.trim()) {\n        const index = this.appUsersManager.createSearchIndex();\n        chatParticipants.participants.forEach((chatParticipant) => {\n          const userId = chatParticipant.user_id;\n          index.indexObject(userId, this.appUsersManager.getUserSearchText(userId));\n        });\n\n        const found = index.search(filter.q);\n        const filteredParticipants = chatParticipants.participants.filter((chatParticipant) => {\n          return found.has(chatParticipant.user_id);\n        });\n\n        return {...chatParticipants, participants: filteredParticipants};\n      }\n\n      return chatParticipants;\n    });\n  }\n\n  public getParticipant(id: ChatId, peerId: PeerId) {\n    if(this.appChatsManager.isChannel(id)) {\n      return this.getChannelParticipant(id, peerId);\n    }\n\n    return Promise.resolve(this.getParticipants(id)).then((chatParticipants) => {\n      assumeType<ChatParticipants.chatParticipants>(chatParticipants);\n      const found = chatParticipants.participants.find((chatParticipant) => {\n        if(getParticipantPeerId(chatParticipant) === peerId) {\n          return chatParticipant;\n        }\n      });\n\n      if(!found) {\n        throw makeError('USER_NOT_PARTICIPANT');\n      }\n\n      return found;\n    });\n  }\n\n  public getChannelParticipants(\n    id: ChatId,\n    filter: ChannelParticipantsFilter = {_: 'channelParticipantsRecent'},\n    limit = 200,\n    offset = 0\n  ) {\n    if(!this.appChatsManager.hasRights(id, 'view_participants')) {\n      throw makeError('CHAT_ADMIN_REQUIRED');\n    }\n\n    const result = this.apiManager.invokeApiCacheable('channels.getParticipants', {\n      channel: this.appChatsManager.getChannelInput(id),\n      filter,\n      offset,\n      limit,\n      hash: '0'\n    }, {cacheSeconds: 60, syncIfHasResult: true});\n\n    return callbackify(result, (result) => {\n      this.appUsersManager.saveApiUsers((result as ChannelsChannelParticipants.channelsChannelParticipants).users);\n      return result as ChannelsChannelParticipants.channelsChannelParticipants;\n    });\n  }\n\n  public getChannelParticipant(id: ChatId, peerId: PeerId) {\n    return this.apiManager.invokeApiSingle('channels.getParticipant', {\n      channel: this.appChatsManager.getChannelInput(id),\n      participant: this.appPeersManager.getInputPeerById(peerId)\n    }).then((channelParticipant) => {\n      this.appUsersManager.saveApiUsers(channelParticipant.users);\n      return channelParticipant.participant;\n    });\n  }\n\n  public getChannelFull(id: ChatId, override?: true) {\n    const peerId = id.toPeerId(true);\n    if(this.chatsFull[id] !== undefined && !override && Date.now() < this.fullExpiration[peerId]) {\n      return this.chatsFull[id] as ChatFull.channelFull;\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'channels.getFullChannel',\n      params: {\n        channel: this.appChatsManager.getChannelInput(id)\n      },\n      processResult: (result) => {\n        this.appChatsManager.saveApiChats(result.chats, true);\n        this.appUsersManager.saveApiUsers(result.users);\n        const fullChannel = result.full_chat as ChatFull.channelFull;\n        if(fullChannel && fullChannel.chat_photo.id) {\n          fullChannel.chat_photo = this.appPhotosManager.savePhoto(fullChannel.chat_photo, {type: 'profilePhoto', peerId});\n          // appPhotosManager.savePhoto(fullChannel.chat_photo);\n        }\n\n        if(fullChannel.call) {\n          this.appGroupCallsManager.saveGroupCall(fullChannel.call, id);\n        }\n\n        this.appNotificationsManager.savePeerSettings({\n          peerId,\n          settings: fullChannel.notify_settings\n        });\n\n        this.chatsFull[id] = fullChannel;\n        this.fullExpiration[peerId] = Date.now() + PEER_FULL_TTL;\n        this.rootScope.dispatchEvent('chat_full_update', id);\n\n        return fullChannel;\n      },\n      processError: (error) => {\n        switch(error.type) {\n          case 'CHANNEL_PRIVATE':\n            const channel = this.appChatsManager.getChat(id) as Chat.channel | Chat.channelForbidden;\n            this.apiUpdatesManager.processUpdateMessage({\n              _: 'updates',\n              updates: [{\n                _: 'updateChannel',\n                channel_id: id\n              }],\n              chats: [channel._ === 'channelForbidden' ? channel : {\n                _: 'channelForbidden',\n                id,\n                access_hash: channel.access_hash,\n                title: channel.title,\n                pFlags: channel.pFlags\n              }],\n              users: []\n            } as Updates.updates);\n            break;\n        }\n\n        throw error;\n      }\n    });\n  }\n\n  public getMentions(chatId: ChatId, query: string, threadId?: number): Promise<PeerId[]> {\n    const processUserIds = (topPeers: MyTopPeer[]) => {\n      const startsWithAt = query.charAt(0) === '@';\n      if(startsWithAt) query = query.slice(1);\n      /* const startsWithAt = query.charAt(0) === '@';\n      if(startsWithAt) query = query.slice(1);\n\n      const index = new SearchIndex<number>(!startsWithAt, !startsWithAt); */\n      const index = new SearchIndex<PeerId>({\n        ignoreCase: true\n      });\n\n      const ratingMap: Map<PeerId, number> = new Map();\n      topPeers.forEach((peer) => {\n        index.indexObject(peer.id, this.appUsersManager.getUserSearchText(peer.id));\n        ratingMap.set(peer.id, peer.rating);\n      });\n\n      const peerIds = Array.from(index.search(query));\n      peerIds.sort((a, b) => ratingMap.get(b) - ratingMap.get(a));\n      return peerIds;\n    };\n\n    let promise: Promise<PeerId[]>;\n    if(this.appChatsManager.isChannel(chatId)) {\n      promise = Promise.resolve(this.getChannelParticipants(chatId, {\n        _: 'channelParticipantsMentions',\n        q: query,\n        top_msg_id: getServerMessageId(threadId)\n      }, 50, 0)).then((cP) => {\n        return cP.participants.map((p) => getParticipantPeerId(p));\n      });\n    } else if(chatId) {\n      promise = Promise.resolve(this.getChatFull(chatId)).then((chatFull) => {\n        return ((chatFull as ChatFull.chatFull).participants as ChatParticipants.chatParticipants).participants.map((p) => p.user_id.toPeerId());\n      });\n    } else {\n      promise = Promise.resolve([]);\n    }\n\n    return Promise.all([\n      // [],\n      this.appUsersManager.getTopPeers('bots_inline').catch(() => [] as MyTopPeer[]),\n      promise\n    ]).then((results) => {\n      const peers = results[0].concat(results[1].map((peerId) => ({id: peerId, rating: 0})));\n\n      return processUserIds(peers);\n    });\n  }\n\n  private invalidateChannelParticipants(id: ChatId) {\n    this.apiManager.clearCache('channels.getParticipants', (params) => (params.channel as InputChannel.inputChannel).channel_id === id);\n    this.refreshFullPeer(id.toPeerId(true));\n  }\n\n  private refreshFullPeer(peerId: PeerId) {\n    if(peerId.isUser()) {\n      const userId = peerId.toUserId();\n      delete this.usersFull[userId];\n      this.rootScope.dispatchEvent('user_full_update', userId);\n    } else {\n      const chatId = peerId.toChatId();\n      delete this.chatsFull[chatId];\n      this.rootScope.dispatchEvent('chat_full_update', chatId);\n    }\n\n    // ! эта строчка будет создавать race condition:\n    // ! запрос вернёт chat с установленным флагом call_not_empty, хотя сам апдейт уже будет применён\n    // this.getProfileByPeerId(peerId, true);\n  }\n\n  public updateProfile(first_name?: string, last_name?: string, about?: string) {\n    return this.apiManager.invokeApi('account.updateProfile', {\n      first_name,\n      last_name,\n      about\n    }).then((user) => {\n      this.appUsersManager.saveApiUser(user);\n\n      if(about !== undefined) {\n        const peerId = user.id.toPeerId();\n        const userFull = this.usersFull[user.id];\n        if(userFull) {\n          userFull.about = about;\n        }\n\n        this.rootScope.dispatchEvent('peer_bio_edit', peerId);\n      }\n\n      return this.getProfile(user.id, true);\n    });\n  }\n\n  public setBotInfo(botId: BotId, name?: string, about?: string) {\n    return this.apiManager.invokeApi('bots.setBotInfo', {\n      lang_code: '',\n      bot: this.appUsersManager.getUserInput(botId),\n      name,\n      about\n    }).then(() => {\n      const user = this.appUsersManager.getUser(botId);\n      if(name !== undefined) {\n        this.appUsersManager.saveApiUser({\n          ...user,\n          first_name: name\n        });\n      }\n\n      const userFull = this.getCachedFullUser(botId);\n      if(about !== undefined) {\n        if(userFull) {\n          userFull.about = about;\n        }\n\n        this.rootScope.dispatchEvent('peer_bio_edit', botId.toPeerId());\n      }\n\n      return this.getProfile(botId, true);\n    });\n  }\n\n  public getBotInfo(botId: BotId) {\n    return this.apiManager.invokeApiSingle('bots.getBotInfo', {\n      bot: this.appUsersManager.getUserInput(botId),\n      lang_code: ''\n    });\n  }\n\n  public uploadProfilePhoto(inputFile: InputFile, botId?: BotId) {\n    return this.apiManager.invokeApi('photos.uploadProfilePhoto', {\n      file: inputFile,\n      bot: botId ? this.appUsersManager.getUserInput(botId) : undefined\n    }).then((updateResult) => {\n      // ! sometimes can have no user in users\n      const photo = updateResult.photo as Photo.photo;\n      if(!updateResult.users.length) {\n        const strippedThumb = photo.sizes.find((size) => size._ === 'photoStrippedSize') as PhotoSize.photoStrippedSize;\n        updateResult.users.push({\n          ...(botId ? this.appUsersManager.getUser(botId) : this.appUsersManager.getSelf()),\n          photo: {\n            _: 'userProfilePhoto',\n            dc_id: photo.dc_id,\n            photo_id: photo.id,\n            stripped_thumb: strippedThumb?.bytes,\n            pFlags: {\n\n            }\n          }\n        });\n      }\n      this.appUsersManager.saveApiUsers(updateResult.users);\n\n      const peerId = botId ? botId.toPeerId() : this.appPeersManager.peerId;\n      this.appPhotosManager.savePhoto(updateResult.photo, {\n        type: 'profilePhoto',\n        peerId\n      });\n\n      const userId = peerId.toUserId();\n      // this.apiUpdatesManager.processLocalUpdate({\n      //   _: 'updateUserPhoto',\n      //   user_id: userId,\n      //   date: tsNow(true),\n      //   photo: this.appUsersManager.getUser(userId).photo,\n      //   previous: true\n      // });\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateUser',\n        user_id: userId\n      });\n    });\n  }\n\n  public deletePhotos(photoIds: string[]) {\n    return this.apiManager.invokeApiSingle('photos.deletePhotos', {\n      id: photoIds.map((photoId) => {\n        const photo = this.appPhotosManager.getPhoto(photoId);\n        return getPhotoInput(photo);\n      })\n    }).then((deletedList) => {\n\n    });\n  }\n\n  private verifyParticipantForOnlineCount(participant: {user_id: UserId}) {\n    const user = this.appUsersManager.getUser(participant.user_id);\n    return !!(user && user.status && user.status._ === 'userStatusOnline');\n  }\n\n  private reduceParticipantsForOnlineCount(participants: {user_id: UserId}[]) {\n    return participants.reduce((acc, participant) => {\n      return acc + +this.verifyParticipantForOnlineCount(participant);\n    }, 0);\n  }\n\n  public async getOnlines(id: ChatId): Promise<number> {\n    const minOnline = 1;\n    if(this.appChatsManager.isBroadcast(id)) {\n      return minOnline;\n    }\n\n    const chatInfo = await this.getChatFull(id);\n    if(this.appChatsManager.isMegagroup(id)) {\n      if((chatInfo as ChatFull.channelFull).participants_count <= 100) {\n        const channelParticipants = await this.getChannelParticipants(id, {_: 'channelParticipantsRecent'}, 100);\n        return this.reduceParticipantsForOnlineCount(channelParticipants.participants as ChannelParticipant.channelParticipant[]);\n      }\n\n      const res = await this.apiManager.invokeApiCacheable('messages.getOnlines', {\n        peer: this.appChatsManager.getChannelInputPeer(id)\n      }, {cacheSeconds: 60});\n\n      const onlines = res.onlines ?? minOnline;\n      return onlines;\n    }\n\n    const _participants = (chatInfo as ChatFull.chatFull).participants as ChatParticipants.chatParticipants;\n    if(_participants?.participants) {\n      return this.reduceParticipantsForOnlineCount(_participants.participants);\n    } else {\n      return minOnline;\n    }\n  }\n\n  private getTypingsKey(peerId: PeerId, threadId?: number) {\n    return peerId + (threadId ? `_${threadId}` : '');\n  }\n\n  public getPeerTypings(peerId: PeerId, threadId?: number) {\n    return this.typingsInPeer[this.getTypingsKey(peerId, threadId)];\n  }\n\n  public canGiftPremium(userId: UserId) {\n    const user = this.appUsersManager.getUser(userId);\n    if(user?.pFlags?.premium) {\n      return false;\n    }\n\n    return callbackify(this.getProfile(userId), (userFull) => {\n      const user = this.appUsersManager.getUser(userId);\n      return !!userFull.premium_gifts && !user?.pFlags?.premium;\n    });\n  }\n\n  private onUpdateChatParticipants = (update: Update.updateChatParticipants) => {\n    const participants = update.participants;\n    if(participants._ !== 'chatParticipants') {\n      return;\n    }\n\n    const chatId = participants.chat_id;\n    const chatFull = this.chatsFull[chatId] as ChatFull.chatFull;\n    if(chatFull !== undefined) {\n      chatFull.participants = participants;\n      this.rootScope.dispatchEvent('chat_full_update', chatId);\n    }\n  };\n\n  private onUpdateChatParticipantAdd = (update: Update.updateChatParticipantAdd) => {\n    const chatFull = this.chatsFull[update.chat_id] as ChatFull.chatFull;\n    if(chatFull === undefined) {\n      return;\n    }\n\n    const _participants = chatFull.participants as ChatParticipants.chatParticipants;\n    const participants = _participants.participants || [];\n    for(let i = 0, length = participants.length; i < length; i++) {\n      if(participants[i].user_id === update.user_id) {\n        return;\n      }\n    }\n\n    participants.push({\n      _: 'chatParticipant',\n      user_id: update.user_id,\n      inviter_id: update.inviter_id,\n      date: tsNow(true)\n    });\n\n    _participants.version = update.version;\n    this.rootScope.dispatchEvent('chat_full_update', update.chat_id);\n  };\n\n  private onUpdateChatParticipantDelete = (update: Update.updateChatParticipantDelete) => {\n    const chatFull = this.chatsFull[update.chat_id] as ChatFull.chatFull;\n    if(chatFull === undefined) {\n      return;\n    }\n\n    const _participants = chatFull.participants as ChatParticipants.chatParticipants;\n    const participants = _participants.participants || [];\n    for(let i = 0, length = participants.length; i < length; i++) {\n      if(participants[i].user_id === update.user_id) {\n        participants.splice(i, 1);\n        _participants.version = update.version;\n        this.rootScope.dispatchEvent('chat_full_update', update.chat_id);\n        return;\n      }\n    }\n  };\n\n  private onUpdateUserTyping = (update: Update.updateUserTyping | Update.updateChatUserTyping | Update.updateChannelUserTyping) => {\n    const fromId = (update as Update.updateUserTyping).user_id ?\n      (update as Update.updateUserTyping).user_id.toPeerId() :\n      this.appPeersManager.getPeerId((update as Update.updateChatUserTyping).from_id);\n    if(this.appPeersManager.peerId === fromId || update.action._ === 'speakingInGroupCallAction') {\n      return;\n    }\n\n    const topMsgId = (update as Update.updateChannelUserTyping).top_msg_id;\n    const threadId = topMsgId ? this.appMessagesIdsManager.generateMessageId(topMsgId, (update as Update.updateChannelUserTyping).channel_id) : undefined;\n    const peerId = this.appPeersManager.getPeerId(update);\n    const key = this.getTypingsKey(peerId, threadId);\n    const typings = this.typingsInPeer[key] ??= [];\n    const action = update.action;\n    let typing = typings.find((t) => t.userId === fromId);\n\n    if((action as SendMessageAction.sendMessageEmojiInteraction).msg_id) {\n      (action as SendMessageAction.sendMessageEmojiInteraction).msg_id = this.appMessagesIdsManager.generateMessageId((action as SendMessageAction.sendMessageEmojiInteraction).msg_id, (update as Update.updateChannelUserTyping).channel_id);\n    }\n\n    const cancelAction = () => {\n      delete typing.timeout;\n      // typings.findAndSplice((t) => t === typing);\n      const idx = typings.indexOf(typing);\n      if(idx !== -1) {\n        typings.splice(idx, 1);\n      }\n\n      this.rootScope.dispatchEvent('peer_typings', {peerId, threadId, typings});\n\n      if(!typings.length) {\n        delete this.typingsInPeer[key];\n      }\n    };\n\n    if(typing?.timeout !== undefined) {\n      clearTimeout(typing.timeout);\n    }\n\n    if(action._ === 'sendMessageCancelAction') {\n      if(!typing) {\n        return;\n      }\n\n      cancelAction();\n      return;\n    }\n\n    if(!typing) {\n      typing = {\n        userId: fromId\n      };\n\n      typings.push(typing);\n    }\n\n    // console.log('updateChatUserTyping', update, typings);\n\n    typing.action = action;\n\n    const hasUser = this.appUsersManager.hasUser(fromId);\n    if(!hasUser) {\n      // let's load user here\n      if(update._ === 'updateChatUserTyping') {\n        if(update.chat_id && this.appChatsManager.hasChat(update.chat_id) && !this.appChatsManager.isChannel(update.chat_id)) {\n          Promise.resolve(this.getChatFull(update.chat_id)).then(() => {\n            if(typing.timeout !== undefined && this.appUsersManager.hasUser(fromId)) {\n              this.rootScope.dispatchEvent('peer_typings', {peerId, threadId, typings});\n            }\n          });\n        }\n      }\n\n      // return;\n    } else {\n      this.appUsersManager.forceUserOnline(fromId);\n    }\n\n    typing.timeout = ctx.setTimeout(cancelAction, 6000);\n    if(hasUser) {\n      this.rootScope.dispatchEvent('peer_typings', {peerId, threadId, typings});\n    }\n  };\n\n  private onUpdatePeerBlocked = (update: Update.updatePeerBlocked) => {\n    const peerId = this.appPeersManager.getPeerId(update.peer_id);\n    if(this.appPeersManager.isUser(peerId)) {\n      const userId = peerId.toUserId();\n      const userFull = this.usersFull[userId];\n      if(userFull) {\n        if(update.blocked) userFull.pFlags.blocked = true;\n        else delete userFull.pFlags.blocked;\n      }\n\n      this.rootScope.dispatchEvent('user_full_update', userId);\n    }\n\n    this.rootScope.dispatchEvent('peer_block', {peerId, blocked: update.blocked});\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {Awaited} from '../types';\n\nexport default function callbackifyAll<T extends readonly unknown[] | [], R extends any>(\n  values: T,\n  callback: (result: { -readonly [P in keyof T]: Awaited<T[P]> }) => R\n): Promise<Awaited<R>> | R {\n  if(values.some((value) => value instanceof Promise)) {\n    return Promise.all(values).then(callback as any);\n  } else {\n    return callback(values as any);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport findAndSplice from '../../helpers/array/findAndSplice';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport assumeType from '../../helpers/assumeType';\nimport callbackify from '../../helpers/callbackify';\nimport callbackifyAll from '../../helpers/callbackifyAll';\nimport copy from '../../helpers/object/copy';\nimport pause from '../../helpers/schedulers/pause';\nimport tsNow from '../../helpers/tsNow';\nimport {AvailableReaction, Message, MessagePeerReaction, MessagesAvailableReactions, Reaction, ReactionCount, Update, Updates} from '../../layer';\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport {AppManager} from './manager';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\nimport reactionsEqual from './utils/reactions/reactionsEqual';\n\nconst SAVE_DOC_KEYS = [\n  'static_icon' as const,\n  'appear_animation' as const,\n  'select_animation' as const,\n  'activate_animation' as const,\n  'effect_animation' as const,\n  'around_animation' as const,\n  'center_icon' as const\n];\n\nconst REFERENCE_CONTEXT: ReferenceContext = {\n  type: 'reactions'\n};\n\nexport class AppReactionsManager extends AppManager {\n  private availableReactions: AvailableReaction[];\n  private sendReactionPromises: Map<string, Promise<any>>;\n  private lastSendingTimes: Map<string, number>;\n\n  protected after() {\n    this.sendReactionPromises = new Map();\n    this.lastSendingTimes = new Map();\n\n    this.rootScope.addEventListener('user_auth', () => {\n      setTimeout(() => {\n        Promise.resolve(this.getAvailableReactions()).then(async(availableReactions) => {\n          for(let i = 0, length = availableReactions.length; i < length; ++i) {\n            const availableReaction = availableReactions[i];\n            await Promise.all([\n              availableReaction.around_animation && this.apiFileManager.downloadMedia({media: availableReaction.around_animation}),\n              availableReaction.static_icon && this.apiFileManager.downloadMedia({media: availableReaction.static_icon}),\n              availableReaction.appear_animation && this.apiFileManager.downloadMedia({media: availableReaction.appear_animation}),\n              availableReaction.center_icon && this.apiFileManager.downloadMedia({media: availableReaction.center_icon})\n            ]);\n\n            if(i > 15) {\n              break;\n            }\n\n            await pause(1000);\n          }\n        });\n      }, 7.5e3);\n    });\n  }\n\n  public resetAvailableReactions() {\n    this.availableReactions = undefined;\n    this.getAvailableReactions();\n  }\n\n  public getAvailableReactions() {\n    if(this.availableReactions) return this.availableReactions;\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getAvailableReactions',\n      processResult: (messagesAvailableReactions) => {\n        assumeType<MessagesAvailableReactions.messagesAvailableReactions>(messagesAvailableReactions);\n\n        const availableReactions = this.availableReactions = messagesAvailableReactions.reactions;\n        for(const reaction of availableReactions) {\n          for(const key of SAVE_DOC_KEYS) {\n            if(!reaction[key]) {\n              continue;\n            }\n\n            reaction[key] = this.appDocsManager.saveDoc(reaction[key], REFERENCE_CONTEXT);\n          }\n        }\n\n        return availableReactions;\n      },\n      params: {\n        hash: 0\n      }\n    });\n  }\n\n  public getActiveAvailableReactions() {\n    return callbackify(this.getAvailableReactions(), (availableReactions) => {\n      return availableReactions.filter((availableReaction) => !availableReaction.pFlags.inactive);\n    });\n  }\n\n  public getAvailableReactionsForPeer(peerId: PeerId) {\n    const activeAvailableReactions = this.getActiveAvailableReactions();\n    if(peerId.isUser()) {\n      return this.unshiftQuickReaction(activeAvailableReactions);\n    }\n\n    const chatFull = this.appProfileManager.getChatFull(peerId.toChatId());\n    return callbackifyAll([activeAvailableReactions, chatFull, this.getQuickReaction()], ([activeAvailableReactions, chatFull, quickReaction]) => {\n      const chatAvailableReactions = chatFull.available_reactions ?? {_: 'chatReactionsNone'};\n\n      let filteredChatAvailableReactions: AvailableReaction[] = [];\n      if(chatAvailableReactions._ === 'chatReactionsAll') {\n        filteredChatAvailableReactions = activeAvailableReactions;\n      } else if(chatAvailableReactions._ === 'chatReactionsSome') {\n        filteredChatAvailableReactions = chatAvailableReactions.reactions.map((reaction) => {\n          return activeAvailableReactions.find((availableReaction) => availableReaction.reaction === (reaction as Reaction.reactionEmoji).emoticon);\n        }).filter(Boolean);\n      }\n\n      return this.unshiftQuickReactionInner(filteredChatAvailableReactions, quickReaction);\n    });\n  }\n\n  private unshiftQuickReactionInner(availableReactions: AvailableReaction[], quickReaction: Reaction | AvailableReaction) {\n    if(quickReaction && quickReaction._ !== 'reactionEmoji' && quickReaction._ !== 'availableReaction') return availableReactions;\n    const emoticon = (quickReaction as Reaction.reactionEmoji).emoticon || (quickReaction as AvailableReaction).reaction;\n    const availableReaction = findAndSplice(availableReactions, (availableReaction) => availableReaction.reaction === emoticon);\n    if(availableReaction) {\n      availableReactions.unshift(availableReaction);\n    }\n\n    return availableReactions;\n  }\n\n  private unshiftQuickReaction(\n    availableReactions: AvailableReaction[] | PromiseLike<AvailableReaction.availableReaction[]>,\n    quickReaction: ReturnType<AppReactionsManager['getQuickReaction']> = this.getQuickReaction()\n  ) {\n    return callbackifyAll([\n      availableReactions,\n      quickReaction\n    ], ([availableReactions, quickReaction]) => {\n      return this.unshiftQuickReactionInner(availableReactions, quickReaction);\n    });\n  }\n\n  public getAvailableReactionsByMessage(message: Message.message) {\n    if(!message) return [];\n    const peerId = (message.fwd_from?.channel_post && this.appPeersManager.isMegagroup(message.peerId) && message.fwdFromId) || message.peerId;\n    return this.getAvailableReactionsForPeer(peerId);\n  }\n\n  public isReactionActive(reaction: string) {\n    if(!this.availableReactions) return false;\n    return !!this.availableReactions.find((availableReaction) => availableReaction.reaction === reaction);\n  }\n\n  public getQuickReaction() {\n    return callbackifyAll([\n      this.apiManager.getConfig(),\n      this.getAvailableReactions()\n    ], ([config, availableReactions]) => {\n      const reaction = config.reactions_default;\n      if(reaction?._ === 'reactionEmoji') {\n        return availableReactions.find((availableReaction) => availableReaction.reaction === reaction.emoticon);\n      }\n\n      return reaction as Reaction.reactionCustomEmoji;\n    });\n  }\n\n  public getReactionCached(reaction: string) {\n    return this.availableReactions.find((availableReaction) => availableReaction.reaction === reaction);\n  }\n\n  public getReaction(reaction: string) {\n    return callbackify(this.getAvailableReactions(), () => {\n      return this.getReactionCached(reaction);\n    });\n  }\n\n  public getMessagesReactions(peerId: PeerId, mids: number[]) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getMessagesReactions',\n      params: {\n        id: mids.map((mid) => getServerMessageId(mid)),\n        peer: this.appPeersManager.getInputPeerById(peerId)\n      },\n      processResult: (updates) => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n\n        // const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateMessageReactions') as Update.updateMessageReactions;\n        // return update.reactions;\n      }\n    });\n  }\n\n  public getMessageReactionsList(peerId: PeerId, mid: number, limit: number, reaction?: Reaction, offset?: string) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getMessageReactionsList',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        id: getServerMessageId(mid),\n        limit,\n        reaction,\n        offset\n      },\n      processResult: (messageReactionsList) => {\n        this.appUsersManager.saveApiUsers(messageReactionsList.users);\n        return messageReactionsList;\n      }\n    });\n  }\n\n  public setDefaultReaction(reaction: Reaction) {\n    return this.apiManager.invokeApi('messages.setDefaultReaction', {reaction}).then(async(value) => {\n      if(value) {\n        const appConfig = await this.apiManager.getConfig();\n        if(appConfig) {\n          appConfig.reactions_default = reaction;\n        }/*  else { // if no config or loading it - overwrite\n          this.apiManager.getAppConfig(true);\n        } */\n\n        this.rootScope.dispatchEvent('quick_reaction', reaction);\n      }\n\n      return value;\n    });\n  }\n\n  public async sendReaction(message: Message.message, reaction?: Reaction | AvailableReaction, onlyLocal?: boolean) {\n    if(reaction._ === 'availableReaction') {\n      reaction = {\n        _: 'reactionEmoji',\n        emoticon: reaction.reaction\n      };\n    }\n\n    const limit = await this.apiManager.getLimit('reactions');\n\n    const lastSendingTimeKey = message.peerId + '_' + message.mid;\n    const lastSendingTime = this.lastSendingTimes.get(lastSendingTimeKey);\n    if(lastSendingTime) {\n      return;\n    } else {\n      this.lastSendingTimes.set(lastSendingTimeKey, Date.now());\n      setTimeout(() => {\n        this.lastSendingTimes.delete(lastSendingTimeKey);\n      }, 333);\n    }\n\n    const {peerId, mid} = message;\n    const myPeer = this.appMessagesManager.generateFromId(peerId) ?? this.appPeersManager.getOutputPeer(peerId);\n    const myPeerId = this.appPeersManager.getPeerId(myPeer);\n\n    const unsetReactionCount = (reactionCount: ReactionCount) => {\n      --reactionCount.count;\n      delete reactionCount.chosen_order;\n\n      if(reactionsEqual(reaction as Reaction, reactionCount.reaction)) {\n        reaction = undefined as Reaction;\n      }\n\n      if(!reactionCount.count) {\n        indexOfAndSplice(reactions.results, reactionCount);\n      }/*  else {\n        insertInDescendSortedArray(reactions.results, chosenReaction, 'count', chosenReactionIdx);\n      } */\n\n      if(reactions.recent_reactions) {\n        findAndSplice(reactions.recent_reactions, (recentReaction) => reactionsEqual(recentReaction.reaction, reactionCount.reaction) && this.appPeersManager.getPeerId(recentReaction.peer_id) === myPeerId);\n      }\n\n      if(!reactions.results.length) {\n        reactions = undefined;\n      }\n    };\n\n    const canSeeList = message.reactions?.pFlags?.can_see_list || !this.appPeersManager.isBroadcast(message.peerId) || message.peerId.isUser();\n    if(!message.reactions) {\n      message.reactions = {\n        _: 'messageReactions',\n        results: [],\n        recent_reactions: canSeeList ? [] : undefined,\n        pFlags: {\n          can_see_list: canSeeList || undefined\n        }\n      };\n    }\n\n    let reactions = onlyLocal ? message.reactions : copy(message.reactions);\n    const chosenReactions = reactions.results.filter((reactionCount) => reactionCount.chosen_order !== undefined);\n    chosenReactions.sort((a, b) => b.chosen_order - a.chosen_order);\n    const unsetReactions: ReactionCount[] = [];\n    const chosenReactionIdx = chosenReactions.findIndex((reactionCount) => reactionsEqual(reactionCount.reaction, reaction as Reaction));\n    if(chosenReactionIdx !== -1) unsetReactions.push(...chosenReactions.splice(chosenReactionIdx, 1));\n    unsetReactions.push(...chosenReactions.splice(limit - +(chosenReactionIdx === -1)));\n    unsetReactions.forEach((reactionCount) => {\n      chosenReactions.forEach((chosenReactionCount) => {\n        if(chosenReactionCount.chosen_order > reactionCount.chosen_order) {\n          --chosenReactionCount.chosen_order;\n        }\n      });\n\n      unsetReactionCount(reactionCount);\n    });\n\n    const chosenReactionsLength = chosenReactions.length;\n    chosenReactions.forEach((reactionCount, idx) => {\n      reactionCount.chosen_order = chosenReactionsLength - 1 - idx;\n    });\n\n    if(reaction) {\n      if(!reactions) {\n        reactions/*  = message.reactions */ = {\n          _: 'messageReactions',\n          results: [],\n          pFlags: {}\n        };\n\n        if(canSeeList) {\n          reactions.pFlags.can_see_list = true;\n        }\n      }\n\n      let reactionCountIdx = reactions.results.findIndex((reactionCount) => reactionsEqual(reactionCount.reaction, reaction as Reaction));\n      let reactionCount = reactionCountIdx !== -1 && reactions.results[reactionCountIdx];\n      if(!reactionCount) {\n        reactionCount = {\n          _: 'reactionCount',\n          count: 0,\n          reaction\n        };\n\n        reactionCountIdx = reactions.results.push(reactionCount) - 1;\n      }\n\n      ++reactionCount.count;\n      reactionCount.chosen_order = chosenReactions.length ? chosenReactions[0].chosen_order + 1 : 0;\n      chosenReactions.unshift(reactionCount);\n\n      if(!reactions.recent_reactions && canSeeList) {\n        reactions.recent_reactions = [];\n      }\n\n      if(reactions.recent_reactions) {\n        const peerReaction: MessagePeerReaction = {\n          _: 'messagePeerReaction',\n          reaction,\n          peer_id: myPeer,\n          pFlags: {},\n          date: tsNow(true)\n        };\n\n        if(!this.appPeersManager.isMegagroup(peerId) && false) {\n          reactions.recent_reactions.push(peerReaction);\n          reactions.recent_reactions = reactions.recent_reactions.slice(-3);\n        } else {\n          reactions.recent_reactions.unshift(peerReaction);\n          reactions.recent_reactions = reactions.recent_reactions.slice(0, 3);\n        }\n      }\n\n      // insertInDescendSortedArray(reactions.results, reactionCount, 'count', reactionCountIdx);\n    }\n\n    const availableReactions = this.availableReactions;\n    if(reactions && availableReactions?.length) {\n      const indexes: Map<DocId | string, number> = new Map();\n      availableReactions.forEach((availableReaction, idx) => {\n        indexes.set(availableReaction.reaction, idx);\n      });\n\n      reactions.results.sort((a, b) => {\n        const id1 = (a.reaction as Reaction.reactionCustomEmoji).document_id || (a.reaction as Reaction.reactionEmoji).emoticon;\n        const id2 = (b.reaction as Reaction.reactionCustomEmoji).document_id || (b.reaction as Reaction.reactionEmoji).emoticon;\n        return (b.count - a.count) || ((indexes.get(id1) ?? 0) - (indexes.get(id2) ?? 0));\n      });\n    }\n\n    if(onlyLocal) {\n      message.reactions = reactions;\n      this.rootScope.dispatchEvent('messages_reactions', [{message, changedResults: []}]);\n      return Promise.resolve();\n    }\n\n    this.apiUpdatesManager.processLocalUpdate({\n      _: 'updateMessageReactions',\n      peer: message.peer_id,\n      msg_id: message.id,\n      reactions: reactions,\n      local: true\n    });\n\n    const promiseKey = [peerId, mid].join('-');\n    const msgId = getServerMessageId(mid);\n    const promise = this.apiManager.invokeApi('messages.sendReaction', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: msgId,\n      reaction: chosenReactions.map((reactionCount) => reactionCount.reaction).reverse()\n    }).then((updates) => {\n      assumeType<Updates.updates>(updates);\n\n      const editMessageUpdateIdx = updates.updates.findIndex((update) => update._ === 'updateEditMessage' || update._ === 'updateEditChannelMessage');\n      if(editMessageUpdateIdx !== -1) {\n        const editMessageUpdate = updates.updates[editMessageUpdateIdx] as Update.updateEditMessage | Update.updateEditChannelMessage;\n        updates.updates[editMessageUpdateIdx] = {\n          _: 'updateMessageReactions',\n          msg_id: msgId,\n          peer: this.appPeersManager.getOutputPeer(peerId),\n          reactions: (editMessageUpdate.message as Message.message).reactions,\n          pts: editMessageUpdate.pts,\n          pts_count: editMessageUpdate.pts_count\n        };\n      }\n\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    }).catch((err: ApiError) => {\n      if(err.type === 'REACTION_INVALID' && this.sendReactionPromises.get(promiseKey) === promise) {\n        this.sendReaction(message, chosenReactions[0]?.reaction, true);\n      }\n    }).finally(() => {\n      if(this.sendReactionPromises.get(promiseKey) === promise) {\n        this.sendReactionPromises.delete(promiseKey);\n      }\n    });\n\n    this.sendReactionPromises.set(promiseKey, promise);\n    return promise;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {MyDocument} from './appDocsManager';\nimport type {DownloadOptions} from '../mtproto/apiFileManager';\nimport {Document, InputFileLocation, InputStickerSet, MessagesAllStickers, MessagesFavedStickers, MessagesFeaturedStickers, MessagesFoundStickerSets, MessagesRecentStickers, MessagesStickers, MessagesStickerSet, PhotoSize, StickerPack, StickerSet, StickerSetCovered, Update, VideoSize} from '../../layer';\nimport {Modify} from '../../types';\nimport AppStorage from '../storage';\nimport DATABASE_STATE from '../../config/databases/state';\nimport assumeType from '../../helpers/assumeType';\nimport fixBase64String from '../../helpers/fixBase64String';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport findAndSplice from '../../helpers/array/findAndSplice';\nimport {AppManager} from './manager';\nimport fixEmoji from '../richTextProcessor/fixEmoji';\nimport ctx from '../../environment/ctx';\nimport {getEnvironment} from '../../environment/utils';\nimport getDocumentInput from './utils/docs/getDocumentInput';\nimport getStickerEffectThumb from './utils/stickers/getStickerEffectThumb';\nimport tsNow from '../../helpers/tsNow';\n\nconst CACHE_TIME = 3600e3;\n\ntype LOCAL_STICKER_SET_ID = Extract<\n  InputStickerSet['_'],\n  'inputStickerSetAnimatedEmoji' | 'inputStickerSetAnimatedEmojiAnimations' |\n  'inputStickerSetPremiumGifts' | 'inputStickerSetEmojiGenericAnimations' |\n  'inputStickerSetEmojiDefaultStatuses' | 'inputStickerSetEmojiDefaultTopicIcons'\n>;\n\ntype LOCAL_ID = 'EMOJI' | 'EMOJI_ANIMATIONS' | 'PREMIUM_GIFTS' | 'GENERIC_ANIMATIONS' | 'DEFAULT_STATUSES' | 'DEFAULT_TOPIC_ICONS';\n\nconst LOCAL_IDS: {[key in LOCAL_ID]: LOCAL_STICKER_SET_ID} = {\n  EMOJI: 'inputStickerSetAnimatedEmoji',\n  EMOJI_ANIMATIONS: 'inputStickerSetAnimatedEmojiAnimations',\n  PREMIUM_GIFTS: 'inputStickerSetPremiumGifts',\n  GENERIC_ANIMATIONS: 'inputStickerSetEmojiGenericAnimations',\n  DEFAULT_STATUSES: 'inputStickerSetEmojiDefaultStatuses',\n  DEFAULT_TOPIC_ICONS: 'inputStickerSetEmojiDefaultTopicIcons'\n}\n\nconst LOCAL_IDS_SET: Set<LOCAL_STICKER_SET_ID> = new Set(Object.values(LOCAL_IDS) as any);\n\n// let TEST_FILE_REFERENCE_REFRESH = true;\n\nexport type MyStickerSetInput = {\n  id: StickerSet.stickerSet['id'],\n  access_hash?: StickerSet.stickerSet['access_hash']\n};\n\nexport type MyMessagesStickerSet = MessagesStickerSet.messagesStickerSet;\n\nexport class AppStickersManager extends AppManager {\n  private storage = new AppStorage<Record<Long, MyMessagesStickerSet>, typeof DATABASE_STATE>(DATABASE_STATE, 'stickerSets');\n\n  private getStickerSetPromises: {[setId: Long]: Promise<MyMessagesStickerSet>};\n  private getStickersByEmoticonsPromises: {[emoticon: string]: Promise<MyDocument[]>};\n\n  private greetingStickers: MyDocument[];\n  private getGreetingStickersTimeout: number;\n  private getGreetingStickersPromise: Promise<void>;\n\n  private sounds: Record<string, MyDocument>;\n  private getAnimatedEmojiSoundsPromise: Promise<void>;\n\n  private favedStickers: MyDocument[];\n  private recentStickers: MyDocument[];\n\n  private names: Record<string, InputStickerSet.inputStickerSetID>;\n\n  protected after() {\n    this.clear(true);\n\n    this.rootScope.addEventListener('user_auth', () => {\n      setTimeout(() => {\n        this.getAnimatedEmojiStickerSet();\n        // this.getFavedStickersStickers();\n      }, 1000);\n\n      if(!this.getGreetingStickersPromise) {\n        this.getGreetingStickersTimeout ??= ctx.setTimeout(() => {\n          this.getGreetingStickersTimeout = undefined;\n          this.getGreetingSticker(true);\n        }, 5000);\n      }\n    });\n\n    this.rootScope.addEventListener('app_config', () => this.onStickersUpdated('faved', true));\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateNewStickerSet: (update) => {\n        const stickerSet = update.stickerset as MyMessagesStickerSet;\n        this.saveStickerSet(stickerSet, stickerSet.set.id);\n        this.rootScope.dispatchEvent('stickers_installed', stickerSet.set);\n      },\n\n      updateRecentStickers: () => this.onStickersUpdated('recent', true),\n\n      updateFavedStickers: () => this.onStickersUpdated('faved', true),\n\n      updateMoveStickerSetToTop: (update) => {\n        this.rootScope.dispatchEvent('stickers_top', update.stickerset);\n      },\n\n      updateStickerSetsOrder: (update) => {\n        this.rootScope.dispatchEvent('stickers_order', {\n          type: update.pFlags.emojis ? 'emojis' : (update.pFlags.masks ? 'masks' : 'stickers'),\n          order: update.order\n        });\n      }\n\n      // updateStickerSets: (update) => {\n      //   if(update.pFlags.masks) {\n      //     return;\n      //   }\n\n      //   this.storage.clear(false);\n\n      //   if(update.pFlags.emojis) {\n\n      //   } else {\n      //     this.favedStickers = undefined;\n      //     this.recentStickers = undefined;\n      //     this.onStickersUpdated('recent', true);\n      //     this.onStickersUpdated('faved', true);\n      //   }\n      // }\n    });\n  }\n\n  public clear = (init?: boolean) => {\n    this.getStickerSetPromises = {};\n    this.getStickersByEmoticonsPromises = {};\n    this.sounds = {};\n    this.names = {};\n  };\n\n  private async onStickersUpdated(type: 'faved' | 'recent', overwrite: boolean) {\n    const stickers = await (type === 'faved' ? this.getFavedStickersStickers(overwrite) : this.getRecentStickersStickers(overwrite));\n    this.rootScope.dispatchEvent('stickers_updated', {\n      type,\n      stickers\n    });\n  }\n\n  public getGreetingSticker(justPreload = false) {\n    if(this.getGreetingStickersTimeout) {\n      clearTimeout(this.getGreetingStickersTimeout);\n      this.getGreetingStickersTimeout = undefined;\n    }\n\n    if(!this.getGreetingStickersPromise) {\n      this.getGreetingStickersPromise = this.getStickersByEmoticon('👋⭐️', false).then((docs) => {\n        if(!docs.length) throw 'NO_STICKERS';\n        this.greetingStickers = docs.slice() as Document.document[];\n        this.greetingStickers.sort((a, b) => Math.random() - Math.random());\n      });\n    }\n\n    return this.getGreetingStickersPromise.then(() => {\n      let doc: Document.document;\n      if(!justPreload) {\n        doc = this.greetingStickers.shift();\n        this.greetingStickers.push(doc);\n      }\n\n      this.apiFileManager.downloadMedia({media: this.greetingStickers[0]}); // preload next sticker\n\n      return doc;\n    });\n  }\n\n  private saveStickers(docs: Document[]) {\n    forEachReverse(docs, (doc, idx) => {\n      doc = this.appDocsManager.saveDoc(doc);\n\n      if(!doc) docs.splice(idx, 1);\n      else docs[idx] = doc;\n    });\n  }\n\n  private canUseStickerSetCache(set: MyMessagesStickerSet, useCache?: boolean) {\n    return set && set.documents?.length && ((Date.now() - set.refreshTime) < CACHE_TIME || useCache);\n  }\n\n  public getStickerSet(set: MyStickerSetInput, params: Partial<{\n    overwrite: boolean,\n    useCache: boolean,\n    saveById: boolean\n  }> = {}): Promise<MyMessagesStickerSet> | MyMessagesStickerSet {\n    let {id} = set;\n    if(!set.access_hash) {\n      set = this.names[id] || set;\n      id = set.id;\n    }\n\n    if(this.getStickerSetPromises[id]) {\n      return this.getStickerSetPromises[id];\n    }\n\n    if(!params.overwrite) {\n      const cachedSet = this.storage.getFromCache(id);\n      if(this.canUseStickerSetCache(cachedSet, params.useCache)) {\n        return cachedSet;\n      }\n    }\n\n    const promise = this.getStickerSetPromises[id] = new Promise(async(resolve) => {\n      if(!params.overwrite) {\n        const cachedSet = await this.storage.get(id);\n        if(this.canUseStickerSetCache(cachedSet, params.useCache)) {\n          this.saveStickers(cachedSet.documents);\n          resolve(cachedSet);\n\n          if(this.getStickerSetPromises[id] === promise) {\n            delete this.getStickerSetPromises[id];\n          }\n\n          return;\n        }\n      }\n\n      try {\n        const stickerSet = await this.apiManager.invokeApi('messages.getStickerSet', {\n          stickerset: this.getStickerSetInput(set),\n          hash: 0\n        }) as MyMessagesStickerSet;\n\n        const saveById = params.saveById ? id : stickerSet.set.id;\n        this.saveStickerSet(stickerSet, saveById);\n\n        resolve(stickerSet);\n      } catch(err) {\n        resolve(null);\n      }\n\n      if(this.getStickerSetPromises[id] === promise) {\n        delete this.getStickerSetPromises[id];\n      }\n    });\n\n    return promise;\n  }\n\n  public getLocalStickerSet(id: LOCAL_STICKER_SET_ID) {\n    return this.getStickerSet({id}, {saveById: true});\n  }\n\n  public getAnimatedEmojiStickerSet() {\n    return Promise.all([\n      this.getLocalStickerSet(LOCAL_IDS.EMOJI),\n      this.getLocalStickerSet(LOCAL_IDS.EMOJI_ANIMATIONS),\n      this.getAnimatedEmojiSounds()\n    ]).then(([emoji, animations]) => {\n      return {emoji, animations};\n    });\n  }\n\n  public getAnimatedEmojiSounds(overwrite?: boolean) {\n    if(this.getAnimatedEmojiSoundsPromise && !overwrite) return this.getAnimatedEmojiSoundsPromise;\n    const promise = this.getAnimatedEmojiSoundsPromise = Promise.all([\n      this.apiManager.getAppConfig(overwrite),\n      this.apiManager.getConfig()\n    ]).then(([appConfig, config]) => {\n      if(this.getAnimatedEmojiSoundsPromise !== promise) {\n        return;\n      }\n\n      for(const emoji in appConfig.emojies_sounds) {\n        const sound = appConfig.emojies_sounds[emoji];\n        const bytesStr = atob(fixBase64String(sound.file_reference_base64, false));\n        const bytes = new Uint8Array(bytesStr.length);\n        for(let i = 0, length = bytes.length; i < length; ++i) {\n          bytes[i] = bytesStr[i].charCodeAt(0);\n        }\n\n        // if(TEST_FILE_REFERENCE_REFRESH) {\n        //   bytes[0] = bytes[1] = bytes[2] = bytes[3] = bytes[4] = 0;\n        //   sound.access_hash += '999';\n        // }\n\n        const doc = this.appDocsManager.saveDoc({\n          _: 'document',\n          pFlags: {},\n          id: sound.id,\n          access_hash: sound.access_hash,\n          attributes: [{\n            _: 'documentAttributeAudio',\n            duration: 1,\n            pFlags: {\n              voice: true\n            }\n          }],\n          date: 0,\n          dc_id: config.this_dc,\n          file_reference: bytes,\n          mime_type: 'audio/ogg'\n          // size: 101010 // test loading everytime\n        }, {\n          type: 'emojiesSounds'\n        });\n\n        this.sounds[emoji] = doc;\n      }\n\n      // if(TEST_FILE_REFERENCE_REFRESH) {\n      //   TEST_FILE_REFERENCE_REFRESH = false;\n      // }\n    });\n\n    return promise;\n  }\n\n  public async getRecentStickers(overwrite?: boolean): Promise<Modify<MessagesRecentStickers.messagesRecentStickers, {\n    stickers: Document[]\n  }>> {\n    const res = await this.apiManager.invokeApiHashable({\n      method: 'messages.getRecentStickers',\n      processResult: (res) => {\n        assumeType<MessagesRecentStickers.messagesRecentStickers>(res);\n\n        this.recentStickers = res.stickers as MyDocument[];\n        this.saveStickers(res.stickers);\n        return res;\n      },\n      overwrite\n    });\n\n    return res;\n  }\n\n  public getRecentStickersStickers(overwrite?: boolean) {\n    if(overwrite) this.recentStickers = undefined;\n    else if(this.recentStickers) return this.recentStickers;\n    return this.getRecentStickers(overwrite).then(() => this.recentStickers);\n  }\n\n  public saveRecentSticker(docId: DocId, unsave?: boolean, attached?: boolean) {\n    const doc = this.appDocsManager.getDoc(docId);\n\n    findAndSplice(this.recentStickers, (_doc) => _doc.id === docId);\n    if(!unsave) {\n      this.recentStickers.unshift(doc);\n\n      const docEmoticon = fixEmoji(doc.stickerEmojiRaw);\n      for(const emoticon in this.getStickersByEmoticonsPromises) {\n        const promise = this.getStickersByEmoticonsPromises[emoticon];\n        promise.then((stickers) => {\n          const _doc = findAndSplice(stickers, (_doc) => _doc.id === doc.id);\n          if(_doc) {\n            stickers.unshift(_doc);\n          } else if(emoticon.includes(docEmoticon)) {\n            stickers.unshift(doc);\n          }\n        });\n      }\n    }\n\n    this.rootScope.dispatchEvent('sticker_updated', {type: 'recent', faved: !unsave, document: doc});\n\n    if(unsave) {\n      this.onStickersUpdated('recent', false);\n    }\n\n    return this.apiManager.invokeApi('messages.saveRecentSticker', {\n      id: getDocumentInput(doc),\n      unsave,\n      attached\n    });\n  }\n\n  private cleanEmoji(emoji: string) {\n    return emoji.replace(/\\ufe0f/g, '').replace(/🏻|🏼|🏽|🏾|🏿/g, '');\n  }\n\n  public getAnimatedEmojiSticker(emoji: string, isAnimation?: boolean) {\n    const id = isAnimation ? LOCAL_IDS.EMOJI_ANIMATIONS : LOCAL_IDS.EMOJI;\n    const stickerSet = this.storage.getFromCache(id);\n    // const stickerSet = await this.getStickerSet({id});\n    if(!stickerSet?.documents) return;\n\n    if(isAnimation) {\n      if(['🧡', '💛', '💚', '💙', '💜', '🖤', '🤍', '🤎'].includes(emoji)) {\n        emoji = '❤️';\n      }\n    }\n\n    emoji = this.cleanEmoji(emoji);\n    const pack = stickerSet.packs.find((p) => p.emoticon === emoji);\n    return pack ? this.appDocsManager.getDoc(pack.documents[0]) : undefined;\n  }\n\n  public getAnimatedEmojiSoundDocument(emoji: string) {\n    return this.sounds[this.cleanEmoji(emoji)];\n  }\n\n  public preloadAnimatedEmojiSticker(emoji: string) {\n    const preloadEmojiPromise = this.getAnimatedEmojiStickerSet().then(() => {\n      return this.getAnimatedEmojiSticker(emoji);\n    });\n\n    return Promise.all([\n      preloadEmojiPromise,\n      this.preloadAnimatedEmojiStickerAnimation(emoji)\n    ]).then(([doc, a]) => {\n      return {\n        doc: doc,\n        animation: a?.doc,\n        sound: a?.sound\n      };\n    });\n  }\n\n  public preloadAnimatedEmojiStickerAnimation(emoji: string) {\n    return this.getAnimatedEmojiStickerSet().then(() => {\n      return this.getAnimatedEmojiSticker(emoji, true);\n    }).then((doc) => {\n      if(!doc) {\n        return;\n      }\n\n      const sound = this.getAnimatedEmojiSoundDocument(emoji);\n      return Promise.all([\n        this.preloadSticker(doc.id),\n        sound ? this.preloadSticker(sound.id) : undefined\n      ]).then(() => {\n        return {doc, sound};\n      });\n    });\n  }\n\n  public preloadSticker(docId: DocId, isPremiumEffect?: boolean) {\n    const doc = this.appDocsManager.getDoc(docId);\n    return this.apiFileManager.downloadMedia({media: doc, thumb: isPremiumEffect ? doc.video_thumbs?.[0] as Extract<VideoSize, VideoSize.videoSize> : undefined});\n  }\n\n  private saveStickerSet(res: Omit<MessagesStickerSet.messagesStickerSet, '_'>, id: DocId) {\n    const newSet: MessagesStickerSet = {\n      _: 'messages.stickerSet',\n      set: res.set,\n      packs: res.packs,\n      documents: res.documents as Document[],\n      keywords: res.keywords\n    };\n\n    let stickerSet = this.storage.getFromCache(id);\n    if(stickerSet) {\n      Object.assign(stickerSet, newSet);\n    } else {\n      stickerSet = this.storage.setToCache(id, newSet);\n    }\n\n    if(stickerSet.set.short_name) {\n      this.names[stickerSet.set.short_name] = this.getStickerSetInput(newSet.set) as any;\n    }\n\n    this.saveStickers(res.documents);\n\n    // console.log('stickers wrote', this.stickerSets);\n    const needSave = stickerSet.set.installed_date || LOCAL_IDS_SET.has(id as any);\n    stickerSet.refreshTime = Date.now();\n    this.storage.set({[id]: stickerSet}, !needSave);\n  }\n\n  public getStickerSetThumbDownloadOptions(stickerSet: StickerSet.stickerSet): DownloadOptions {\n    const thumb = stickerSet.thumbs.find((thumb) => thumb._ === 'photoSize') as PhotoSize.photoSize;\n    const dcId = stickerSet.thumb_dc_id;\n\n    const isAnimated = stickerSet.pFlags?.animated;\n\n    const input: InputFileLocation.inputStickerSetThumb = {\n      _: 'inputStickerSetThumb',\n      stickerset: this.getStickerSetInput(stickerSet),\n      thumb_version: stickerSet.thumb_version\n    };\n\n    return {dcId, location: input, size: thumb.size, mimeType: isAnimated ? 'application/x-tgsticker' : 'image/webp'};\n  }\n\n  /* public getStickerSetThumbURL(stickerSet: MTStickerSet) {\n    const thumb = stickerSet.thumb;\n    const dcId = stickerSet.thumb_dc_id;\n\n    const isAnimated = stickerSet.pFlags?.animated;\n\n    const input: inputStickerSetThumb = {\n      _: 'inputStickerSetThumb',\n      stickerset: this.getStickerSetInput(stickerSet),\n      volume_id: thumb.location.volume_id,\n      local_id: thumb.location.local_id\n    };\n\n    const url = getFileURL('document', this.getStickerSetThumbDownloadOptions(stickerSet));\n    return url;\n\n    //return promise;\n  } */\n\n  public getStickerSetInput(set: MyStickerSetInput): InputStickerSet {\n    if(LOCAL_IDS_SET.has(set.id as any)) {\n      return {\n        _: set.id as any\n      };\n    } else if(!set.access_hash) {\n      return {\n        _: 'inputStickerSetShortName',\n        short_name: '' + set.id\n      };\n    } else {\n      return {\n        _: 'inputStickerSetID',\n        id: set.id,\n        access_hash: set.access_hash\n      };\n    }\n  }\n\n  public async getFeaturedStickers() {\n    const res = await this.apiManager.invokeApiHashable({\n      method: 'messages.getFeaturedStickers',\n      processResult: (res) => {\n        assumeType<MessagesFeaturedStickers.messagesFeaturedStickers>(res);\n\n        forEachReverse(res.sets, (covered, idx, arr) => {\n          if(covered.set.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\n            arr.splice(idx, 1);\n          }\n        });\n\n        res.sets.forEach((covered) => {\n          this.saveStickerSet({set: covered.set, documents: [], packs: [], keywords: []}, covered.set.id);\n        });\n\n        return res;\n      }\n    });\n\n    return res.sets;\n  }\n\n  public getPromoPremiumStickers() {\n    return this.getStickersByEmoticon('⭐️⭐️', false);\n  }\n\n  public getPremiumStickers() {\n    return this.getStickersByEmoticon('📂⭐️', false);\n  }\n\n  public getFavedStickers(overwrite?: boolean) {\n    return this.apiManager.invokeApiHashable({\n      method: 'messages.getFavedStickers',\n      processResult: (favedStickers) => {\n        assumeType<MessagesFavedStickers.messagesFavedStickers>(favedStickers);\n        this.saveStickers(favedStickers.stickers);\n        this.favedStickers = favedStickers.stickers as MyDocument[];\n        return favedStickers;\n      },\n      overwrite\n    });\n  }\n\n  public getFavedStickersStickers(overwrite?: boolean) {\n    if(overwrite) this.favedStickers = undefined;\n    else if(this.favedStickers) return this.favedStickers;\n    return this.getFavedStickers(overwrite).then(() => this.favedStickers);\n  }\n\n  public getFavedStickersLimit() {\n    return this.apiManager.getLimit('favedStickers');\n  }\n\n  public async faveSticker(docId: DocId, unfave?: boolean) {\n    if(!this.favedStickers) {\n      await this.getFavedStickersStickers();\n    }\n\n    const limit = await this.getFavedStickersLimit();\n\n    const doc = this.appDocsManager.getDoc(docId);\n    findAndSplice(this.favedStickers, (_doc) => _doc.id === doc.id);\n\n    if(!unfave) {\n      this.favedStickers.unshift(doc);\n      const spliced = this.favedStickers.splice(limit, this.favedStickers.length - limit);\n    }\n\n    this.rootScope.dispatchEvent('sticker_updated', {type: 'faved', faved: !unfave, document: doc});\n\n    return this.apiManager.invokeApi('messages.faveSticker', {\n      id: getDocumentInput(doc),\n      unfave\n    }).then(() => {\n      if(unfave) {\n        this.onStickersUpdated('faved', true);\n      }\n    });\n  }\n\n  public async toggleStickerSet(set: StickerSet.stickerSet) {\n    set = this.storage.getFromCache(set.id).set;\n\n    if(set.installed_date) {\n      const res = await this.apiManager.invokeApi('messages.uninstallStickerSet', {\n        stickerset: this.getStickerSetInput(set)\n      });\n\n      if(res) {\n        delete set.installed_date;\n        this.rootScope.dispatchEvent('stickers_deleted', set);\n        this.storage.delete(set.id, true);\n        return true;\n      }\n    } else {\n      const res = await this.apiManager.invokeApi('messages.installStickerSet', {\n        stickerset: this.getStickerSetInput(set),\n        archived: false\n      });\n\n      if(res) {\n        set.installed_date = tsNow(true);\n        this.rootScope.dispatchEvent('stickers_installed', set);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public toggleStickerSets(sets: StickerSet.stickerSet[]) {\n    return Promise.all(sets.map((set) => this.toggleStickerSet(set)));\n  }\n\n  public async searchStickerSets(query: string, excludeFeatured = true) {\n    const flags = excludeFeatured ? 1 : 0;\n    const res = await this.apiManager.invokeApiHashable({\n      method: 'messages.searchStickerSets',\n      params: {\n        flags,\n        exclude_featured: excludeFeatured || undefined,\n        q: query\n      },\n      processResult: (res) => {\n        assumeType<MessagesFoundStickerSets.messagesFoundStickerSets>(res);\n\n        forEachReverse(res.sets, (covered, idx, arr) => {\n          if(covered.set.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\n            arr.splice(idx, 1);\n          }\n        });\n\n        res.sets.forEach((covered) => {\n          this.saveStickerSet({set: covered.set, documents: [], packs: [], keywords: []}, covered.set.id);\n        });\n\n        return res;\n      }\n    });\n\n    const foundSaved: StickerSetCovered[] = [];\n    const cache = this.storage.getCache();\n    for(const id in cache) {\n      const {set} = cache[id];\n\n      if(set.title.toLowerCase().includes(query.toLowerCase()) && !res.sets.find((c) => c.set.id === set.id)) {\n        foundSaved.push({_: 'stickerSetCovered', set, cover: null});\n      }\n    }\n\n    return res.sets.concat(foundSaved);\n  }\n\n  private processAllStickersResult = (allStickers: MessagesAllStickers) => {\n    assumeType<MessagesAllStickers.messagesAllStickers>(allStickers);\n\n    forEachReverse(allStickers.sets, (stickerSet, idx, arr) => {\n      if(stickerSet.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\n        arr.splice(idx, 1);\n      }\n    });\n\n    return allStickers;\n  };\n\n  public getAllStickers() {\n    return this.apiManager.invokeApiHashable({\n      method: 'messages.getAllStickers',\n      processResult: this.processAllStickersResult\n    });\n  }\n\n  public getEmojiStickers() {\n    return this.apiManager.invokeApiHashable({\n      method: 'messages.getEmojiStickers',\n      processResult: this.processAllStickersResult\n    });\n  }\n\n  public preloadStickerSets() {\n    return this.getAllStickers().then((allStickers) => {\n      const sets = (allStickers as MessagesAllStickers.messagesAllStickers).sets;\n      return Promise.all(sets.map((set) => this.getStickerSet(set, {useCache: true})));\n    });\n  }\n\n  // TODO: detect \"🤷\" by \"🤷‍♂️\"\n  public getStickersByEmoticon(emoticon: string, includeOurStickers = true, includeServerStickers = true) {\n    emoticon = fixEmoji(emoticon);\n    const cacheKey = emoticon + (includeOurStickers ? '1' : '0') + (includeServerStickers ? '1' : '0');\n    if(this.getStickersByEmoticonsPromises[cacheKey]) return this.getStickersByEmoticonsPromises[cacheKey];\n\n    return this.getStickersByEmoticonsPromises[cacheKey] = Promise.all([\n      includeServerStickers ? this.apiManager.invokeApiHashable({\n        method: 'messages.getStickers',\n        params: {\n          emoticon\n        },\n        processResult: (stickers) => stickers\n      }) : undefined,\n      includeOurStickers ? this.preloadStickerSets() : [],\n      includeOurStickers ? this.getRecentStickers() : undefined\n    ]).then(([messagesStickers, installedSets, recentStickers]) => {\n      const foundStickers = messagesStickers ? (messagesStickers as MessagesStickers.messagesStickers).stickers.map((sticker) => this.appDocsManager.saveDoc(sticker)) : [];\n      const cachedStickersAnimated: Document.document[] = [], cachedStickersStatic: Document.document[] = [];\n\n      // console.log('getStickersByEmoticon', messagesStickers, installedSets, recentStickers);\n\n      const iteratePacks = (packs: StickerPack.stickerPack[]) => {\n        for(const pack of packs) {\n          const packEmoticon = fixEmoji(pack.emoticon);\n          if(packEmoticon.includes(emoticon)) {\n            for(const docId of pack.documents) {\n              const doc = this.appDocsManager.getDoc(docId);\n              (doc.animated ? cachedStickersAnimated : cachedStickersStatic).push(doc);\n            }\n          }\n        }\n      };\n\n      if(recentStickers) {\n        iteratePacks(recentStickers.packs);\n        const stickers = recentStickers.stickers;\n        [cachedStickersAnimated, cachedStickersStatic].forEach((s) => {\n          s.sort((a, b) => stickers.indexOf(a) - stickers.indexOf(b));\n        });\n      }\n\n      for(const set of installedSets) {\n        iteratePacks(set.packs);\n      }\n\n      /* const entities = parseEntities(emoticon);\n      if(entities.length === 1) {\n        [cachedStickersAnimated, cachedStickersStatic].forEach((s) => {\n          forEachReverse(s, (doc, idx) => {\n            const docEmoticon = fixEmoji(doc.stickerEmojiRaw);\n            if(docEmoticon !== emoticon) {\n              s.splice(idx, 1);\n            }\n          });\n        });\n      } */\n\n      const stickers = [...new Set(cachedStickersAnimated.concat(cachedStickersStatic, foundStickers))]/* .filter((doc) => !doc.animated) */;\n\n      forEachReverse(stickers, (sticker, idx, arr) => {\n        if((sticker.sticker === 3 && !getEnvironment().IS_WEBM_SUPPORTED) ||\n          (!this.rootScope.premium && getStickerEffectThumb(sticker))) {\n          arr.splice(idx, 1);\n        }\n      });\n\n      return stickers;\n    });\n  }\n\n  public clearRecentStickers() {\n    if(this.recentStickers) {\n      this.recentStickers.length = 0;\n      this.onStickersUpdated('recent', false);\n    }\n\n    return this.apiManager.invokeApi('messages.clearRecentStickers');\n  }\n\n  public reorderStickerSets(order: StickerSet.stickerSet['id'][], emojis?: boolean, masks?: boolean) {\n    return this.apiManager.invokeApi('messages.reorderStickerSets', {\n      emojis,\n      masks,\n      order\n    }).then(() => {\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateStickerSetsOrder',\n        order,\n        pFlags: {\n          emojis: emojis || undefined,\n          masks: masks || undefined\n        }\n      });\n    });\n  }\n}\n","export default function fixBase64String(str: string, toUrl: boolean) {\n  if(toUrl) {\n    return str.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=+$/, '');\n  } else {\n    return str.replace(/-/g, '+').replace(/_/g, '/');\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport filterUnique from '../../helpers/array/filterUnique';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport cleanSearchText from '../../helpers/cleanSearchText';\nimport cleanUsername from '../../helpers/cleanUsername';\nimport tsNow from '../../helpers/tsNow';\nimport isObject from '../../helpers/object/isObject';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport {isRestricted} from '../../helpers/restrictions';\nimport {Chat, ContactsResolvedPeer, InputContact, InputGeoPoint, InputMedia, InputPeer, InputUser, User as MTUser, UserProfilePhoto, UserStatus} from '../../layer';\nimport parseEntities from '../richTextProcessor/parseEntities';\nimport wrapUrl from '../richTextProcessor/wrapUrl';\nimport SearchIndex from '../searchIndex';\nimport {AppManager} from './manager';\nimport getPeerId from './utils/peers/getPeerId';\nimport canSendToUser from './utils/users/canSendToUser';\nimport {AppStoragesManager} from './appStoragesManager';\nimport deepEqual from '../../helpers/object/deepEqual';\nimport getPeerActiveUsernames from './utils/peers/getPeerActiveUsernames';\nimport callbackify from '../../helpers/callbackify';\n\nexport type User = MTUser.user;\nexport type TopPeerType = 'correspondents' | 'bots_inline';\nexport type MyTopPeer = {id: PeerId, rating: number};\n\nexport class AppUsersManager extends AppManager {\n  private storage: AppStoragesManager['storages']['users'];\n\n  private users: {[userId: UserId]: User};\n  private usernames: {[username: string]: PeerId};\n  private contactsIndex: SearchIndex<UserId>;\n  private contactsFillPromise: CancellablePromise<AppUsersManager['contactsList']>;\n  private contactsList: Set<UserId>;\n  private updatedContactsList: boolean;\n\n  private getTopPeersPromises: {[type in TopPeerType]?: Promise<MyTopPeer[]>};\n\n  protected after() {\n    this.clear(true);\n\n    setInterval(this.updateUsersStatuses, 60000);\n\n    this.rootScope.addEventListener('state_synchronized', this.updateUsersStatuses);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateUserStatus: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          user.status = update.status;\n          if(user.status) {\n            if('expires' in user.status) {\n              user.status.expires -= this.timeManager.getServerTimeOffset();\n            }\n\n            if('was_online' in user.status) {\n              user.status.was_online -= this.timeManager.getServerTimeOffset();\n            }\n          }\n\n          // user.sortStatus = this.getUserStatusForSort(user.status);\n          this.rootScope.dispatchEvent('user_update', userId);\n          this.setUserToStateIfNeeded(user);\n        } // ////else console.warn('No user by id:', userId);\n      },\n\n      // updateUserPhoto: (update) => {\n      //   const userId = update.user_id;\n      //   const user = this.users[userId];\n      //   if(user) {\n      //     if((user.photo as UserProfilePhoto.userProfilePhoto)?.photo_id === (update.photo as UserProfilePhoto.userProfilePhoto)?.photo_id) {\n      //       return;\n      //     }\n\n      //     this.forceUserOnline(userId, update.date);\n\n      //     if(update.photo._ === 'userProfilePhotoEmpty') {\n      //       delete user.photo;\n      //     } else {\n      //       user.photo = safeReplaceObject(user.photo, update.photo);\n      //     }\n\n      //     this.setUserToStateIfNeeded(user);\n\n      //     this.rootScope.dispatchEvent('user_update', userId);\n      //     this.rootScope.dispatchEvent('avatar_update', userId.toPeerId());\n      //   } else console.warn('No user by id:', userId);\n      // },\n\n      updateUserName: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          this.forceUserOnline(userId);\n\n          this.saveApiUser({\n            ...user,\n            first_name: update.first_name,\n            last_name: update.last_name,\n            username: undefined,\n            usernames: update.usernames\n          }, true);\n        }\n      }\n    });\n\n    /* case 'updateContactLink':\n    this.onContactUpdated(update.user_id, update.my_link._ === 'contactLinkContact');\n    break; */\n\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.appStoragesManager.loadStorage('users')\n    ]).then(([state, {results: users, storage}]) => {\n      this.storage = storage;\n\n      this.saveApiUsers(users);\n      for(let i = 0, length = users.length; i < length; ++i) {\n        const user = users[i];\n        if(!user) {\n          continue;\n        }\n\n        if(state.contactsListCachedTime && (user.pFlags.contact || user.pFlags.mutual_contact)) {\n          this.pushContact(user.id);\n\n          if(!this.contactsFillPromise) {\n            this.contactsFillPromise = deferredPromise();\n            this.contactsFillPromise.resolve(this.contactsList);\n          }\n        }\n      }\n\n      // const contactsList = state.contactsList;\n      // if(Array.isArray(contactsList)) {\n      //   contactsList.forEach((userId) => {\n      //     this.pushContact(userId);\n      //   });\n\n      //   if(contactsList.length) {\n      //     this.contactsFillPromise = deferredPromise();\n      //     this.contactsFillPromise.resolve(this.contactsList);\n      //   }\n      // }\n\n      const recentSearch = state.recentSearch || [];\n      for(let i = 0, length = recentSearch.length; i < length; ++i) {\n        this.peersStorage.requestPeer(recentSearch[i], 'recentSearch');\n      }\n\n      this.peersStorage.addEventListener('peerNeeded', (peerId) => {\n        if(!this.appPeersManager.isUser(peerId)) {\n          return;\n        }\n\n        const userId = peerId.toUserId();\n        if(!this.storage.getFromCache(userId)) {\n          this.storage.set({\n            [userId]: this.getUser(userId)\n          });\n        }\n      });\n\n      this.peersStorage.addEventListener('peerUnneeded', (peerId) => {\n        if(!this.appPeersManager.isUser(peerId)) {\n          return;\n        }\n\n        const userId = peerId.toUserId();\n        if(this.storage.getFromCache(userId)) {\n          this.storage.delete(userId);\n        }\n      });\n    });\n  }\n\n  public clear = (init = false) => {\n    if(!init) {\n      for(const userId in this.users) {\n        // const userId = +userId;\n        if(!userId) continue;\n        const peerId = userId.toPeerId();\n        if(!this.peersStorage.isPeerNeeded(peerId)) {\n          const user = this.users[userId];\n          this.modifyUsernamesCache(user, false);\n\n          this.storage.delete(userId);\n          delete this.users[userId];\n        }\n      }\n    } else {\n      this.users = {};\n      this.usernames = {};\n    }\n\n    this.getTopPeersPromises = {};\n    this.contactsIndex = this.createSearchIndex();\n    this.contactsFillPromise = undefined;\n    this.contactsList = new Set();\n    this.updatedContactsList = false;\n  };\n\n  public indexMyself() {\n    const userId = this.getSelf().id;\n    this.contactsIndex.indexObject(userId, this.getUserSearchText(userId));\n  }\n\n  public get userId() {\n    return this.rootScope.myId.toUserId();\n  }\n\n  private onContactsModified(fromServer?: boolean) {\n    // const contactsList = [...this.contactsList];\n    // this.appStateManager.pushToState('contactsList', contactsList);\n\n    if(fromServer) {\n      this.appStateManager.pushToState('contactsListCachedTime', tsNow(true));\n    }\n  }\n\n  public pushRecentSearch(peerId: PeerId) {\n    return this.appStateManager.getState().then((state) => {\n      const recentSearch = state.recentSearch || [];\n      if(recentSearch[0] !== peerId) {\n        indexOfAndSplice(recentSearch, peerId);\n        recentSearch.unshift(peerId);\n        if(recentSearch.length > 20) {\n          recentSearch.length = 20;\n        }\n\n        this.appStateManager.pushToState('recentSearch', recentSearch);\n        for(const peerId of recentSearch) {\n          this.peersStorage.requestPeer(peerId, 'recentSearch');\n        }\n      }\n    });\n  }\n\n  public clearRecentSearch() {\n    return this.appStateManager.getState().then((state) => {\n      const recentSearch = state.recentSearch || [];\n      for(const peerId of recentSearch) {\n        this.peersStorage.releasePeer(peerId, 'recentSearch');\n      }\n\n      recentSearch.length = 0;\n      this.appStateManager.pushToState('recentSearch', recentSearch);\n    });\n  }\n\n  public fillContacts() {\n    if(this.contactsFillPromise && this.updatedContactsList) {\n      return {\n        cached: this.contactsFillPromise.isFulfilled,\n        promise: this.contactsFillPromise\n      };\n    }\n\n    this.updatedContactsList = true;\n\n    const promise = deferredPromise<Set<UserId>>();\n    this.apiManager.invokeApi('contacts.getContacts').then((result) => {\n      if(result._ === 'contacts.contacts') {\n        this.contactsList.clear();\n\n        this.saveApiUsers(result.users);\n\n        result.contacts.forEach((contact) => {\n          this.pushContact(contact.user_id);\n        });\n\n        this.onContactsModified(true);\n\n        this.contactsFillPromise = promise;\n      }\n\n      promise.resolve(this.contactsList);\n    }, () => {\n      this.updatedContactsList = false;\n    });\n\n    return {\n      cached: this.contactsFillPromise?.isFulfilled,\n      promise: this.contactsFillPromise ||= promise\n    };\n  }\n\n  public resolveUsername(username: string): Promise<Chat | User> | Chat | User {\n    if(username[0] === '@') {\n      username = username.slice(1);\n    }\n\n    username = username.toLowerCase();\n    const peerId = this.usernames[username];\n    if(peerId) {\n      return this.appPeersManager.getPeer(peerId);\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'contacts.resolveUsername',\n      params: {username},\n      processResult: (resolvedPeer) => this.processResolvedPeer(resolvedPeer)\n    });\n  }\n\n  public resolveUserByUsername(username: string) {\n    return callbackify(this.resolveUsername(username), (peer) => {\n      return peer?._ === 'user' ? peer : undefined;\n    });\n  }\n\n  private processResolvedPeer(resolvedPeer: ContactsResolvedPeer.contactsResolvedPeer) {\n    this.saveApiUsers(resolvedPeer.users);\n    this.appChatsManager.saveApiChats(resolvedPeer.chats);\n\n    return this.appPeersManager.getPeer(getPeerId(resolvedPeer.peer)) as Chat | User;\n  }\n\n  public resolvePhone(phone: string) {\n    return this.apiManager.invokeApi('contacts.resolvePhone', {phone}).then((resolvedPeer) => {\n      return this.processResolvedPeer(resolvedPeer) as User;\n    });\n  }\n\n  private pushContact(id: UserId) {\n    this.contactsList.add(id);\n    this.contactsIndex.indexObject(id, this.getUserSearchText(id));\n    this.peersStorage.requestPeer(id.toPeerId(), 'contact');\n  }\n\n  private popContact(id: UserId) {\n    this.contactsList.delete(id);\n    this.contactsIndex.indexObject(id, ''); // delete search index\n    this.peersStorage.releasePeer(id.toPeerId(), 'contact');\n  }\n\n  public getUserSearchText(id: UserId) {\n    const user = this.users[id];\n    if(!user) {\n      return '';\n    }\n\n    const arr: string[] = [\n      user.first_name,\n      user.last_name,\n      user.phone,\n      ...getPeerActiveUsernames(user),\n      // user.pFlags.self ? I18n.format('SavedMessages', true) : '',\n      user.pFlags.self ? 'Saved Messages' : ''\n    ];\n\n    return arr.filter(Boolean).join(' ');\n  }\n\n  public getContacts(query?: string, includeSaved = false, sortBy: 'name' | 'online' | 'none' = 'name') {\n    return this.fillContacts().promise.then((_contactsList) => {\n      let contactsList = [..._contactsList];\n      if(query) {\n        const results = this.contactsIndex.search(query);\n        const filteredContactsList = [...contactsList].filter((id) => results.has(id));\n\n        contactsList = filteredContactsList;\n      }\n\n      if(sortBy === 'name') {\n        contactsList.sort((userId1, userId2) => {\n          const sortName1 = (this.users[userId1] || {}).sortName || '';\n          const sortName2 = (this.users[userId2] || {}).sortName || '';\n          return sortName1.localeCompare(sortName2);\n        });\n      } else if(sortBy === 'online') {\n        contactsList.sort((userId1, userId2) => {\n          const status1 = this.getUserStatusForSort(this.getUser(userId1).status);\n          const status2 = this.getUserStatusForSort(this.getUser(userId2).status);\n          return status2 - status1;\n        });\n      }\n\n      const myUserId = this.userId;\n      indexOfAndSplice(contactsList, myUserId);\n      if(includeSaved) {\n        if(this.testSelfSearch(query)) {\n          contactsList.unshift(myUserId);\n        }\n      }\n\n      return contactsList;\n    });\n  }\n\n  public getContactsPeerIds(\n    query?: Parameters<AppUsersManager['getContacts']>[0],\n    includeSaved?: Parameters<AppUsersManager['getContacts']>[1],\n    sortBy?: Parameters<AppUsersManager['getContacts']>[2],\n    limit?: number\n  ) {\n    return this.getContacts(query, includeSaved, sortBy).then((userIds) => {\n      const peerIds = userIds.map((userId) => userId.toPeerId(false));\n      if(limit) {\n        return peerIds.slice(0, limit);\n      }\n\n      return peerIds;\n    });\n  }\n\n  public toggleBlock(peerId: PeerId, block: boolean) {\n    return this.apiManager.invokeApiSingle(block ? 'contacts.block' : 'contacts.unblock', {\n      id: this.appPeersManager.getInputPeerById(peerId)\n    }).then((value) => {\n      if(value) {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updatePeerBlocked',\n          peer_id: this.appPeersManager.getOutputPeer(peerId),\n          blocked: block\n        });\n      }\n\n      return value;\n    });\n  }\n\n  public testSelfSearch(query: string) {\n    const user = this.getSelf();\n    const index = this.createSearchIndex();\n    index.indexObject(user.id, this.getUserSearchText(user.id));\n    return index.search(query).has(user.id);\n  }\n\n  public createSearchIndex() {\n    return new SearchIndex<UserId>({\n      clearBadChars: true,\n      ignoreCase: true,\n      latinize: true,\n      includeTag: true\n    });\n  }\n\n  public saveApiUsers(apiUsers: MTUser[], override?: boolean) {\n    if((apiUsers as any).saved) return;\n    (apiUsers as any).saved = true;\n    apiUsers.forEach((user) => this.saveApiUser(user, override));\n  }\n\n  public modifyUsernamesCache(peer: Parameters<typeof getPeerActiveUsernames>[0], save: boolean) {\n    const usernames = getPeerActiveUsernames(peer);\n    if(!usernames.length) {\n      return;\n    }\n\n    const cleanedUsernames = usernames.map((username) => cleanUsername(username));\n    if(save) {\n      cleanedUsernames.forEach((searchUsername) => {\n        this.usernames[searchUsername] = peer.id.toPeerId(peer._ !== 'user');\n      });\n    } else {\n      cleanedUsernames.forEach((searchUsername) => {\n        delete this.usernames[searchUsername];\n      });\n    }\n  }\n\n  public setUsernameToCache(peer: Parameters<typeof getPeerActiveUsernames>[0], oldPeer?: typeof peer) {\n    if(\n      !oldPeer ||\n      (oldPeer as MTUser.user).username !== (peer as MTUser.user).username ||\n      !deepEqual((oldPeer as MTUser.user).usernames, (peer as MTUser.user).usernames)\n    ) {\n      this.modifyUsernamesCache(oldPeer, false);\n      this.modifyUsernamesCache(peer, true);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  public saveApiUser(user: MTUser, override?: boolean) {\n    if(!user || user._ === 'userEmpty') return;\n\n    const userId = user.id;\n    const oldUser = this.users[userId];\n\n    // ! commented block can affect performance !\n    // if(oldUser && !override) {\n    //   console.log('saveApiUser same');\n    //   return;\n    // }\n\n    user.pFlags ??= {};\n\n    if(user.pFlags.min && oldUser !== undefined) {\n      return;\n    }\n\n    // * exclude from state\n    // defineNotNumerableProperties(user, ['initials', 'num', 'rFirstName', 'rFullName', 'rPhone', 'sortName', 'sortStatus']);\n\n    const changedUsername = this.setUsernameToCache(user, oldUser);\n\n    if(!oldUser ||\n      oldUser.sortName === undefined ||\n      oldUser.first_name !== user.first_name ||\n      oldUser.last_name !== user.last_name) {\n      const fullName = user.first_name + (user.last_name ? ' ' + user.last_name : '');\n\n      user.sortName = user.pFlags.deleted ? '' : cleanSearchText(fullName, false);\n    } else {\n      user.sortName = oldUser.sortName;\n    }\n\n    if(user.status) {\n      if((user.status as UserStatus.userStatusOnline).expires) {\n        (user.status as UserStatus.userStatusOnline).expires -= this.timeManager.getServerTimeOffset();\n      }\n\n      if((user.status as UserStatus.userStatusOffline).was_online) {\n        (user.status as UserStatus.userStatusOffline).was_online -= this.timeManager.getServerTimeOffset();\n      }\n    }\n\n    if((user as User).photo?._ === 'userProfilePhotoEmpty') {\n      delete (user as User).photo;\n    }\n\n    // user.sortStatus = user.pFlags.bot ? -1 : this.getUserStatusForSort(user.status);\n\n    // if(!user.username && user.usernames) {\n    //   user.username = user.usernames.find((username) => username.pFlags.active).username;\n    // }\n\n    if(oldUser === undefined) {\n      this.users[userId] = user;\n    } else {\n      const changedTitle = user.first_name !== oldUser.first_name ||\n        user.last_name !== oldUser.last_name ||\n        changedUsername;\n\n      const oldPhotoId = (oldUser.photo as UserProfilePhoto.userProfilePhoto)?.photo_id;\n      const newPhotoId = (user.photo as UserProfilePhoto.userProfilePhoto)?.photo_id;\n      const changedPhoto = oldPhotoId !== newPhotoId;\n\n      const changedPremium = oldUser.pFlags.premium !== user.pFlags.premium;\n      const changedAnyBadge = changedPremium ||\n        oldUser.pFlags.verified !== user.pFlags.verified ||\n        oldUser.pFlags.scam !== user.pFlags.scam ||\n        oldUser.pFlags.fake !== user.pFlags.fake;\n\n      /* if(user.pFlags.bot && user.bot_info_version !== oldUser.bot_info_version) {\n\n      } */\n\n      const wasContact = !!oldUser.pFlags.contact;\n      const newContact = !!user.pFlags.contact;\n\n      safeReplaceObject(oldUser, user);\n      this.rootScope.dispatchEvent('user_update', userId);\n\n      if(wasContact !== newContact) {\n        this.onContactUpdated(userId, newContact, wasContact);\n      }\n\n      if(changedPhoto) {\n        this.rootScope.dispatchEvent('avatar_update', {peerId: user.id.toPeerId()});\n      }\n\n      if(changedTitle || changedAnyBadge) {\n        this.rootScope.dispatchEvent('peer_title_edit', {peerId: user.id.toPeerId()});\n      }\n\n      // whitelisted domains\n      if(changedPremium) {\n        this.rootScope.dispatchEvent('peer_bio_edit', user.id.toPeerId());\n      }\n    }\n\n    this.checkPremium(user, oldUser);\n    this.setUserToStateIfNeeded(user);\n  }\n\n  private checkPremium(user: User, oldUser: User) {\n    if(user.pFlags.self) {\n      const isPremium = !!user.pFlags.premium;\n      if(this.rootScope.premium !== isPremium) {\n        this.rootScope.dispatchEvent('premium_toggle_private', {isNew: !oldUser, isPremium});\n      }\n    }\n  }\n\n  private setUserToStateIfNeeded(user: User) {\n    if(this.peersStorage.isPeerNeeded(user.id.toPeerId())) {\n      this.storage.set({\n        [user.id]: user\n      });\n    }\n  }\n\n  public isUserOnlineVisible(id: UserId) {\n    return this.getUserStatusForSort(id) > 3;\n  }\n\n  public getUserStatusForSort(status: User['status'] | UserId) {\n    if(typeof(status) !== 'object') {\n      const user = this.getUser(status);\n      status = user?.status;\n    }\n\n    if(status) {\n      const expires = status._ === 'userStatusOnline' ? status.expires : (status._ === 'userStatusOffline' ? status.was_online : 0);\n      if(expires) {\n        return expires;\n      }\n\n      /* const timeNow = tsNow(true);\n      switch(status._) {\n        case 'userStatusRecently':\n          return timeNow - 86400 * 3;\n        case 'userStatusLastWeek':\n          return timeNow - 86400 * 7;\n        case 'userStatusLastMonth':\n          return timeNow - 86400 * 30;\n      } */\n      switch(status._) {\n        case 'userStatusRecently':\n          return 3;\n        case 'userStatusLastWeek':\n          return 2;\n        case 'userStatusLastMonth':\n          return 1;\n      }\n    }\n\n    return 0;\n  }\n\n  public getUser(id: User | UserId) {\n    if(isObject<User>(id)) {\n      return id;\n    }\n\n    return this.users[id];\n  }\n\n  public getUserStatus(id: UserId) {\n    return this.isRegularUser(id) && !this.users[id].pFlags.self && this.users[id].status;\n  }\n\n  public async getUserPhone(id: UserId) {\n    const user = this.getUser(id);\n    if(!user?.phone) {\n      return;\n    }\n\n    const appConfig = await this.apiManager.getAppConfig();\n    return {\n      phone: user.phone,\n      isAnonymous: appConfig.fragment_prefixes.some((prefix) => user.phone.startsWith(prefix))\n    };\n  }\n\n  public getSelf() {\n    return this.getUser(this.userId);\n  }\n\n  public isBot(id: UserId) {\n    return this.users[id] && !!this.users[id].pFlags.bot;\n  }\n\n  public isAttachMenuBot(id: UserId) {\n    return this.isBot(id) && !!this.users[id].pFlags.bot_attach_menu;\n  }\n\n  public isContact(id: UserId) {\n    return this.contactsList.has(id) || !!(this.users[id] && this.users[id].pFlags.contact);\n  }\n\n  public isRegularUser(id: UserId) {\n    const user = this.users[id];\n    return user && !this.isBot(id) && !user.pFlags.deleted && !user.pFlags.support;\n  }\n\n  public isNonContactUser(id: UserId) {\n    return this.isRegularUser(id) && !this.isContact(id) && id !== this.userId;\n  }\n\n  public isPremium(id: UserId) {\n    const user = this.users[id];\n    return !!user?.pFlags?.premium;\n  }\n\n  public hasUser(id: UserId, allowMin?: boolean) {\n    const user = this.users[id];\n    return isObject(user) && (allowMin || !user.pFlags.min);\n  }\n\n  public canEdit(id: UserId) {\n    return this.userId === id || this.isContact(id) || !!this.users[id]?.pFlags?.bot_can_edit;\n  }\n\n  public getUserString(id: UserId) {\n    const user = this.getUser(id);\n    return 'u' + id + (user.access_hash ? '_' + user.access_hash : '');\n  }\n\n  public getUserInput(id: UserId): InputUser {\n    const user = this.getUser(id);\n    if(user.pFlags && user.pFlags.self) {\n      return {_: 'inputUserSelf'};\n    }\n\n    return {\n      _: 'inputUser',\n      user_id: id,\n      access_hash: user.access_hash\n    };\n  }\n\n  public getUserInputPeer(id: UserId): InputPeer.inputPeerSelf | InputPeer.inputPeerUser {\n    const user = this.getUser(id);\n    // ! do not use it, there are places that don't support it. need explicit peer id\n    // if(user.pFlags?.self) {\n    //   return {_: 'inputPeerSelf'};\n    // }\n\n    return {\n      _: 'inputPeerUser',\n      user_id: id,\n      access_hash: user.access_hash\n    };\n  }\n\n  public getContactMediaInput(id: UserId): InputMedia.inputMediaContact {\n    const user = this.getUser(id);\n\n    return {\n      _: 'inputMediaContact',\n      first_name: user.first_name,\n      last_name: user.last_name,\n      phone_number: user.phone,\n      vcard: '',\n      user_id: id\n    };\n  }\n\n  private updateUsersStatuses = () => {\n    const timestampNow = tsNow(true);\n    for(const i in this.users) {\n      const user = this.users[i];\n      this.updateUserStatus(user, timestampNow);\n    }\n  };\n\n  private updateUserStatus(user: MTUser.user, timestampNow = tsNow(true)) {\n    if(user.status &&\n      user.status._ === 'userStatusOnline' &&\n      user.status.expires < timestampNow) {\n      user.status = {_: 'userStatusOffline', was_online: user.status.expires};\n      this.rootScope.dispatchEvent('user_update', user.id);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public forceUserOnline(id: UserId, eventTimestamp?: number) {\n    if(this.isBot(id)) {\n      return;\n    }\n\n    const timestamp = tsNow(true);\n    const onlineTimeFor = 60;\n    if(eventTimestamp) {\n      if((timestamp - eventTimestamp) >= onlineTimeFor) {\n        return;\n      }\n    } else if(this.apiUpdatesManager.updatesState.syncLoading) {\n      return;\n    }\n\n    const user = this.getUser(id);\n    if(user?.status &&\n      user.status._ !== 'userStatusOnline' &&\n      user.status._ !== 'userStatusEmpty' &&\n      !user.pFlags.support &&\n      !user.pFlags.deleted) {\n      user.status = {\n        _: 'userStatusOnline',\n        expires: timestamp + onlineTimeFor\n      };\n\n      // user.sortStatus = this.getUserStatusForSort(user.status);\n      this.rootScope.dispatchEvent('user_update', id);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public importContact(first_name: string, last_name: string, phone: string) {\n    return this.importContacts([{\n      first_name,\n      last_name,\n      phones: [phone]\n    }]).then((userIds) => {\n      if(!userIds.length) {\n        const error = new Error();\n        (error as any).type = 'NO_USER';\n        throw error;\n      }\n\n      return userIds[0];\n    });\n  }\n\n  public importContacts(contacts: {phones: string[], first_name: string, last_name: string}[]) {\n    const inputContacts: InputContact[] = [];\n\n    for(let i = 0; i < contacts.length; ++i) {\n      for(let j = 0; j < contacts[i].phones.length; ++j) {\n        inputContacts.push({\n          _: 'inputPhoneContact',\n          client_id: (i << 16 | j).toString(10),\n          phone: contacts[i].phones[j],\n          first_name: contacts[i].first_name,\n          last_name: contacts[i].last_name\n        });\n      }\n    }\n\n    return this.apiManager.invokeApi('contacts.importContacts', {\n      contacts: inputContacts\n    }).then((importedContactsResult) => {\n      this.saveApiUsers(importedContactsResult.users);\n\n      const userIds = importedContactsResult.imported.map((importedContact) => {\n        this.onContactUpdated(importedContact.user_id, true);\n        return importedContact.user_id;\n      });\n\n      return userIds;\n    });\n  }\n\n  public getTopPeers(type: TopPeerType) {\n    if(this.getTopPeersPromises[type]) return this.getTopPeersPromises[type];\n\n    return this.getTopPeersPromises[type] = this.appStateManager.getState().then((state) => {\n      const cached = state.topPeersCache[type];\n      if(cached && (cached.cachedTime + 86400e3) > Date.now() && cached.peers) {\n        return cached.peers;\n      }\n\n      return this.apiManager.invokeApi('contacts.getTopPeers', {\n        [type]: true,\n        offset: 0,\n        limit: 15,\n        hash: '0'\n      }).then((result) => {\n        let topPeers: MyTopPeer[] = [];\n        if(result._ === 'contacts.topPeers') {\n          // console.log(result);\n          this.saveApiUsers(result.users);\n          this.appChatsManager.saveApiChats(result.chats);\n\n          if(result.categories.length) {\n            topPeers = result.categories[0].peers.map((topPeer) => {\n              const peerId = getPeerId(topPeer.peer);\n              this.peersStorage.requestPeer(peerId, 'topPeer');\n              return {id: peerId, rating: topPeer.rating};\n            });\n          }\n        }\n\n        state.topPeersCache[type] = {\n          peers: topPeers,\n          cachedTime: Date.now()\n        };\n        this.appStateManager.pushToState('topPeersCache', state.topPeersCache);\n\n        return topPeers;\n      });\n    });\n  }\n\n  public getBlocked(offset = 0, limit = 0) {\n    return this.apiManager.invokeApiSingle('contacts.getBlocked', {offset, limit}).then((contactsBlocked) => {\n      this.saveApiUsers(contactsBlocked.users);\n      this.appChatsManager.saveApiChats(contactsBlocked.chats);\n      const count = contactsBlocked._ === 'contacts.blocked' ? contactsBlocked.users.length + contactsBlocked.chats.length : contactsBlocked.count;\n\n      const peerIds: PeerId[] = contactsBlocked.users.map((u) => u.id.toPeerId()).concat(contactsBlocked.chats.map((c) => c.id.toPeerId(true)));\n\n      return {count, peerIds};\n    });\n  }\n\n  public getLocated(\n    lat: number,\n    long: number,\n    accuracy_radius: number,\n    background: boolean = false,\n    self_expires: number = 0\n  ) {\n    const geo_point: InputGeoPoint = {\n      _: 'inputGeoPoint',\n      lat,\n      long,\n      accuracy_radius\n    };\n\n    return this.apiManager.invokeApi('contacts.getLocated', {\n      geo_point,\n      background\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n      return updates;\n    });\n  }\n\n  /* public searchContacts(query: string, limit = 20) {\n    return Promise.all([\n      this.getContacts(query),\n      apiManager.invokeApi('contacts.search', {\n        q: query,\n        limit\n      })\n    ]).then((results) => {\n      const [myContacts, peers] = results;\n\n      this.saveApiUsers(peers.users);\n      appChatsManager.saveApiChats(peers.chats);\n\n      // * contacts.search returns duplicates in my_results\n      const myResults = new Set(myContacts.concat(peers.my_results.map((p) => appPeersManager.getPeerID(p))));\n\n      const out = {\n        my_results: [...myResults].slice(0, limit),\n        results: peers.results.map((p) => appPeersManager.getPeerID(p))\n      };\n\n      return out;\n    });\n  } */\n  public searchContacts(query: string, limit = 20) {\n    // handle 't.me/username' as 'username'\n    const entities = parseEntities(query);\n    if(entities.length && entities[0].length === query.trim().length && entities[0]._ === 'messageEntityUrl') {\n      try {\n        const url = new URL(wrapUrl(query).url);\n        const path = url.pathname.slice(1);\n        if(path) {\n          query = path;\n        }\n      } catch(err) {}\n    }\n\n    return this.apiManager.invokeApiCacheable('contacts.search', {\n      q: query,\n      limit\n    }, {cacheSeconds: 60}).then((peers) => {\n      this.saveApiUsers(peers.users);\n      this.appChatsManager.saveApiChats(peers.chats);\n\n      const out = {\n        my_results: filterUnique(peers.my_results.map((p) => getPeerId(p))), // ! contacts.search returns duplicates in my_results\n        results: peers.results.map((p) => getPeerId(p))\n      };\n\n      return out;\n    });\n  }\n\n  private onContactUpdated(userId: UserId, isContact: boolean, curIsContact = this.isContact(userId)) {\n    if(isContact !== curIsContact) {\n      if(isContact) {\n        this.pushContact(userId);\n      } else {\n        this.popContact(userId);\n      }\n\n      this.onContactsModified();\n\n      this.rootScope.dispatchEvent('contacts_update', userId);\n    }\n  }\n\n  public updateUsername(username: string) {\n    return this.apiManager.invokeApi('account.updateUsername', {\n      username\n    }).then((user) => {\n      this.saveApiUser(user);\n    });\n  }\n\n  public setUserStatus(userId: UserId, offline: boolean) {\n    if(this.isBot(userId)) {\n      return;\n    }\n\n    const user = this.users[userId];\n    if(user) {\n      const status: UserStatus = offline ? {\n        _: 'userStatusOffline',\n        was_online: tsNow(true)\n      } : {\n        _: 'userStatusOnline',\n        expires: tsNow(true) + 50\n      };\n\n      user.status = status;\n      // user.sortStatus = this.getUserStatusForSort(user.status);\n      this.rootScope.dispatchEvent('user_update', userId);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public updateMyOnlineStatus(offline: boolean) {\n    this.setUserStatus(this.getSelf().id, offline);\n    return this.apiManager.invokeApiSingle('account.updateStatus', {offline});\n  }\n\n  public addContact(userId: UserId, first_name: string, last_name: string, phone: string, addPhonePrivacyException?: boolean) {\n    /* if(!userId) {\n      return this.importContacts([{\n        first_name,\n        last_name,\n        phones: [phone]\n      }]);\n    } */\n\n    return this.apiManager.invokeApi('contacts.addContact', {\n      id: this.getUserInput(userId),\n      first_name,\n      last_name,\n      phone,\n      add_phone_privacy_exception: addPhonePrivacyException\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates, {override: true});\n\n      this.onContactUpdated(userId, true);\n    });\n  }\n\n  public deleteContacts(userIds: UserId[]) {\n    return this.apiManager.invokeApi('contacts.deleteContacts', {\n      id: userIds.map((userId) => this.getUserInput(userId))\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates, {override: true});\n\n      userIds.forEach((userId) => {\n        this.onContactUpdated(userId, false);\n      });\n    });\n  }\n\n  public checkUsername(username: string) {\n    return this.apiManager.invokeApi('account.checkUsername', {username});\n  }\n\n  public canSendToUser(userId: UserId) {\n    return canSendToUser(this.getUser(userId));\n  }\n\n  public getCommonChats(userId: UserId, limit = 100, maxId?: ChatId) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getCommonChats',\n      params: {\n        user_id: this.getUserInput(userId),\n        limit,\n        max_id: maxId ?? 0\n      },\n      processResult: (messagesChats) => {\n        this.appChatsManager.saveApiChats(messagesChats.chats);\n        return messagesChats;\n      }\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nexport default function cleanUsername(username: string) {\n  return username && username.toLowerCase() || '';\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport {WebPage} from '../../layer';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport {AppManager} from './manager';\n\nconst photoTypeSet = new Set(['photo', 'video', 'gif', 'document']);\n\ntype WebPageMessageKey = `${PeerId}_${number}`;\n\nexport class AppWebPagesManager extends AppManager {\n  private webpages: {\n    [webPageId: string]: WebPage\n  } = {};\n  private pendingWebPages: {\n    [webPageId: string]: Set<WebPageMessageKey>\n  } = {};\n\n  protected after() {\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateWebPage: (update) => {\n        this.saveWebPage(update.webpage);\n      }\n    });\n  }\n\n  public saveWebPage(apiWebPage: WebPage, messageKey?: WebPageMessageKey, mediaContext?: ReferenceContext) {\n    if(apiWebPage._ === 'webPageNotModified' || apiWebPage._ === 'webPageEmpty') return;\n    const {id} = apiWebPage;\n\n    const oldWebPage = this.webpages[id];\n    const isUpdated = oldWebPage &&\n      oldWebPage._ === apiWebPage._ &&\n      (oldWebPage as WebPage.webPage).hash === (oldWebPage as WebPage.webPage).hash;\n\n    if(apiWebPage._ === 'webPage') {\n      if(apiWebPage.photo?._ === 'photo') {\n        apiWebPage.photo = this.appPhotosManager.savePhoto(apiWebPage.photo, mediaContext);\n      } else {\n        delete apiWebPage.photo;\n      }\n\n      if(apiWebPage.document?._ === 'document') {\n        apiWebPage.document = this.appDocsManager.saveDoc(apiWebPage.document, mediaContext);\n      } else {\n        if(apiWebPage.type === 'document') {\n          delete apiWebPage.type;\n        }\n\n        delete apiWebPage.document;\n      }\n\n      const siteName = apiWebPage.site_name;\n      const shortTitle = apiWebPage.title || apiWebPage.author || siteName || '';\n      if(siteName && shortTitle === siteName) {\n        delete apiWebPage.site_name;\n      }\n\n      // delete apiWebPage.description\n\n      if(!photoTypeSet.has(apiWebPage.type) &&\n        !apiWebPage.description &&\n        apiWebPage.photo) {\n        apiWebPage.type = 'photo';\n      }\n    }\n\n    let pendingSet = this.pendingWebPages[id];\n    if(messageKey) {\n      if(!pendingSet) pendingSet = this.pendingWebPages[id] = new Set();\n      pendingSet.add(messageKey);\n    }\n\n    if(oldWebPage === undefined) {\n      this.webpages[id] = apiWebPage;\n    } else {\n      safeReplaceObject(oldWebPage, apiWebPage);\n    }\n\n    if(!messageKey && pendingSet !== undefined && isUpdated) {\n      const msgs: {peerId: PeerId, mid: number, isScheduled: boolean}[] = [];\n      pendingSet.forEach((value) => {\n        const [peerId, mid, isScheduled] = value.split('_');\n        msgs.push({\n          peerId: peerId.toPeerId(),\n          mid: +mid,\n          isScheduled: !!isScheduled\n        });\n      });\n\n      this.rootScope.dispatchEvent('webpage_updated', {\n        id,\n        msgs\n      });\n    }\n\n    return apiWebPage;\n  }\n\n  public getMessageKeyForPendingWebPage(peerId: PeerId, mid: number, isScheduled?: boolean): WebPageMessageKey {\n    return peerId + '_' + mid + (isScheduled ? '_s' : '') as any;\n  }\n\n  public deleteWebPageFromPending(webPage: WebPage, messageKey: WebPageMessageKey) {\n    const id = (webPage as WebPage.webPage).id;\n    if(!id) return;\n\n    const set = this.pendingWebPages[id];\n    if(set && set.has(messageKey)) {\n      set.delete(messageKey);\n\n      if(!set.size) {\n        delete this.pendingWebPages[id];\n      }\n    }\n  }\n\n  public getCachedWebPage(id: WebPage.webPage['id']) {\n    return this.webpages[id];\n  }\n\n  public getWebPage(url: string) {\n    return this.apiManager.invokeApiHashable({\n      method: 'messages.getWebPage',\n      processResult: (webPage) => {\n        return this.saveWebPage(webPage);\n      },\n      params: {\n        url\n      }\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport readBlobAs from './readBlobAs';\n\nexport default function readBlobAsArrayBuffer(blob: Blob) {\n  return readBlobAs(blob, 'readAsArrayBuffer');\n}\n","export default function fileNameRFC(fileName: string) {\n  // Make filename RFC5987 compatible\n  return encodeURIComponent(fileName).replace(/['()]/g, escape).replace(/\\*/g, '%2A');\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {getServiceMessagePort} from '../mtproto/mtproto.worker';\nimport ServiceMessagePort from '../serviceWorker/serviceMessagePort';\nimport StreamWriter from './streamWriter';\n\nexport default class DownloadWriter implements StreamWriter {\n  constructor(\n    private serviceMessagePort: ServiceMessagePort<true>,\n    private downloadId: string\n  ) {\n    this.serviceMessagePort = getServiceMessagePort();\n  }\n\n  public async write(part: Uint8Array, offset?: number) {\n    return this.serviceMessagePort.invoke('downloadChunk', {\n      id: this.downloadId,\n      chunk: part\n    });\n  }\n\n  public finalize(saveToStorage?: boolean): Promise<Blob> {\n    return this.serviceMessagePort.invoke('downloadFinalize', this.downloadId).then(() => undefined);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport deferredPromise from '../../helpers/cancellablePromise';\nimport makeError from '../../helpers/makeError';\nimport fileNameRFC from '../../helpers/string/fileNameRFC';\nimport {getServiceMessagePort} from '../mtproto/mtproto.worker';\nimport DownloadWriter from './downloadWriter';\nimport FileStorage from './fileStorage';\n\nexport default class DownloadStorage implements FileStorage {\n  public getFile(fileName: string): Promise<any> {\n    return Promise.reject(makeError('NO_ENTRY_FOUND'));\n  }\n\n  public prepareWriting({fileName, downloadId, size}: {\n    fileName: string,\n    downloadId: string,\n    size: number\n  }) {\n    const headers = {\n      'Content-Type': 'application/octet-stream; charset=utf-8',\n      'Content-Disposition': 'attachment; filename*=UTF-8\\'\\'' + fileNameRFC(fileName),\n      ...(size ? {'Content-Length': size} : {})\n    };\n\n    const serviceMessagePort = getServiceMessagePort();\n    const promise = serviceMessagePort.invoke('download', {\n      headers,\n      id: downloadId\n    });\n\n    const deferred = deferredPromise<void>();\n    deferred.cancel = () => {\n      deferred.reject(makeError('DOWNLOAD_CANCELED'));\n    };\n\n    deferred.catch(() => {\n      getServiceMessagePort().invoke('downloadCancel', downloadId);\n    });\n\n    promise.then(deferred.resolve, deferred.reject);\n\n    return {\n      deferred,\n      getWriter: () => {\n        return new DownloadWriter(serviceMessagePort, downloadId);\n      }\n    };\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {ReferenceBytes} from './referenceDatabase';\nimport Modes from '../../config/modes';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport {randomLong} from '../../helpers/random';\nimport {Document, InputFile, InputFileLocation, InputWebFileLocation, Photo, PhotoSize, UploadFile, UploadWebFile, VideoSize, WebDocument} from '../../layer';\nimport {DcId} from '../../types';\nimport CacheStorageController from '../files/cacheStorage';\nimport {logger, LogTypes} from '../logger';\nimport assumeType from '../../helpers/assumeType';\nimport noop from '../../helpers/noop';\nimport readBlobAsArrayBuffer from '../../helpers/blob/readBlobAsArrayBuffer';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport findAndSplice from '../../helpers/array/findAndSplice';\nimport fixFirefoxSvg from '../../helpers/fixFirefoxSvg';\nimport {AppManager} from '../appManagers/manager';\nimport {getEnvironment} from '../../environment/utils';\nimport MTProtoMessagePort from './mtprotoMessagePort';\nimport getFileNameForUpload from '../../helpers/getFileNameForUpload';\nimport type {Progress} from '../appManagers/appDownloadManager';\nimport getDownloadMediaDetails from '../appManagers/utils/download/getDownloadMediaDetails';\n// import networkStats from './networkStats';\nimport getDownloadFileNameFromOptions from '../appManagers/utils/download/getDownloadFileNameFromOptions';\nimport StreamWriter from '../files/streamWriter';\nimport FileStorage from '../files/fileStorage';\nimport {MAX_FILE_SAVE_SIZE} from './mtproto_config';\nimport throttle from '../../helpers/schedulers/throttle';\nimport makeError from '../../helpers/makeError';\nimport readBlobAsUint8Array from '../../helpers/blob/readBlobAsUint8Array';\nimport DownloadStorage from '../files/downloadStorage';\nimport copy from '../../helpers/object/copy';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport {EXTENSION_MIME_TYPE_MAP, MIME_TYPE_EXTENSION_MAP} from '../../environment/mimeTypeMap';\nimport {getServiceMessagePort} from './mtproto.worker';\nimport isWebFileLocation from '../appManagers/utils/webFiles/isWebFileLocation';\n\ntype Delayed = {\n  offset: number,\n  writePromise: CancellablePromise<void>,\n  writeDeferred: CancellablePromise<void>\n};\n\nexport type DownloadOptions = {\n  dcId: DcId,\n  location: InputFileLocation | InputWebFileLocation,\n  size?: number,\n  fileName?: string,\n  mimeType?: MTMimeType,\n  limitPart?: number,\n  queueId?: number,\n  onlyCache?: boolean,\n  downloadId?: string\n  // getFileMethod: Parameters<CacheStorageController['getFile']>[1]\n};\n\nexport type DownloadMediaOptions = {\n  media: Photo.photo | Document.document | WebDocument | InputWebFileLocation,\n  thumb?: PhotoSize | Extract<VideoSize, VideoSize.videoSize>,\n  queueId?: number,\n  onlyCache?: boolean,\n  downloadId?: string\n};\n\ntype DownloadPromise = CancellablePromise<Blob>;\n\nexport type MyUploadFile = UploadFile.uploadFile | UploadWebFile.uploadWebFile;\n\n// export interface RefreshReferenceTask extends WorkerTaskVoidTemplate {\n//   type: 'refreshReference',\n//   payload: ReferenceBytes,\n// };\n\n// export interface RefreshReferenceTaskResponse extends WorkerTaskVoidTemplate {\n//   type: 'refreshReference',\n//   payload: ReferenceBytes,\n//   originalPayload: ReferenceBytes\n// };\n\nconst DO_NOT_UPLOAD_FILES = false;\n\nconst MAX_DOWNLOAD_FILE_PART_SIZE = 1 * 1024 * 1024;\nconst MAX_UPLOAD_FILE_PART_SIZE = 512 * 1024;\nconst MIN_PART_SIZE = 128 * 1024;\nconst AVG_PART_SIZE = 512 * 1024;\n\nconst REGULAR_DOWNLOAD_DELTA = (9 * 512 * 1024) / MIN_PART_SIZE;\n// const PREMIUM_DOWNLOAD_DELTA = REGULAR_DOWNLOAD_DELTA * 2;\nconst PREMIUM_DOWNLOAD_DELTA = (56 * 512 * 1024) / MIN_PART_SIZE;\n\nconst IGNORE_ERRORS: Set<ErrorType> = new Set([\n  'DOWNLOAD_CANCELED',\n  'UPLOAD_CANCELED',\n  'UNKNOWN',\n  'NO_NEW_CONTEXT'\n]);\n\nexport class ApiFileManager extends AppManager {\n  private cacheStorage = new CacheStorageController('cachedFiles');\n  private downloadStorage = new DownloadStorage();\n\n  private downloadPromises: {\n    [fileName: string]: DownloadPromise\n  } = {};\n\n  // private downloadToDiscPromises: {\n  //   [fileName: string]: DownloadPromise\n  // } = {};\n\n  private uploadPromises: {\n    [fileName: string]: CancellablePromise<InputFile>\n  } = {};\n\n  private downloadPulls: {\n    [dcId: string]: Array<{\n      id: number,\n      queueId: number,\n      cb: () => Promise<MyUploadFile | void>,\n      deferred: {\n        resolve: (...args: any[]) => void,\n        reject: (...args: any[]) => void\n      },\n      activeDelta: number\n    }>\n  } = {};\n  private downloadActives: {[dcId: string]: number} = {};\n\n  public refreshReferencePromises: {\n    [referenceHex: string]: {\n      deferred: CancellablePromise<ReferenceBytes>,\n      timeout?: number\n    }\n  } = {};\n\n  private log: ReturnType<typeof logger> = logger('AFM', LogTypes.Error | LogTypes.Log);\n  private tempId = 0;\n  private queueId = 0;\n  private debug = Modes.debug;\n\n  private maxUploadParts = 4000;\n  private maxDownloadParts = 8000;\n  private webFileDcId: DcId;\n\n  protected after() {\n    setInterval(() => { // clear old promises\n      for(const hex in this.refreshReferencePromises) {\n        const {deferred} = this.refreshReferencePromises[hex];\n        if(deferred.isFulfilled || deferred.isRejected) {\n          delete this.refreshReferencePromises[hex];\n        }\n      }\n    }, 1800e3);\n\n    this.rootScope.addEventListener('config', (config) => {\n      this.webFileDcId = config.webfile_dc_id;\n    });\n\n    this.rootScope.addEventListener('app_config', (appConfig) => {\n      this.maxUploadParts = this.rootScope.premium ? appConfig.upload_max_fileparts_premium : appConfig.upload_max_fileparts_default;\n      this.maxDownloadParts = appConfig.upload_max_fileparts_premium;\n    });\n  }\n\n  private downloadRequest(dcId: 'upload', id: number, cb: () => Promise<void>, activeDelta: number, queueId?: number): Promise<void>;\n  private downloadRequest(dcId: number, id: number, cb: () => Promise<MyUploadFile>, activeDelta: number, queueId?: number): Promise<MyUploadFile>;\n  private downloadRequest(dcId: number | string, id: number, cb: () => Promise<MyUploadFile | void>, activeDelta: number, queueId: number = 0) {\n    if(this.downloadPulls[dcId] === undefined) {\n      this.downloadPulls[dcId] = [];\n      this.downloadActives[dcId] = 0;\n    }\n\n    const downloadPull = this.downloadPulls[dcId];\n\n    const promise = new Promise<MyUploadFile | void>((resolve, reject) => {\n      downloadPull.push({id, queueId, cb, deferred: {resolve, reject}, activeDelta});\n    });\n\n    setTimeout(() => {\n      this.downloadCheck(dcId);\n    }, 0);\n\n    return promise;\n  }\n\n  private downloadCheck(dcId: string | number) {\n    const downloadPull = this.downloadPulls[dcId];\n    const downloadLimit = /* dcId === 'upload' ? 24 :  */(this.rootScope.premium ? PREMIUM_DOWNLOAD_DELTA : REGULAR_DOWNLOAD_DELTA);\n    // const downloadLimit = Infinity;\n\n    if(this.downloadActives[dcId] >= downloadLimit || !downloadPull?.length) {\n      return false;\n    }\n\n    // const data = downloadPull.shift();\n    const data = findAndSplice(downloadPull, (d) => d.queueId === 0) || findAndSplice(downloadPull, (d) => d.queueId === this.queueId) || downloadPull.shift();\n    const activeDelta = data.activeDelta || 1;\n\n    this.downloadActives[dcId] += activeDelta;\n\n    const promise = data.cb();\n    // const networkPromise = networkStats.waitForChunk(dcId as DcId, activeDelta * MIN_PART_SIZE);\n    /* Promise.race([\n      promise\n      // networkPromise\n    ]) */promise.then(() => {\n      this.downloadActives[dcId] -= activeDelta;\n      this.downloadCheck(dcId);\n\n      // networkPromise.resolve();\n    }, (error: ApiError) => {\n      if(!error?.type || !IGNORE_ERRORS.has(error.type)) {\n        this.log.error('downloadCheck error:', error);\n      }\n\n      this.downloadActives[dcId] -= activeDelta;\n      this.downloadCheck(dcId);\n\n      // networkPromise.reject(error);\n    }).finally(() => {\n      promise.then(data.deferred.resolve, data.deferred.reject);\n    });\n  }\n\n  public setQueueId(queueId: number) {\n    // this.log.error('setQueueId', queueId);\n    this.queueId = queueId;\n  }\n\n  private getFileStorage() {\n    return this.cacheStorage;\n  }\n\n  public cancelDownload(fileName: string) {\n    const promises = [this.downloadPromises[fileName], this.uploadPromises[fileName]].filter(Boolean);\n    let canceled = false;\n    for(let i = 0, length = promises.length; i < length; ++i) {\n      const promise = promises[i];\n      if(promise && !promise.isRejected && !promise.isFulfilled) {\n        promise.cancel();\n        canceled = true;\n      }\n    }\n\n    return canceled;\n  }\n\n  public requestWebFilePart(\n    dcId: DcId,\n    location: InputWebFileLocation,\n    offset: number,\n    limit: number,\n    id = 0,\n    queueId = 0,\n    checkCancel?: () => void\n  ) {\n    return this.downloadRequest(this.webFileDcId, id, async() => { // do not remove async, because checkCancel will throw an error\n      checkCancel?.();\n\n      if('url' in location) {\n        const url = location.url;\n        if(this.isLocalWebFile(url)) {\n          return fetch(url)\n          .then((response) => response.arrayBuffer())\n          .then((arrayBuffer) => {\n            const extension = url.split('.').pop() as MTFileExtension;\n            const mimeType = EXTENSION_MIME_TYPE_MAP[extension] || 'application/octet-stream';\n            return {\n              _: 'upload.webFile',\n              size: arrayBuffer.byteLength,\n              mime_type: mimeType,\n              file_type: {_: 'storage.fileUnknown'},\n              mtime: 0,\n              bytes: new Uint8Array(arrayBuffer)\n            };\n          });\n        }\n      }\n\n      return this.apiManager.invokeApi('upload.getWebFile', {\n        location,\n        offset,\n        limit\n      }, {\n        dcId: this.webFileDcId,\n        fileDownload: true\n      });\n    }, this.getDelta(limit), queueId);\n  }\n\n  public requestFilePart(\n    dcId: DcId,\n    location: InputFileLocation,\n    offset: number,\n    limit: number,\n    id = 0,\n    queueId = 0,\n    checkCancel?: () => void\n  ) {\n    return this.downloadRequest(dcId, id, async() => { // do not remove async, because checkCancel will throw an error\n      checkCancel?.();\n\n      const invoke = async(): Promise<MyUploadFile> => {\n        checkCancel?.(); // do not remove async, because checkCancel will throw an error\n\n        // * IMPORTANT: reference can be changed in previous request\n        const reference = (location as InputFileLocation.inputDocumentFileLocation).file_reference?.slice();\n\n        const promise = // pause(offset > (100 * 1024 * 1024) ? 10000000 : 0).then(() =>\n        this.apiManager.invokeApi('upload.getFile', {\n          location,\n          offset,\n          limit\n        }, {\n          dcId,\n          fileDownload: true\n        }) as Promise<MyUploadFile>/* ) */;\n\n        return promise.catch((err: ApiError) => {\n          checkCancel?.();\n\n          if(err.type === 'FILE_REFERENCE_EXPIRED') {\n            return this.refreshReference(location as InputFileLocation.inputDocumentFileLocation, reference).then(invoke);\n          }\n\n          throw err;\n        });\n      };\n\n      assumeType<InputFileLocation.inputDocumentFileLocation>(location);\n      const reference = location.file_reference;\n      if(reference && !location.checkedReference) { // check stream's location because it's new every call\n        location.checkedReference = true;\n        const hex = bytesToHex(reference);\n        if(this.refreshReferencePromises[hex]) {\n          return this.refreshReference(location, reference).then(invoke);\n        }\n      }\n\n      return invoke();\n    }, this.getDelta(limit), queueId);\n  }\n\n  /* private convertBlobToBytes(blob: Blob) {\n    return blob.arrayBuffer().then((buffer) => new Uint8Array(buffer));\n  } */\n\n  private getDelta(bytes: number) {\n    return bytes / MIN_PART_SIZE;\n  }\n\n  private getLimitPart(size: number, isUpload: boolean): number {\n    if(!size) { // * sometimes size can be 0 (e.g. avatars, webDocuments)\n      return AVG_PART_SIZE;\n    }\n\n    // return 1 * 1024 * 1024;\n\n    let bytes = MIN_PART_SIZE;\n\n    const maxParts = isUpload ? this.maxUploadParts : this.maxDownloadParts;\n    const maxPartSize = isUpload ? MAX_UPLOAD_FILE_PART_SIZE : MAX_DOWNLOAD_FILE_PART_SIZE;\n    // usually it will stick to 512Kb size if the file is too big\n    while((size / bytes) > maxParts && bytes < maxPartSize) {\n      bytes *= 2;\n    }\n    /* if(size < 1e6 || !size) bytes = 512;\n    else if(size < 3e6) bytes = 256;\n    else bytes = 128; */\n\n    return bytes;\n  }\n\n  private uncompressTGS = (bytes: Uint8Array, fileName: string) => {\n    // this.log('uncompressTGS', bytes, bytes.slice().buffer);\n    // slice нужен потому что в uint8array - 5053 length, в arraybuffer - 5084\n    return this.cryptoWorker.invokeCrypto('gzipUncompress', bytes.slice().buffer, false) as Promise<Uint8Array>;\n  };\n\n  private uncompressTGV = (bytes: Uint8Array, fileName: string) => {\n    // this.log('uncompressTGS', bytes, bytes.slice().buffer);\n    // slice нужен потому что в uint8array - 5053 length, в arraybuffer - 5084\n    const buffer = bytes.slice().buffer;\n    if(getEnvironment().IS_FIREFOX) {\n      return this.cryptoWorker.invokeCrypto('gzipUncompress', buffer, true).then((text) => {\n        return fixFirefoxSvg(text as string);\n      }).then((text) => {\n        const textEncoder = new TextEncoder();\n        return textEncoder.encode(text);\n      });\n    }\n\n    return this.cryptoWorker.invokeCrypto('gzipUncompress', buffer, false) as Promise<Uint8Array>;\n  };\n\n  private convertWebp = (bytes: Uint8Array, fileName: string) => {\n    const instance = MTProtoMessagePort.getInstance<false>();\n    return instance.invoke('convertWebp', {fileName, bytes});\n  };\n\n  private convertOpus = (bytes: Uint8Array, fileName: string) => {\n    const instance = MTProtoMessagePort.getInstance<false>();\n    return instance.invoke('convertOpus', {fileName, bytes});\n  };\n\n  private refreshReference(\n    inputFileLocation: InputFileLocation.inputDocumentFileLocation,\n    reference: typeof inputFileLocation['file_reference'],\n    hex = bytesToHex(reference)\n  ) {\n    let r = this.refreshReferencePromises[hex];\n    if(!r) {\n      const deferred = deferredPromise<ReferenceBytes>();\n\n      r = this.refreshReferencePromises[hex] = {\n        deferred\n\n        // ! I don't remember what it was for...\n        // timeout: ctx.setTimeout(() => {\n        //   this.log.error('Didn\\'t refresh the reference:', inputFileLocation);\n        //   deferred.reject(makeError('REFERENCE_IS_NOT_REFRESHED'));\n        // }, 60000)\n      };\n\n      // deferred.catch(noop).finally(() => {\n      //   clearTimeout(r.timeout);\n      // });\n\n      this.referenceDatabase.refreshReference(reference).then((reference) => {\n        if(hex === bytesToHex(reference)) {\n          deferred.reject(makeError('REFERENCE_IS_NOT_REFRESHED'));\n        }\n\n        deferred.resolve(reference);\n      }, deferred.reject);\n    }\n\n    // have to replace file_reference in any way, because location can be different everytime if it's stream\n    return r.deferred.then((reference) => {\n      inputFileLocation.file_reference = reference;\n    });\n  }\n\n  public isDownloading(fileName: string) {\n    return !!this.downloadPromises[fileName];\n  }\n\n  public getDownload(fileName: string) {\n    return this.downloadPromises[fileName];\n  }\n\n  public getUpload(fileName: string) {\n    return this.uploadPromises[fileName];\n  }\n\n  private getConvertMethod(mimeType: MTMimeType) {\n    let process: ApiFileManager['uncompressTGS'] | ApiFileManager['convertWebp'];\n    if(mimeType === 'application/x-tgwallpattern') {\n      process = this.uncompressTGV;\n      mimeType = 'image/svg+xml';\n    } else if(mimeType === 'image/webp' && !getEnvironment().IS_WEBP_SUPPORTED) {\n      process = this.convertWebp;\n      mimeType = 'image/png';\n    } else if(mimeType === 'application/x-tgsticker') {\n      process = this.uncompressTGS;\n      mimeType = 'application/json';\n    } else if(mimeType === 'audio/ogg' && !getEnvironment().IS_OPUS_SUPPORTED) {\n      process = this.convertOpus;\n      mimeType = 'audio/wav';\n    }\n\n    return {mimeType, process};\n  }\n\n  private allocateDeferredPromises(startOffset: number, size: number, limitPart: number) {\n    const delayed: Delayed[] = [];\n    let offset = startOffset;\n    let writePromise: CancellablePromise<void> = Promise.resolve(),\n      writeDeferred: CancellablePromise<void>;\n    do {\n      writeDeferred = deferredPromise<void>();\n      delayed.push({offset, writePromise, writeDeferred});\n      writePromise = writeDeferred;\n      offset += limitPart;\n    } while(offset < size);\n\n    return delayed;\n  }\n\n  private isLocalWebFile(url: string) {\n    return url?.startsWith('assets/');\n  }\n\n  public download(options: DownloadOptions): DownloadPromise {\n    const size = options.size ?? 0;\n    const {dcId, location} = options;\n    let {downloadId} = options;\n    if(downloadId && !getServiceMessagePort()) {\n      this.log.error('download fallback to blob', options);\n      downloadId = undefined;\n    }\n\n    const originalMimeType = options.mimeType;\n    const convertMethod = this.getConvertMethod(originalMimeType);\n    const {process} = convertMethod;\n    options.mimeType = convertMethod.mimeType || 'image/jpeg';\n\n    const fileName = getDownloadFileNameFromOptions(options);\n    const cacheFileName = downloadId ? getDownloadFileNameFromOptions({...copy(options), downloadId: undefined}) : fileName;\n    const cacheStorage: FileStorage = this.getFileStorage();\n    const downloadStorage: FileStorage = downloadId ? this.downloadStorage : undefined;\n    let deferred: DownloadPromise = downloadId ? undefined : this.downloadPromises[fileName];\n\n    this.debug && this.log('downloadFile', fileName, options);\n\n    if(deferred) {\n      return deferred;\n    }\n\n    // if(deferred) {\n    //   if(size) {\n    //     return deferred.then(async(blob) => {\n    //       if(blob instanceof Blob && blob.size < size) {\n    //         this.debug && this.log('downloadFile need to deleteFile, wrong size:', blob.size, size);\n\n    //         try {\n    //           await this.delete(fileName);\n    //         } finally {\n    //           return this.download(options);\n    //         }\n    //       } else {\n    //         return blob;\n    //       }\n    //     });\n    //   } else {\n    //     return deferred;\n    //   }\n    // }\n\n    const errorHandler = (item: typeof cachePrepared, error: ApiError) => {\n      if(item?.error) {\n        return;\n      }\n\n      for(const p of prepared) {\n        if(item && item !== p) {\n          continue;\n        }\n\n        p.error = error;\n        p.deferred.reject(error);\n      }\n    };\n\n    const isWebFile = isWebFileLocation(location);\n    const isLocalWebFile = isWebFile && this.isLocalWebFile((location as InputWebFileLocation.inputWebFileLocation).url);\n    const id = this.tempId++;\n    const limitPart = isLocalWebFile ?\n      size :\n      options.limitPart || this.getLimitPart(size, false);\n\n    let getFile: FileStorage['getFile'] = cacheStorage.getFile.bind(cacheStorage);\n\n    let cachePrepared: ReturnType<FileStorage['prepareWriting']> & {writer?: StreamWriter, error?: ApiError},\n      downloadPrepared: typeof cachePrepared;\n    const prepared: (typeof cachePrepared)[] = [];\n    const possibleSize = size || limitPart;\n\n    const getErrorsCount = () => prepared.reduce((acc, item) => acc + +!!item.error, 0);\n\n    const attach = (item: typeof cachePrepared, fileName: string) => {\n      const {deferred} = item;\n      const _errorHandler = errorHandler.bind(null, item);\n\n      deferred.cancel = () => deferred.reject(makeError('DOWNLOAD_CANCELED'));\n      deferred.catch((error) => {\n        _errorHandler(error);\n        item.writer?.truncate?.();\n      }).finally(() => {\n        if(this.downloadPromises[fileName] === deferred) {\n          delete this.downloadPromises[fileName];\n        }\n\n        delete item.writer;\n        // indexOfAndSplice(prepared, item);\n      });\n\n      this.downloadPromises[fileName] = deferred;\n\n      prepared.push(item);\n    };\n\n    if(cacheStorage && (!downloadStorage || possibleSize <= MAX_FILE_SAVE_SIZE)) {\n      cachePrepared = cacheStorage.prepareWriting(cacheFileName, possibleSize, options.mimeType)\n      attach(cachePrepared, cacheFileName);\n    }\n\n    if(downloadStorage) {\n      let downloadFileName = options.fileName; // it's doc file_name\n      if(!downloadFileName) {\n        downloadFileName = cacheFileName;\n        const ext = MIME_TYPE_EXTENSION_MAP[options.mimeType];\n        if(ext) {\n          downloadFileName += '.' + ext;\n        }\n      }\n\n      downloadPrepared = downloadStorage.prepareWriting({\n        fileName: downloadFileName,\n        downloadId,\n        size: possibleSize\n      });\n      attach(downloadPrepared, fileName);\n\n      if(cachePrepared) { // cancel cache too\n        downloadPrepared.deferred.catch((err) => cachePrepared.deferred.reject(err));\n      }\n\n      // this.downloadToDiscPromises[cacheFileName] = deferred;\n      // deferred.catch(noop).finally(() => {\n      //   if(this.downloadToDiscPromises[cacheFileName] === deferred) {\n      //     delete this.downloadToDiscPromises[cacheFileName];\n      //   }\n      // });\n    }\n\n    deferred = downloadPrepared?.deferred ?? cachePrepared.deferred;\n\n    if(downloadStorage && process) { // then have to load file again\n      getFile = downloadStorage.getFile.bind(downloadStorage);\n    }\n\n    getFile(cacheFileName).then(async(blob: Blob) => {\n      checkCancel();\n\n      // if(blob.size < size) {\n      //   if(!options.onlyCache) {\n      //     await this.delete(cacheFileName);\n      //     checkCancel();\n      //   }\n\n      //   throw makeError('NO_ENTRY_FOUND');\n      // }\n\n      if(downloadPrepared) {\n        const writer = downloadPrepared.writer = downloadPrepared.getWriter();\n        checkCancel();\n\n        const arr = await readBlobAsUint8Array(blob);\n        checkCancel();\n        await writer.write(arr);\n        checkCancel();\n\n        downloadPrepared.deferred.resolve(await writer.finalize());\n      }\n\n      if(cachePrepared) {\n        cachePrepared.deferred.resolve(blob);\n      }\n    }).catch(async(err: ApiError) => {\n      if(options.onlyCache) {\n        errorHandler(null, err);\n        return;\n      }\n\n      prepared.forEach((p) => {\n        p.writer = p.getWriter();\n      });\n\n      const maxRequests = Infinity;\n\n      const requestPart = (isWebFile ? this.requestWebFilePart : this.requestFilePart).bind(this);\n\n      if(isWebFile && this.webFileDcId === undefined && !isLocalWebFile) {\n        await this.apiManager.getConfig();\n        checkCancel();\n      }\n\n      const delayed = this.allocateDeferredPromises(0, size, limitPart);\n\n      const progress: Progress = {done: 0, offset: 0, total: size, fileName};\n      const dispatchProgress = () => {\n        try {\n          checkCancel();\n          progress.done = done;\n          this.rootScope.dispatchEvent('download_progress', progress);\n        } catch(err) {}\n      };\n\n      const throttledDispatchProgress = throttle(dispatchProgress, 50, true);\n\n      let done = 0;\n      const superpuper = async() => {\n        const {offset, writePromise, writeDeferred} = delayed.shift();\n        try {\n          checkCancel();\n\n          const requestPerf = performance.now();\n          const result = await requestPart(dcId, location as any, offset, limitPart, id, options.queueId, checkCancel);\n          const requestTime = performance.now() - requestPerf;\n\n          const bytes = result.bytes;\n\n          if(delayed.length) {\n            superpuper();\n          }\n\n          const byteLength = bytes.byteLength;\n          this.debug && this.log('downloadFile requestFilePart result:', fileName, result);\n          const isFinal = (offset + limitPart) >= size || !byteLength;\n          if(byteLength) {\n            done += byteLength;\n\n            if(isFinal) {\n              dispatchProgress();\n            } else {\n              throttledDispatchProgress();\n            }\n\n            const writeQueuePerf = performance.now();\n            await writePromise;\n            checkCancel();\n            const writeQueueTime = performance.now() - writeQueuePerf;\n\n            const perf = performance.now();\n            await Promise.all(prepared.map(({writer}) => writer?.write(bytes, offset)));\n            checkCancel();\n            // downloadId && this.log('write time', performance.now() - perf, 'request time', requestTime, 'queue time', writeQueueTime);\n          }\n\n          if(isFinal) {\n            if(!size || done < size) {\n              prepared.forEach(({writer}) => writer?.trim?.(done));\n            }\n          }\n\n          if(isFinal && process) {\n            const promises = prepared\n            .filter(({writer}) => writer?.getParts && writer.replaceParts)\n            .map(async({writer}) => {\n              const bytes = writer.getParts();\n              const processedResult = await process(bytes, cacheFileName);\n              writer.replaceParts(processedResult);\n            });\n\n            await Promise.all(promises);\n            checkCancel();\n          }\n\n          writeDeferred.resolve();\n\n          if(isFinal) {\n            const saveToStorage = done <= MAX_FILE_SAVE_SIZE;\n            prepared.forEach((item) => {\n              const {deferred, writer} = item;\n              if(deferred.isFulfilled || deferred.isRejected || !writer) {\n                return;\n              }\n\n              const result = writer.finalize(saveToStorage);\n              deferred.resolve(result);\n            });\n          }\n        } catch(err) {\n          errorHandler(null, err as ApiError);\n        }\n      };\n\n      for(let i = 0, length = Math.min(maxRequests, delayed.length); i < length; ++i) {\n        superpuper();\n      }\n    }).catch(noop);\n\n    const checkCancel = () => {\n      if(getErrorsCount() === prepared.length) {\n        throw prepared[0].error;\n      }\n    };\n\n    return deferred;\n  }\n\n  public downloadMedia(options: DownloadMediaOptions): DownloadPromise {\n    let {media, thumb} = options;\n    const isPhoto = media._ === 'photo';\n    if(isPhoto && !thumb) {\n      return Promise.reject('preloadPhoto photoEmpty!');\n    }\n\n    // get original instance with correct file_reference instead of using copies\n    const isDocument = media._ === 'document';\n    // const isWebDocument = media._ === 'webDocument';\n    if(isDocument) media = this.appDocsManager.getDoc((media as Document.document).id);\n    else if(isPhoto) media = this.appPhotosManager.getPhoto((media as Photo.photo).id);\n    options.media = media || options.media;\n\n    const {fileName, downloadOptions} = getDownloadMediaDetails(options);\n\n    let promise = this.getDownload(fileName);\n    if(!promise) {\n      promise = this.download(downloadOptions);\n\n      if(isDocument && !thumb) {\n        this.rootScope.dispatchEvent('document_downloading', (media as Document.document).id);\n        promise.then(() => {\n          this.rootScope.dispatchEvent('document_downloaded', (media as Document.document).id);\n        }).catch(noop);\n      }\n    }\n\n    return promise;\n  }\n\n  public downloadMediaURL(options: DownloadMediaOptions): Promise<string> {\n    const {media, thumb} = options;\n\n    let cacheContext = this.thumbsStorage.getCacheContext(media as any, thumb?.type);\n    if((thumb ? (cacheContext.downloaded >= ('size' in thumb ? thumb.size : 0)) : true) && cacheContext.url) {\n      return Promise.resolve(cacheContext.url);\n    }\n\n    return this.downloadMedia(options).then((blob) => {\n      if(!cacheContext.downloaded || cacheContext.downloaded < blob.size) {\n        const url = URL.createObjectURL(blob);\n        cacheContext = this.thumbsStorage.setCacheContextURL(media as any, cacheContext.type, url, blob.size);\n      }\n\n      return cacheContext.url;\n    });\n  }\n\n  public downloadMediaVoid(options: DownloadMediaOptions) {\n    return this.downloadMedia(options).then(noop);\n  }\n\n  private delete(fileName: string) {\n    delete this.downloadPromises[fileName];\n    return this.getFileStorage().delete(fileName);\n  }\n\n  public upload({file, fileName}: {file: Blob | File, fileName?: string}) {\n    fileName ||= getFileNameForUpload(file);\n\n    const fileSize = file.size;\n    const isBigFile = fileSize >= 10485760;\n    const partSize = this.getLimitPart(fileSize, true);\n    const activeDelta = this.getDelta(partSize);\n    const totalParts = DO_NOT_UPLOAD_FILES ? 0 : Math.ceil(fileSize / partSize);\n    const fileId = randomLong();\n    const resultInputFile: InputFile = {\n      _: isBigFile ? 'inputFileBig' : 'inputFile',\n      id: fileId as any,\n      parts: totalParts,\n      name: fileName,\n      md5_checksum: ''\n    };\n\n    const deferred = deferredPromise<typeof resultInputFile>();\n    if(totalParts > this.maxUploadParts) {\n      deferred.reject(makeError('FILE_TOO_BIG'));\n      return deferred;\n    }\n\n    let canceled = false, resolved = false;\n    let errorHandler = (error: ApiError) => {\n      if(error?.type !== 'UPLOAD_CANCELED') {\n        this.log.error('Up Error', error);\n      }\n\n      deferred.reject(error);\n      canceled = true;\n      errorHandler = noop;\n    };\n\n    const method = isBigFile ? 'upload.saveBigFilePart' : 'upload.saveFilePart';\n    const id = this.tempId++;\n\n    const self = this;\n    function* generator() {\n      let _part = 0, doneParts = 0;\n      for(let offset = 0; offset < fileSize; offset += partSize) {\n        const part = _part++; // 0, 1\n        yield self.downloadRequest('upload', id, async() => {\n          checkCancel();\n\n          const blob = file.slice(offset, offset + partSize);\n          const buffer = await readBlobAsArrayBuffer(blob);\n          checkCancel();\n\n          self.debug && self.log('Upload file part, isBig:', isBigFile, part, buffer.byteLength, new Uint8Array(buffer).length, new Uint8Array(buffer).slice().length);\n\n          return self.apiManager.invokeApi(method, {\n            file_id: fileId,\n            file_part: part,\n            file_total_parts: totalParts,\n            bytes: buffer\n          } as any, {\n            fileUpload: true\n          }).then(() => {\n            if(canceled) {\n              return;\n            }\n\n            ++doneParts;\n            const progress: Progress = {done: doneParts * partSize, offset, total: fileSize, fileName};\n            deferred.notify(progress);\n\n            if(doneParts >= totalParts) {\n              deferred.resolve(resultInputFile);\n              resolved = true;\n            }\n          }, errorHandler);\n        }, activeDelta).catch(errorHandler);\n      }\n    }\n\n    const it = generator();\n    const process = () => {\n      if(canceled) return;\n      const r = it.next();\n      if(r.done || canceled) return;\n      (r.value as Promise<void>).then(process);\n    };\n\n    const maxRequests = Infinity;\n    for(let i = 0, length = Math.min(maxRequests, totalParts); i < length; ++i) {\n      process();\n    }\n\n    const checkCancel = () => {\n      if(canceled) {\n        throw makeError('UPLOAD_CANCELED');\n      }\n    };\n\n    deferred.cancel = () => {\n      if(!canceled && !resolved) {\n        canceled = true;\n        errorHandler(makeError('UPLOAD_CANCELED'));\n      }\n    };\n\n    deferred.notify = (progress: Progress) => {\n      this.rootScope.dispatchEvent('download_progress', progress);\n    };\n\n    deferred.finally(() => {\n      if(this.uploadPromises[fileName] === deferred) {\n        delete this.uploadPromises[fileName];\n      }\n    });\n\n    return this.uploadPromises[fileName] = deferred;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default function fixFirefoxSvg(text: string) {\n  const svgIndex = text.indexOf('<svg');\n  if(svgIndex !== 0) {\n    text = text.slice(svgIndex);\n  }\n\n  const [_, __, width, height] = text.match(/viewBox=\"(.+?)\"/)[1].split(' ');\n  text = text.replace(/>/, ` width=\"${width}\" height=\"${height}\">`).replace(/[^\\x00-\\x7F]/g, '');\n  return text;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport readBlobAsArrayBuffer from './readBlobAsArrayBuffer';\n\nexport default function readBlobAsUint8Array(blob: Blob) {\n  return readBlobAsArrayBuffer(blob).then((buffer) => new Uint8Array(buffer));\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport ctx from '../../environment/ctx';\nimport assumeType from '../../helpers/assumeType';\nimport callbackify from '../../helpers/callbackify';\nimport {ignoreRestrictionReasons} from '../../helpers/restrictions';\nimport {Config, HelpAppConfig, MethodDeclMap, User} from '../../layer';\nimport {InvokeApiOptions} from '../../types';\nimport {AppManager} from '../appManagers/manager';\nimport {MTAppConfig} from './appConfig';\nimport {UserAuth} from './mtproto_config';\nimport {MTMessage} from './networker';\n\ntype HashResult = {\n  hash: number,\n  result: any\n};\n\ntype HashOptions = {\n  [queryJSON: string]: HashResult\n};\n\nexport type ApiLimitType = 'pin' | 'folderPin' | 'folders' |\n  'favedStickers' | 'reactions' | 'bio' | 'topicPin' | 'caption' |\n  'chatlistsJoined' | 'chatlistInvites';\n\nexport default abstract class ApiManagerMethods extends AppManager {\n  private afterMessageIdTemp: number;\n  private hashes: {[method: string]: HashOptions} = {};\n  private apiPromisesSingleProcess: {\n    [q: string]: Map<any, Promise<any>>\n  } = {};\n  private apiPromisesSingle: {\n    [q: string]: Promise<any>\n  } = {};\n  private apiPromisesCacheable: {\n    [method: string]: {\n      [queryJSON: string]: {\n        timestamp: number,\n        promise: Promise<any>,\n        fulfilled: boolean,\n        result?: any,\n        error?: any,\n        timeout?: number,\n        params: any\n      }\n    }\n  } = {};\n\n  protected config: Config;\n  protected appConfig: MTAppConfig;\n\n  constructor() {\n    super();\n    this.afterMessageIdTemp = 0;\n  }\n\n  abstract setUserAuth(userAuth: UserAuth | UserId): Promise<void>;\n\n  public setUser(user: User) {\n    // appUsersManager.saveApiUser(user);\n    return this.setUserAuth(user.id);\n  }\n\n  abstract invokeApi<T extends keyof MethodDeclMap>(method: T, params?: MethodDeclMap[T]['req'], options?: InvokeApiOptions): Promise<MethodDeclMap[T]['res']>;\n\n  public invokeApiAfter<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    let o = options;\n    o.prepareTempMessageId = '' + ++this.afterMessageIdTemp;\n\n    o = {...options};\n    (options as MTMessage).messageId = o.prepareTempMessageId;\n\n    // console.log('will invokeApi:', method, params, options);\n    return this.invokeApi(method, params, o);\n  }\n\n  public invokeApiHashable<T extends keyof MethodDeclMap, R>(o: {\n    method: T,\n    processResult?: (response: MethodDeclMap[T]['res']) => R,\n    processError?: (error: ApiError) => any,\n    params?: Omit<MethodDeclMap[T]['req'], 'hash'>,\n    options?: InvokeApiOptions & {cacheKey?: string},\n    overwrite?: boolean\n  }) {\n    // @ts-ignore\n    o.params ??= {};\n    o.options ??= {};\n    // console.log('will invokeApi:', method, params, options);\n\n    const {params, options, method, overwrite} = o;\n\n    const queryJSON = JSON.stringify(params);\n    let cached: HashResult;\n    if(this.hashes[method]) {\n      cached = this.hashes[method][queryJSON];\n      if(cached) {\n        if(overwrite) {\n          delete this.hashes[method][queryJSON];\n          cached = undefined;\n        } else {\n          (params as any).hash = cached.hash;\n        }\n      }\n    }\n\n    return this.invokeApiSingleProcess<T, R>({\n      method,\n      processResult: (result) => {\n        if(result._.includes('NotModified')) {\n          // this.debug && this.log.warn('NotModified saved!', method, queryJSON);\n          return cached.result;\n        }\n\n        if(result.hash/*  || result.messages */) {\n          const hash = result.hash/*  || this.computeHash(result.messages) */;\n\n          if(!this.hashes[method]) this.hashes[method] = {};\n          cached = this.hashes[method][queryJSON] = {\n            hash,\n            result\n          };\n        }\n\n        if(o.processResult) {\n          const newResult = o.processResult(result);\n          return cached ? cached.result = newResult : newResult;\n        }\n\n        return result;\n      },\n      params,\n      options\n    });\n  }\n\n  public invokeApiSingle<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    const q = method + '-' + JSON.stringify(params);\n    const cache = this.apiPromisesSingle;\n    if(cache[q]) {\n      return cache[q];\n    }\n\n    return cache[q] = this.invokeApi(method, params, options).finally(() => {\n      delete cache[q];\n    });\n  }\n\n  public invokeApiSingleProcess<T extends keyof MethodDeclMap, R>(o: {\n    method: T,\n    processResult: (response: MethodDeclMap[T]['res']) => R,\n    processError?: (error: ApiError) => any,\n    params?: MethodDeclMap[T]['req'],\n    options?: InvokeApiOptions & {cacheKey?: string, overwrite?: boolean}\n  }): Promise<Awaited<R>> {\n    o.params ??= {};\n    o.options ??= {};\n\n    const {method, processResult, processError, params, options} = o;\n    const cache = this.apiPromisesSingleProcess;\n    const cacheKey = options.cacheKey || JSON.stringify(params);\n    const map = cache[method] ??= new Map();\n    const oldPromise = map.get(cacheKey);\n    if(oldPromise) {\n      return oldPromise;\n    }\n\n    const getNewPromise = () => {\n      const promise = map.get(cacheKey);\n      return promise === p ? undefined : promise;\n    }\n\n    const originalPromise = this.invokeApi(method, params, options);\n    const newPromise: Promise<Awaited<R>> = originalPromise.then((result) => {\n      return getNewPromise() || (processResult ? processResult(result) : result);\n    }, (error) => {\n      const promise = getNewPromise();\n      if(promise) {\n        return promise;\n      }\n\n      if(!processError) {\n        throw error;\n      }\n\n      return processError(error);\n    });\n\n    const p = newPromise.finally(() => {\n      if(map.get(cacheKey) !== p) {\n        return;\n      }\n\n      map.delete(cacheKey);\n      if(!map.size) {\n        delete cache[method];\n      }\n    });\n\n    map.set(cacheKey, p);\n    return p;\n  }\n\n  public invokeApiCacheable<\n    T extends keyof MethodDeclMap,\n    O extends InvokeApiOptions & Partial<{cacheSeconds: number, override: boolean, syncIfHasResult: boolean}>\n  >(\n    method: T,\n    params: MethodDeclMap[T]['req'] = {} as any,\n    options: O = {} as any\n  ): O['syncIfHasResult'] extends true ? MethodDeclMap[T]['res'] | Promise<MethodDeclMap[T]['res']> : Promise<MethodDeclMap[T]['res']> {\n    const cache = this.apiPromisesCacheable[method] ??= {};\n    const queryJSON = JSON.stringify(params);\n    let item = cache[queryJSON];\n    if(item && (!options.override || !item.fulfilled)) {\n      if(options.syncIfHasResult) {\n        if(item.hasOwnProperty('result')) {\n          return item.result;\n        } else if(item.hasOwnProperty('error')) {\n          throw item.error;\n        }\n      }\n\n      return item.promise;\n    }\n\n    if(options.override) {\n      if(item?.timeout) {\n        clearTimeout(item.timeout);\n        delete item.timeout;\n      }\n\n      delete options.override;\n    }\n\n    let timeout: number;\n    if(options.cacheSeconds) {\n      timeout = ctx.setTimeout(() => {\n        if(cache[queryJSON] === item) {\n          delete cache[queryJSON];\n        }\n      }, options.cacheSeconds * 1000);\n      delete options.cacheSeconds;\n    }\n\n    const promise = this.invokeApi(method, params, options);\n\n    const onResult = (result: any) => {\n      item.result = result;\n    };\n\n    promise.then((result) => {\n      item.result = result;\n    }, (error) => {\n      item.error = error;\n    });\n\n    item = cache[queryJSON] = {\n      timestamp: Date.now(),\n      fulfilled: false,\n      timeout,\n      promise,\n      params\n    };\n\n    return promise;\n  }\n\n  public clearCache<T extends keyof MethodDeclMap>(method: T, verify: (params: MethodDeclMap[T]['req']) => boolean) {\n    const cache = this.apiPromisesCacheable[method];\n    if(cache) {\n      for(const queryJSON in cache) {\n        const item = cache[queryJSON];\n        try {\n          if(verify(item.params)) {\n            if(item.timeout) {\n              clearTimeout(item.timeout);\n            }\n\n            delete cache[queryJSON];\n          }\n        } catch(err) {\n          // this.log.error('clearCache error:', err, queryJSON, item);\n        }\n      }\n    }\n  }\n\n  public getConfig(overwrite?: boolean) {\n    if(this.config && !overwrite) {\n      return this.config;\n    }\n\n    return this.invokeApiSingleProcess({\n      method: 'help.getConfig',\n      params: {},\n      processResult: (config) => {\n        this.config = config;\n        this.rootScope.dispatchEvent('config', config);\n        return config;\n      },\n      options: {overwrite}\n    });\n  }\n\n  public getAppConfig(overwrite?: boolean) {\n    if(this.appConfig && !overwrite) {\n      return this.appConfig;\n    }\n\n    return this.invokeApiSingleProcess({\n      method: 'help.getAppConfig',\n      params: {\n        hash: 0\n      },\n      processResult: (helpAppConfig) => {\n        assumeType<HelpAppConfig.helpAppConfig>(helpAppConfig);\n        const config = helpAppConfig.config as any as MTAppConfig;\n        this.appConfig = config;\n        ignoreRestrictionReasons(config.ignore_restriction_reasons ?? []);\n        this.rootScope.dispatchEvent('app_config', config);\n        return config;\n      },\n      options: {overwrite}\n    });\n  }\n\n  public getLimit(type: ApiLimitType, isPremium?: boolean) {\n    return callbackify(this.getAppConfig(), (appConfig) => {\n      const map: {[type in ApiLimitType]: [keyof MTAppConfig, keyof MTAppConfig] | keyof MTAppConfig} = {\n        pin: ['dialogs_pinned_limit_default', 'dialogs_pinned_limit_premium'],\n        folderPin: ['dialogs_folder_pinned_limit_default', 'dialogs_folder_pinned_limit_premium'],\n        folders: ['dialog_filters_limit_default', 'dialog_filters_limit_premium'],\n        favedStickers: ['stickers_faved_limit_default', 'stickers_faved_limit_premium'],\n        reactions: ['reactions_user_max_default', 'reactions_user_max_premium'],\n        bio: ['about_length_limit_default', 'about_length_limit_premium'],\n        topicPin: 'topics_pinned_limit',\n        caption: ['caption_length_limit_default', 'caption_length_limit_premium'],\n        chatlistInvites: ['chatlist_invites_limit_default', 'chatlist_invites_limit_premium'],\n        chatlistsJoined: ['chatlists_joined_limit_default', 'chatlists_joined_limit_premium']\n      };\n\n      isPremium ??= this.rootScope.premium;\n\n      const a = map[type];\n      const key = Array.isArray(a) ? a[isPremium ? 1 : 0] : a;\n      return appConfig[key] as number;\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\n                   \nimport transportController from './transports/controller';\nimport MTTransport from './transports/transport';\n         \n\nimport type {UserAuth} from './mtproto_config';\nimport type {DcAuthKey, DcId, DcServerSalt, InvokeApiOptions} from '../../types';\nimport type {MethodDeclMap} from '../../layer';\nimport type TcpObfuscated from './transports/tcpObfuscated';\nimport sessionStorage from '../sessionStorage';\nimport MTPNetworker, {MTMessage} from './networker';\nimport {ConnectionType, constructTelegramWebSocketUrl, DcConfigurator, TransportType} from './dcConfigurator';\nimport {logger} from '../logger';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport App from '../../config/app';\nimport {MOUNT_CLASS_TO} from '../../config/debug';\nimport {IDB} from '../files/idb';\nimport CryptoWorker from '../crypto/cryptoMessagePort';\nimport ctx from '../../environment/ctx';\nimport noop from '../../helpers/noop';\nimport Modes from '../../config/modes';\nimport bytesFromHex from '../../helpers/bytes/bytesFromHex';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport isObject from '../../helpers/object/isObject';\nimport pause from '../../helpers/schedulers/pause';\nimport ApiManagerMethods from './api_methods';\nimport {getEnvironment} from '../../environment/utils';\nimport toggleStorages from '../../helpers/toggleStorages';\nimport tsNow from '../../helpers/tsNow';\n\n/* class RotatableArray<T> {\n  public array: Array<T> = [];\n  private lastIndex = -1;\n\n  public get() {\n    this.lastIndex = clamp(this.lastIndex + 1, 0, this.array.length - 1);\n    return this.array[this.lastIndex];\n  }\n} */\n\nconst PREMIUM_FILE_NETWORKERS_COUNT = 6;\nconst REGULAR_FILE_NETWORKERS_COUNT = 3;\n\nexport class ApiManager extends ApiManagerMethods {\n  private cachedNetworkers: {\n    [transportType in TransportType]: {\n      [connectionType in ConnectionType]: {\n        [dcId: DcId]: MTPNetworker[]\n      }\n    }\n  };\n\n  private cachedExportPromise: {[x: number]: Promise<unknown>};\n  private gettingNetworkers: {[dcIdAndType: string]: Promise<MTPNetworker>};\n  private baseDcId: DcId;\n\n  // public telegramMeNotified = false;\n\n  private log: ReturnType<typeof logger>;\n\n  private afterMessageTempIds: {\n    [tempId: string]: {\n      messageId: string,\n      promise: Promise<any>\n    }\n  };\n\n  private transportType: TransportType;\n\n  private updatesProcessor: (obj: any) => void;\n\n  private loggingOut: boolean;\n\n  constructor() {\n    super();\n    this.log = logger('API');\n\n    this.cachedNetworkers = {} as any;\n    this.cachedExportPromise = {};\n    this.gettingNetworkers = {};\n    this.baseDcId = 0;\n    this.afterMessageTempIds = {};\n\n    this.transportType = Modes.transport;\n\n                       \n    transportController.addEventListener('transport', (transportType) => {\n      this.changeTransportType(transportType);\n    });\n             \n\n    // * Make sure that the used autologin_token is no more than 10000 seconds old\n    // * https://core.telegram.org/api/url-authorization\n    const REFRESH_APP_CONFIG_INTERVAL = (10000 - 30) * 1000;\n    setInterval(() => {\n      this.getConfig(true);\n    }, REFRESH_APP_CONFIG_INTERVAL);\n  }\n\n  protected after() {\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateConfig: () => {\n        this.getConfig(true);\n        this.getAppConfig(true);\n      }\n    });\n\n    this.rootScope.addEventListener('user_auth', () => {\n      if(this.config) { // refresh configs if had a config during authorization\n        this.apiUpdatesManager.processLocalUpdate({_: 'updateConfig'});\n      }\n    });\n\n    this.rootScope.addEventListener('premium_toggle', (isPremium) => {\n      this.iterateNetworkers(({networker, connectionType, dcId, transportType}) => {\n        if(connectionType === 'client' || transportType !== 'websocket') {\n          return;\n        }\n\n        const transport = networker.transport;\n        if(!transport) {\n          this.log.error('wow what, no transport?', networker);\n          return;\n        }\n\n        if((transport as TcpObfuscated).connection) {\n          const url = constructTelegramWebSocketUrl(dcId, connectionType, isPremium);\n          (transport as TcpObfuscated).changeUrl(url);\n        }\n      });\n    });\n  }\n\n  // private lol = false;\n\n  // constructor() {\n  // MtpSingleInstanceService.start();\n\n  /* AppStorage.get<number>('dc').then((dcId) => {\n      if(dcId) {\n        this.baseDcId = dcId;\n      }\n    }); */\n  // }\n\n  /* public telegramMeNotify(newValue: boolean) {\n    if(this.telegramMeNotified !== newValue) {\n      this.telegramMeNotified = newValue;\n      //telegramMeWebService.setAuthorized(this.telegramMeNotified);\n    }\n  } */\n\n  private getTransportType(connectionType: ConnectionType) {\n                              \n                 \n                                                                                                                           \n                                                                                                \n            \n    // @ts-ignore\n    const transportType: TransportType = this.transportType;\n             \n\n    return transportType;\n  }\n\n  private iterateNetworkers(callback: (o: {networker: MTPNetworker, dcId: DcId, connectionType: ConnectionType, transportType: TransportType, index: number, array: MTPNetworker[]}) => void) {\n    for(const transportType in this.cachedNetworkers) {\n      const connections = this.cachedNetworkers[transportType as TransportType];\n      for(const connectionType in connections) {\n        const dcs = connections[connectionType as ConnectionType];\n        for(const dcId in dcs) {\n          const networkers = dcs[dcId as any as DcId];\n          networkers.forEach((networker, idx, arr) => {\n            callback({\n              networker,\n              dcId: +dcId as DcId,\n              connectionType: connectionType as ConnectionType,\n              transportType: transportType as TransportType,\n              index: idx,\n              array: arr\n            });\n          });\n        }\n      }\n    }\n  }\n\n  private chooseServer(dcId: DcId, connectionType: ConnectionType, transportType: TransportType) {\n    return this.dcConfigurator.chooseServer(dcId, connectionType, transportType, connectionType === 'client', this.rootScope.premium);\n  }\n\n  public changeTransportType(transportType: TransportType) {\n    const oldTransportType = this.transportType;\n    if(oldTransportType === transportType) {\n      return;\n    }\n\n    this.log('changing transport from', oldTransportType, 'to', transportType);\n\n    const oldObject = this.cachedNetworkers[oldTransportType];\n    const newObject = this.cachedNetworkers[transportType];\n    this.cachedNetworkers[transportType] = oldObject;\n    this.cachedNetworkers[oldTransportType] = newObject;\n\n    this.transportType = transportType;\n\n    for(const oldGetKey in this.gettingNetworkers) {\n      const promise = this.gettingNetworkers[oldGetKey];\n      delete this.gettingNetworkers[oldGetKey];\n\n      const newGetKey = oldGetKey.replace(oldTransportType, transportType);\n      this.gettingNetworkers[newGetKey] = promise;\n\n      this.log('changed networker getKey from', oldGetKey, 'to', newGetKey)\n    }\n\n    this.iterateNetworkers((info) => {\n      const transportType = this.getTransportType(info.connectionType);\n      const transport = this.chooseServer(info.dcId, info.connectionType, transportType);\n      this.changeNetworkerTransport(info.networker, transport);\n    });\n  }\n\n  public async getBaseDcId() {\n    if(this.baseDcId) {\n      return this.baseDcId;\n    }\n\n    const baseDcId = await sessionStorage.get('dc');\n    if(!this.baseDcId) {\n      if(!baseDcId) {\n        this.setBaseDcId(App.baseDcId);\n      } else {\n        this.baseDcId = baseDcId;\n      }\n    }\n\n    return this.baseDcId;\n  }\n\n  public async setUserAuth(userAuth: UserAuth | UserId) {\n    if(typeof(userAuth) === 'string' || typeof(userAuth) === 'number') {\n      userAuth = {dcID: 0, date: tsNow(true), id: userAuth.toPeerId(false)};\n    }\n\n    this.rootScope.dispatchEvent('user_auth', userAuth);\n\n    if(!userAuth.dcID) {\n      const baseDcId = await this.getBaseDcId();\n      userAuth.dcID = baseDcId;\n    }\n\n    sessionStorage.set({\n      user_auth: userAuth\n    });\n\n    // this.telegramMeNotify(true);\n  }\n\n  public setBaseDcId(dcId: DcId) {\n    const wasDcId = this.baseDcId;\n    if(wasDcId) { // if migrated set ondrain\n      this.getNetworker(wasDcId).then((networker) => {\n        this.setOnDrainIfNeeded(networker);\n      });\n    }\n\n    this.baseDcId = dcId;\n\n    sessionStorage.set({\n      dc: this.baseDcId\n    });\n  }\n\n  public async logOut() {\n    if(this.loggingOut) {\n      return;\n    }\n\n    this.loggingOut = true;\n    const storageKeys: Array<DcAuthKey> = [];\n\n    const prefix = 'dc';\n    for(let dcId = 1; dcId <= 5; dcId++) {\n      storageKeys.push(prefix + dcId + '_auth_key' as any);\n    }\n\n    // WebPushApiManager.forceUnsubscribe(); // WARNING // moved to worker's master\n    const storageResult = await Promise.all(storageKeys.map((key) => sessionStorage.get(key)));\n\n    const logoutPromises: Promise<any>[] = [];\n    for(let i = 0; i < storageResult.length; i++) {\n      if(storageResult[i]) {\n        logoutPromises.push(this.invokeApi('auth.logOut', {}, {dcId: (i + 1) as DcId, ignoreErrors: true}));\n      }\n    }\n\n    const clear = async() => {\n      this.baseDcId = undefined;\n      // this.telegramMeNotify(false);\n      await toggleStorages(false, true);\n      IDB.closeDatabases();\n      this.rootScope.dispatchEvent('logging_out');\n    };\n\n    setTimeout(clear, 1e3);\n\n    // return;\n\n    return Promise.all(logoutPromises).catch((error) => {\n      error.handled = true;\n    }).finally(clear)/* .then(() => {\n      location.pathname = '/';\n    }) */;\n  }\n\n  private generateNetworkerGetKey(dcId: DcId, transportType: TransportType, connectionType: ConnectionType) {\n    return [dcId, transportType, connectionType].join('-');\n  }\n\n  public getNetworker(dcId: DcId, options: InvokeApiOptions = {}): Promise<MTPNetworker> {\n    const connectionType: ConnectionType = options.fileDownload ? 'download' : (options.fileUpload ? 'upload' : 'client');\n    // const connectionType: ConnectionType = 'client';\n\n    const transportType = this.getTransportType(connectionType);\n    if(!this.cachedNetworkers[transportType]) {\n      this.cachedNetworkers[transportType] = {\n        client: {},\n        download: {},\n        upload: {}\n      };\n    }\n\n    const cache = this.cachedNetworkers[transportType][connectionType];\n    if(!(dcId in cache)) {\n      cache[dcId] = [];\n    }\n\n    const networkers = cache[dcId];\n    // @ts-ignore\n    const maxNetworkers = connectionType === 'client' || transportType === 'https' ? 1 : (this.rootScope.premium ? PREMIUM_FILE_NETWORKERS_COUNT : REGULAR_FILE_NETWORKERS_COUNT);\n    if(networkers.length >= maxNetworkers) {\n      let i = maxNetworkers - 1, found = false;\n      for(; i >= 0; --i) {\n        if(networkers[i].isOnline) {\n          found = true;\n          break;\n        }\n      }\n\n      const networker = networkers.splice(found ? i : maxNetworkers - 1, 1)[0];\n      networkers.unshift(networker);\n      return Promise.resolve(networker);\n    }\n\n    let getKey = this.generateNetworkerGetKey(dcId, transportType, connectionType);\n    if(this.gettingNetworkers[getKey]) {\n      return this.gettingNetworkers[getKey];\n    }\n\n    const ak: DcAuthKey = `dc${dcId}_auth_key` as any;\n    const ss: DcServerSalt = `dc${dcId}_server_salt` as any;\n\n    let transport = this.chooseServer(dcId, connectionType, transportType);\n    return this.gettingNetworkers[getKey] = Promise.all([ak, ss].map((key) => sessionStorage.get(key)))\n    .then(async([authKeyHex, serverSaltHex]) => {\n      let networker: MTPNetworker, error: any;\n      if(authKeyHex && authKeyHex.length === 512) {\n        if(!serverSaltHex || serverSaltHex.length !== 16) {\n          serverSaltHex = 'AAAAAAAAAAAAAAAA';\n        }\n\n        const authKey = bytesFromHex(authKeyHex);\n        const authKeyId = (await CryptoWorker.invokeCrypto('sha1', authKey)).slice(-8);\n        const serverSalt = bytesFromHex(serverSaltHex);\n\n        networker = this.networkerFactory.getNetworker(dcId, authKey, authKeyId, serverSalt, options);\n      } else {\n        try { // if no saved state\n          const auth = await this.authorizer.auth(dcId);\n\n          sessionStorage.set({\n            [ak]: bytesToHex(auth.authKey),\n            [ss]: bytesToHex(auth.serverSalt)\n          });\n\n          networker = this.networkerFactory.getNetworker(dcId, auth.authKey, auth.authKeyId, auth.serverSalt, options);\n        } catch(_error) {\n          error = _error;\n        }\n      }\n\n      // ! cannot get it before this promise because simultaneous changeTransport will change nothing\n      const newTransportType = this.getTransportType(connectionType);\n      if(newTransportType !== transportType) {\n        getKey = this.generateNetworkerGetKey(dcId, newTransportType, connectionType);\n        transport.destroy();\n        DcConfigurator.removeTransport(this.dcConfigurator.chosenServers, transport);\n\n        if(networker) {\n          transport = this.chooseServer(dcId, connectionType, newTransportType);\n        }\n\n        this.log('transport has been changed during authorization from', transportType, 'to', newTransportType);\n      }\n\n      /* networker.onConnectionStatusChange = (online) => {\n        console.log('status:', online);\n      }; */\n\n      delete this.gettingNetworkers[getKey];\n\n      if(error) {\n        this.log('get networker error', error, (error as Error).stack);\n        throw error;\n      }\n\n      this.changeNetworkerTransport(networker, transport);\n      networkers.unshift(networker);\n      this.setOnDrainIfNeeded(networker);\n      return networker;\n    });\n  }\n\n  public getNetworkerVoid(dcId: DcId) {\n    return this.getNetworker(dcId).then(noop, noop);\n  }\n\n  private changeNetworkerTransport(networker: MTPNetworker, transport?: MTTransport) {\n    const oldTransport = networker.transport;\n    if(oldTransport) {\n      DcConfigurator.removeTransport(this.dcConfigurator.chosenServers, oldTransport);\n    }\n\n    networker.changeTransport(transport);\n  }\n\n  private onNetworkerDrain(networker: MTPNetworker) {\n    this.log('networker drain', networker.dcId);\n    networker.onDrain = undefined;\n    this.changeNetworkerTransport(networker);\n    networker.destroy();\n    this.networkerFactory.removeNetworker(networker);\n    DcConfigurator.removeTransport(this.cachedNetworkers, networker);\n  }\n\n  public setOnDrainIfNeeded(networker: MTPNetworker) {\n    if(networker.onDrain) {\n      return;\n    }\n\n    const checkPromise: Promise<boolean> = networker.isFileNetworker ?\n      Promise.resolve(true) :\n      this.getBaseDcId().then((baseDcId) => networker.dcId !== baseDcId);\n    checkPromise.then((canRelease) => {\n      if(networker.onDrain) {\n        return;\n      }\n\n      if(canRelease) {\n        networker.onDrain = () => this.onNetworkerDrain(networker);\n        networker.setDrainTimeout();\n      }\n    });\n  }\n\n  public setUpdatesProcessor(callback: (obj: any) => void) {\n    this.updatesProcessor = callback;\n    this.networkerFactory.setUpdatesProcessor(callback);\n  }\n\n  public invokeApi<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): CancellablePromise<MethodDeclMap[T]['res']> {\n    // /////this.log('Invoke api', method, params, options);\n\n    /* if(!this.lol) {\n      networkerFactory.updatesProcessor({_: 'new_session_created'}, true);\n      this.lol = true;\n    } */\n\n    const deferred = deferredPromise<MethodDeclMap[T]['res']>();\n\n    let {afterMessageId, prepareTempMessageId} = options;\n    if(prepareTempMessageId) {\n      deferred.then(() => {\n        delete this.afterMessageTempIds[prepareTempMessageId];\n      });\n    }\n\n    if(MOUNT_CLASS_TO) {\n      const startTime = Date.now();\n      const interval = ctx.setInterval(() => {\n        if(!cachedNetworker || !cachedNetworker.isStopped()) {\n          this.log.error('Request is still processing:', method, params, options, 'time:', (Date.now() - startTime) / 1000);\n        }\n        // this.cachedUploadNetworkers[2].requestMessageStatus();\n      }, 5e3);\n\n      deferred.catch(noop).finally(() => {\n        clearInterval(interval);\n      });\n    }\n\n    const rejectPromise = async(error: ApiError) => {\n      if(!error) {\n        error = {type: 'ERROR_EMPTY'};\n      } else if(!isObject(error)) {\n        error = {message: error};\n      }\n\n      if((error.code === 401 && error.type === 'SESSION_REVOKED') ||\n        (error.code === 406 && error.type === 'AUTH_KEY_DUPLICATED')) {\n        this.logOut();\n      }\n\n      if(options.ignoreErrors) {\n        throw error;\n      }\n\n      if(error.code === 406) {\n        error.handled = true;\n      }\n\n      if(!options.noErrorBox) {\n        error.input = method;\n        error.stack = stack || (error.originalError && error.originalError.stack) || error.stack || (new Error()).stack;\n        setTimeout(() => {\n          if(!error.handled) {\n            if(error.code === 401) {\n              this.logOut();\n            } else {\n              // ErrorService.show({error: error}); // WARNING\n            }\n\n            error.handled = true;\n          }\n        }, 100);\n      }\n\n      throw error;\n    };\n\n    let dcId: DcId;\n\n    let cachedNetworker: MTPNetworker;\n    const stack = (new Error()).stack || 'empty stack';\n    const performRequest = (): Promise<any> => {\n      if(afterMessageId) {\n        const after = this.afterMessageTempIds[afterMessageId];\n        if(after) {\n          options.afterMessageId = after.messageId;\n        }\n      }\n\n      const promise = cachedNetworker.wrapApiCall(method, params, options);\n\n      if(prepareTempMessageId) {\n        this.afterMessageTempIds[prepareTempMessageId] = {\n          messageId: (options as MTMessage).messageId,\n          promise: deferred\n        };\n      }\n\n      return promise.catch((error: ApiError) => {\n        // if(!options.ignoreErrors) {\n        if(error.type !== 'FILE_REFERENCE_EXPIRED'/*  && error.type !== 'MSG_WAIT_FAILED' */) {\n          this.log.error('Error', error.code, error.type, this.baseDcId, dcId, method, params);\n        }\n\n        if(error.code === 401 && this.baseDcId === dcId) {\n          if(error.type !== 'SESSION_PASSWORD_NEEDED') {\n            sessionStorage.delete('dc')\n            sessionStorage.delete('user_auth'); // ! возможно тут вообще не нужно это делать, но нужно проверить случай с USER_DEACTIVATED (https://core.telegram.org/api/errors)\n            // this.telegramMeNotify(false);\n          }\n\n          throw error;\n        } else if(error.code === 401 && this.baseDcId && dcId !== this.baseDcId) {\n          if(this.cachedExportPromise[dcId] === undefined) {\n            const promise = new Promise((exportResolve, exportReject) => {\n              this.invokeApi('auth.exportAuthorization', {dc_id: dcId}, {noErrorBox: true}).then((exportedAuth) => {\n                this.invokeApi('auth.importAuthorization', {\n                  id: exportedAuth.id,\n                  bytes: exportedAuth.bytes\n                }, {dcId, noErrorBox: true}).then(exportResolve, exportReject);\n              }, exportReject);\n            });\n\n            this.cachedExportPromise[dcId] = promise;\n          }\n\n          return this.cachedExportPromise[dcId].then(() => performRequest());\n        } else if(error.code === 303) {\n          const newDcId = +error.type.match(/^(PHONE_MIGRATE_|NETWORK_MIGRATE_|USER_MIGRATE_)(\\d+)/)[2] as DcId;\n          if(newDcId !== dcId) {\n            if(options.dcId) {\n              options.dcId = newDcId;\n            } else {\n              this.setBaseDcId(newDcId);\n            }\n\n            return this.invokeApi(method, params, options);\n          }\n        } else if(error.code === 400 && error.type.indexOf('FILE_MIGRATE') === 0) {\n          const newDcId = +error.type.match(/^(FILE_MIGRATE_)(\\d+)/)[2] as DcId;\n          if(newDcId !== dcId) {\n            options.dcId = newDcId;\n            return this.invokeApi(method, params, options);\n          } else {\n            throw error;\n          }\n        } else if(error.code === 400 && error.type === 'CONNECTION_NOT_INITED') {\n          this.networkerFactory.unsetConnectionInited();\n          return performRequest();\n        } else if(!options.rawError && error.code === 420) {\n          const waitTime = +error.type.match(/^FLOOD_WAIT_(\\d+)/)[1] || 1;\n\n          if(waitTime > (options.floodMaxTimeout ?? 60) && !options.prepareTempMessageId) {\n            throw error;\n          }\n\n          return pause(waitTime/* (waitTime + 5) */ * 1000).then(() => performRequest());\n        } else if(!options.rawError && ['MSG_WAIT_FAILED', 'MSG_WAIT_TIMEOUT'].includes(error.type)) {\n          const after = this.afterMessageTempIds[afterMessageId];\n\n          afterMessageId = undefined;\n          delete options.afterMessageId;\n\n          if(after) return after.promise.then(() => performRequest());\n          else return performRequest();\n        } else if(!options.rawError && error.code === 500) {\n          const now = Date.now();\n          if(options.stopTime) {\n            if(now >= options.stopTime) {\n              throw error;\n            }\n          }\n\n          options.waitTime = options.waitTime ? Math.min(60, options.waitTime * 1.5) : 1;\n          return pause(options.waitTime * 1000).then(() => performRequest());\n        } else if(error.type === 'UNKNOWN' || error.type === 'MTPROTO_CLUSTER_INVALID') { // cluster invalid - request from regular user to premium endpoint\n          return pause(1000).then(() => performRequest());\n        } else {\n          throw error;\n        }\n      });\n    }\n\n    let p: Promise<MTPNetworker>;\n    if(dcId = (options.dcId || this.baseDcId)) {\n      p = this.getNetworker(dcId, options);\n    } else {\n      p = this.getBaseDcId().then((baseDcId) => this.getNetworker(dcId = baseDcId, options));\n    }\n\n    p.then((networker) => {\n      cachedNetworker = networker;\n      const promise = performRequest();\n      cachedNetworker.attachPromise(deferred, options as MTMessage);\n      return promise;\n    })\n    .then(deferred.resolve)\n    .catch(rejectPromise)\n    .catch(deferred.reject);\n\n    return deferred;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport applyMixins from '../../helpers/applyMixins';\nimport EventListenerBase from '../../helpers/eventListenerBase';\nimport {AppManager} from '../appManagers/manager';\n\nexport type StatePeerType = 'recentSearch' | 'topPeer' | 'dialog' | 'contact' | 'topMessage' | 'self';\n\ntype PeersStorageKey = `${StatePeerType}_${string | PeerId}` | StatePeerType;\n\nclass PeersStorage {\n  private neededPeers: Map<PeerId, Set<PeersStorageKey>> = new Map();\n  private singlePeerMap: Map<PeersStorageKey, Set<PeerId>> = new Map();\n\n  constructor() {\n    this._constructor(false);\n  }\n\n  protected after() {\n    this.rootScope.addEventListener('user_auth', () => {\n      this.requestPeer(this.appPeersManager.peerId, 'self');\n    });\n  }\n\n  public requestPeer(peerId: PeerId, key: PeersStorageKey) {\n    let set = this.neededPeers.get(peerId);\n    if(set && set.has(key)) {\n      return;\n    }\n\n    if(!set) {\n      set = new Set();\n      this.neededPeers.set(peerId, set);\n    }\n\n    set.add(key);\n\n    this.dispatchEvent('peerNeeded', peerId);\n  }\n\n  public releasePeer(peerId: PeerId, key: PeersStorageKey) {\n    const set = this.neededPeers.get(peerId);\n    if(!set) {\n      return;\n    }\n\n    set.delete(key);\n\n    if(!set.size) {\n      this.neededPeers.delete(peerId);\n      this.dispatchEvent('peerUnneeded', peerId);\n    }\n  }\n\n  public requestPeersForKey(peerIds: Set<PeerId> | number[], key: PeersStorageKey) {\n    if(Array.isArray(peerIds)) {\n      peerIds = new Set(peerIds);\n    }\n\n    let set = this.singlePeerMap.get(key);\n    if(set) {\n      for(const peerId of set) {\n        if(peerIds.has(peerId)) {\n          continue;\n        }\n\n        this.releasePeer(peerId, key);\n        set.delete(peerId);\n      }\n\n      if(!set.size && !peerIds.size) {\n        this.singlePeerMap.delete(key);\n        return;\n      }\n    }\n\n    if(peerIds.size) {\n      if(!set) {\n        set = new Set();\n        this.singlePeerMap.set(key, set);\n      }\n\n      for(const peerId of peerIds) {\n        if(set.has(peerId)) {\n          continue;\n        }\n\n        this.requestPeer(peerId, key);\n        set.add(peerId);\n      }\n    }\n  }\n\n  public isPeerNeeded(peerId: PeerId) {\n    return this.neededPeers.has(peerId);\n  }\n}\n\ninterface PeersStorage extends EventListenerBase<{\n  peerNeeded: (peerId: PeerId) => void,\n  peerUnneeded: (peerId: PeerId) => void,\n}>, AppManager {}\napplyMixins(PeersStorage, [EventListenerBase, AppManager]);\n\nexport default PeersStorage;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {InputWebFileLocation, WebDocument} from '../../layer';\nimport type {MyDocument} from '../appManagers/appDocsManager';\nimport type {MyPhoto} from '../appManagers/appPhotosManager';\nimport {getFileNameByLocation} from '../../helpers/fileName';\nimport isWebFileLocation from '../appManagers/utils/webFiles/isWebFileLocation';\nimport {THUMB_TYPE_FULL} from '../mtproto/mtproto_config';\n\nexport type ThumbCache = {\n  downloaded: number,\n  url: string,\n  type: string\n};\n\nexport type ThumbsCache = {\n  [key: string]: {\n    [size: string]: ThumbCache\n  }\n};\n\nconst thumbFullSize = THUMB_TYPE_FULL;\n\nexport type ThumbStorageMedia = MyPhoto | MyDocument | WebDocument | InputWebFileLocation;\n\nexport default class ThumbsStorage {\n  private thumbsCache: ThumbsCache = {};\n\n  private getKey(media: ThumbStorageMedia) {\n    if(isWebFileLocation(media)) {\n      return getFileNameByLocation(media);\n    }\n\n    return media._ + ((media as MyPhoto).id ?? (media as WebDocument).url);\n  }\n\n  public getCacheContext(media: ThumbStorageMedia, thumbSize: string = thumbFullSize): ThumbCache {\n    /* if(media._ === 'photo' && thumbSize !== 'i') {\n      thumbSize = thumbFullSize;\n    } */\n\n    const cache = this.thumbsCache[this.getKey(media)] ??= {};\n    return cache[thumbSize] ??= {downloaded: 0, url: '', type: thumbSize};\n  }\n\n  public setCacheContextURL(media: ThumbStorageMedia, thumbSize: string = thumbFullSize, url: string, downloaded: number = 0) {\n    const cacheContext = this.getCacheContext(media, thumbSize);\n    cacheContext.url = url;\n    cacheContext.downloaded = downloaded;\n    return cacheContext;\n  }\n\n  public deleteCacheContext(media: ThumbStorageMedia, thumbSize: string = thumbFullSize) {\n    const cache = this.thumbsCache[this.getKey(media)];\n    if(cache) {\n      delete cache[thumbSize];\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport type MTProtoConstructor = {\n  id: number,\n  predicate: string,\n  params: Array<{\n    name: string,\n    type: string\n  }>,\n  type: string\n};\n\nexport type MTProtoMethod = {\n  id: number,\n  method: string,\n  params: Array<{\n    name: string,\n    type: string\n  }>,\n  type: string\n};\n\n// eslint-disable-next-line quotes, comma-spacing\nexport default {\"MTProto\":{\"constructors\":[{\"id\":481674261,\"predicate\":\"vector\",\"params\":[],\"type\":\"Vector t\"},{\"id\":85337187,\"predicate\":\"resPQ\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"server_public_key_fingerprints\",\"type\":\"Vector<long>\"}],\"type\":\"ResPQ\"},{\"id\":-1443537003,\"predicate\":\"p_q_inner_data_dc\",\"params\":[{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce\",\"type\":\"int256\"},{\"name\":\"dc\",\"type\":\"int\"}],\"type\":\"P_Q_inner_data\"},{\"id\":1459478408,\"predicate\":\"p_q_inner_data_temp_dc\",\"params\":[{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce\",\"type\":\"int256\"},{\"name\":\"dc\",\"type\":\"int\"},{\"name\":\"expires_in\",\"type\":\"int\"}],\"type\":\"P_Q_inner_data\"},{\"id\":-790100132,\"predicate\":\"server_DH_params_ok\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"encrypted_answer\",\"type\":\"bytes\"}],\"type\":\"Server_DH_Params\"},{\"id\":-1249309254,\"predicate\":\"server_DH_inner_data\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"dh_prime\",\"type\":\"bytes\"},{\"name\":\"g_a\",\"type\":\"bytes\"},{\"name\":\"server_time\",\"type\":\"int\"}],\"type\":\"Server_DH_inner_data\"},{\"id\":1715713620,\"predicate\":\"client_DH_inner_data\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"retry_id\",\"type\":\"long\"},{\"name\":\"g_b\",\"type\":\"bytes\"}],\"type\":\"Client_DH_Inner_Data\"},{\"id\":1003222836,\"predicate\":\"dh_gen_ok\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash1\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1188831161,\"predicate\":\"dh_gen_retry\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash2\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":-1499615742,\"predicate\":\"dh_gen_fail\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash3\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1973679973,\"predicate\":\"bind_auth_key_inner\",\"params\":[{\"name\":\"nonce\",\"type\":\"long\"},{\"name\":\"temp_auth_key_id\",\"type\":\"long\"},{\"name\":\"perm_auth_key_id\",\"type\":\"long\"},{\"name\":\"temp_session_id\",\"type\":\"long\"},{\"name\":\"expires_at\",\"type\":\"int\"}],\"type\":\"BindAuthKeyInner\"},{\"id\":-212046591,\"predicate\":\"rpc_result\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"result\",\"type\":\"Object\"}],\"type\":\"RpcResult\"},{\"id\":558156313,\"predicate\":\"rpc_error\",\"params\":[{\"name\":\"error_code\",\"type\":\"int\"},{\"name\":\"error_message\",\"type\":\"string\"}],\"type\":\"RpcError\"},{\"id\":1579864942,\"predicate\":\"rpc_answer_unknown\",\"params\":[],\"type\":\"RpcDropAnswer\"},{\"id\":-847714938,\"predicate\":\"rpc_answer_dropped_running\",\"params\":[],\"type\":\"RpcDropAnswer\"},{\"id\":-1539647305,\"predicate\":\"rpc_answer_dropped\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"seq_no\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"int\"}],\"type\":\"RpcDropAnswer\"},{\"id\":155834844,\"predicate\":\"future_salt\",\"params\":[{\"name\":\"valid_since\",\"type\":\"int\"},{\"name\":\"valid_until\",\"type\":\"int\"},{\"name\":\"salt\",\"type\":\"long\"}],\"type\":\"FutureSalt\"},{\"id\":-1370486635,\"predicate\":\"future_salts\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"now\",\"type\":\"int\"},{\"name\":\"salts\",\"type\":\"vector<future_salt>\"}],\"type\":\"FutureSalts\"},{\"id\":880243653,\"predicate\":\"pong\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"ping_id\",\"type\":\"long\"}],\"type\":\"Pong\"},{\"id\":-501201412,\"predicate\":\"destroy_session_ok\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":1658015945,\"predicate\":\"destroy_session_none\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":-1631450872,\"predicate\":\"new_session_created\",\"params\":[{\"name\":\"first_msg_id\",\"type\":\"long\"},{\"name\":\"unique_id\",\"type\":\"long\"},{\"name\":\"server_salt\",\"type\":\"long\"}],\"type\":\"NewSession\"},{\"id\":1945237724,\"predicate\":\"msg_container\",\"params\":[{\"name\":\"messages\",\"type\":\"vector<%Message>\"}],\"type\":\"MessageContainer\"},{\"id\":1538843921,\"predicate\":\"message\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"seqno\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"body\",\"type\":\"Object\"}],\"type\":\"Message\"},{\"id\":-530561358,\"predicate\":\"msg_copy\",\"params\":[{\"name\":\"orig_message\",\"type\":\"Message\"}],\"type\":\"MessageCopy\"},{\"id\":812830625,\"predicate\":\"gzip_packed\",\"params\":[{\"name\":\"packed_data\",\"type\":\"bytes\"}],\"type\":\"Object\"},{\"id\":1658238041,\"predicate\":\"msgs_ack\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgsAck\"},{\"id\":-1477445615,\"predicate\":\"bad_msg_notification\",\"params\":[{\"name\":\"bad_msg_id\",\"type\":\"long\"},{\"name\":\"bad_msg_seqno\",\"type\":\"int\"},{\"name\":\"error_code\",\"type\":\"int\"}],\"type\":\"BadMsgNotification\"},{\"id\":-307542917,\"predicate\":\"bad_server_salt\",\"params\":[{\"name\":\"bad_msg_id\",\"type\":\"long\"},{\"name\":\"bad_msg_seqno\",\"type\":\"int\"},{\"name\":\"error_code\",\"type\":\"int\"},{\"name\":\"new_server_salt\",\"type\":\"long\"}],\"type\":\"BadMsgNotification\"},{\"id\":2105940488,\"predicate\":\"msg_resend_req\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgResendReq\"},{\"id\":-630588590,\"predicate\":\"msgs_state_req\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgsStateReq\"},{\"id\":81704317,\"predicate\":\"msgs_state_info\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"info\",\"type\":\"bytes\"}],\"type\":\"MsgsStateInfo\"},{\"id\":-1933520591,\"predicate\":\"msgs_all_info\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"},{\"name\":\"info\",\"type\":\"bytes\"}],\"type\":\"MsgsAllInfo\"},{\"id\":661470918,\"predicate\":\"msg_detailed_info\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"answer_msg_id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"status\",\"type\":\"int\"}],\"type\":\"MsgDetailedInfo\"},{\"id\":-2137147681,\"predicate\":\"msg_new_detailed_info\",\"params\":[{\"name\":\"answer_msg_id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"status\",\"type\":\"int\"}],\"type\":\"MsgDetailedInfo\"},{\"id\":-161422892,\"predicate\":\"destroy_auth_key_ok\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"},{\"id\":178201177,\"predicate\":\"destroy_auth_key_none\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"},{\"id\":-368010477,\"predicate\":\"destroy_auth_key_fail\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"}],\"methods\":[{\"id\":-1099002127,\"method\":\"req_pq_multi\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"}],\"type\":\"ResPQ\"},{\"id\":-686627650,\"method\":\"req_DH_params\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"public_key_fingerprint\",\"type\":\"long\"},{\"name\":\"encrypted_data\",\"type\":\"bytes\"}],\"type\":\"Server_DH_Params\"},{\"id\":-184262881,\"method\":\"set_client_DH_params\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"encrypted_data\",\"type\":\"bytes\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1491380032,\"method\":\"rpc_drop_answer\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"}],\"type\":\"RpcDropAnswer\"},{\"id\":-1188971260,\"method\":\"get_future_salts\",\"params\":[{\"name\":\"num\",\"type\":\"int\"}],\"type\":\"FutureSalts\"},{\"id\":2059302892,\"method\":\"ping\",\"params\":[{\"name\":\"ping_id\",\"type\":\"long\"}],\"type\":\"Pong\"},{\"id\":-213746804,\"method\":\"ping_delay_disconnect\",\"params\":[{\"name\":\"ping_id\",\"type\":\"long\"},{\"name\":\"disconnect_delay\",\"type\":\"int\"}],\"type\":\"Pong\"},{\"id\":-414113498,\"method\":\"destroy_session\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":-1835453025,\"method\":\"http_wait\",\"params\":[{\"name\":\"max_delay\",\"type\":\"int\"},{\"name\":\"wait_after\",\"type\":\"int\"},{\"name\":\"max_wait\",\"type\":\"int\"}],\"type\":\"HttpWait\"},{\"id\":-784117408,\"method\":\"destroy_auth_key\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"}]},\"API\":{\"constructors\":[{\"id\":-1132882121,\"predicate\":\"boolFalse\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1720552011,\"predicate\":\"boolTrue\",\"params\":[],\"type\":\"Bool\"},{\"id\":1072550713,\"predicate\":\"true\",\"params\":[],\"type\":\"True\"},{\"id\":481674261,\"predicate\":\"vector\",\"params\":[],\"type\":\"Vector t\"},{\"id\":-994444869,\"predicate\":\"error\",\"params\":[{\"name\":\"code\",\"type\":\"int\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"Error\"},{\"id\":1450380236,\"predicate\":\"null\",\"params\":[],\"type\":\"Null\"},{\"id\":2134579434,\"predicate\":\"inputPeerEmpty\",\"params\":[],\"type\":\"InputPeer\"},{\"id\":2107670217,\"predicate\":\"inputPeerSelf\",\"params\":[],\"type\":\"InputPeer\"},{\"id\":900291769,\"predicate\":\"inputPeerChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-1182234929,\"predicate\":\"inputUserEmpty\",\"params\":[],\"type\":\"InputUser\"},{\"id\":-138301121,\"predicate\":\"inputUserSelf\",\"params\":[],\"type\":\"InputUser\"},{\"id\":-208488460,\"predicate\":\"inputPhoneContact\",\"params\":[{\"name\":\"client_id\",\"type\":\"long\"},{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"}],\"type\":\"InputContact\"},{\"id\":-181407105,\"predicate\":\"inputFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"md5_checksum\",\"type\":\"string\"}],\"type\":\"InputFile\"},{\"id\":-1771768449,\"predicate\":\"inputMediaEmpty\",\"params\":[],\"type\":\"InputMedia\"},{\"id\":505969924,\"predicate\":\"inputMediaUploadedPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.2?true\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"stickers\",\"type\":\"flags.0?Vector<InputDocument>\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.1?int\"}],\"type\":\"InputMedia\"},{\"id\":-1279654347,\"predicate\":\"inputMediaPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"InputPhoto\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":-104578748,\"predicate\":\"inputMediaGeoPoint\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"}],\"type\":\"InputMedia\"},{\"id\":-122978821,\"predicate\":\"inputMediaContact\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":480546647,\"predicate\":\"inputChatPhotoEmpty\",\"params\":[],\"type\":\"InputChatPhoto\"},{\"id\":-1110593856,\"predicate\":\"inputChatUploadedPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"flags.0?InputFile\"},{\"name\":\"video\",\"type\":\"flags.1?InputFile\"},{\"name\":\"video_start_ts\",\"type\":\"flags.2?double\"},{\"name\":\"video_emoji_markup\",\"type\":\"flags.3?VideoSize\"}],\"type\":\"InputChatPhoto\"},{\"id\":-1991004873,\"predicate\":\"inputChatPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"InputChatPhoto\"},{\"id\":-457104426,\"predicate\":\"inputGeoPointEmpty\",\"params\":[],\"type\":\"InputGeoPoint\"},{\"id\":1210199983,\"predicate\":\"inputGeoPoint\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"lat\",\"type\":\"double\"},{\"name\":\"long\",\"type\":\"double\"},{\"name\":\"accuracy_radius\",\"type\":\"flags.0?int\"}],\"type\":\"InputGeoPoint\"},{\"id\":483901197,\"predicate\":\"inputPhotoEmpty\",\"params\":[],\"type\":\"InputPhoto\"},{\"id\":1001634122,\"predicate\":\"inputPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputPhoto\"},{\"id\":-539317279,\"predicate\":\"inputFileLocation\",\"params\":[{\"name\":\"volume_id\",\"type\":\"long\"},{\"name\":\"local_id\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputFileLocation\"},{\"id\":1498486562,\"predicate\":\"peerUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":918946202,\"predicate\":\"peerChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":-1432995067,\"predicate\":\"storage.fileUnknown\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1086091090,\"predicate\":\"storage.filePartial\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":8322574,\"predicate\":\"storage.fileJpeg\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-891180321,\"predicate\":\"storage.fileGif\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":172975040,\"predicate\":\"storage.filePng\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-1373745011,\"predicate\":\"storage.filePdf\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1384777335,\"predicate\":\"storage.fileMp3\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1258941372,\"predicate\":\"storage.fileMov\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-1278304028,\"predicate\":\"storage.fileMp4\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":276907596,\"predicate\":\"storage.fileWebp\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-742634630,\"predicate\":\"userEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"User\"},{\"id\":1326562017,\"predicate\":\"userProfilePhotoEmpty\",\"params\":[],\"type\":\"UserProfilePhoto\"},{\"id\":-2100168954,\"predicate\":\"userProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_video\",\"type\":\"flags.0?true\"},{\"name\":\"personal\",\"type\":\"flags.2?true\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"stripped_thumb\",\"type\":\"flags.1?bytes\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"UserProfilePhoto\"},{\"id\":164646985,\"predicate\":\"userStatusEmpty\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":-306628279,\"predicate\":\"userStatusOnline\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"UserStatus\"},{\"id\":9203775,\"predicate\":\"userStatusOffline\",\"params\":[{\"name\":\"was_online\",\"type\":\"int\"}],\"type\":\"UserStatus\"},{\"id\":693512293,\"predicate\":\"chatEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Chat\"},{\"id\":1103884886,\"predicate\":\"chat\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.2?true\"},{\"name\":\"deactivated\",\"type\":\"flags.5?true\"},{\"name\":\"call_active\",\"type\":\"flags.23?true\"},{\"name\":\"call_not_empty\",\"type\":\"flags.24?true\"},{\"name\":\"noforwards\",\"type\":\"flags.25?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"ChatPhoto\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"migrated_to\",\"type\":\"flags.6?InputChannel\"},{\"name\":\"admin_rights\",\"type\":\"flags.14?ChatAdminRights\"},{\"name\":\"default_banned_rights\",\"type\":\"flags.18?ChatBannedRights\"}],\"type\":\"Chat\"},{\"id\":1704108455,\"predicate\":\"chatForbidden\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Chat\"},{\"id\":-908914376,\"predicate\":\"chatFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_set_username\",\"type\":\"flags.7?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.8?true\"},{\"name\":\"translations_disabled\",\"type\":\"flags.19?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"participants\",\"type\":\"ChatParticipants\"},{\"name\":\"chat_photo\",\"type\":\"flags.2?Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"exported_invite\",\"type\":\"flags.13?ExportedChatInvite\"},{\"name\":\"bot_info\",\"type\":\"flags.3?Vector<BotInfo>\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.6?int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"call\",\"type\":\"flags.12?InputGroupCall\"},{\"name\":\"ttl_period\",\"type\":\"flags.14?int\"},{\"name\":\"groupcall_default_join_as\",\"type\":\"flags.15?Peer\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.16?string\"},{\"name\":\"requests_pending\",\"type\":\"flags.17?int\"},{\"name\":\"recent_requesters\",\"type\":\"flags.17?Vector<long>\"},{\"name\":\"available_reactions\",\"type\":\"flags.18?ChatReactions\"}],\"type\":\"ChatFull\"},{\"id\":-1070776313,\"predicate\":\"chatParticipant\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChatParticipant\"},{\"id\":-2023500831,\"predicate\":\"chatParticipantsForbidden\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"self_participant\",\"type\":\"flags.0?ChatParticipant\"}],\"type\":\"ChatParticipants\"},{\"id\":1018991608,\"predicate\":\"chatParticipants\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"participants\",\"type\":\"Vector<ChatParticipant>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"ChatParticipants\"},{\"id\":935395612,\"predicate\":\"chatPhotoEmpty\",\"params\":[],\"type\":\"ChatPhoto\"},{\"id\":476978193,\"predicate\":\"chatPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_video\",\"type\":\"flags.0?true\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"stripped_thumb\",\"type\":\"flags.1?bytes\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"ChatPhoto\"},{\"id\":-1868117372,\"predicate\":\"messageEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"peer_id\",\"type\":\"flags.0?Peer\"}],\"type\":\"Message\"},{\"id\":940666592,\"predicate\":\"message\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"post\",\"type\":\"flags.14?true\"},{\"name\":\"from_scheduled\",\"type\":\"flags.18?true\"},{\"name\":\"legacy\",\"type\":\"flags.19?true\"},{\"name\":\"edit_hide\",\"type\":\"flags.21?true\"},{\"name\":\"pinned\",\"type\":\"flags.24?true\"},{\"name\":\"noforwards\",\"type\":\"flags.26?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"flags.8?Peer\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"flags.9?MessageMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.6?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"views\",\"type\":\"flags.10?int\"},{\"name\":\"forwards\",\"type\":\"flags.10?int\"},{\"name\":\"replies\",\"type\":\"flags.23?MessageReplies\"},{\"name\":\"edit_date\",\"type\":\"flags.15?int\"},{\"name\":\"post_author\",\"type\":\"flags.16?string\"},{\"name\":\"grouped_id\",\"type\":\"flags.17?long\"},{\"name\":\"reactions\",\"type\":\"flags.20?MessageReactions\"},{\"name\":\"restriction_reason\",\"type\":\"flags.22?Vector<RestrictionReason>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Message\"},{\"id\":721967202,\"predicate\":\"messageService\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"post\",\"type\":\"flags.14?true\"},{\"name\":\"legacy\",\"type\":\"flags.19?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"flags.8?Peer\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"action\",\"type\":\"MessageAction\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Message\"},{\"id\":1038967584,\"predicate\":\"messageMediaEmpty\",\"params\":[],\"type\":\"MessageMedia\"},{\"id\":1766936791,\"predicate\":\"messageMediaPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.3?true\"},{\"name\":\"photo\",\"type\":\"flags.0?Photo\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.2?int\"}],\"type\":\"MessageMedia\"},{\"id\":1457575028,\"predicate\":\"messageMediaGeo\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"}],\"type\":\"MessageMedia\"},{\"id\":1882335561,\"predicate\":\"messageMediaContact\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageMedia\"},{\"id\":-1618676578,\"predicate\":\"messageMediaUnsupported\",\"params\":[],\"type\":\"MessageMedia\"},{\"id\":-1230047312,\"predicate\":\"messageActionEmpty\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1119368275,\"predicate\":\"messageActionChatCreate\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-1247687078,\"predicate\":\"messageActionChatEditTitle\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":2144015272,\"predicate\":\"messageActionChatEditPhoto\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"}],\"type\":\"MessageAction\"},{\"id\":-1780220945,\"predicate\":\"messageActionChatDeletePhoto\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":365886720,\"predicate\":\"messageActionChatAddUser\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-1539362612,\"predicate\":\"messageActionChatDeleteUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-712374074,\"predicate\":\"dialog\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.2?true\"},{\"name\":\"unread_mark\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"unread_mentions_count\",\"type\":\"int\"},{\"name\":\"unread_reactions_count\",\"type\":\"int\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"pts\",\"type\":\"flags.0?int\"},{\"name\":\"draft\",\"type\":\"flags.1?DraftMessage\"},{\"name\":\"folder_id\",\"type\":\"flags.4?int\"},{\"name\":\"ttl_period\",\"type\":\"flags.5?int\"}],\"type\":\"Dialog\"},{\"id\":590459437,\"predicate\":\"photoEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Photo\"},{\"id\":-82216347,\"predicate\":\"photo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_stickers\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"sizes\",\"type\":\"Vector<PhotoSize>\"},{\"name\":\"video_sizes\",\"type\":\"flags.1?Vector<VideoSize>\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"Photo\"},{\"id\":236446268,\"predicate\":\"photoSizeEmpty\",\"params\":[{\"name\":\"type\",\"type\":\"string\"}],\"type\":\"PhotoSize\"},{\"id\":1976012384,\"predicate\":\"photoSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"size\",\"type\":\"int\"}],\"type\":\"PhotoSize\"},{\"id\":35527382,\"predicate\":\"photoCachedSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":286776671,\"predicate\":\"geoPointEmpty\",\"params\":[],\"type\":\"GeoPoint\"},{\"id\":-1297942941,\"predicate\":\"geoPoint\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"long\",\"type\":\"double\"},{\"name\":\"lat\",\"type\":\"double\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"accuracy_radius\",\"type\":\"flags.0?int\"}],\"type\":\"GeoPoint\"},{\"id\":1577067778,\"predicate\":\"auth.sentCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"auth.SentCodeType\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"next_type\",\"type\":\"flags.1?auth.CodeType\"},{\"name\":\"timeout\",\"type\":\"flags.2?int\"}],\"type\":\"auth.SentCode\"},{\"id\":782418132,\"predicate\":\"auth.authorization\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"setup_password_required\",\"type\":\"flags.1?true\"},{\"name\":\"otherwise_relogin_days\",\"type\":\"flags.1?int\"},{\"name\":\"tmp_sessions\",\"type\":\"flags.0?int\"},{\"name\":\"future_auth_token\",\"type\":\"flags.2?bytes\"},{\"name\":\"user\",\"type\":\"User\"}],\"type\":\"auth.Authorization\"},{\"id\":-1271602504,\"predicate\":\"auth.exportedAuthorization\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"auth.ExportedAuthorization\"},{\"id\":-1195615476,\"predicate\":\"inputNotifyPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"InputNotifyPeer\"},{\"id\":423314455,\"predicate\":\"inputNotifyUsers\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":1251338318,\"predicate\":\"inputNotifyChats\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":-551616469,\"predicate\":\"inputPeerNotifySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"show_previews\",\"type\":\"flags.0?Bool\"},{\"name\":\"silent\",\"type\":\"flags.1?Bool\"},{\"name\":\"mute_until\",\"type\":\"flags.2?int\"},{\"name\":\"sound\",\"type\":\"flags.3?NotificationSound\"}],\"type\":\"InputPeerNotifySettings\"},{\"id\":-1472527322,\"predicate\":\"peerNotifySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"show_previews\",\"type\":\"flags.0?Bool\"},{\"name\":\"silent\",\"type\":\"flags.1?Bool\"},{\"name\":\"mute_until\",\"type\":\"flags.2?int\"},{\"name\":\"ios_sound\",\"type\":\"flags.3?NotificationSound\"},{\"name\":\"android_sound\",\"type\":\"flags.4?NotificationSound\"},{\"name\":\"other_sound\",\"type\":\"flags.5?NotificationSound\"}],\"type\":\"PeerNotifySettings\"},{\"id\":-1525149427,\"predicate\":\"peerSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"report_spam\",\"type\":\"flags.0?true\"},{\"name\":\"add_contact\",\"type\":\"flags.1?true\"},{\"name\":\"block_contact\",\"type\":\"flags.2?true\"},{\"name\":\"share_contact\",\"type\":\"flags.3?true\"},{\"name\":\"need_contacts_exception\",\"type\":\"flags.4?true\"},{\"name\":\"report_geo\",\"type\":\"flags.5?true\"},{\"name\":\"autoarchived\",\"type\":\"flags.7?true\"},{\"name\":\"invite_members\",\"type\":\"flags.8?true\"},{\"name\":\"request_chat_broadcast\",\"type\":\"flags.10?true\"},{\"name\":\"geo_distance\",\"type\":\"flags.6?int\"},{\"name\":\"request_chat_title\",\"type\":\"flags.9?string\"},{\"name\":\"request_chat_date\",\"type\":\"flags.9?int\"}],\"type\":\"PeerSettings\"},{\"id\":-1539849235,\"predicate\":\"wallPaper\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"pattern\",\"type\":\"flags.3?true\"},{\"name\":\"dark\",\"type\":\"flags.4?true\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"Document\"},{\"name\":\"settings\",\"type\":\"flags.2?WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":1490799288,\"predicate\":\"inputReportReasonSpam\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":505595789,\"predicate\":\"inputReportReasonViolence\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":777640226,\"predicate\":\"inputReportReasonPornography\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1376497949,\"predicate\":\"inputReportReasonChildAbuse\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1041980751,\"predicate\":\"inputReportReasonOther\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1813324973,\"predicate\":\"userFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blocked\",\"type\":\"flags.0?true\"},{\"name\":\"phone_calls_available\",\"type\":\"flags.4?true\"},{\"name\":\"phone_calls_private\",\"type\":\"flags.5?true\"},{\"name\":\"can_pin_message\",\"type\":\"flags.7?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.12?true\"},{\"name\":\"video_calls_available\",\"type\":\"flags.13?true\"},{\"name\":\"voice_messages_forbidden\",\"type\":\"flags.20?true\"},{\"name\":\"translations_disabled\",\"type\":\"flags.23?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"flags.1?string\"},{\"name\":\"settings\",\"type\":\"PeerSettings\"},{\"name\":\"personal_photo\",\"type\":\"flags.21?Photo\"},{\"name\":\"profile_photo\",\"type\":\"flags.2?Photo\"},{\"name\":\"fallback_photo\",\"type\":\"flags.22?Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"bot_info\",\"type\":\"flags.3?BotInfo\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.6?int\"},{\"name\":\"common_chats_count\",\"type\":\"int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"ttl_period\",\"type\":\"flags.14?int\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.15?string\"},{\"name\":\"private_forward_name\",\"type\":\"flags.16?string\"},{\"name\":\"bot_group_admin_rights\",\"type\":\"flags.17?ChatAdminRights\"},{\"name\":\"bot_broadcast_admin_rights\",\"type\":\"flags.18?ChatAdminRights\"},{\"name\":\"premium_gifts\",\"type\":\"flags.19?Vector<PremiumGiftOption>\"},{\"name\":\"wallpaper\",\"type\":\"flags.24?WallPaper\"}],\"type\":\"UserFull\"},{\"id\":341499403,\"predicate\":\"contact\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"mutual\",\"type\":\"Bool\"}],\"type\":\"Contact\"},{\"id\":-1052885936,\"predicate\":\"importedContact\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"client_id\",\"type\":\"long\"}],\"type\":\"ImportedContact\"},{\"id\":383348795,\"predicate\":\"contactStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"status\",\"type\":\"UserStatus\"}],\"type\":\"ContactStatus\"},{\"id\":-1219778094,\"predicate\":\"contacts.contactsNotModified\",\"params\":[],\"type\":\"contacts.Contacts\"},{\"id\":-353862078,\"predicate\":\"contacts.contacts\",\"params\":[{\"name\":\"contacts\",\"type\":\"Vector<Contact>\"},{\"name\":\"saved_count\",\"type\":\"int\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Contacts\"},{\"id\":2010127419,\"predicate\":\"contacts.importedContacts\",\"params\":[{\"name\":\"imported\",\"type\":\"Vector<ImportedContact>\"},{\"name\":\"popular_invites\",\"type\":\"Vector<PopularContact>\"},{\"name\":\"retry_contacts\",\"type\":\"Vector<long>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.ImportedContacts\"},{\"id\":182326673,\"predicate\":\"contacts.blocked\",\"params\":[{\"name\":\"blocked\",\"type\":\"Vector<PeerBlocked>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Blocked\"},{\"id\":-513392236,\"predicate\":\"contacts.blockedSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"blocked\",\"type\":\"Vector<PeerBlocked>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Blocked\"},{\"id\":364538944,\"predicate\":\"messages.dialogs\",\"params\":[{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Dialogs\"},{\"id\":1910543603,\"predicate\":\"messages.dialogsSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Dialogs\"},{\"id\":-1938715001,\"predicate\":\"messages.messages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":978610270,\"predicate\":\"messages.messagesSlice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"next_rate\",\"type\":\"flags.0?int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.2?int\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":1694474197,\"predicate\":\"messages.chats\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<Chat>\"}],\"type\":\"messages.Chats\"},{\"id\":-438840932,\"predicate\":\"messages.chatFull\",\"params\":[{\"name\":\"full_chat\",\"type\":\"ChatFull\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatFull\"},{\"id\":-1269012015,\"predicate\":\"messages.affectedHistory\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1474492012,\"predicate\":\"inputMessagesFilterEmpty\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1777752804,\"predicate\":\"inputMessagesFilterPhotos\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1614803355,\"predicate\":\"inputMessagesFilterVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":1458172132,\"predicate\":\"inputMessagesFilterPhotoVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1629621880,\"predicate\":\"inputMessagesFilterDocument\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":2129714567,\"predicate\":\"inputMessagesFilterUrl\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-3644025,\"predicate\":\"inputMessagesFilterGif\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":522914557,\"predicate\":\"updateNewMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1318109142,\"predicate\":\"updateMessageID\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"random_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-1576161051,\"predicate\":\"updateDeleteMessages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1071741569,\"predicate\":\"updateUserTyping\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":-2092401936,\"predicate\":\"updateChatUserTyping\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":125178264,\"predicate\":\"updateChatParticipants\",\"params\":[{\"name\":\"participants\",\"type\":\"ChatParticipants\"}],\"type\":\"Update\"},{\"id\":-440534818,\"predicate\":\"updateUserStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"status\",\"type\":\"UserStatus\"}],\"type\":\"Update\"},{\"id\":-1484486364,\"predicate\":\"updateUserName\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"usernames\",\"type\":\"Vector<Username>\"}],\"type\":\"Update\"},{\"id\":-1519637954,\"predicate\":\"updates.state\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"qts\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"}],\"type\":\"updates.State\"},{\"id\":1567990072,\"predicate\":\"updates.differenceEmpty\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":16030880,\"predicate\":\"updates.difference\",\"params\":[{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"new_encrypted_messages\",\"type\":\"Vector<EncryptedMessage>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"state\",\"type\":\"updates.State\"}],\"type\":\"updates.Difference\"},{\"id\":-1459938943,\"predicate\":\"updates.differenceSlice\",\"params\":[{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"new_encrypted_messages\",\"type\":\"Vector<EncryptedMessage>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"intermediate_state\",\"type\":\"updates.State\"}],\"type\":\"updates.Difference\"},{\"id\":-484987010,\"predicate\":\"updatesTooLong\",\"params\":[],\"type\":\"Updates\"},{\"id\":826001400,\"predicate\":\"updateShortMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":1299050149,\"predicate\":\"updateShortChatMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":2027216577,\"predicate\":\"updateShort\",\"params\":[{\"name\":\"update\",\"type\":\"Update\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1918567619,\"predicate\":\"updatesCombined\",\"params\":[{\"name\":\"updates\",\"type\":\"Vector<Update>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq_start\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1957577280,\"predicate\":\"updates\",\"params\":[{\"name\":\"updates\",\"type\":\"Vector<Update>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1916114267,\"predicate\":\"photos.photos\",\"params\":[{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photos\"},{\"id\":352657236,\"predicate\":\"photos.photosSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photos\"},{\"id\":539045032,\"predicate\":\"photos.photo\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photo\"},{\"id\":157948117,\"predicate\":\"upload.file\",\"params\":[{\"name\":\"type\",\"type\":\"storage.FileType\"},{\"name\":\"mtime\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.File\"},{\"id\":414687501,\"predicate\":\"dcOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"ipv6\",\"type\":\"flags.0?true\"},{\"name\":\"media_only\",\"type\":\"flags.1?true\"},{\"name\":\"tcpo_only\",\"type\":\"flags.2?true\"},{\"name\":\"cdn\",\"type\":\"flags.3?true\"},{\"name\":\"static\",\"type\":\"flags.4?true\"},{\"name\":\"this_port_only\",\"type\":\"flags.5?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"ip_address\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"flags.10?bytes\"}],\"type\":\"DcOption\"},{\"id\":-870702050,\"predicate\":\"config\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"default_p2p_contacts\",\"type\":\"flags.3?true\"},{\"name\":\"preload_featured_stickers\",\"type\":\"flags.4?true\"},{\"name\":\"revoke_pm_inbox\",\"type\":\"flags.6?true\"},{\"name\":\"blocked_mode\",\"type\":\"flags.8?true\"},{\"name\":\"force_try_ipv6\",\"type\":\"flags.14?true\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"test_mode\",\"type\":\"Bool\"},{\"name\":\"this_dc\",\"type\":\"int\"},{\"name\":\"dc_options\",\"type\":\"Vector<DcOption>\"},{\"name\":\"dc_txt_domain_name\",\"type\":\"string\"},{\"name\":\"chat_size_max\",\"type\":\"int\"},{\"name\":\"megagroup_size_max\",\"type\":\"int\"},{\"name\":\"forwarded_count_max\",\"type\":\"int\"},{\"name\":\"online_update_period_ms\",\"type\":\"int\"},{\"name\":\"offline_blur_timeout_ms\",\"type\":\"int\"},{\"name\":\"offline_idle_timeout_ms\",\"type\":\"int\"},{\"name\":\"online_cloud_timeout_ms\",\"type\":\"int\"},{\"name\":\"notify_cloud_delay_ms\",\"type\":\"int\"},{\"name\":\"notify_default_delay_ms\",\"type\":\"int\"},{\"name\":\"push_chat_period_ms\",\"type\":\"int\"},{\"name\":\"push_chat_limit\",\"type\":\"int\"},{\"name\":\"edit_time_limit\",\"type\":\"int\"},{\"name\":\"revoke_time_limit\",\"type\":\"int\"},{\"name\":\"revoke_pm_time_limit\",\"type\":\"int\"},{\"name\":\"rating_e_decay\",\"type\":\"int\"},{\"name\":\"stickers_recent_limit\",\"type\":\"int\"},{\"name\":\"channels_read_media_period\",\"type\":\"int\"},{\"name\":\"tmp_sessions\",\"type\":\"flags.0?int\"},{\"name\":\"call_receive_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_ring_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_connect_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_packet_timeout_ms\",\"type\":\"int\"},{\"name\":\"me_url_prefix\",\"type\":\"string\"},{\"name\":\"autoupdate_url_prefix\",\"type\":\"flags.7?string\"},{\"name\":\"gif_search_username\",\"type\":\"flags.9?string\"},{\"name\":\"venue_search_username\",\"type\":\"flags.10?string\"},{\"name\":\"img_search_username\",\"type\":\"flags.11?string\"},{\"name\":\"static_maps_provider\",\"type\":\"flags.12?string\"},{\"name\":\"caption_length_max\",\"type\":\"int\"},{\"name\":\"message_length_max\",\"type\":\"int\"},{\"name\":\"webfile_dc_id\",\"type\":\"int\"},{\"name\":\"suggested_lang_code\",\"type\":\"flags.2?string\"},{\"name\":\"lang_pack_version\",\"type\":\"flags.2?int\"},{\"name\":\"base_lang_pack_version\",\"type\":\"flags.2?int\"},{\"name\":\"reactions_default\",\"type\":\"flags.15?Reaction\"},{\"name\":\"autologin_token\",\"type\":\"flags.16?string\"}],\"type\":\"Config\"},{\"id\":-1910892683,\"predicate\":\"nearestDc\",\"params\":[{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"this_dc\",\"type\":\"int\"},{\"name\":\"nearest_dc\",\"type\":\"int\"}],\"type\":\"NearestDc\"},{\"id\":-860107216,\"predicate\":\"help.appUpdate\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_not_skip\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"document\",\"type\":\"flags.1?Document\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"sticker\",\"type\":\"flags.3?Document\"}],\"type\":\"help.AppUpdate\"},{\"id\":-1000708810,\"predicate\":\"help.noAppUpdate\",\"params\":[],\"type\":\"help.AppUpdate\"},{\"id\":415997816,\"predicate\":\"help.inviteText\",\"params\":[{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"help.InviteText\"},{\"id\":314359194,\"predicate\":\"updateNewEncryptedMessage\",\"params\":[{\"name\":\"message\",\"type\":\"EncryptedMessage\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":386986326,\"predicate\":\"updateEncryptedChatTyping\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1264392051,\"predicate\":\"updateEncryption\",\"params\":[{\"name\":\"chat\",\"type\":\"EncryptedChat\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":956179895,\"predicate\":\"updateEncryptedMessagesRead\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1417756512,\"predicate\":\"encryptedChatEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"EncryptedChat\"},{\"id\":1722964307,\"predicate\":\"encryptedChatWaiting\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":1223809356,\"predicate\":\"encryptedChatRequested\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a\",\"type\":\"bytes\"}],\"type\":\"EncryptedChat\"},{\"id\":1643173063,\"predicate\":\"encryptedChat\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_or_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":505183301,\"predicate\":\"encryptedChatDiscarded\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"history_deleted\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"EncryptedChat\"},{\"id\":-247351839,\"predicate\":\"inputEncryptedChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputEncryptedChat\"},{\"id\":-1038136962,\"predicate\":\"encryptedFileEmpty\",\"params\":[],\"type\":\"EncryptedFile\"},{\"id\":-1476358952,\"predicate\":\"encryptedFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"long\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"EncryptedFile\"},{\"id\":406307684,\"predicate\":\"inputEncryptedFileEmpty\",\"params\":[],\"type\":\"InputEncryptedFile\"},{\"id\":1690108678,\"predicate\":\"inputEncryptedFileUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"md5_checksum\",\"type\":\"string\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"InputEncryptedFile\"},{\"id\":1511503333,\"predicate\":\"inputEncryptedFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputEncryptedFile\"},{\"id\":-182231723,\"predicate\":\"inputEncryptedFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":-317144808,\"predicate\":\"encryptedMessage\",\"params\":[{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"},{\"name\":\"file\",\"type\":\"EncryptedFile\"}],\"type\":\"EncryptedMessage\"},{\"id\":594758406,\"predicate\":\"encryptedMessageService\",\"params\":[{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"EncryptedMessage\"},{\"id\":-1058912715,\"predicate\":\"messages.dhConfigNotModified\",\"params\":[{\"name\":\"random\",\"type\":\"bytes\"}],\"type\":\"messages.DhConfig\"},{\"id\":740433629,\"predicate\":\"messages.dhConfig\",\"params\":[{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"random\",\"type\":\"bytes\"}],\"type\":\"messages.DhConfig\"},{\"id\":1443858741,\"predicate\":\"messages.sentEncryptedMessage\",\"params\":[{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":-1802240206,\"predicate\":\"messages.sentEncryptedFile\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"file\",\"type\":\"EncryptedFile\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":-95482955,\"predicate\":\"inputFileBig\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"InputFile\"},{\"id\":767652808,\"predicate\":\"inputEncryptedFileBigUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"InputEncryptedFile\"},{\"id\":1037718609,\"predicate\":\"updateChatParticipantAdd\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-483443337,\"predicate\":\"updateChatParticipantDelete\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1906403213,\"predicate\":\"updateDcOptions\",\"params\":[{\"name\":\"dc_options\",\"type\":\"Vector<DcOption>\"}],\"type\":\"Update\"},{\"id\":1530447553,\"predicate\":\"inputMediaUploadedDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"nosound_video\",\"type\":\"flags.3?true\"},{\"name\":\"force_file\",\"type\":\"flags.4?true\"},{\"name\":\"spoiler\",\"type\":\"flags.5?true\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"thumb\",\"type\":\"flags.2?InputFile\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"},{\"name\":\"stickers\",\"type\":\"flags.0?Vector<InputDocument>\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.1?int\"}],\"type\":\"InputMedia\"},{\"id\":860303448,\"predicate\":\"inputMediaDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.2?true\"},{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"},{\"name\":\"query\",\"type\":\"flags.1?string\"}],\"type\":\"InputMedia\"},{\"id\":-1666158377,\"predicate\":\"messageMediaDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"nopremium\",\"type\":\"flags.3?true\"},{\"name\":\"spoiler\",\"type\":\"flags.4?true\"},{\"name\":\"document\",\"type\":\"flags.0?Document\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.2?int\"}],\"type\":\"MessageMedia\"},{\"id\":1928391342,\"predicate\":\"inputDocumentEmpty\",\"params\":[],\"type\":\"InputDocument\"},{\"id\":448771445,\"predicate\":\"inputDocument\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputDocument\"},{\"id\":-1160743548,\"predicate\":\"inputDocumentFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"thumb_size\",\"type\":\"string\"}],\"type\":\"InputFileLocation\"},{\"id\":922273905,\"predicate\":\"documentEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Document\"},{\"id\":-1881881384,\"predicate\":\"document\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"long\"},{\"name\":\"thumbs\",\"type\":\"flags.0?Vector<PhotoSize>\"},{\"name\":\"video_thumbs\",\"type\":\"flags.1?Vector<VideoSize>\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"Document\"},{\"id\":398898678,\"predicate\":\"help.support\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"user\",\"type\":\"User\"}],\"type\":\"help.Support\"},{\"id\":-1613493288,\"predicate\":\"notifyPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"NotifyPeer\"},{\"id\":-1261946036,\"predicate\":\"notifyUsers\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-1073230141,\"predicate\":\"notifyChats\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-1094555409,\"predicate\":\"updateNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"NotifyPeer\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"}],\"type\":\"Update\"},{\"id\":381645902,\"predicate\":\"sendMessageTypingAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-44119819,\"predicate\":\"sendMessageCancelAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-1584933265,\"predicate\":\"sendMessageRecordVideoAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-378127636,\"predicate\":\"sendMessageUploadVideoAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-718310409,\"predicate\":\"sendMessageRecordAudioAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-212740181,\"predicate\":\"sendMessageUploadAudioAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-774682074,\"predicate\":\"sendMessageUploadPhotoAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-1441998364,\"predicate\":\"sendMessageUploadDocumentAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":393186209,\"predicate\":\"sendMessageGeoLocationAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":1653390447,\"predicate\":\"sendMessageChooseContactAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-1290580579,\"predicate\":\"contacts.found\",\"params\":[{\"name\":\"my_results\",\"type\":\"Vector<Peer>\"},{\"name\":\"results\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Found\"},{\"id\":-337352679,\"predicate\":\"updateServiceNotification\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"popup\",\"type\":\"flags.0?true\"},{\"name\":\"inbox_date\",\"type\":\"flags.1?int\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"MessageMedia\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"}],\"type\":\"Update\"},{\"id\":-496024847,\"predicate\":\"userStatusRecently\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":129960444,\"predicate\":\"userStatusLastWeek\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":2011940674,\"predicate\":\"userStatusLastMonth\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":-298113238,\"predicate\":\"updatePrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"PrivacyKey\"},{\"name\":\"rules\",\"type\":\"Vector<PrivacyRule>\"}],\"type\":\"Update\"},{\"id\":1335282456,\"predicate\":\"inputPrivacyKeyStatusTimestamp\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-1137792208,\"predicate\":\"privacyKeyStatusTimestamp\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":218751099,\"predicate\":\"inputPrivacyValueAllowContacts\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":407582158,\"predicate\":\"inputPrivacyValueAllowAll\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":320652927,\"predicate\":\"inputPrivacyValueAllowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":195371015,\"predicate\":\"inputPrivacyValueDisallowContacts\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":-697604407,\"predicate\":\"inputPrivacyValueDisallowAll\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":-1877932953,\"predicate\":\"inputPrivacyValueDisallowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":-123988,\"predicate\":\"privacyValueAllowContacts\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":1698855810,\"predicate\":\"privacyValueAllowAll\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-1198497870,\"predicate\":\"privacyValueAllowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":-125240806,\"predicate\":\"privacyValueDisallowContacts\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-1955338397,\"predicate\":\"privacyValueDisallowAll\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-463335103,\"predicate\":\"privacyValueDisallowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":1352683077,\"predicate\":\"account.privacyRules\",\"params\":[{\"name\":\"rules\",\"type\":\"Vector<PrivacyRule>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.PrivacyRules\"},{\"id\":-1194283041,\"predicate\":\"accountDaysTTL\",\"params\":[{\"name\":\"days\",\"type\":\"int\"}],\"type\":\"AccountDaysTTL\"},{\"id\":88680979,\"predicate\":\"updateUserPhone\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":1815593308,\"predicate\":\"documentAttributeImageSize\",\"params\":[{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"DocumentAttribute\"},{\"id\":297109817,\"predicate\":\"documentAttributeAnimated\",\"params\":[],\"type\":\"DocumentAttribute\"},{\"id\":1662637586,\"predicate\":\"documentAttributeSticker\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"mask\",\"type\":\"flags.1?true\"},{\"name\":\"alt\",\"type\":\"string\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"mask_coords\",\"type\":\"flags.0?MaskCoords\"}],\"type\":\"DocumentAttribute\"},{\"id\":250621158,\"predicate\":\"documentAttributeVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"round_message\",\"type\":\"flags.0?true\"},{\"name\":\"supports_streaming\",\"type\":\"flags.1?true\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"DocumentAttribute\"},{\"id\":-1739392570,\"predicate\":\"documentAttributeAudio\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"voice\",\"type\":\"flags.10?true\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"performer\",\"type\":\"flags.1?string\"},{\"name\":\"waveform\",\"type\":\"flags.2?bytes\"}],\"type\":\"DocumentAttribute\"},{\"id\":358154344,\"predicate\":\"documentAttributeFilename\",\"params\":[{\"name\":\"file_name\",\"type\":\"string\"}],\"type\":\"DocumentAttribute\"},{\"id\":-244016606,\"predicate\":\"messages.stickersNotModified\",\"params\":[],\"type\":\"messages.Stickers\"},{\"id\":816245886,\"predicate\":\"messages.stickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.Stickers\"},{\"id\":313694676,\"predicate\":\"stickerPack\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"documents\",\"type\":\"Vector<long>\"}],\"type\":\"StickerPack\"},{\"id\":-395967805,\"predicate\":\"messages.allStickersNotModified\",\"params\":[],\"type\":\"messages.AllStickers\"},{\"id\":-843329861,\"predicate\":\"messages.allStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSet>\"}],\"type\":\"messages.AllStickers\"},{\"id\":-1667805217,\"predicate\":\"updateReadHistoryInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"still_unread_count\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":791617983,\"predicate\":\"updateReadHistoryOutbox\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-2066640507,\"predicate\":\"messages.affectedMessages\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":2139689491,\"predicate\":\"updateWebPage\",\"params\":[{\"name\":\"webpage\",\"type\":\"WebPage\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-350980120,\"predicate\":\"webPageEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"WebPage\"},{\"id\":-981018084,\"predicate\":\"webPagePending\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"WebPage\"},{\"id\":-392411726,\"predicate\":\"webPage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"display_url\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"type\",\"type\":\"flags.0?string\"},{\"name\":\"site_name\",\"type\":\"flags.1?string\"},{\"name\":\"title\",\"type\":\"flags.2?string\"},{\"name\":\"description\",\"type\":\"flags.3?string\"},{\"name\":\"photo\",\"type\":\"flags.4?Photo\"},{\"name\":\"embed_url\",\"type\":\"flags.5?string\"},{\"name\":\"embed_type\",\"type\":\"flags.5?string\"},{\"name\":\"embed_width\",\"type\":\"flags.6?int\"},{\"name\":\"embed_height\",\"type\":\"flags.6?int\"},{\"name\":\"duration\",\"type\":\"flags.7?int\"},{\"name\":\"author\",\"type\":\"flags.8?string\"},{\"name\":\"document\",\"type\":\"flags.9?Document\"},{\"name\":\"cached_page\",\"type\":\"flags.10?Page\"},{\"name\":\"attributes\",\"type\":\"flags.12?Vector<WebPageAttribute>\"}],\"type\":\"WebPage\"},{\"id\":-1557277184,\"predicate\":\"messageMediaWebPage\",\"params\":[{\"name\":\"webpage\",\"type\":\"WebPage\"}],\"type\":\"MessageMedia\"},{\"id\":-1392388579,\"predicate\":\"authorization\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"current\",\"type\":\"flags.0?true\"},{\"name\":\"official_app\",\"type\":\"flags.1?true\"},{\"name\":\"password_pending\",\"type\":\"flags.2?true\"},{\"name\":\"encrypted_requests_disabled\",\"type\":\"flags.3?true\"},{\"name\":\"call_requests_disabled\",\"type\":\"flags.4?true\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"device_model\",\"type\":\"string\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"system_version\",\"type\":\"string\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"app_name\",\"type\":\"string\"},{\"name\":\"app_version\",\"type\":\"string\"},{\"name\":\"date_created\",\"type\":\"int\"},{\"name\":\"date_active\",\"type\":\"int\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"region\",\"type\":\"string\"}],\"type\":\"Authorization\"},{\"id\":1275039392,\"predicate\":\"account.authorizations\",\"params\":[{\"name\":\"authorization_ttl_days\",\"type\":\"int\"},{\"name\":\"authorizations\",\"type\":\"Vector<Authorization>\"}],\"type\":\"account.Authorizations\"},{\"id\":-1787080453,\"predicate\":\"account.password\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_recovery\",\"type\":\"flags.0?true\"},{\"name\":\"has_secure_values\",\"type\":\"flags.1?true\"},{\"name\":\"has_password\",\"type\":\"flags.2?true\"},{\"name\":\"current_algo\",\"type\":\"flags.2?PasswordKdfAlgo\"},{\"name\":\"srp_B\",\"type\":\"flags.2?bytes\"},{\"name\":\"srp_id\",\"type\":\"flags.2?long\"},{\"name\":\"hint\",\"type\":\"flags.3?string\"},{\"name\":\"email_unconfirmed_pattern\",\"type\":\"flags.4?string\"},{\"name\":\"new_algo\",\"type\":\"PasswordKdfAlgo\"},{\"name\":\"new_secure_algo\",\"type\":\"SecurePasswordKdfAlgo\"},{\"name\":\"secure_random\",\"type\":\"bytes\"},{\"name\":\"pending_reset_date\",\"type\":\"flags.5?int\"},{\"name\":\"login_email_pattern\",\"type\":\"flags.6?string\"}],\"type\":\"account.Password\"},{\"id\":-1705233435,\"predicate\":\"account.passwordSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"email\",\"type\":\"flags.0?string\"},{\"name\":\"secure_settings\",\"type\":\"flags.1?SecureSecretSettings\"}],\"type\":\"account.PasswordSettings\"},{\"id\":-1036572727,\"predicate\":\"account.passwordInputSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"new_algo\",\"type\":\"flags.0?PasswordKdfAlgo\"},{\"name\":\"new_password_hash\",\"type\":\"flags.0?bytes\"},{\"name\":\"hint\",\"type\":\"flags.0?string\"},{\"name\":\"email\",\"type\":\"flags.1?string\"},{\"name\":\"new_secure_settings\",\"type\":\"flags.2?SecureSecretSettings\"}],\"type\":\"account.PasswordInputSettings\"},{\"id\":326715557,\"predicate\":\"auth.passwordRecovery\",\"params\":[{\"name\":\"email_pattern\",\"type\":\"string\"}],\"type\":\"auth.PasswordRecovery\"},{\"id\":-1052959727,\"predicate\":\"inputMediaVenue\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":784356159,\"predicate\":\"messageMediaVenue\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":-1551583367,\"predicate\":\"receivedNotifyMessage\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"flags\",\"type\":\"int\"}],\"type\":\"ReceivedNotifyMessage\"},{\"id\":179611673,\"predicate\":\"chatInviteExported\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.0?true\"},{\"name\":\"permanent\",\"type\":\"flags.5?true\"},{\"name\":\"request_needed\",\"type\":\"flags.6?true\"},{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"start_date\",\"type\":\"flags.4?int\"},{\"name\":\"expire_date\",\"type\":\"flags.1?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.2?int\"},{\"name\":\"usage\",\"type\":\"flags.3?int\"},{\"name\":\"requested\",\"type\":\"flags.7?int\"},{\"name\":\"title\",\"type\":\"flags.8?string\"}],\"type\":\"ExportedChatInvite\"},{\"id\":1516793212,\"predicate\":\"chatInviteAlready\",\"params\":[{\"name\":\"chat\",\"type\":\"Chat\"}],\"type\":\"ChatInvite\"},{\"id\":806110401,\"predicate\":\"chatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"flags.0?true\"},{\"name\":\"broadcast\",\"type\":\"flags.1?true\"},{\"name\":\"public\",\"type\":\"flags.2?true\"},{\"name\":\"megagroup\",\"type\":\"flags.3?true\"},{\"name\":\"request_needed\",\"type\":\"flags.6?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"about\",\"type\":\"flags.5?string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"flags.4?Vector<User>\"}],\"type\":\"ChatInvite\"},{\"id\":51520707,\"predicate\":\"messageActionChatJoinedByLink\",\"params\":[{\"name\":\"inviter_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":1757493555,\"predicate\":\"updateReadMessagesContents\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-4838507,\"predicate\":\"inputStickerSetEmpty\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":-1645763991,\"predicate\":\"inputStickerSetID\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputStickerSet\"},{\"id\":-2044933984,\"predicate\":\"inputStickerSetShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"InputStickerSet\"},{\"id\":768691932,\"predicate\":\"stickerSet\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"archived\",\"type\":\"flags.1?true\"},{\"name\":\"official\",\"type\":\"flags.2?true\"},{\"name\":\"masks\",\"type\":\"flags.3?true\"},{\"name\":\"animated\",\"type\":\"flags.5?true\"},{\"name\":\"videos\",\"type\":\"flags.6?true\"},{\"name\":\"emojis\",\"type\":\"flags.7?true\"},{\"name\":\"installed_date\",\"type\":\"flags.0?int\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"thumbs\",\"type\":\"flags.4?Vector<PhotoSize>\"},{\"name\":\"thumb_dc_id\",\"type\":\"flags.4?int\"},{\"name\":\"thumb_version\",\"type\":\"flags.4?int\"},{\"name\":\"thumb_document_id\",\"type\":\"flags.8?long\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"StickerSet\"},{\"id\":1846886166,\"predicate\":\"messages.stickerSet\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"keywords\",\"type\":\"Vector<StickerKeyword>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.StickerSet\"},{\"id\":-1885878744,\"predicate\":\"user\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"self\",\"type\":\"flags.10?true\"},{\"name\":\"contact\",\"type\":\"flags.11?true\"},{\"name\":\"mutual_contact\",\"type\":\"flags.12?true\"},{\"name\":\"deleted\",\"type\":\"flags.13?true\"},{\"name\":\"bot\",\"type\":\"flags.14?true\"},{\"name\":\"bot_chat_history\",\"type\":\"flags.15?true\"},{\"name\":\"bot_nochats\",\"type\":\"flags.16?true\"},{\"name\":\"verified\",\"type\":\"flags.17?true\"},{\"name\":\"restricted\",\"type\":\"flags.18?true\"},{\"name\":\"min\",\"type\":\"flags.20?true\"},{\"name\":\"bot_inline_geo\",\"type\":\"flags.21?true\"},{\"name\":\"support\",\"type\":\"flags.23?true\"},{\"name\":\"scam\",\"type\":\"flags.24?true\"},{\"name\":\"apply_min_photo\",\"type\":\"flags.25?true\"},{\"name\":\"fake\",\"type\":\"flags.26?true\"},{\"name\":\"bot_attach_menu\",\"type\":\"flags.27?true\"},{\"name\":\"premium\",\"type\":\"flags.28?true\"},{\"name\":\"attach_menu_enabled\",\"type\":\"flags.29?true\"},{\"name\":\"flags2\",\"type\":\"#\"},{\"name\":\"bot_can_edit\",\"type\":\"flags2.1?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"flags.0?long\"},{\"name\":\"first_name\",\"type\":\"flags.1?string\"},{\"name\":\"last_name\",\"type\":\"flags.2?string\"},{\"name\":\"username\",\"type\":\"flags.3?string\"},{\"name\":\"phone\",\"type\":\"flags.4?string\"},{\"name\":\"photo\",\"type\":\"flags.5?UserProfilePhoto\"},{\"name\":\"status\",\"type\":\"flags.6?UserStatus\"},{\"name\":\"bot_info_version\",\"type\":\"flags.14?int\"},{\"name\":\"restriction_reason\",\"type\":\"flags.18?Vector<RestrictionReason>\"},{\"name\":\"bot_inline_placeholder\",\"type\":\"flags.19?string\"},{\"name\":\"lang_code\",\"type\":\"flags.22?string\"},{\"name\":\"emoji_status\",\"type\":\"flags.30?EmojiStatus\"},{\"name\":\"usernames\",\"type\":\"flags2.0?Vector<Username>\"}],\"type\":\"User\"},{\"id\":-1032140601,\"predicate\":\"botCommand\",\"params\":[{\"name\":\"command\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"BotCommand\"},{\"id\":-1892676777,\"predicate\":\"botInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"flags.0?long\"},{\"name\":\"description\",\"type\":\"flags.1?string\"},{\"name\":\"description_photo\",\"type\":\"flags.4?Photo\"},{\"name\":\"description_document\",\"type\":\"flags.5?Document\"},{\"name\":\"commands\",\"type\":\"flags.2?Vector<BotCommand>\"},{\"name\":\"menu_button\",\"type\":\"flags.3?BotMenuButton\"}],\"type\":\"BotInfo\"},{\"id\":-1560655744,\"predicate\":\"keyboardButton\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":2002815875,\"predicate\":\"keyboardButtonRow\",\"params\":[{\"name\":\"buttons\",\"type\":\"Vector<KeyboardButton>\"}],\"type\":\"KeyboardButtonRow\"},{\"id\":-1606526075,\"predicate\":\"replyKeyboardHide\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"}],\"type\":\"ReplyMarkup\"},{\"id\":-2035021048,\"predicate\":\"replyKeyboardForceReply\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"single_use\",\"type\":\"flags.1?true\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"},{\"name\":\"placeholder\",\"type\":\"flags.3?string\"}],\"type\":\"ReplyMarkup\"},{\"id\":-2049074735,\"predicate\":\"replyKeyboardMarkup\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"resize\",\"type\":\"flags.0?true\"},{\"name\":\"single_use\",\"type\":\"flags.1?true\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"},{\"name\":\"persistent\",\"type\":\"flags.4?true\"},{\"name\":\"rows\",\"type\":\"Vector<KeyboardButtonRow>\"},{\"name\":\"placeholder\",\"type\":\"flags.3?string\"}],\"type\":\"ReplyMarkup\"},{\"id\":-571955892,\"predicate\":\"inputPeerUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-233744186,\"predicate\":\"inputUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputUser\"},{\"id\":-1148011883,\"predicate\":\"messageEntityUnknown\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-100378723,\"predicate\":\"messageEntityMention\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1868782349,\"predicate\":\"messageEntityHashtag\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1827637959,\"predicate\":\"messageEntityBotCommand\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1859134776,\"predicate\":\"messageEntityUrl\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1692693954,\"predicate\":\"messageEntityEmail\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1117713463,\"predicate\":\"messageEntityBold\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-2106619040,\"predicate\":\"messageEntityItalic\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":681706865,\"predicate\":\"messageEntityCode\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1938967520,\"predicate\":\"messageEntityPre\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"language\",\"type\":\"string\"}],\"type\":\"MessageEntity\"},{\"id\":1990644519,\"predicate\":\"messageEntityTextUrl\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"MessageEntity\"},{\"id\":-1877614335,\"predicate\":\"updateShortSentMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"media\",\"type\":\"flags.9?MessageMedia\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":-292807034,\"predicate\":\"inputChannelEmpty\",\"params\":[],\"type\":\"InputChannel\"},{\"id\":-212145112,\"predicate\":\"inputChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputChannel\"},{\"id\":-1566230754,\"predicate\":\"peerChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":666680316,\"predicate\":\"inputPeerChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-2094689180,\"predicate\":\"channel\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.2?true\"},{\"name\":\"broadcast\",\"type\":\"flags.5?true\"},{\"name\":\"verified\",\"type\":\"flags.7?true\"},{\"name\":\"megagroup\",\"type\":\"flags.8?true\"},{\"name\":\"restricted\",\"type\":\"flags.9?true\"},{\"name\":\"signatures\",\"type\":\"flags.11?true\"},{\"name\":\"min\",\"type\":\"flags.12?true\"},{\"name\":\"scam\",\"type\":\"flags.19?true\"},{\"name\":\"has_link\",\"type\":\"flags.20?true\"},{\"name\":\"has_geo\",\"type\":\"flags.21?true\"},{\"name\":\"slowmode_enabled\",\"type\":\"flags.22?true\"},{\"name\":\"call_active\",\"type\":\"flags.23?true\"},{\"name\":\"call_not_empty\",\"type\":\"flags.24?true\"},{\"name\":\"fake\",\"type\":\"flags.25?true\"},{\"name\":\"gigagroup\",\"type\":\"flags.26?true\"},{\"name\":\"noforwards\",\"type\":\"flags.27?true\"},{\"name\":\"join_to_send\",\"type\":\"flags.28?true\"},{\"name\":\"join_request\",\"type\":\"flags.29?true\"},{\"name\":\"forum\",\"type\":\"flags.30?true\"},{\"name\":\"flags2\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"flags.13?long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"username\",\"type\":\"flags.6?string\"},{\"name\":\"photo\",\"type\":\"ChatPhoto\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"restriction_reason\",\"type\":\"flags.9?Vector<RestrictionReason>\"},{\"name\":\"admin_rights\",\"type\":\"flags.14?ChatAdminRights\"},{\"name\":\"banned_rights\",\"type\":\"flags.15?ChatBannedRights\"},{\"name\":\"default_banned_rights\",\"type\":\"flags.18?ChatBannedRights\"},{\"name\":\"participants_count\",\"type\":\"flags.17?int\"},{\"name\":\"usernames\",\"type\":\"flags2.0?Vector<Username>\"}],\"type\":\"Chat\"},{\"id\":399807445,\"predicate\":\"channelForbidden\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"broadcast\",\"type\":\"flags.5?true\"},{\"name\":\"megagroup\",\"type\":\"flags.8?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"until_date\",\"type\":\"flags.16?int\"}],\"type\":\"Chat\"},{\"id\":2131196633,\"predicate\":\"contacts.resolvedPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":-231385849,\"predicate\":\"channelFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_view_participants\",\"type\":\"flags.3?true\"},{\"name\":\"can_set_username\",\"type\":\"flags.6?true\"},{\"name\":\"can_set_stickers\",\"type\":\"flags.7?true\"},{\"name\":\"hidden_prehistory\",\"type\":\"flags.10?true\"},{\"name\":\"can_set_location\",\"type\":\"flags.16?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.19?true\"},{\"name\":\"can_view_stats\",\"type\":\"flags.20?true\"},{\"name\":\"blocked\",\"type\":\"flags.22?true\"},{\"name\":\"flags2\",\"type\":\"#\"},{\"name\":\"can_delete_channel\",\"type\":\"flags2.0?true\"},{\"name\":\"antispam\",\"type\":\"flags2.1?true\"},{\"name\":\"participants_hidden\",\"type\":\"flags2.2?true\"},{\"name\":\"translations_disabled\",\"type\":\"flags2.3?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"participants_count\",\"type\":\"flags.0?int\"},{\"name\":\"admins_count\",\"type\":\"flags.1?int\"},{\"name\":\"kicked_count\",\"type\":\"flags.2?int\"},{\"name\":\"banned_count\",\"type\":\"flags.2?int\"},{\"name\":\"online_count\",\"type\":\"flags.13?int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"chat_photo\",\"type\":\"Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"exported_invite\",\"type\":\"flags.23?ExportedChatInvite\"},{\"name\":\"bot_info\",\"type\":\"Vector<BotInfo>\"},{\"name\":\"migrated_from_chat_id\",\"type\":\"flags.4?long\"},{\"name\":\"migrated_from_max_id\",\"type\":\"flags.4?int\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.5?int\"},{\"name\":\"stickerset\",\"type\":\"flags.8?StickerSet\"},{\"name\":\"available_min_id\",\"type\":\"flags.9?int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"linked_chat_id\",\"type\":\"flags.14?long\"},{\"name\":\"location\",\"type\":\"flags.15?ChannelLocation\"},{\"name\":\"slowmode_seconds\",\"type\":\"flags.17?int\"},{\"name\":\"slowmode_next_send_date\",\"type\":\"flags.18?int\"},{\"name\":\"stats_dc\",\"type\":\"flags.12?int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"call\",\"type\":\"flags.21?InputGroupCall\"},{\"name\":\"ttl_period\",\"type\":\"flags.24?int\"},{\"name\":\"pending_suggestions\",\"type\":\"flags.25?Vector<string>\"},{\"name\":\"groupcall_default_join_as\",\"type\":\"flags.26?Peer\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.27?string\"},{\"name\":\"requests_pending\",\"type\":\"flags.28?int\"},{\"name\":\"recent_requesters\",\"type\":\"flags.28?Vector<long>\"},{\"name\":\"default_send_as\",\"type\":\"flags.29?Peer\"},{\"name\":\"available_reactions\",\"type\":\"flags.30?ChatReactions\"}],\"type\":\"ChatFull\"},{\"id\":182649427,\"predicate\":\"messageRange\",\"params\":[{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"MessageRange\"},{\"id\":-948520370,\"predicate\":\"messages.channelMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.2?int\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"topics\",\"type\":\"Vector<ForumTopic>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":-1781355374,\"predicate\":\"messageActionChannelCreate\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":277713951,\"predicate\":\"updateChannelTooLong\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"pts\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":1666927625,\"predicate\":\"updateChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":1656358105,\"predicate\":\"updateNewChannelMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1842450928,\"predicate\":\"updateReadChannelInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"still_unread_count\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1020437742,\"predicate\":\"updateDeleteChannelMessages\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-232346616,\"predicate\":\"updateChannelMessageViews\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1041346555,\"predicate\":\"updates.channelDifferenceEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1531132162,\"predicate\":\"updates.channelDifferenceTooLong\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"},{\"name\":\"dialog\",\"type\":\"Dialog\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":543450958,\"predicate\":\"updates.channelDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"},{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1798033689,\"predicate\":\"channelMessagesFilterEmpty\",\"params\":[],\"type\":\"ChannelMessagesFilter\"},{\"id\":-847783593,\"predicate\":\"channelMessagesFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_new_messages\",\"type\":\"flags.1?true\"},{\"name\":\"ranges\",\"type\":\"Vector<MessageRange>\"}],\"type\":\"ChannelMessagesFilter\"},{\"id\":-1072953408,\"predicate\":\"channelParticipant\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChannelParticipant\"},{\"id\":900251559,\"predicate\":\"channelParticipantSelf\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_request\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChannelParticipant\"},{\"id\":803602899,\"predicate\":\"channelParticipantCreator\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"flags.0?string\"}],\"type\":\"ChannelParticipant\"},{\"id\":-566281095,\"predicate\":\"channelParticipantsRecent\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1268741783,\"predicate\":\"channelParticipantsAdmins\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1548400251,\"predicate\":\"channelParticipantsKicked\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1699676497,\"predicate\":\"channels.channelParticipants\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"Vector<ChannelParticipant>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.ChannelParticipants\"},{\"id\":-541588713,\"predicate\":\"channels.channelParticipant\",\"params\":[{\"name\":\"participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.ChannelParticipant\"},{\"id\":-462696732,\"predicate\":\"chatParticipantCreator\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"ChatParticipant\"},{\"id\":-1600962725,\"predicate\":\"chatParticipantAdmin\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChatParticipant\"},{\"id\":-674602590,\"predicate\":\"updateChatParticipantAdmin\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"is_admin\",\"type\":\"Bool\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-519864430,\"predicate\":\"messageActionChatMigrateTo\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-365344535,\"predicate\":\"messageActionChannelMigrateFrom\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-1328445861,\"predicate\":\"channelParticipantsBots\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":2013922064,\"predicate\":\"help.termsOfService\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"popup\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"DataJSON\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"min_age_confirm\",\"type\":\"flags.1?int\"}],\"type\":\"help.TermsOfService\"},{\"id\":1753886890,\"predicate\":\"updateNewStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"messages.StickerSet\"}],\"type\":\"Update\"},{\"id\":196268545,\"predicate\":\"updateStickerSetsOrder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"},{\"name\":\"order\",\"type\":\"Vector<long>\"}],\"type\":\"Update\"},{\"id\":834816008,\"predicate\":\"updateStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"}],\"type\":\"Update\"},{\"id\":-402498398,\"predicate\":\"messages.savedGifsNotModified\",\"params\":[],\"type\":\"messages.SavedGifs\"},{\"id\":-2069878259,\"predicate\":\"messages.savedGifs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"gifs\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.SavedGifs\"},{\"id\":-1821035490,\"predicate\":\"updateSavedGifs\",\"params\":[],\"type\":\"Update\"},{\"id\":864077702,\"predicate\":\"inputBotInlineMessageMediaAuto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":1036876423,\"predicate\":\"inputBotInlineMessageText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-2000710887,\"predicate\":\"inputBotInlineResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"url\",\"type\":\"flags.3?string\"},{\"name\":\"thumb\",\"type\":\"flags.4?InputWebDocument\"},{\"name\":\"content\",\"type\":\"flags.5?InputWebDocument\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":1984755728,\"predicate\":\"botInlineMessageMediaAuto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1937807902,\"predicate\":\"botInlineMessageText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":295067450,\"predicate\":\"botInlineResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"url\",\"type\":\"flags.3?string\"},{\"name\":\"thumb\",\"type\":\"flags.4?WebDocument\"},{\"name\":\"content\",\"type\":\"flags.5?WebDocument\"},{\"name\":\"send_message\",\"type\":\"BotInlineMessage\"}],\"type\":\"BotInlineResult\"},{\"id\":-534646026,\"predicate\":\"messages.botResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gallery\",\"type\":\"flags.0?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"next_offset\",\"type\":\"flags.1?string\"},{\"name\":\"switch_pm\",\"type\":\"flags.2?InlineBotSwitchPM\"},{\"name\":\"switch_webview\",\"type\":\"flags.3?InlineBotWebView\"},{\"name\":\"results\",\"type\":\"Vector<BotInlineResult>\"},{\"name\":\"cache_time\",\"type\":\"int\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.BotResults\"},{\"id\":1232025500,\"predicate\":\"updateBotInlineQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"geo\",\"type\":\"flags.0?GeoPoint\"},{\"name\":\"peer_type\",\"type\":\"flags.1?InlineQueryPeerType\"},{\"name\":\"offset\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":317794823,\"predicate\":\"updateBotInlineSend\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"geo\",\"type\":\"flags.0?GeoPoint\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"msg_id\",\"type\":\"flags.1?InputBotInlineMessageID\"}],\"type\":\"Update\"},{\"id\":1358283666,\"predicate\":\"inputMessagesFilterVoice\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":928101534,\"predicate\":\"inputMessagesFilterMusic\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1107622874,\"predicate\":\"inputPrivacyKeyChatInvite\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1343122938,\"predicate\":\"privacyKeyChatInvite\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1571494644,\"predicate\":\"exportedMessageLink\",\"params\":[{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"html\",\"type\":\"string\"}],\"type\":\"ExportedMessageLink\"},{\"id\":1601666510,\"predicate\":\"messageFwdHeader\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"imported\",\"type\":\"flags.7?true\"},{\"name\":\"from_id\",\"type\":\"flags.0?Peer\"},{\"name\":\"from_name\",\"type\":\"flags.5?string\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"channel_post\",\"type\":\"flags.2?int\"},{\"name\":\"post_author\",\"type\":\"flags.3?string\"},{\"name\":\"saved_from_peer\",\"type\":\"flags.4?Peer\"},{\"name\":\"saved_from_msg_id\",\"type\":\"flags.4?int\"},{\"name\":\"psa_type\",\"type\":\"flags.6?string\"}],\"type\":\"MessageFwdHeader\"},{\"id\":457133559,\"predicate\":\"updateEditChannelMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1799538451,\"predicate\":\"messageActionPinMessage\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":1923290508,\"predicate\":\"auth.codeTypeSms\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":1948046307,\"predicate\":\"auth.codeTypeCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":577556219,\"predicate\":\"auth.codeTypeFlashCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":1035688326,\"predicate\":\"auth.sentCodeTypeApp\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1073693790,\"predicate\":\"auth.sentCodeTypeSms\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":1398007207,\"predicate\":\"auth.sentCodeTypeCall\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1425815847,\"predicate\":\"auth.sentCodeTypeFlashCall\",\"params\":[{\"name\":\"pattern\",\"type\":\"string\"}],\"type\":\"auth.SentCodeType\"},{\"id\":629866245,\"predicate\":\"keyboardButtonUrl\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":901503851,\"predicate\":\"keyboardButtonCallback\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requires_password\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"KeyboardButton\"},{\"id\":-1318425559,\"predicate\":\"keyboardButtonRequestPhone\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-59151553,\"predicate\":\"keyboardButtonRequestGeoLocation\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1816527947,\"predicate\":\"keyboardButtonSwitchInline\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"same_peer\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"peer_types\",\"type\":\"flags.1?Vector<InlineQueryPeerType>\"}],\"type\":\"KeyboardButton\"},{\"id\":1218642516,\"predicate\":\"replyInlineMarkup\",\"params\":[{\"name\":\"rows\",\"type\":\"Vector<KeyboardButtonRow>\"}],\"type\":\"ReplyMarkup\"},{\"id\":911761060,\"predicate\":\"messages.botCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"alert\",\"type\":\"flags.1?true\"},{\"name\":\"has_url\",\"type\":\"flags.3?true\"},{\"name\":\"native_ui\",\"type\":\"flags.4?true\"},{\"name\":\"message\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"cache_time\",\"type\":\"int\"}],\"type\":\"messages.BotCallbackAnswer\"},{\"id\":-1177566067,\"predicate\":\"updateBotCallbackQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"chat_instance\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"game_short_name\",\"type\":\"flags.1?string\"}],\"type\":\"Update\"},{\"id\":649453030,\"predicate\":\"messages.messageEditData\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"caption\",\"type\":\"flags.0?true\"}],\"type\":\"messages.MessageEditData\"},{\"id\":-469536605,\"predicate\":\"updateEditMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1768777083,\"predicate\":\"inputBotInlineMessageMediaGeo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":1098628881,\"predicate\":\"inputBotInlineMessageMediaVenue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-1494368259,\"predicate\":\"inputBotInlineMessageMediaContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":85477117,\"predicate\":\"botInlineMessageMediaGeo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1970903652,\"predicate\":\"botInlineMessageMediaVenue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":416402882,\"predicate\":\"botInlineMessageMediaContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1462213465,\"predicate\":\"inputBotInlineResultPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"InputPhoto\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":-459324,\"predicate\":\"inputBotInlineResultDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"document\",\"type\":\"InputDocument\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":400266251,\"predicate\":\"botInlineMediaResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?Photo\"},{\"name\":\"document\",\"type\":\"flags.1?Document\"},{\"name\":\"title\",\"type\":\"flags.2?string\"},{\"name\":\"description\",\"type\":\"flags.3?string\"},{\"name\":\"send_message\",\"type\":\"BotInlineMessage\"}],\"type\":\"BotInlineResult\"},{\"id\":-1995686519,\"predicate\":\"inputBotInlineMessageID\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputBotInlineMessageID\"},{\"id\":1763610706,\"predicate\":\"updateInlineBotCallbackQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"msg_id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"chat_instance\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"game_short_name\",\"type\":\"flags.1?string\"}],\"type\":\"Update\"},{\"id\":1008755359,\"predicate\":\"inlineBotSwitchPM\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"InlineBotSwitchPM\"},{\"id\":863093588,\"predicate\":\"messages.peerDialogs\",\"params\":[{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"state\",\"type\":\"updates.State\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-305282981,\"predicate\":\"topPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"rating\",\"type\":\"double\"}],\"type\":\"TopPeer\"},{\"id\":-1419371685,\"predicate\":\"topPeerCategoryBotsPM\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":344356834,\"predicate\":\"topPeerCategoryBotsInline\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":104314861,\"predicate\":\"topPeerCategoryCorrespondents\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-1122524854,\"predicate\":\"topPeerCategoryGroups\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":371037736,\"predicate\":\"topPeerCategoryChannels\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-75283823,\"predicate\":\"topPeerCategoryPeers\",\"params\":[{\"name\":\"category\",\"type\":\"TopPeerCategory\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"peers\",\"type\":\"Vector<TopPeer>\"}],\"type\":\"TopPeerCategoryPeers\"},{\"id\":-567906571,\"predicate\":\"contacts.topPeersNotModified\",\"params\":[],\"type\":\"contacts.TopPeers\"},{\"id\":1891070632,\"predicate\":\"contacts.topPeers\",\"params\":[{\"name\":\"categories\",\"type\":\"Vector<TopPeerCategoryPeers>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.TopPeers\"},{\"id\":-595914432,\"predicate\":\"messageEntityMentionName\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageEntity\"},{\"id\":546203849,\"predicate\":\"inputMessageEntityMentionName\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"MessageEntity\"},{\"id\":975236280,\"predicate\":\"inputMessagesFilterChatPhotos\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1218471511,\"predicate\":\"updateReadChannelOutbox\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":457829485,\"predicate\":\"updateDraftMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"draft\",\"type\":\"DraftMessage\"}],\"type\":\"Update\"},{\"id\":453805082,\"predicate\":\"draftMessageEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"date\",\"type\":\"flags.0?int\"}],\"type\":\"DraftMessage\"},{\"id\":-40996577,\"predicate\":\"draftMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"DraftMessage\"},{\"id\":-1615153660,\"predicate\":\"messageActionHistoryClear\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-958657434,\"predicate\":\"messages.featuredStickersNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":-1103615738,\"predicate\":\"messages.featuredStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"premium\",\"type\":\"flags.0?true\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"},{\"name\":\"unread\",\"type\":\"Vector<long>\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":1461528386,\"predicate\":\"updateReadFeaturedStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":186120336,\"predicate\":\"messages.recentStickersNotModified\",\"params\":[],\"type\":\"messages.RecentStickers\"},{\"id\":-1999405994,\"predicate\":\"messages.recentStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"},{\"name\":\"dates\",\"type\":\"Vector<int>\"}],\"type\":\"messages.RecentStickers\"},{\"id\":-1706939360,\"predicate\":\"updateRecentStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":1338747336,\"predicate\":\"messages.archivedStickers\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.ArchivedStickers\"},{\"id\":946083368,\"predicate\":\"messages.stickerSetInstallResultSuccess\",\"params\":[],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":904138920,\"predicate\":\"messages.stickerSetInstallResultArchive\",\"params\":[{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":1678812626,\"predicate\":\"stickerSetCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"cover\",\"type\":\"Document\"}],\"type\":\"StickerSetCovered\"},{\"id\":-1574314746,\"predicate\":\"updateConfig\",\"params\":[],\"type\":\"Update\"},{\"id\":861169551,\"predicate\":\"updatePtsChanged\",\"params\":[],\"type\":\"Update\"},{\"id\":-440664550,\"predicate\":\"inputMediaPhotoExternal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.1?true\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":-78455655,\"predicate\":\"inputMediaDocumentExternal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.1?true\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":872932635,\"predicate\":\"stickerSetMultiCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"covers\",\"type\":\"Vector<Document>\"}],\"type\":\"StickerSetCovered\"},{\"id\":-1361650766,\"predicate\":\"maskCoords\",\"params\":[{\"name\":\"n\",\"type\":\"int\"},{\"name\":\"x\",\"type\":\"double\"},{\"name\":\"y\",\"type\":\"double\"},{\"name\":\"zoom\",\"type\":\"double\"}],\"type\":\"MaskCoords\"},{\"id\":-1744710921,\"predicate\":\"documentAttributeHasStickers\",\"params\":[],\"type\":\"DocumentAttribute\"},{\"id\":1251549527,\"predicate\":\"inputStickeredMediaPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"InputStickeredMedia\"},{\"id\":70813275,\"predicate\":\"inputStickeredMediaDocument\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"}],\"type\":\"InputStickeredMedia\"},{\"id\":-1107729093,\"predicate\":\"game\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"document\",\"type\":\"flags.0?Document\"}],\"type\":\"Game\"},{\"id\":1336154098,\"predicate\":\"inputBotInlineResultGame\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":1262639204,\"predicate\":\"inputBotInlineMessageGame\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-38694904,\"predicate\":\"messageMediaGame\",\"params\":[{\"name\":\"game\",\"type\":\"Game\"}],\"type\":\"MessageMedia\"},{\"id\":-750828557,\"predicate\":\"inputMediaGame\",\"params\":[{\"name\":\"id\",\"type\":\"InputGame\"}],\"type\":\"InputMedia\"},{\"id\":53231223,\"predicate\":\"inputGameID\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputGame\"},{\"id\":-1020139510,\"predicate\":\"inputGameShortName\",\"params\":[{\"name\":\"bot_id\",\"type\":\"InputUser\"},{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"InputGame\"},{\"id\":1358175439,\"predicate\":\"keyboardButtonGame\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1834538890,\"predicate\":\"messageActionGameScore\",\"params\":[{\"name\":\"game_id\",\"type\":\"long\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":1940093419,\"predicate\":\"highScore\",\"params\":[{\"name\":\"pos\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"HighScore\"},{\"id\":-1707344487,\"predicate\":\"messages.highScores\",\"params\":[{\"name\":\"scores\",\"type\":\"Vector<HighScore>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.HighScores\"},{\"id\":1258196845,\"predicate\":\"updates.differenceTooLong\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":791390623,\"predicate\":\"updateChannelWebPage\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"webpage\",\"type\":\"WebPage\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1663561404,\"predicate\":\"messages.chatsSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"}],\"type\":\"messages.Chats\"},{\"id\":-599948721,\"predicate\":\"textEmpty\",\"params\":[],\"type\":\"RichText\"},{\"id\":1950782688,\"predicate\":\"textPlain\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":1730456516,\"predicate\":\"textBold\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-653089380,\"predicate\":\"textItalic\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-1054465340,\"predicate\":\"textUnderline\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-1678197867,\"predicate\":\"textStrike\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":1816074681,\"predicate\":\"textFixed\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":1009288385,\"predicate\":\"textUrl\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"}],\"type\":\"RichText\"},{\"id\":-564523562,\"predicate\":\"textEmail\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":2120376535,\"predicate\":\"textConcat\",\"params\":[{\"name\":\"texts\",\"type\":\"Vector<RichText>\"}],\"type\":\"RichText\"},{\"id\":324435594,\"predicate\":\"pageBlockUnsupported\",\"params\":[],\"type\":\"PageBlock\"},{\"id\":1890305021,\"predicate\":\"pageBlockTitle\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1879401953,\"predicate\":\"pageBlockSubtitle\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1162877472,\"predicate\":\"pageBlockAuthorDate\",\"params\":[{\"name\":\"author\",\"type\":\"RichText\"},{\"name\":\"published_date\",\"type\":\"int\"}],\"type\":\"PageBlock\"},{\"id\":-1076861716,\"predicate\":\"pageBlockHeader\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-248793375,\"predicate\":\"pageBlockSubheader\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":1182402406,\"predicate\":\"pageBlockParagraph\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1066346178,\"predicate\":\"pageBlockPreformatted\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"language\",\"type\":\"string\"}],\"type\":\"PageBlock\"},{\"id\":1216809369,\"predicate\":\"pageBlockFooter\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-618614392,\"predicate\":\"pageBlockDivider\",\"params\":[],\"type\":\"PageBlock\"},{\"id\":-837994576,\"predicate\":\"pageBlockAnchor\",\"params\":[{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"PageBlock\"},{\"id\":-454524911,\"predicate\":\"pageBlockList\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageListItem>\"}],\"type\":\"PageBlock\"},{\"id\":641563686,\"predicate\":\"pageBlockBlockquote\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"caption\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":1329878739,\"predicate\":\"pageBlockPullquote\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"caption\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":391759200,\"predicate\":\"pageBlockPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"},{\"name\":\"url\",\"type\":\"flags.0?string\"},{\"name\":\"webpage_id\",\"type\":\"flags.0?long\"}],\"type\":\"PageBlock\"},{\"id\":2089805750,\"predicate\":\"pageBlockVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"autoplay\",\"type\":\"flags.0?true\"},{\"name\":\"loop\",\"type\":\"flags.1?true\"},{\"name\":\"video_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":972174080,\"predicate\":\"pageBlockCover\",\"params\":[{\"name\":\"cover\",\"type\":\"PageBlock\"}],\"type\":\"PageBlock\"},{\"id\":-1468953147,\"predicate\":\"pageBlockEmbed\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"full_width\",\"type\":\"flags.0?true\"},{\"name\":\"allow_scrolling\",\"type\":\"flags.3?true\"},{\"name\":\"url\",\"type\":\"flags.1?string\"},{\"name\":\"html\",\"type\":\"flags.2?string\"},{\"name\":\"poster_photo_id\",\"type\":\"flags.4?long\"},{\"name\":\"w\",\"type\":\"flags.5?int\"},{\"name\":\"h\",\"type\":\"flags.5?int\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":-229005301,\"predicate\":\"pageBlockEmbedPost\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"},{\"name\":\"author_photo_id\",\"type\":\"long\"},{\"name\":\"author\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":1705048653,\"predicate\":\"pageBlockCollage\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":52401552,\"predicate\":\"pageBlockSlideshow\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":1930545681,\"predicate\":\"webPageNotModified\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"cached_page_views\",\"type\":\"flags.0?int\"}],\"type\":\"WebPage\"},{\"id\":-88417185,\"predicate\":\"inputPrivacyKeyPhoneCall\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1030105979,\"predicate\":\"privacyKeyPhoneCall\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-580219064,\"predicate\":\"sendMessageGamePlayAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-2048646399,\"predicate\":\"phoneCallDiscardReasonMissed\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":-527056480,\"predicate\":\"phoneCallDiscardReasonDisconnect\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":1471006352,\"predicate\":\"phoneCallDiscardReasonHangup\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":-84416311,\"predicate\":\"phoneCallDiscardReasonBusy\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":1852826908,\"predicate\":\"updateDialogPinned\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"peer\",\"type\":\"DialogPeer\"}],\"type\":\"Update\"},{\"id\":-99664734,\"predicate\":\"updatePinnedDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"order\",\"type\":\"flags.0?Vector<DialogPeer>\"}],\"type\":\"Update\"},{\"id\":2104790276,\"predicate\":\"dataJSON\",\"params\":[{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"DataJSON\"},{\"id\":-2095595325,\"predicate\":\"updateBotWebhookJSON\",\"params\":[{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"Update\"},{\"id\":-1684914010,\"predicate\":\"updateBotWebhookJSONQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"DataJSON\"},{\"name\":\"timeout\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-886477832,\"predicate\":\"labeledPrice\",\"params\":[{\"name\":\"label\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"LabeledPrice\"},{\"id\":1048946971,\"predicate\":\"invoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"test\",\"type\":\"flags.0?true\"},{\"name\":\"name_requested\",\"type\":\"flags.1?true\"},{\"name\":\"phone_requested\",\"type\":\"flags.2?true\"},{\"name\":\"email_requested\",\"type\":\"flags.3?true\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.4?true\"},{\"name\":\"flexible\",\"type\":\"flags.5?true\"},{\"name\":\"phone_to_provider\",\"type\":\"flags.6?true\"},{\"name\":\"email_to_provider\",\"type\":\"flags.7?true\"},{\"name\":\"recurring\",\"type\":\"flags.9?true\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"prices\",\"type\":\"Vector<LabeledPrice>\"},{\"name\":\"max_tip_amount\",\"type\":\"flags.8?long\"},{\"name\":\"suggested_tip_amounts\",\"type\":\"flags.8?Vector<long>\"},{\"name\":\"recurring_terms_url\",\"type\":\"flags.9?string\"}],\"type\":\"Invoice\"},{\"id\":-1900697899,\"predicate\":\"inputMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?InputWebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"provider_data\",\"type\":\"DataJSON\"},{\"name\":\"start_param\",\"type\":\"flags.1?string\"},{\"name\":\"extended_media\",\"type\":\"flags.2?InputMedia\"}],\"type\":\"InputMedia\"},{\"id\":-368917890,\"predicate\":\"paymentCharge\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"provider_charge_id\",\"type\":\"string\"}],\"type\":\"PaymentCharge\"},{\"id\":-1892568281,\"predicate\":\"messageActionPaymentSentMe\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"recurring_init\",\"type\":\"flags.2?true\"},{\"name\":\"recurring_used\",\"type\":\"flags.3?true\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"charge\",\"type\":\"PaymentCharge\"}],\"type\":\"MessageAction\"},{\"id\":-156940077,\"predicate\":\"messageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.1?true\"},{\"name\":\"test\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?WebDocument\"},{\"name\":\"receipt_msg_id\",\"type\":\"flags.2?int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"start_param\",\"type\":\"string\"},{\"name\":\"extended_media\",\"type\":\"flags.4?MessageExtendedMedia\"}],\"type\":\"MessageMedia\"},{\"id\":512535275,\"predicate\":\"postAddress\",\"params\":[{\"name\":\"street_line1\",\"type\":\"string\"},{\"name\":\"street_line2\",\"type\":\"string\"},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"country_iso2\",\"type\":\"string\"},{\"name\":\"post_code\",\"type\":\"string\"}],\"type\":\"PostAddress\"},{\"id\":-1868808300,\"predicate\":\"paymentRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"name\",\"type\":\"flags.0?string\"},{\"name\":\"phone\",\"type\":\"flags.1?string\"},{\"name\":\"email\",\"type\":\"flags.2?string\"},{\"name\":\"shipping_address\",\"type\":\"flags.3?PostAddress\"}],\"type\":\"PaymentRequestedInfo\"},{\"id\":-1344716869,\"predicate\":\"keyboardButtonBuy\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1776926890,\"predicate\":\"messageActionPaymentSent\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"recurring_init\",\"type\":\"flags.2?true\"},{\"name\":\"recurring_used\",\"type\":\"flags.3?true\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"invoice_slug\",\"type\":\"flags.0?string\"}],\"type\":\"MessageAction\"},{\"id\":-842892769,\"predicate\":\"paymentSavedCredentialsCard\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"PaymentSavedCredentials\"},{\"id\":475467473,\"predicate\":\"webDocument\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"WebDocument\"},{\"id\":-1678949555,\"predicate\":\"inputWebDocument\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"InputWebDocument\"},{\"id\":-1036396922,\"predicate\":\"inputWebFileLocation\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputWebFileLocation\"},{\"id\":568808380,\"predicate\":\"upload.webFile\",\"params\":[{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"file_type\",\"type\":\"storage.FileType\"},{\"name\":\"mtime\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.WebFile\"},{\"id\":-1610250415,\"predicate\":\"payments.paymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_save_credentials\",\"type\":\"flags.2?true\"},{\"name\":\"password_missing\",\"type\":\"flags.3?true\"},{\"name\":\"form_id\",\"type\":\"long\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.5?WebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"provider_id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"native_provider\",\"type\":\"flags.4?string\"},{\"name\":\"native_params\",\"type\":\"flags.4?DataJSON\"},{\"name\":\"additional_methods\",\"type\":\"flags.6?Vector<PaymentFormMethod>\"},{\"name\":\"saved_info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"saved_credentials\",\"type\":\"flags.1?Vector<PaymentSavedCredentials>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.PaymentForm\"},{\"id\":-784000893,\"predicate\":\"payments.validatedRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_options\",\"type\":\"flags.1?Vector<ShippingOption>\"}],\"type\":\"payments.ValidatedRequestedInfo\"},{\"id\":1314881805,\"predicate\":\"payments.paymentResult\",\"params\":[{\"name\":\"updates\",\"type\":\"Updates\"}],\"type\":\"payments.PaymentResult\"},{\"id\":1891958275,\"predicate\":\"payments.paymentReceipt\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"provider_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.2?WebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping\",\"type\":\"flags.1?ShippingOption\"},{\"name\":\"tip_amount\",\"type\":\"flags.3?long\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"credentials_title\",\"type\":\"string\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.PaymentReceipt\"},{\"id\":-74456004,\"predicate\":\"payments.savedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_saved_credentials\",\"type\":\"flags.1?true\"},{\"name\":\"saved_info\",\"type\":\"flags.0?PaymentRequestedInfo\"}],\"type\":\"payments.SavedInfo\"},{\"id\":-1056001329,\"predicate\":\"inputPaymentCredentialsSaved\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"tmp_password\",\"type\":\"bytes\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":873977640,\"predicate\":\"inputPaymentCredentials\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"save\",\"type\":\"flags.0?true\"},{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":-614138572,\"predicate\":\"account.tmpPassword\",\"params\":[{\"name\":\"tmp_password\",\"type\":\"bytes\"},{\"name\":\"valid_until\",\"type\":\"int\"}],\"type\":\"account.TmpPassword\"},{\"id\":-1239335713,\"predicate\":\"shippingOption\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"prices\",\"type\":\"Vector<LabeledPrice>\"}],\"type\":\"ShippingOption\"},{\"id\":-1246823043,\"predicate\":\"updateBotShippingQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"shipping_address\",\"type\":\"PostAddress\"}],\"type\":\"Update\"},{\"id\":-1934976362,\"predicate\":\"updateBotPrecheckoutQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":853188252,\"predicate\":\"inputStickerSetItem\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"document\",\"type\":\"InputDocument\"},{\"name\":\"emoji\",\"type\":\"string\"},{\"name\":\"mask_coords\",\"type\":\"flags.0?MaskCoords\"},{\"name\":\"keywords\",\"type\":\"flags.1?string\"}],\"type\":\"InputStickerSetItem\"},{\"id\":-1425052898,\"predicate\":\"updatePhoneCall\",\"params\":[{\"name\":\"phone_call\",\"type\":\"PhoneCall\"}],\"type\":\"Update\"},{\"id\":506920429,\"predicate\":\"inputPhoneCall\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPhoneCall\"},{\"id\":1399245077,\"predicate\":\"phoneCallEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"PhoneCall\"},{\"id\":-987599081,\"predicate\":\"phoneCallWaiting\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"},{\"name\":\"receive_date\",\"type\":\"flags.0?int\"}],\"type\":\"PhoneCall\"},{\"id\":347139340,\"predicate\":\"phoneCallRequested\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_hash\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"PhoneCall\"},{\"id\":912311057,\"predicate\":\"phoneCallAccepted\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"PhoneCall\"},{\"id\":-1770029977,\"predicate\":\"phoneCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"p2p_allowed\",\"type\":\"flags.5?true\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_or_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"},{\"name\":\"connections\",\"type\":\"Vector<PhoneConnection>\"},{\"name\":\"start_date\",\"type\":\"int\"}],\"type\":\"PhoneCall\"},{\"id\":1355435489,\"predicate\":\"phoneCallDiscarded\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"need_rating\",\"type\":\"flags.2?true\"},{\"name\":\"need_debug\",\"type\":\"flags.3?true\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"reason\",\"type\":\"flags.0?PhoneCallDiscardReason\"},{\"name\":\"duration\",\"type\":\"flags.1?int\"}],\"type\":\"PhoneCall\"},{\"id\":-1665063993,\"predicate\":\"phoneConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"tcp\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"ipv6\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"peer_tag\",\"type\":\"bytes\"}],\"type\":\"PhoneConnection\"},{\"id\":-58224696,\"predicate\":\"phoneCallProtocol\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"udp_p2p\",\"type\":\"flags.0?true\"},{\"name\":\"udp_reflector\",\"type\":\"flags.1?true\"},{\"name\":\"min_layer\",\"type\":\"int\"},{\"name\":\"max_layer\",\"type\":\"int\"},{\"name\":\"library_versions\",\"type\":\"Vector<string>\"}],\"type\":\"PhoneCallProtocol\"},{\"id\":-326966976,\"predicate\":\"phone.phoneCall\",\"params\":[{\"name\":\"phone_call\",\"type\":\"PhoneCall\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.PhoneCall\"},{\"id\":-2134272152,\"predicate\":\"inputMessagesFilterPhoneCalls\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"missed\",\"type\":\"flags.0?true\"}],\"type\":\"MessagesFilter\"},{\"id\":-2132731265,\"predicate\":\"messageActionPhoneCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.2?true\"},{\"name\":\"call_id\",\"type\":\"long\"},{\"name\":\"reason\",\"type\":\"flags.0?PhoneCallDiscardReason\"},{\"name\":\"duration\",\"type\":\"flags.1?int\"}],\"type\":\"MessageAction\"},{\"id\":2054952868,\"predicate\":\"inputMessagesFilterRoundVoice\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1253451181,\"predicate\":\"inputMessagesFilterRoundVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1997373508,\"predicate\":\"sendMessageRecordRoundAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":608050278,\"predicate\":\"sendMessageUploadRoundAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-242427324,\"predicate\":\"upload.fileCdnRedirect\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"encryption_key\",\"type\":\"bytes\"},{\"name\":\"encryption_iv\",\"type\":\"bytes\"},{\"name\":\"file_hashes\",\"type\":\"Vector<FileHash>\"}],\"type\":\"upload.File\"},{\"id\":-290921362,\"predicate\":\"upload.cdnFileReuploadNeeded\",\"params\":[{\"name\":\"request_token\",\"type\":\"bytes\"}],\"type\":\"upload.CdnFile\"},{\"id\":-1449145777,\"predicate\":\"upload.cdnFile\",\"params\":[{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.CdnFile\"},{\"id\":-914167110,\"predicate\":\"cdnPublicKey\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"public_key\",\"type\":\"string\"}],\"type\":\"CdnPublicKey\"},{\"id\":1462101002,\"predicate\":\"cdnConfig\",\"params\":[{\"name\":\"public_keys\",\"type\":\"Vector<CdnPublicKey>\"}],\"type\":\"CdnConfig\"},{\"id\":-283684427,\"predicate\":\"pageBlockChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"Chat\"}],\"type\":\"PageBlock\"},{\"id\":-892239370,\"predicate\":\"langPackString\",\"params\":[{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":1816636575,\"predicate\":\"langPackStringPluralized\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"zero_value\",\"type\":\"flags.0?string\"},{\"name\":\"one_value\",\"type\":\"flags.1?string\"},{\"name\":\"two_value\",\"type\":\"flags.2?string\"},{\"name\":\"few_value\",\"type\":\"flags.3?string\"},{\"name\":\"many_value\",\"type\":\"flags.4?string\"},{\"name\":\"other_value\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":695856818,\"predicate\":\"langPackStringDeleted\",\"params\":[{\"name\":\"key\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":-209337866,\"predicate\":\"langPackDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"strings\",\"type\":\"Vector<LangPackString>\"}],\"type\":\"LangPackDifference\"},{\"id\":-288727837,\"predicate\":\"langPackLanguage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"official\",\"type\":\"flags.0?true\"},{\"name\":\"rtl\",\"type\":\"flags.2?true\"},{\"name\":\"beta\",\"type\":\"flags.3?true\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"native_name\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"base_lang_code\",\"type\":\"flags.1?string\"},{\"name\":\"plural_code\",\"type\":\"string\"},{\"name\":\"strings_count\",\"type\":\"int\"},{\"name\":\"translated_count\",\"type\":\"int\"},{\"name\":\"translations_url\",\"type\":\"string\"}],\"type\":\"LangPackLanguage\"},{\"id\":1180041828,\"predicate\":\"updateLangPackTooLong\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":1442983757,\"predicate\":\"updateLangPack\",\"params\":[{\"name\":\"difference\",\"type\":\"LangPackDifference\"}],\"type\":\"Update\"},{\"id\":885242707,\"predicate\":\"channelParticipantAdmin\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_edit\",\"type\":\"flags.0?true\"},{\"name\":\"self\",\"type\":\"flags.1?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"flags.1?long\"},{\"name\":\"promoted_by\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"flags.2?string\"}],\"type\":\"ChannelParticipant\"},{\"id\":1844969806,\"predicate\":\"channelParticipantBanned\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"left\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"kicked_by\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"ChannelParticipant\"},{\"id\":338142689,\"predicate\":\"channelParticipantsBanned\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":106343499,\"predicate\":\"channelParticipantsSearch\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-421545947,\"predicate\":\"channelAdminLogEventActionChangeTitle\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1427671598,\"predicate\":\"channelAdminLogEventActionChangeAbout\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1783299128,\"predicate\":\"channelAdminLogEventActionChangeUsername\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1129042607,\"predicate\":\"channelAdminLogEventActionChangePhoto\",\"params\":[{\"name\":\"prev_photo\",\"type\":\"Photo\"},{\"name\":\"new_photo\",\"type\":\"Photo\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":460916654,\"predicate\":\"channelAdminLogEventActionToggleInvites\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":648939889,\"predicate\":\"channelAdminLogEventActionToggleSignatures\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-370660328,\"predicate\":\"channelAdminLogEventActionUpdatePinned\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1889215493,\"predicate\":\"channelAdminLogEventActionEditMessage\",\"params\":[{\"name\":\"prev_message\",\"type\":\"Message\"},{\"name\":\"new_message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1121994683,\"predicate\":\"channelAdminLogEventActionDeleteMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":405815507,\"predicate\":\"channelAdminLogEventActionParticipantJoin\",\"params\":[],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-124291086,\"predicate\":\"channelAdminLogEventActionParticipantLeave\",\"params\":[],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-484690728,\"predicate\":\"channelAdminLogEventActionParticipantInvite\",\"params\":[{\"name\":\"participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-422036098,\"predicate\":\"channelAdminLogEventActionParticipantToggleBan\",\"params\":[{\"name\":\"prev_participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-714643696,\"predicate\":\"channelAdminLogEventActionParticipantToggleAdmin\",\"params\":[{\"name\":\"prev_participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":531458253,\"predicate\":\"channelAdminLogEvent\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"action\",\"type\":\"ChannelAdminLogEventAction\"}],\"type\":\"ChannelAdminLogEvent\"},{\"id\":-309659827,\"predicate\":\"channels.adminLogResults\",\"params\":[{\"name\":\"events\",\"type\":\"Vector<ChannelAdminLogEvent>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.AdminLogResults\"},{\"id\":-368018716,\"predicate\":\"channelAdminLogEventsFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"join\",\"type\":\"flags.0?true\"},{\"name\":\"leave\",\"type\":\"flags.1?true\"},{\"name\":\"invite\",\"type\":\"flags.2?true\"},{\"name\":\"ban\",\"type\":\"flags.3?true\"},{\"name\":\"unban\",\"type\":\"flags.4?true\"},{\"name\":\"kick\",\"type\":\"flags.5?true\"},{\"name\":\"unkick\",\"type\":\"flags.6?true\"},{\"name\":\"promote\",\"type\":\"flags.7?true\"},{\"name\":\"demote\",\"type\":\"flags.8?true\"},{\"name\":\"info\",\"type\":\"flags.9?true\"},{\"name\":\"settings\",\"type\":\"flags.10?true\"},{\"name\":\"pinned\",\"type\":\"flags.11?true\"},{\"name\":\"edit\",\"type\":\"flags.12?true\"},{\"name\":\"delete\",\"type\":\"flags.13?true\"},{\"name\":\"group_call\",\"type\":\"flags.14?true\"},{\"name\":\"invites\",\"type\":\"flags.15?true\"},{\"name\":\"send\",\"type\":\"flags.16?true\"},{\"name\":\"forums\",\"type\":\"flags.17?true\"}],\"type\":\"ChannelAdminLogEventsFilter\"},{\"id\":511092620,\"predicate\":\"topPeerCategoryPhoneCalls\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-2143067670,\"predicate\":\"pageBlockAudio\",\"params\":[{\"name\":\"audio_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":1558266229,\"predicate\":\"popularContact\",\"params\":[{\"name\":\"client_id\",\"type\":\"long\"},{\"name\":\"importers\",\"type\":\"int\"}],\"type\":\"PopularContact\"},{\"id\":1200788123,\"predicate\":\"messageActionScreenshotTaken\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1634752813,\"predicate\":\"messages.favedStickersNotModified\",\"params\":[],\"type\":\"messages.FavedStickers\"},{\"id\":750063767,\"predicate\":\"messages.favedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.FavedStickers\"},{\"id\":-451831443,\"predicate\":\"updateFavedStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":-366410403,\"predicate\":\"updateChannelReadMessagesContents\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":-1040652646,\"predicate\":\"inputMessagesFilterMyMentions\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":1887741886,\"predicate\":\"updateContactsReset\",\"params\":[],\"type\":\"Update\"},{\"id\":-1312568665,\"predicate\":\"channelAdminLogEventActionChangeStickerSet\",\"params\":[{\"name\":\"prev_stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"new_stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-85549226,\"predicate\":\"messageActionCustomAction\",\"params\":[{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":178373535,\"predicate\":\"inputPaymentCredentialsApplePay\",\"params\":[{\"name\":\"payment_data\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":-419271411,\"predicate\":\"inputMessagesFilterGeo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-530392189,\"predicate\":\"inputMessagesFilterContacts\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1304443240,\"predicate\":\"updateChannelAvailableMessages\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"available_min_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1599903217,\"predicate\":\"channelAdminLogEventActionTogglePreHistoryHidden\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1759532989,\"predicate\":\"inputMediaGeoLive\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"stopped\",\"type\":\"flags.0?true\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.2?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"}],\"type\":\"InputMedia\"},{\"id\":-1186937242,\"predicate\":\"messageMediaGeoLive\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.1?int\"}],\"type\":\"MessageMedia\"},{\"id\":1189204285,\"predicate\":\"recentMeUrlUnknown\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1188296222,\"predicate\":\"recentMeUrlUser\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1294306862,\"predicate\":\"recentMeUrlChat\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"RecentMeUrl\"},{\"id\":-347535331,\"predicate\":\"recentMeUrlChatInvite\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"chat_invite\",\"type\":\"ChatInvite\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1140172836,\"predicate\":\"recentMeUrlStickerSet\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"set\",\"type\":\"StickerSetCovered\"}],\"type\":\"RecentMeUrl\"},{\"id\":235081943,\"predicate\":\"help.recentMeUrls\",\"params\":[{\"name\":\"urls\",\"type\":\"Vector<RecentMeUrl>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"help.RecentMeUrls\"},{\"id\":-266911767,\"predicate\":\"channels.channelParticipantsNotModified\",\"params\":[],\"type\":\"channels.ChannelParticipants\"},{\"id\":1951620897,\"predicate\":\"messages.messagesNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":482797855,\"predicate\":\"inputSingleMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"media\",\"type\":\"InputMedia\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.0?Vector<MessageEntity>\"}],\"type\":\"InputSingleMedia\"},{\"id\":-1493633966,\"predicate\":\"webAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"domain\",\"type\":\"string\"},{\"name\":\"browser\",\"type\":\"string\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"date_created\",\"type\":\"int\"},{\"name\":\"date_active\",\"type\":\"int\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"region\",\"type\":\"string\"}],\"type\":\"WebAuthorization\"},{\"id\":-313079300,\"predicate\":\"account.webAuthorizations\",\"params\":[{\"name\":\"authorizations\",\"type\":\"Vector<WebAuthorization>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.WebAuthorizations\"},{\"id\":-1502174430,\"predicate\":\"inputMessageID\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"InputMessage\"},{\"id\":-1160215659,\"predicate\":\"inputMessageReplyTo\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"InputMessage\"},{\"id\":-2037963464,\"predicate\":\"inputMessagePinned\",\"params\":[],\"type\":\"InputMessage\"},{\"id\":-1687559349,\"predicate\":\"messageEntityPhone\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1280209983,\"predicate\":\"messageEntityCashtag\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-988359047,\"predicate\":\"messageActionBotAllowed\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attach_menu\",\"type\":\"flags.1?true\"},{\"name\":\"domain\",\"type\":\"flags.0?string\"},{\"name\":\"app\",\"type\":\"flags.2?BotApp\"}],\"type\":\"MessageAction\"},{\"id\":-55902537,\"predicate\":\"inputDialogPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"InputDialogPeer\"},{\"id\":-445792507,\"predicate\":\"dialogPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"DialogPeer\"},{\"id\":223655517,\"predicate\":\"messages.foundStickerSetsNotModified\",\"params\":[],\"type\":\"messages.FoundStickerSets\"},{\"id\":-1963942446,\"predicate\":\"messages.foundStickerSets\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.FoundStickerSets\"},{\"id\":-207944868,\"predicate\":\"fileHash\",\"params\":[{\"name\":\"offset\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"FileHash\"},{\"id\":-104284986,\"predicate\":\"webDocumentNoProxy\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"WebDocument\"},{\"id\":1968737087,\"predicate\":\"inputClientProxy\",\"params\":[{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"}],\"type\":\"InputClientProxy\"},{\"id\":-483352705,\"predicate\":\"help.termsOfServiceUpdateEmpty\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":686618977,\"predicate\":\"help.termsOfServiceUpdate\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"terms_of_service\",\"type\":\"help.TermsOfService\"}],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":859091184,\"predicate\":\"inputSecureFileUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"md5_checksum\",\"type\":\"string\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"InputSecureFile\"},{\"id\":1399317950,\"predicate\":\"inputSecureFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputSecureFile\"},{\"id\":-876089816,\"predicate\":\"inputSecureFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":1679398724,\"predicate\":\"secureFileEmpty\",\"params\":[],\"type\":\"SecureFile\"},{\"id\":2097791614,\"predicate\":\"secureFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"long\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureFile\"},{\"id\":-1964327229,\"predicate\":\"secureData\",\"params\":[{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"data_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureData\"},{\"id\":2103482845,\"predicate\":\"securePlainPhone\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"SecurePlainData\"},{\"id\":569137759,\"predicate\":\"securePlainEmail\",\"params\":[{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"SecurePlainData\"},{\"id\":-1658158621,\"predicate\":\"secureValueTypePersonalDetails\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":1034709504,\"predicate\":\"secureValueTypePassport\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":115615172,\"predicate\":\"secureValueTypeDriverLicense\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1596951477,\"predicate\":\"secureValueTypeIdentityCard\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1717268701,\"predicate\":\"secureValueTypeInternalPassport\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-874308058,\"predicate\":\"secureValueTypeAddress\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-63531698,\"predicate\":\"secureValueTypeUtilityBill\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1995211763,\"predicate\":\"secureValueTypeBankStatement\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1954007928,\"predicate\":\"secureValueTypeRentalAgreement\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1713143702,\"predicate\":\"secureValueTypePassportRegistration\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-368907213,\"predicate\":\"secureValueTypeTemporaryRegistration\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1289704741,\"predicate\":\"secureValueTypePhone\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1908627474,\"predicate\":\"secureValueTypeEmail\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":411017418,\"predicate\":\"secureValue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data\",\"type\":\"flags.0?SecureData\"},{\"name\":\"front_side\",\"type\":\"flags.1?SecureFile\"},{\"name\":\"reverse_side\",\"type\":\"flags.2?SecureFile\"},{\"name\":\"selfie\",\"type\":\"flags.3?SecureFile\"},{\"name\":\"translation\",\"type\":\"flags.6?Vector<SecureFile>\"},{\"name\":\"files\",\"type\":\"flags.4?Vector<SecureFile>\"},{\"name\":\"plain_data\",\"type\":\"flags.5?SecurePlainData\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"SecureValue\"},{\"id\":-618540889,\"predicate\":\"inputSecureValue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data\",\"type\":\"flags.0?SecureData\"},{\"name\":\"front_side\",\"type\":\"flags.1?InputSecureFile\"},{\"name\":\"reverse_side\",\"type\":\"flags.2?InputSecureFile\"},{\"name\":\"selfie\",\"type\":\"flags.3?InputSecureFile\"},{\"name\":\"translation\",\"type\":\"flags.6?Vector<InputSecureFile>\"},{\"name\":\"files\",\"type\":\"flags.4?Vector<InputSecureFile>\"},{\"name\":\"plain_data\",\"type\":\"flags.5?SecurePlainData\"}],\"type\":\"InputSecureValue\"},{\"id\":-316748368,\"predicate\":\"secureValueHash\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"SecureValueHash\"},{\"id\":-391902247,\"predicate\":\"secureValueErrorData\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data_hash\",\"type\":\"bytes\"},{\"name\":\"field\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":12467706,\"predicate\":\"secureValueErrorFrontSide\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-2037765467,\"predicate\":\"secureValueErrorReverseSide\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-449327402,\"predicate\":\"secureValueErrorSelfie\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":2054162547,\"predicate\":\"secureValueErrorFile\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":1717706985,\"predicate\":\"secureValueErrorFiles\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"Vector<bytes>\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":871426631,\"predicate\":\"secureCredentialsEncrypted\",\"params\":[{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureCredentialsEncrypted\"},{\"id\":-1389486888,\"predicate\":\"account.authorizationForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"required_types\",\"type\":\"Vector<SecureRequiredType>\"},{\"name\":\"values\",\"type\":\"Vector<SecureValue>\"},{\"name\":\"errors\",\"type\":\"Vector<SecureValueError>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"privacy_policy_url\",\"type\":\"flags.0?string\"}],\"type\":\"account.AuthorizationForm\"},{\"id\":-2128640689,\"predicate\":\"account.sentEmailCode\",\"params\":[{\"name\":\"email_pattern\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"account.SentEmailCode\"},{\"id\":455635795,\"predicate\":\"messageActionSecureValuesSentMe\",\"params\":[{\"name\":\"values\",\"type\":\"Vector<SecureValue>\"},{\"name\":\"credentials\",\"type\":\"SecureCredentialsEncrypted\"}],\"type\":\"MessageAction\"},{\"id\":-648257196,\"predicate\":\"messageActionSecureValuesSent\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"MessageAction\"},{\"id\":1722786150,\"predicate\":\"help.deepLinkInfoEmpty\",\"params\":[],\"type\":\"help.DeepLinkInfo\"},{\"id\":1783556146,\"predicate\":\"help.deepLinkInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"update_app\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"help.DeepLinkInfo\"},{\"id\":289586518,\"predicate\":\"savedPhoneContact\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"SavedContact\"},{\"id\":1304052993,\"predicate\":\"account.takeout\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"account.Takeout\"},{\"id\":700340377,\"predicate\":\"inputTakeoutFileLocation\",\"params\":[],\"type\":\"InputFileLocation\"},{\"id\":-513517117,\"predicate\":\"updateDialogUnreadMark\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unread\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"DialogPeer\"}],\"type\":\"Update\"},{\"id\":-253500010,\"predicate\":\"messages.dialogsNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.Dialogs\"},{\"id\":-1625153079,\"predicate\":\"inputWebFileGeoPointLocation\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"zoom\",\"type\":\"int\"},{\"name\":\"scale\",\"type\":\"int\"}],\"type\":\"InputWebFileLocation\"},{\"id\":-1255369827,\"predicate\":\"contacts.topPeersDisabled\",\"params\":[],\"type\":\"contacts.TopPeers\"},{\"id\":-1685456582,\"predicate\":\"inputReportReasonCopyright\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-732254058,\"predicate\":\"passwordKdfAlgoUnknown\",\"params\":[],\"type\":\"PasswordKdfAlgo\"},{\"id\":4883767,\"predicate\":\"securePasswordKdfAlgoUnknown\",\"params\":[],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":-1141711456,\"predicate\":\"securePasswordKdfAlgoPBKDF2HMACSHA512iter100000\",\"params\":[{\"name\":\"salt\",\"type\":\"bytes\"}],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":-2042159726,\"predicate\":\"securePasswordKdfAlgoSHA512\",\"params\":[{\"name\":\"salt\",\"type\":\"bytes\"}],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":354925740,\"predicate\":\"secureSecretSettings\",\"params\":[{\"name\":\"secure_algo\",\"type\":\"SecurePasswordKdfAlgo\"},{\"name\":\"secure_secret\",\"type\":\"bytes\"},{\"name\":\"secure_secret_id\",\"type\":\"long\"}],\"type\":\"SecureSecretSettings\"},{\"id\":982592842,\"predicate\":\"passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow\",\"params\":[{\"name\":\"salt1\",\"type\":\"bytes\"},{\"name\":\"salt2\",\"type\":\"bytes\"},{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"p\",\"type\":\"bytes\"}],\"type\":\"PasswordKdfAlgo\"},{\"id\":-1736378792,\"predicate\":\"inputCheckPasswordEmpty\",\"params\":[],\"type\":\"InputCheckPasswordSRP\"},{\"id\":-763367294,\"predicate\":\"inputCheckPasswordSRP\",\"params\":[{\"name\":\"srp_id\",\"type\":\"long\"},{\"name\":\"A\",\"type\":\"bytes\"},{\"name\":\"M1\",\"type\":\"bytes\"}],\"type\":\"InputCheckPasswordSRP\"},{\"id\":-2036501105,\"predicate\":\"secureValueError\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-1592506512,\"predicate\":\"secureValueErrorTranslationFile\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":878931416,\"predicate\":\"secureValueErrorTranslationFiles\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"Vector<bytes>\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-2103600678,\"predicate\":\"secureRequiredType\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"native_names\",\"type\":\"flags.0?true\"},{\"name\":\"selfie_required\",\"type\":\"flags.1?true\"},{\"name\":\"translation_required\",\"type\":\"flags.2?true\"},{\"name\":\"type\",\"type\":\"SecureValueType\"}],\"type\":\"SecureRequiredType\"},{\"id\":41187252,\"predicate\":\"secureRequiredTypeOneOf\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureRequiredType>\"}],\"type\":\"SecureRequiredType\"},{\"id\":-1078332329,\"predicate\":\"help.passportConfigNotModified\",\"params\":[],\"type\":\"help.PassportConfig\"},{\"id\":-1600596305,\"predicate\":\"help.passportConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"countries_langs\",\"type\":\"DataJSON\"}],\"type\":\"help.PassportConfig\"},{\"id\":488313413,\"predicate\":\"inputAppEvent\",\"params\":[{\"name\":\"time\",\"type\":\"double\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"peer\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"JSONValue\"}],\"type\":\"InputAppEvent\"},{\"id\":-1059185703,\"predicate\":\"jsonObjectValue\",\"params\":[{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"JSONValue\"}],\"type\":\"JSONObjectValue\"},{\"id\":1064139624,\"predicate\":\"jsonNull\",\"params\":[],\"type\":\"JSONValue\"},{\"id\":-952869270,\"predicate\":\"jsonBool\",\"params\":[{\"name\":\"value\",\"type\":\"Bool\"}],\"type\":\"JSONValue\"},{\"id\":736157604,\"predicate\":\"jsonNumber\",\"params\":[{\"name\":\"value\",\"type\":\"double\"}],\"type\":\"JSONValue\"},{\"id\":-1222740358,\"predicate\":\"jsonString\",\"params\":[{\"name\":\"value\",\"type\":\"string\"}],\"type\":\"JSONValue\"},{\"id\":-146520221,\"predicate\":\"jsonArray\",\"params\":[{\"name\":\"value\",\"type\":\"Vector<JSONValue>\"}],\"type\":\"JSONValue\"},{\"id\":-1715350371,\"predicate\":\"jsonObject\",\"params\":[{\"name\":\"value\",\"type\":\"Vector<JSONObjectValue>\"}],\"type\":\"JSONValue\"},{\"id\":-1311015810,\"predicate\":\"inputNotifyBroadcasts\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":-703403793,\"predicate\":\"notifyBroadcasts\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-311786236,\"predicate\":\"textSubscript\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-939827711,\"predicate\":\"textSuperscript\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":55281185,\"predicate\":\"textMarked\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":483104362,\"predicate\":\"textPhone\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":136105807,\"predicate\":\"textImage\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"RichText\"},{\"id\":504660880,\"predicate\":\"pageBlockKicker\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":878078826,\"predicate\":\"pageTableCell\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"header\",\"type\":\"flags.0?true\"},{\"name\":\"align_center\",\"type\":\"flags.3?true\"},{\"name\":\"align_right\",\"type\":\"flags.4?true\"},{\"name\":\"valign_middle\",\"type\":\"flags.5?true\"},{\"name\":\"valign_bottom\",\"type\":\"flags.6?true\"},{\"name\":\"text\",\"type\":\"flags.7?RichText\"},{\"name\":\"colspan\",\"type\":\"flags.1?int\"},{\"name\":\"rowspan\",\"type\":\"flags.2?int\"}],\"type\":\"PageTableCell\"},{\"id\":-524237339,\"predicate\":\"pageTableRow\",\"params\":[{\"name\":\"cells\",\"type\":\"Vector<PageTableCell>\"}],\"type\":\"PageTableRow\"},{\"id\":-1085412734,\"predicate\":\"pageBlockTable\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bordered\",\"type\":\"flags.0?true\"},{\"name\":\"striped\",\"type\":\"flags.1?true\"},{\"name\":\"title\",\"type\":\"RichText\"},{\"name\":\"rows\",\"type\":\"Vector<PageTableRow>\"}],\"type\":\"PageBlock\"},{\"id\":1869903447,\"predicate\":\"pageCaption\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"credit\",\"type\":\"RichText\"}],\"type\":\"PageCaption\"},{\"id\":-1188055347,\"predicate\":\"pageListItemText\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageListItem\"},{\"id\":635466748,\"predicate\":\"pageListItemBlocks\",\"params\":[{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"}],\"type\":\"PageListItem\"},{\"id\":1577484359,\"predicate\":\"pageListOrderedItemText\",\"params\":[{\"name\":\"num\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageListOrderedItem\"},{\"id\":-1730311882,\"predicate\":\"pageListOrderedItemBlocks\",\"params\":[{\"name\":\"num\",\"type\":\"string\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"}],\"type\":\"PageListOrderedItem\"},{\"id\":-1702174239,\"predicate\":\"pageBlockOrderedList\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageListOrderedItem>\"}],\"type\":\"PageBlock\"},{\"id\":1987480557,\"predicate\":\"pageBlockDetails\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"open\",\"type\":\"flags.0?true\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"title\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1282352120,\"predicate\":\"pageRelatedArticle\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"description\",\"type\":\"flags.1?string\"},{\"name\":\"photo_id\",\"type\":\"flags.2?long\"},{\"name\":\"author\",\"type\":\"flags.3?string\"},{\"name\":\"published_date\",\"type\":\"flags.4?int\"}],\"type\":\"PageRelatedArticle\"},{\"id\":370236054,\"predicate\":\"pageBlockRelatedArticles\",\"params\":[{\"name\":\"title\",\"type\":\"RichText\"},{\"name\":\"articles\",\"type\":\"Vector<PageRelatedArticle>\"}],\"type\":\"PageBlock\"},{\"id\":-1538310410,\"predicate\":\"pageBlockMap\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"zoom\",\"type\":\"int\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":-1738178803,\"predicate\":\"page\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"part\",\"type\":\"flags.0?true\"},{\"name\":\"rtl\",\"type\":\"flags.1?true\"},{\"name\":\"v2\",\"type\":\"flags.2?true\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"},{\"name\":\"views\",\"type\":\"flags.3?int\"}],\"type\":\"Page\"},{\"id\":-610373422,\"predicate\":\"inputPrivacyKeyPhoneP2P\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":961092808,\"predicate\":\"privacyKeyPhoneP2P\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":894777186,\"predicate\":\"textAnchor\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":-1945767479,\"predicate\":\"help.supportName\",\"params\":[{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"help.SupportName\"},{\"id\":-206688531,\"predicate\":\"help.userInfoEmpty\",\"params\":[],\"type\":\"help.UserInfo\"},{\"id\":32192344,\"predicate\":\"help.userInfo\",\"params\":[{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"author\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"help.UserInfo\"},{\"id\":-202219658,\"predicate\":\"messageActionContactSignUp\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1398708869,\"predicate\":\"updateMessagePoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"poll_id\",\"type\":\"long\"},{\"name\":\"poll\",\"type\":\"flags.0?Poll\"},{\"name\":\"results\",\"type\":\"PollResults\"}],\"type\":\"Update\"},{\"id\":1823064809,\"predicate\":\"pollAnswer\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"option\",\"type\":\"bytes\"}],\"type\":\"PollAnswer\"},{\"id\":-2032041631,\"predicate\":\"poll\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"closed\",\"type\":\"flags.0?true\"},{\"name\":\"public_voters\",\"type\":\"flags.1?true\"},{\"name\":\"multiple_choice\",\"type\":\"flags.2?true\"},{\"name\":\"quiz\",\"type\":\"flags.3?true\"},{\"name\":\"question\",\"type\":\"string\"},{\"name\":\"answers\",\"type\":\"Vector<PollAnswer>\"},{\"name\":\"close_period\",\"type\":\"flags.4?int\"},{\"name\":\"close_date\",\"type\":\"flags.5?int\"}],\"type\":\"Poll\"},{\"id\":997055186,\"predicate\":\"pollAnswerVoters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chosen\",\"type\":\"flags.0?true\"},{\"name\":\"correct\",\"type\":\"flags.1?true\"},{\"name\":\"option\",\"type\":\"bytes\"},{\"name\":\"voters\",\"type\":\"int\"}],\"type\":\"PollAnswerVoters\"},{\"id\":-591909213,\"predicate\":\"pollResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"min\",\"type\":\"flags.0?true\"},{\"name\":\"results\",\"type\":\"flags.1?Vector<PollAnswerVoters>\"},{\"name\":\"total_voters\",\"type\":\"flags.2?int\"},{\"name\":\"recent_voters\",\"type\":\"flags.3?Vector<long>\"},{\"name\":\"solution\",\"type\":\"flags.4?string\"},{\"name\":\"solution_entities\",\"type\":\"flags.4?Vector<MessageEntity>\"}],\"type\":\"PollResults\"},{\"id\":261416433,\"predicate\":\"inputMediaPoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"poll\",\"type\":\"Poll\"},{\"name\":\"correct_answers\",\"type\":\"flags.0?Vector<bytes>\"},{\"name\":\"solution\",\"type\":\"flags.1?string\"},{\"name\":\"solution_entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"InputMedia\"},{\"id\":1272375192,\"predicate\":\"messageMediaPoll\",\"params\":[{\"name\":\"poll\",\"type\":\"Poll\"},{\"name\":\"results\",\"type\":\"PollResults\"}],\"type\":\"MessageMedia\"},{\"id\":-264117680,\"predicate\":\"chatOnlines\",\"params\":[{\"name\":\"onlines\",\"type\":\"int\"}],\"type\":\"ChatOnlines\"},{\"id\":1202287072,\"predicate\":\"statsURL\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"StatsURL\"},{\"id\":-525288402,\"predicate\":\"photoStrippedSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":1605510357,\"predicate\":\"chatAdminRights\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"change_info\",\"type\":\"flags.0?true\"},{\"name\":\"post_messages\",\"type\":\"flags.1?true\"},{\"name\":\"edit_messages\",\"type\":\"flags.2?true\"},{\"name\":\"delete_messages\",\"type\":\"flags.3?true\"},{\"name\":\"ban_users\",\"type\":\"flags.4?true\"},{\"name\":\"invite_users\",\"type\":\"flags.5?true\"},{\"name\":\"pin_messages\",\"type\":\"flags.7?true\"},{\"name\":\"add_admins\",\"type\":\"flags.9?true\"},{\"name\":\"anonymous\",\"type\":\"flags.10?true\"},{\"name\":\"manage_call\",\"type\":\"flags.11?true\"},{\"name\":\"other\",\"type\":\"flags.12?true\"},{\"name\":\"manage_topics\",\"type\":\"flags.13?true\"}],\"type\":\"ChatAdminRights\"},{\"id\":-1626209256,\"predicate\":\"chatBannedRights\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"view_messages\",\"type\":\"flags.0?true\"},{\"name\":\"send_messages\",\"type\":\"flags.1?true\"},{\"name\":\"send_media\",\"type\":\"flags.2?true\"},{\"name\":\"send_stickers\",\"type\":\"flags.3?true\"},{\"name\":\"send_gifs\",\"type\":\"flags.4?true\"},{\"name\":\"send_games\",\"type\":\"flags.5?true\"},{\"name\":\"send_inline\",\"type\":\"flags.6?true\"},{\"name\":\"embed_links\",\"type\":\"flags.7?true\"},{\"name\":\"send_polls\",\"type\":\"flags.8?true\"},{\"name\":\"change_info\",\"type\":\"flags.10?true\"},{\"name\":\"invite_users\",\"type\":\"flags.15?true\"},{\"name\":\"pin_messages\",\"type\":\"flags.17?true\"},{\"name\":\"manage_topics\",\"type\":\"flags.18?true\"},{\"name\":\"send_photos\",\"type\":\"flags.19?true\"},{\"name\":\"send_videos\",\"type\":\"flags.20?true\"},{\"name\":\"send_roundvideos\",\"type\":\"flags.21?true\"},{\"name\":\"send_audios\",\"type\":\"flags.22?true\"},{\"name\":\"send_voices\",\"type\":\"flags.23?true\"},{\"name\":\"send_docs\",\"type\":\"flags.24?true\"},{\"name\":\"send_plain\",\"type\":\"flags.25?true\"},{\"name\":\"until_date\",\"type\":\"int\"}],\"type\":\"ChatBannedRights\"},{\"id\":1421875280,\"predicate\":\"updateChatDefaultBannedRights\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"default_banned_rights\",\"type\":\"ChatBannedRights\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-433014407,\"predicate\":\"inputWallPaper\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputWallPaper\"},{\"id\":1913199744,\"predicate\":\"inputWallPaperSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputWallPaper\"},{\"id\":-1150621555,\"predicate\":\"channelParticipantsContacts\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":771095562,\"predicate\":\"channelAdminLogEventActionDefaultBannedRights\",\"params\":[{\"name\":\"prev_banned_rights\",\"type\":\"ChatBannedRights\"},{\"name\":\"new_banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1895328189,\"predicate\":\"channelAdminLogEventActionStopPoll\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":471437699,\"predicate\":\"account.wallPapersNotModified\",\"params\":[],\"type\":\"account.WallPapers\"},{\"id\":-842824308,\"predicate\":\"account.wallPapers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"wallpapers\",\"type\":\"Vector<WallPaper>\"}],\"type\":\"account.WallPapers\"},{\"id\":-1390068360,\"predicate\":\"codeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"allow_flashcall\",\"type\":\"flags.0?true\"},{\"name\":\"current_number\",\"type\":\"flags.1?true\"},{\"name\":\"allow_app_hash\",\"type\":\"flags.4?true\"},{\"name\":\"allow_missed_call\",\"type\":\"flags.5?true\"},{\"name\":\"allow_firebase\",\"type\":\"flags.7?true\"},{\"name\":\"logout_tokens\",\"type\":\"flags.6?Vector<bytes>\"},{\"name\":\"token\",\"type\":\"flags.8?string\"},{\"name\":\"app_sandbox\",\"type\":\"flags.8?Bool\"}],\"type\":\"CodeSettings\"},{\"id\":499236004,\"predicate\":\"wallPaperSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blur\",\"type\":\"flags.1?true\"},{\"name\":\"motion\",\"type\":\"flags.2?true\"},{\"name\":\"background_color\",\"type\":\"flags.0?int\"},{\"name\":\"second_background_color\",\"type\":\"flags.4?int\"},{\"name\":\"third_background_color\",\"type\":\"flags.5?int\"},{\"name\":\"fourth_background_color\",\"type\":\"flags.6?int\"},{\"name\":\"intensity\",\"type\":\"flags.3?int\"},{\"name\":\"rotation\",\"type\":\"flags.4?int\"}],\"type\":\"WallPaperSettings\"},{\"id\":-1896171181,\"predicate\":\"autoDownloadSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"disabled\",\"type\":\"flags.0?true\"},{\"name\":\"video_preload_large\",\"type\":\"flags.1?true\"},{\"name\":\"audio_preload_next\",\"type\":\"flags.2?true\"},{\"name\":\"phonecalls_less_data\",\"type\":\"flags.3?true\"},{\"name\":\"photo_size_max\",\"type\":\"int\"},{\"name\":\"video_size_max\",\"type\":\"long\"},{\"name\":\"file_size_max\",\"type\":\"long\"},{\"name\":\"video_upload_maxbitrate\",\"type\":\"int\"}],\"type\":\"AutoDownloadSettings\"},{\"id\":1674235686,\"predicate\":\"account.autoDownloadSettings\",\"params\":[{\"name\":\"low\",\"type\":\"AutoDownloadSettings\"},{\"name\":\"medium\",\"type\":\"AutoDownloadSettings\"},{\"name\":\"high\",\"type\":\"AutoDownloadSettings\"}],\"type\":\"account.AutoDownloadSettings\"},{\"id\":-709641735,\"predicate\":\"emojiKeyword\",\"params\":[{\"name\":\"keyword\",\"type\":\"string\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiKeyword\"},{\"id\":594408994,\"predicate\":\"emojiKeywordDeleted\",\"params\":[{\"name\":\"keyword\",\"type\":\"string\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiKeyword\"},{\"id\":1556570557,\"predicate\":\"emojiKeywordsDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"keywords\",\"type\":\"Vector<EmojiKeyword>\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":-1519029347,\"predicate\":\"emojiURL\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"EmojiURL\"},{\"id\":-1275374751,\"predicate\":\"emojiLanguage\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiLanguage\"},{\"id\":-1529000952,\"predicate\":\"inputPrivacyKeyForwards\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1777096355,\"predicate\":\"privacyKeyForwards\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1461304012,\"predicate\":\"inputPrivacyKeyProfilePhoto\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-1777000467,\"predicate\":\"privacyKeyProfilePhoto\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1075322878,\"predicate\":\"inputPhotoFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"thumb_size\",\"type\":\"string\"}],\"type\":\"InputFileLocation\"},{\"id\":-667654413,\"predicate\":\"inputPhotoLegacyFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"volume_id\",\"type\":\"long\"},{\"name\":\"local_id\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":925204121,\"predicate\":\"inputPeerPhotoFileLocation\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"photo_id\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":-1652231205,\"predicate\":\"inputStickerSetThumb\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"thumb_version\",\"type\":\"int\"}],\"type\":\"InputFileLocation\"},{\"id\":-11252123,\"predicate\":\"folder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"autofill_new_broadcasts\",\"type\":\"flags.0?true\"},{\"name\":\"autofill_public_groups\",\"type\":\"flags.1?true\"},{\"name\":\"autofill_new_correspondents\",\"type\":\"flags.2?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.3?ChatPhoto\"}],\"type\":\"Folder\"},{\"id\":1908216652,\"predicate\":\"dialogFolder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.2?true\"},{\"name\":\"folder\",\"type\":\"Folder\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"unread_muted_peers_count\",\"type\":\"int\"},{\"name\":\"unread_unmuted_peers_count\",\"type\":\"int\"},{\"name\":\"unread_muted_messages_count\",\"type\":\"int\"},{\"name\":\"unread_unmuted_messages_count\",\"type\":\"int\"}],\"type\":\"Dialog\"},{\"id\":1684014375,\"predicate\":\"inputDialogPeerFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"InputDialogPeer\"},{\"id\":1363483106,\"predicate\":\"dialogPeerFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"DialogPeer\"},{\"id\":-70073706,\"predicate\":\"inputFolderPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"InputFolderPeer\"},{\"id\":-373643672,\"predicate\":\"folderPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"FolderPeer\"},{\"id\":422972864,\"predicate\":\"updateFolderPeers\",\"params\":[{\"name\":\"folder_peers\",\"type\":\"Vector<FolderPeer>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":497305826,\"predicate\":\"inputUserFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"InputUser\"},{\"id\":1536380829,\"predicate\":\"inputChannelFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"InputChannel\"},{\"id\":-1468331492,\"predicate\":\"inputPeerUserFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-1121318848,\"predicate\":\"inputPeerChannelFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":55761658,\"predicate\":\"inputPrivacyKeyPhoneNumber\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-778378131,\"predicate\":\"privacyKeyPhoneNumber\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-1472172887,\"predicate\":\"topPeerCategoryForwardUsers\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-68239120,\"predicate\":\"topPeerCategoryForwardChats\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":84703944,\"predicate\":\"channelAdminLogEventActionChangeLinkedChat\",\"params\":[{\"name\":\"prev_value\",\"type\":\"long\"},{\"name\":\"new_value\",\"type\":\"long\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-398136321,\"predicate\":\"messages.searchCounter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.SearchCounter\"},{\"id\":280464681,\"predicate\":\"keyboardButtonUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"fwd_text\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"button_id\",\"type\":\"int\"}],\"type\":\"KeyboardButton\"},{\"id\":-802258988,\"predicate\":\"inputKeyboardButtonUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"request_write_access\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"fwd_text\",\"type\":\"flags.1?string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"KeyboardButton\"},{\"id\":-1831650802,\"predicate\":\"urlAuthResultRequest\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"request_write_access\",\"type\":\"flags.0?true\"},{\"name\":\"bot\",\"type\":\"User\"},{\"name\":\"domain\",\"type\":\"string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1886646706,\"predicate\":\"urlAuthResultAccepted\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1445536993,\"predicate\":\"urlAuthResultDefault\",\"params\":[],\"type\":\"UrlAuthResult\"},{\"id\":-2079962673,\"predicate\":\"inputPrivacyValueAllowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":-380694650,\"predicate\":\"inputPrivacyValueDisallowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":1796427406,\"predicate\":\"privacyValueAllowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":1103656293,\"predicate\":\"privacyValueDisallowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":-1672577397,\"predicate\":\"messageEntityUnderline\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1090087980,\"predicate\":\"messageEntityStrike\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":34469328,\"predicate\":\"messageEntityBlockquote\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1786671974,\"predicate\":\"updatePeerSettings\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"settings\",\"type\":\"PeerSettings\"}],\"type\":\"Update\"},{\"id\":-1078612597,\"predicate\":\"channelLocationEmpty\",\"params\":[],\"type\":\"ChannelLocation\"},{\"id\":547062491,\"predicate\":\"channelLocation\",\"params\":[{\"name\":\"geo_point\",\"type\":\"GeoPoint\"},{\"name\":\"address\",\"type\":\"string\"}],\"type\":\"ChannelLocation\"},{\"id\":-901375139,\"predicate\":\"peerLocated\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"distance\",\"type\":\"int\"}],\"type\":\"PeerLocated\"},{\"id\":-1263546448,\"predicate\":\"updatePeerLocated\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<PeerLocated>\"}],\"type\":\"Update\"},{\"id\":241923758,\"predicate\":\"channelAdminLogEventActionChangeLocation\",\"params\":[{\"name\":\"prev_value\",\"type\":\"ChannelLocation\"},{\"name\":\"new_value\",\"type\":\"ChannelLocation\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-606798099,\"predicate\":\"inputReportReasonGeoIrrelevant\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":1401984889,\"predicate\":\"channelAdminLogEventActionToggleSlowMode\",\"params\":[{\"name\":\"prev_value\",\"type\":\"int\"},{\"name\":\"new_value\",\"type\":\"int\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1148485274,\"predicate\":\"auth.authorizationSignUpRequired\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"terms_of_service\",\"type\":\"flags.0?help.TermsOfService\"}],\"type\":\"auth.Authorization\"},{\"id\":-666824391,\"predicate\":\"payments.paymentVerificationNeeded\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"payments.PaymentResult\"},{\"id\":42402760,\"predicate\":\"inputStickerSetAnimatedEmoji\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":967122427,\"predicate\":\"updateNewScheduledMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"Update\"},{\"id\":-1870238482,\"predicate\":\"updateDeleteScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":-797791052,\"predicate\":\"restrictionReason\",\"params\":[{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"reason\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"RestrictionReason\"},{\"id\":1012306921,\"predicate\":\"inputTheme\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputTheme\"},{\"id\":-175567375,\"predicate\":\"inputThemeSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputTheme\"},{\"id\":-1609668650,\"predicate\":\"theme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"for_chat\",\"type\":\"flags.5?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"flags.2?Document\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<ThemeSettings>\"},{\"name\":\"emoticon\",\"type\":\"flags.6?string\"},{\"name\":\"installs_count\",\"type\":\"flags.4?int\"}],\"type\":\"Theme\"},{\"id\":-199313886,\"predicate\":\"account.themesNotModified\",\"params\":[],\"type\":\"account.Themes\"},{\"id\":-1707242387,\"predicate\":\"account.themes\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"themes\",\"type\":\"Vector<Theme>\"}],\"type\":\"account.Themes\"},{\"id\":-2112423005,\"predicate\":\"updateTheme\",\"params\":[{\"name\":\"theme\",\"type\":\"Theme\"}],\"type\":\"Update\"},{\"id\":-786326563,\"predicate\":\"inputPrivacyKeyAddedByPhone\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1124062251,\"predicate\":\"privacyKeyAddedByPhone\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-2027964103,\"predicate\":\"updateGeoLiveViewed\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1448076945,\"predicate\":\"updateLoginToken\",\"params\":[],\"type\":\"Update\"},{\"id\":1654593920,\"predicate\":\"auth.loginToken\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":110008598,\"predicate\":\"auth.loginTokenMigrateTo\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":957176926,\"predicate\":\"auth.loginTokenSuccess\",\"params\":[{\"name\":\"authorization\",\"type\":\"auth.Authorization\"}],\"type\":\"auth.LoginToken\"},{\"id\":1474462241,\"predicate\":\"account.contentSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sensitive_enabled\",\"type\":\"flags.0?true\"},{\"name\":\"sensitive_can_change\",\"type\":\"flags.1?true\"}],\"type\":\"account.ContentSettings\"},{\"id\":-1456996667,\"predicate\":\"messages.inactiveChats\",\"params\":[{\"name\":\"dates\",\"type\":\"Vector<int>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.InactiveChats\"},{\"id\":-1012849566,\"predicate\":\"baseThemeClassic\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-69724536,\"predicate\":\"baseThemeDay\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-1212997976,\"predicate\":\"baseThemeNight\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":1834973166,\"predicate\":\"baseThemeTinted\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":1527845466,\"predicate\":\"baseThemeArctic\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-1770371538,\"predicate\":\"inputWallPaperNoFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"InputWallPaper\"},{\"id\":-528465642,\"predicate\":\"wallPaperNoFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"dark\",\"type\":\"flags.4?true\"},{\"name\":\"settings\",\"type\":\"flags.2?WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":-1881255857,\"predicate\":\"inputThemeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message_colors_animated\",\"type\":\"flags.2?true\"},{\"name\":\"base_theme\",\"type\":\"BaseTheme\"},{\"name\":\"accent_color\",\"type\":\"int\"},{\"name\":\"outbox_accent_color\",\"type\":\"flags.3?int\"},{\"name\":\"message_colors\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"wallpaper\",\"type\":\"flags.1?InputWallPaper\"},{\"name\":\"wallpaper_settings\",\"type\":\"flags.1?WallPaperSettings\"}],\"type\":\"InputThemeSettings\"},{\"id\":-94849324,\"predicate\":\"themeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message_colors_animated\",\"type\":\"flags.2?true\"},{\"name\":\"base_theme\",\"type\":\"BaseTheme\"},{\"name\":\"accent_color\",\"type\":\"int\"},{\"name\":\"outbox_accent_color\",\"type\":\"flags.3?int\"},{\"name\":\"message_colors\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"wallpaper\",\"type\":\"flags.1?WallPaper\"}],\"type\":\"ThemeSettings\"},{\"id\":1421174295,\"predicate\":\"webPageAttributeTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"documents\",\"type\":\"flags.0?Vector<Document>\"},{\"name\":\"settings\",\"type\":\"flags.1?ThemeSettings\"}],\"type\":\"WebPageAttribute\"},{\"id\":274961865,\"predicate\":\"updateMessagePollVote\",\"params\":[{\"name\":\"poll_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":886196148,\"predicate\":\"messageUserVote\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"option\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessageUserVote\"},{\"id\":1017491692,\"predicate\":\"messageUserVoteInputOption\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessageUserVote\"},{\"id\":-1973033641,\"predicate\":\"messageUserVoteMultiple\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessageUserVote\"},{\"id\":136574537,\"predicate\":\"messages.votesList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"votes\",\"type\":\"Vector<MessageUserVote>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"messages.VotesList\"},{\"id\":-1144565411,\"predicate\":\"keyboardButtonRequestPoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"quiz\",\"type\":\"flags.0?Bool\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":1981704948,\"predicate\":\"messageEntityBankCard\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-177732982,\"predicate\":\"bankCardOpenUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"BankCardOpenUrl\"},{\"id\":1042605427,\"predicate\":\"payments.bankCardData\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"open_urls\",\"type\":\"Vector<BankCardOpenUrl>\"}],\"type\":\"payments.BankCardData\"},{\"id\":-118740917,\"predicate\":\"peerSelfLocated\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"PeerLocated\"},{\"id\":1949890536,\"predicate\":\"dialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"contacts\",\"type\":\"flags.0?true\"},{\"name\":\"non_contacts\",\"type\":\"flags.1?true\"},{\"name\":\"groups\",\"type\":\"flags.2?true\"},{\"name\":\"broadcasts\",\"type\":\"flags.3?true\"},{\"name\":\"bots\",\"type\":\"flags.4?true\"},{\"name\":\"exclude_muted\",\"type\":\"flags.11?true\"},{\"name\":\"exclude_read\",\"type\":\"flags.12?true\"},{\"name\":\"exclude_archived\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"emoticon\",\"type\":\"flags.25?string\"},{\"name\":\"pinned_peers\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"include_peers\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"exclude_peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"DialogFilter\"},{\"id\":2004110666,\"predicate\":\"dialogFilterSuggested\",\"params\":[{\"name\":\"filter\",\"type\":\"DialogFilter\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"DialogFilterSuggested\"},{\"id\":654302845,\"predicate\":\"updateDialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"filter\",\"type\":\"flags.0?DialogFilter\"}],\"type\":\"Update\"},{\"id\":-1512627963,\"predicate\":\"updateDialogFilterOrder\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":889491791,\"predicate\":\"updateDialogFilters\",\"params\":[],\"type\":\"Update\"},{\"id\":-1237848657,\"predicate\":\"statsDateRangeDays\",\"params\":[{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"}],\"type\":\"StatsDateRangeDays\"},{\"id\":-884757282,\"predicate\":\"statsAbsValueAndPrev\",\"params\":[{\"name\":\"current\",\"type\":\"double\"},{\"name\":\"previous\",\"type\":\"double\"}],\"type\":\"StatsAbsValueAndPrev\"},{\"id\":-875679776,\"predicate\":\"statsPercentValue\",\"params\":[{\"name\":\"part\",\"type\":\"double\"},{\"name\":\"total\",\"type\":\"double\"}],\"type\":\"StatsPercentValue\"},{\"id\":1244130093,\"predicate\":\"statsGraphAsync\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"StatsGraph\"},{\"id\":-1092839390,\"predicate\":\"statsGraphError\",\"params\":[{\"name\":\"error\",\"type\":\"string\"}],\"type\":\"StatsGraph\"},{\"id\":-1901828938,\"predicate\":\"statsGraph\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"json\",\"type\":\"DataJSON\"},{\"name\":\"zoom_token\",\"type\":\"flags.0?string\"}],\"type\":\"StatsGraph\"},{\"id\":-1387279939,\"predicate\":\"messageInteractionCounters\",\"params\":[{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"int\"},{\"name\":\"forwards\",\"type\":\"int\"}],\"type\":\"MessageInteractionCounters\"},{\"id\":-1107852396,\"predicate\":\"stats.broadcastStats\",\"params\":[{\"name\":\"period\",\"type\":\"StatsDateRangeDays\"},{\"name\":\"followers\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"views_per_post\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"shares_per_post\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"enabled_notifications\",\"type\":\"StatsPercentValue\"},{\"name\":\"growth_graph\",\"type\":\"StatsGraph\"},{\"name\":\"followers_graph\",\"type\":\"StatsGraph\"},{\"name\":\"mute_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_hours_graph\",\"type\":\"StatsGraph\"},{\"name\":\"interactions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"iv_interactions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"views_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"new_followers_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"languages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"recent_message_interactions\",\"type\":\"Vector<MessageInteractionCounters>\"}],\"type\":\"stats.BroadcastStats\"},{\"id\":-428884101,\"predicate\":\"inputMediaDice\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":1065280907,\"predicate\":\"messageMediaDice\",\"params\":[{\"name\":\"value\",\"type\":\"int\"},{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":-427863538,\"predicate\":\"inputStickerSetDice\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"InputStickerSet\"},{\"id\":-1728664459,\"predicate\":\"help.promoDataEmpty\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"help.PromoData\"},{\"id\":-1942390465,\"predicate\":\"help.promoData\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"proxy\",\"type\":\"flags.0?true\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"psa_type\",\"type\":\"flags.1?string\"},{\"name\":\"psa_message\",\"type\":\"flags.2?string\"}],\"type\":\"help.PromoData\"},{\"id\":-567037804,\"predicate\":\"videoSize\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"video_start_ts\",\"type\":\"flags.0?double\"}],\"type\":\"VideoSize\"},{\"id\":643940105,\"predicate\":\"updatePhoneCallSignalingData\",\"params\":[{\"name\":\"phone_call_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"Update\"},{\"id\":1634294960,\"predicate\":\"chatInvitePeek\",\"params\":[{\"name\":\"chat\",\"type\":\"Chat\"},{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"ChatInvite\"},{\"id\":-1660637285,\"predicate\":\"statsGroupTopPoster\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"int\"},{\"name\":\"avg_chars\",\"type\":\"int\"}],\"type\":\"StatsGroupTopPoster\"},{\"id\":-682079097,\"predicate\":\"statsGroupTopAdmin\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"deleted\",\"type\":\"int\"},{\"name\":\"kicked\",\"type\":\"int\"},{\"name\":\"banned\",\"type\":\"int\"}],\"type\":\"StatsGroupTopAdmin\"},{\"id\":1398765469,\"predicate\":\"statsGroupTopInviter\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"invitations\",\"type\":\"int\"}],\"type\":\"StatsGroupTopInviter\"},{\"id\":-276825834,\"predicate\":\"stats.megagroupStats\",\"params\":[{\"name\":\"period\",\"type\":\"StatsDateRangeDays\"},{\"name\":\"members\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"messages\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"viewers\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"posters\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"growth_graph\",\"type\":\"StatsGraph\"},{\"name\":\"members_graph\",\"type\":\"StatsGraph\"},{\"name\":\"new_members_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"languages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"messages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"actions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_hours_graph\",\"type\":\"StatsGraph\"},{\"name\":\"weekdays_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_posters\",\"type\":\"Vector<StatsGroupTopPoster>\"},{\"name\":\"top_admins\",\"type\":\"Vector<StatsGroupTopAdmin>\"},{\"name\":\"top_inviters\",\"type\":\"Vector<StatsGroupTopInviter>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"stats.MegagroupStats\"},{\"id\":-1096616924,\"predicate\":\"globalPrivacySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"archive_and_mute_new_noncontact_peers\",\"type\":\"flags.0?Bool\"}],\"type\":\"GlobalPrivacySettings\"},{\"id\":1667228533,\"predicate\":\"phoneConnectionWebrtc\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"turn\",\"type\":\"flags.0?true\"},{\"name\":\"stun\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"ipv6\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"password\",\"type\":\"string\"}],\"type\":\"PhoneConnection\"},{\"id\":1107543535,\"predicate\":\"help.countryCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"country_code\",\"type\":\"string\"},{\"name\":\"prefixes\",\"type\":\"flags.0?Vector<string>\"},{\"name\":\"patterns\",\"type\":\"flags.1?Vector<string>\"}],\"type\":\"help.CountryCode\"},{\"id\":-1014526429,\"predicate\":\"help.country\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"hidden\",\"type\":\"flags.0?true\"},{\"name\":\"iso2\",\"type\":\"string\"},{\"name\":\"default_name\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"flags.1?string\"},{\"name\":\"country_codes\",\"type\":\"Vector<help.CountryCode>\"}],\"type\":\"help.Country\"},{\"id\":-1815339214,\"predicate\":\"help.countriesListNotModified\",\"params\":[],\"type\":\"help.CountriesList\"},{\"id\":-2016381538,\"predicate\":\"help.countriesList\",\"params\":[{\"name\":\"countries\",\"type\":\"Vector<help.Country>\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.CountriesList\"},{\"id\":1163625789,\"predicate\":\"messageViews\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"views\",\"type\":\"flags.0?int\"},{\"name\":\"forwards\",\"type\":\"flags.1?int\"},{\"name\":\"replies\",\"type\":\"flags.2?MessageReplies\"}],\"type\":\"MessageViews\"},{\"id\":-761649164,\"predicate\":\"updateChannelMessageForwards\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"forwards\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-96535659,\"predicate\":\"photoSizeProgressive\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"sizes\",\"type\":\"Vector<int>\"}],\"type\":\"PhotoSize\"},{\"id\":-1228606141,\"predicate\":\"messages.messageViews\",\"params\":[{\"name\":\"views\",\"type\":\"Vector<MessageViews>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.MessageViews\"},{\"id\":-693004986,\"predicate\":\"updateReadChannelDiscussionInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"},{\"name\":\"broadcast_id\",\"type\":\"flags.0?long\"},{\"name\":\"broadcast_post\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":1767677564,\"predicate\":\"updateReadChannelDiscussionOutbox\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1506535550,\"predicate\":\"messages.discussionMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"max_id\",\"type\":\"flags.0?int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"flags.1?int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"flags.2?int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.DiscussionMessage\"},{\"id\":-1495959709,\"predicate\":\"messageReplyHeader\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reply_to_scheduled\",\"type\":\"flags.2?true\"},{\"name\":\"forum_topic\",\"type\":\"flags.3?true\"},{\"name\":\"reply_to_msg_id\",\"type\":\"int\"},{\"name\":\"reply_to_peer_id\",\"type\":\"flags.0?Peer\"},{\"name\":\"reply_to_top_id\",\"type\":\"flags.1?int\"}],\"type\":\"MessageReplyHeader\"},{\"id\":-2083123262,\"predicate\":\"messageReplies\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"comments\",\"type\":\"flags.0?true\"},{\"name\":\"replies\",\"type\":\"int\"},{\"name\":\"replies_pts\",\"type\":\"int\"},{\"name\":\"recent_repliers\",\"type\":\"flags.1?Vector<Peer>\"},{\"name\":\"channel_id\",\"type\":\"flags.0?long\"},{\"name\":\"max_id\",\"type\":\"flags.2?int\"},{\"name\":\"read_max_id\",\"type\":\"flags.3?int\"}],\"type\":\"MessageReplies\"},{\"id\":610945826,\"predicate\":\"updatePeerBlocked\",\"params\":[{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"blocked\",\"type\":\"Bool\"}],\"type\":\"Update\"},{\"id\":-386039788,\"predicate\":\"peerBlocked\",\"params\":[{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"PeerBlocked\"},{\"id\":-1937192669,\"predicate\":\"updateChannelUserTyping\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":-1392895362,\"predicate\":\"inputMessageCallbackQuery\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"query_id\",\"type\":\"long\"}],\"type\":\"InputMessage\"},{\"id\":453242886,\"predicate\":\"channelParticipantLeft\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"ChannelParticipant\"},{\"id\":-531931925,\"predicate\":\"channelParticipantsMentions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"q\",\"type\":\"flags.0?string\"},{\"name\":\"top_msg_id\",\"type\":\"flags.1?int\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-309990731,\"predicate\":\"updatePinnedMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1538885128,\"predicate\":\"updatePinnedChannelMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":464520273,\"predicate\":\"inputMessagesFilterPinned\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1986399595,\"predicate\":\"stats.messageStats\",\"params\":[{\"name\":\"views_graph\",\"type\":\"StatsGraph\"}],\"type\":\"stats.MessageStats\"},{\"id\":-1730095465,\"predicate\":\"messageActionGeoProximityReached\",\"params\":[{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"to_id\",\"type\":\"Peer\"},{\"name\":\"distance\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-668906175,\"predicate\":\"photoPathSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":-651419003,\"predicate\":\"speakingInGroupCallAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":2004925620,\"predicate\":\"groupCallDiscarded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"duration\",\"type\":\"int\"}],\"type\":\"GroupCall\"},{\"id\":-711498484,\"predicate\":\"groupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"join_muted\",\"type\":\"flags.1?true\"},{\"name\":\"can_change_join_muted\",\"type\":\"flags.2?true\"},{\"name\":\"join_date_asc\",\"type\":\"flags.6?true\"},{\"name\":\"schedule_start_subscribed\",\"type\":\"flags.8?true\"},{\"name\":\"can_start_video\",\"type\":\"flags.9?true\"},{\"name\":\"record_video_active\",\"type\":\"flags.11?true\"},{\"name\":\"rtmp_stream\",\"type\":\"flags.12?true\"},{\"name\":\"listeners_hidden\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.3?string\"},{\"name\":\"stream_dc_id\",\"type\":\"flags.4?int\"},{\"name\":\"record_start_date\",\"type\":\"flags.5?int\"},{\"name\":\"schedule_date\",\"type\":\"flags.7?int\"},{\"name\":\"unmuted_video_count\",\"type\":\"flags.10?int\"},{\"name\":\"unmuted_video_limit\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"GroupCall\"},{\"id\":-659913713,\"predicate\":\"inputGroupCall\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputGroupCall\"},{\"id\":2047704898,\"predicate\":\"messageActionGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"duration\",\"type\":\"flags.0?int\"}],\"type\":\"MessageAction\"},{\"id\":1345295095,\"predicate\":\"messageActionInviteToGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-341428482,\"predicate\":\"groupCallParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"muted\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.1?true\"},{\"name\":\"can_self_unmute\",\"type\":\"flags.2?true\"},{\"name\":\"just_joined\",\"type\":\"flags.4?true\"},{\"name\":\"versioned\",\"type\":\"flags.5?true\"},{\"name\":\"min\",\"type\":\"flags.8?true\"},{\"name\":\"muted_by_you\",\"type\":\"flags.9?true\"},{\"name\":\"volume_by_admin\",\"type\":\"flags.10?true\"},{\"name\":\"self\",\"type\":\"flags.12?true\"},{\"name\":\"video_joined\",\"type\":\"flags.15?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"active_date\",\"type\":\"flags.3?int\"},{\"name\":\"source\",\"type\":\"int\"},{\"name\":\"volume\",\"type\":\"flags.7?int\"},{\"name\":\"about\",\"type\":\"flags.11?string\"},{\"name\":\"raise_hand_rating\",\"type\":\"flags.13?long\"},{\"name\":\"video\",\"type\":\"flags.6?GroupCallParticipantVideo\"},{\"name\":\"presentation\",\"type\":\"flags.14?GroupCallParticipantVideo\"}],\"type\":\"GroupCallParticipant\"},{\"id\":-124097970,\"predicate\":\"updateChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-219423922,\"predicate\":\"updateGroupCallParticipants\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":347227392,\"predicate\":\"updateGroupCall\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"call\",\"type\":\"GroupCall\"}],\"type\":\"Update\"},{\"id\":-1636664659,\"predicate\":\"phone.groupCall\",\"params\":[{\"name\":\"call\",\"type\":\"GroupCall\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"participants_next_offset\",\"type\":\"string\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.GroupCall\"},{\"id\":-193506890,\"predicate\":\"phone.groupParticipants\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"next_offset\",\"type\":\"string\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"phone.GroupParticipants\"},{\"id\":813821341,\"predicate\":\"inlineQueryPeerTypeSameBotPM\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":-2093215828,\"predicate\":\"inlineQueryPeerTypePM\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":-681130742,\"predicate\":\"inlineQueryPeerTypeChat\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":1589952067,\"predicate\":\"inlineQueryPeerTypeMegagroup\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":1664413338,\"predicate\":\"inlineQueryPeerTypeBroadcast\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":589338437,\"predicate\":\"channelAdminLogEventActionStartGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-610299584,\"predicate\":\"channelAdminLogEventActionDiscardGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-115071790,\"predicate\":\"channelAdminLogEventActionParticipantMute\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-431740480,\"predicate\":\"channelAdminLogEventActionParticipantUnmute\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1456906823,\"predicate\":\"channelAdminLogEventActionToggleGroupCallSetting\",\"params\":[{\"name\":\"join_muted\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1966921727,\"predicate\":\"inputPaymentCredentialsGooglePay\",\"params\":[{\"name\":\"payment_token\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":375566091,\"predicate\":\"messages.historyImport\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"messages.HistoryImport\"},{\"id\":-606432698,\"predicate\":\"sendMessageHistoryImportAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":1578088377,\"predicate\":\"messages.historyImportParsed\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pm\",\"type\":\"flags.0?true\"},{\"name\":\"group\",\"type\":\"flags.1?true\"},{\"name\":\"title\",\"type\":\"flags.2?string\"}],\"type\":\"messages.HistoryImportParsed\"},{\"id\":-170010905,\"predicate\":\"inputReportReasonFake\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-275956116,\"predicate\":\"messages.affectedFoundMessages\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedFoundMessages\"},{\"id\":1007897979,\"predicate\":\"messageActionSetMessagesTTL\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"period\",\"type\":\"int\"},{\"name\":\"auto_setting_from\",\"type\":\"flags.0?long\"}],\"type\":\"MessageAction\"},{\"id\":-1147422299,\"predicate\":\"updatePeerHistoryTTL\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"ttl_period\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":-796432838,\"predicate\":\"updateChatParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"actor_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"prev_participant\",\"type\":\"flags.0?ChatParticipant\"},{\"name\":\"new_participant\",\"type\":\"flags.1?ChatParticipant\"},{\"name\":\"invite\",\"type\":\"flags.2?ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1738720581,\"predicate\":\"updateChannelParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_chatlist\",\"type\":\"flags.3?true\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"actor_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"prev_participant\",\"type\":\"flags.0?ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"flags.1?ChannelParticipant\"},{\"name\":\"invite\",\"type\":\"flags.2?ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-997782967,\"predicate\":\"updateBotStopped\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"stopped\",\"type\":\"Bool\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1940201511,\"predicate\":\"chatInviteImporter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requested\",\"type\":\"flags.0?true\"},{\"name\":\"via_chatlist\",\"type\":\"flags.3?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"about\",\"type\":\"flags.2?string\"},{\"name\":\"approved_by\",\"type\":\"flags.1?long\"}],\"type\":\"ChatInviteImporter\"},{\"id\":-1111085620,\"predicate\":\"messages.exportedChatInvites\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"invites\",\"type\":\"Vector<ExportedChatInvite>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvites\"},{\"id\":410107472,\"predicate\":\"messages.exportedChatInvite\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":572915951,\"predicate\":\"messages.exportedChatInviteReplaced\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"new_invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":-2118733814,\"predicate\":\"messages.chatInviteImporters\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"importers\",\"type\":\"Vector<ChatInviteImporter>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatInviteImporters\"},{\"id\":-219353309,\"predicate\":\"chatAdminWithInvites\",\"params\":[{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"invites_count\",\"type\":\"int\"},{\"name\":\"revoked_invites_count\",\"type\":\"int\"}],\"type\":\"ChatAdminWithInvites\"},{\"id\":-1231326505,\"predicate\":\"messages.chatAdminsWithInvites\",\"params\":[{\"name\":\"admins\",\"type\":\"Vector<ChatAdminWithInvites>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatAdminsWithInvites\"},{\"id\":-23084712,\"predicate\":\"channelAdminLogEventActionParticipantJoinByInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_chatlist\",\"type\":\"flags.0?true\"},{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1515256996,\"predicate\":\"channelAdminLogEventActionExportedInviteDelete\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1091179342,\"predicate\":\"channelAdminLogEventActionExportedInviteRevoke\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-384910503,\"predicate\":\"channelAdminLogEventActionExportedInviteEdit\",\"params\":[{\"name\":\"prev_invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"new_invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1048537159,\"predicate\":\"channelAdminLogEventActionParticipantVolume\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1855199800,\"predicate\":\"channelAdminLogEventActionChangeHistoryTTL\",\"params\":[{\"name\":\"prev_value\",\"type\":\"int\"},{\"name\":\"new_value\",\"type\":\"int\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1571952873,\"predicate\":\"messages.checkedHistoryImportPeer\",\"params\":[{\"name\":\"confirm_text\",\"type\":\"string\"}],\"type\":\"messages.CheckedHistoryImportPeer\"},{\"id\":93890858,\"predicate\":\"inputGroupCallStream\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"time_ms\",\"type\":\"long\"},{\"name\":\"scale\",\"type\":\"int\"},{\"name\":\"video_channel\",\"type\":\"flags.0?int\"},{\"name\":\"video_quality\",\"type\":\"flags.0?int\"}],\"type\":\"InputFileLocation\"},{\"id\":-1343921601,\"predicate\":\"phone.joinAsPeers\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.JoinAsPeers\"},{\"id\":541839704,\"predicate\":\"phone.exportedGroupCallInvite\",\"params\":[{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"phone.ExportedGroupCallInvite\"},{\"id\":-672693723,\"predicate\":\"inputBotInlineMessageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?InputWebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"provider_data\",\"type\":\"DataJSON\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":894081801,\"predicate\":\"botInlineMessageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.1?true\"},{\"name\":\"test\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?WebDocument\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1281329567,\"predicate\":\"messageActionGroupCallScheduled\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"schedule_date\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-592373577,\"predicate\":\"groupCallParticipantVideoSourceGroup\",\"params\":[{\"name\":\"semantics\",\"type\":\"string\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"}],\"type\":\"GroupCallParticipantVideoSourceGroup\"},{\"id\":1735736008,\"predicate\":\"groupCallParticipantVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"paused\",\"type\":\"flags.0?true\"},{\"name\":\"endpoint\",\"type\":\"string\"},{\"name\":\"source_groups\",\"type\":\"Vector<GroupCallParticipantVideoSourceGroup>\"},{\"name\":\"audio_source\",\"type\":\"flags.1?int\"}],\"type\":\"GroupCallParticipantVideo\"},{\"id\":192428418,\"predicate\":\"updateGroupCallConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"presentation\",\"type\":\"flags.0?true\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Update\"},{\"id\":-2046910401,\"predicate\":\"stickers.suggestedShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"stickers.SuggestedShortName\"},{\"id\":795652779,\"predicate\":\"botCommandScopeDefault\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":1011811544,\"predicate\":\"botCommandScopeUsers\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":1877059713,\"predicate\":\"botCommandScopeChats\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":-1180016534,\"predicate\":\"botCommandScopeChatAdmins\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":-610432643,\"predicate\":\"botCommandScopePeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"BotCommandScope\"},{\"id\":1071145937,\"predicate\":\"botCommandScopePeerAdmins\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"BotCommandScope\"},{\"id\":169026035,\"predicate\":\"botCommandScopePeerUser\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"BotCommandScope\"},{\"id\":-478701471,\"predicate\":\"account.resetPasswordFailedWait\",\"params\":[{\"name\":\"retry_date\",\"type\":\"int\"}],\"type\":\"account.ResetPasswordResult\"},{\"id\":-370148227,\"predicate\":\"account.resetPasswordRequestedWait\",\"params\":[{\"name\":\"until_date\",\"type\":\"int\"}],\"type\":\"account.ResetPasswordResult\"},{\"id\":-383330754,\"predicate\":\"account.resetPasswordOk\",\"params\":[],\"type\":\"account.ResetPasswordResult\"},{\"id\":1299263278,\"predicate\":\"updateBotCommands\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"commands\",\"type\":\"Vector<BotCommand>\"}],\"type\":\"Update\"},{\"id\":-1434950843,\"predicate\":\"messageActionSetChatTheme\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":-1336228175,\"predicate\":\"sendMessageChooseStickerAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-64636888,\"predicate\":\"sponsoredMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"recommended\",\"type\":\"flags.5?true\"},{\"name\":\"show_peer_photo\",\"type\":\"flags.6?true\"},{\"name\":\"random_id\",\"type\":\"bytes\"},{\"name\":\"from_id\",\"type\":\"flags.3?Peer\"},{\"name\":\"chat_invite\",\"type\":\"flags.4?ChatInvite\"},{\"name\":\"chat_invite_hash\",\"type\":\"flags.4?string\"},{\"name\":\"channel_post\",\"type\":\"flags.2?int\"},{\"name\":\"start_param\",\"type\":\"flags.0?string\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"sponsor_info\",\"type\":\"flags.7?string\"},{\"name\":\"additional_info\",\"type\":\"flags.8?string\"}],\"type\":\"SponsoredMessage\"},{\"id\":-907141753,\"predicate\":\"messages.sponsoredMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"posts_between\",\"type\":\"flags.0?int\"},{\"name\":\"messages\",\"type\":\"Vector<SponsoredMessage>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.SponsoredMessages\"},{\"id\":215889721,\"predicate\":\"inputStickerSetAnimatedEmojiAnimations\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":630664139,\"predicate\":\"sendMessageEmojiInteraction\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"interaction\",\"type\":\"DataJSON\"}],\"type\":\"SendMessageAction\"},{\"id\":-1234857938,\"predicate\":\"sendMessageEmojiInteractionSeen\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"SendMessageAction\"},{\"id\":-1227287081,\"predicate\":\"inputBotInlineMessageID64\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"owner_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputBotInlineMessageID\"},{\"id\":-911191137,\"predicate\":\"searchResultsCalendarPeriod\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"min_msg_id\",\"type\":\"int\"},{\"name\":\"max_msg_id\",\"type\":\"int\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"SearchResultsCalendarPeriod\"},{\"id\":343859772,\"predicate\":\"messages.searchResultsCalendar\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.0?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"min_msg_id\",\"type\":\"int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.1?int\"},{\"name\":\"periods\",\"type\":\"Vector<SearchResultsCalendarPeriod>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.SearchResultsCalendar\"},{\"id\":2137295719,\"predicate\":\"searchResultPosition\",\"params\":[{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"SearchResultsPosition\"},{\"id\":1404185519,\"predicate\":\"messages.searchResultsPositions\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"positions\",\"type\":\"Vector<SearchResultsPosition>\"}],\"type\":\"messages.SearchResultsPositions\"},{\"id\":-339958837,\"predicate\":\"messageActionChatJoinedByRequest\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":1885586395,\"predicate\":\"updatePendingJoinRequests\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"requests_pending\",\"type\":\"int\"},{\"name\":\"recent_requesters\",\"type\":\"Vector<long>\"}],\"type\":\"Update\"},{\"id\":299870598,\"predicate\":\"updateBotChatInviteRequester\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1347021750,\"predicate\":\"channelAdminLogEventActionParticipantJoinByRequest\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"approved_by\",\"type\":\"long\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-376962181,\"predicate\":\"inputKeyboardButtonUserProfile\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"KeyboardButton\"},{\"id\":814112961,\"predicate\":\"keyboardButtonUserProfile\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"KeyboardButton\"},{\"id\":-191450938,\"predicate\":\"channels.sendAsPeers\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<SendAsPeer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.SendAsPeers\"},{\"id\":-886388890,\"predicate\":\"channelAdminLogEventActionToggleNoForwards\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-738646805,\"predicate\":\"messages.stickerSetNotModified\",\"params\":[],\"type\":\"messages.StickerSet\"},{\"id\":997004590,\"predicate\":\"users.userFull\",\"params\":[{\"name\":\"full_user\",\"type\":\"UserFull\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"users.UserFull\"},{\"id\":1753266509,\"predicate\":\"messages.peerSettings\",\"params\":[{\"name\":\"settings\",\"type\":\"PeerSettings\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.PeerSettings\"},{\"id\":663693416,\"predicate\":\"channelAdminLogEventActionSendMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-702884114,\"predicate\":\"auth.codeTypeMissedCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":-2113903484,\"predicate\":\"auth.sentCodeTypeMissedCall\",\"params\":[{\"name\":\"prefix\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1012759713,\"predicate\":\"auth.loggedOut\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"future_auth_token\",\"type\":\"flags.0?bytes\"}],\"type\":\"auth.LoggedOut\"},{\"id\":1578843320,\"predicate\":\"updateMessageReactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"reactions\",\"type\":\"MessageReactions\"}],\"type\":\"Update\"},{\"id\":-1546531968,\"predicate\":\"reactionCount\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chosen_order\",\"type\":\"flags.0?int\"},{\"name\":\"reaction\",\"type\":\"Reaction\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"ReactionCount\"},{\"id\":1328256121,\"predicate\":\"messageReactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"min\",\"type\":\"flags.0?true\"},{\"name\":\"can_see_list\",\"type\":\"flags.2?true\"},{\"name\":\"results\",\"type\":\"Vector<ReactionCount>\"},{\"name\":\"recent_reactions\",\"type\":\"flags.1?Vector<MessagePeerReaction>\"}],\"type\":\"MessageReactions\"},{\"id\":834488621,\"predicate\":\"messages.messageReactionsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"Vector<MessagePeerReaction>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"messages.MessageReactionsList\"},{\"id\":-1065882623,\"predicate\":\"availableReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inactive\",\"type\":\"flags.0?true\"},{\"name\":\"premium\",\"type\":\"flags.2?true\"},{\"name\":\"reaction\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"static_icon\",\"type\":\"Document\"},{\"name\":\"appear_animation\",\"type\":\"Document\"},{\"name\":\"select_animation\",\"type\":\"Document\"},{\"name\":\"activate_animation\",\"type\":\"Document\"},{\"name\":\"effect_animation\",\"type\":\"Document\"},{\"name\":\"around_animation\",\"type\":\"flags.1?Document\"},{\"name\":\"center_icon\",\"type\":\"flags.1?Document\"}],\"type\":\"AvailableReaction\"},{\"id\":-1626924713,\"predicate\":\"messages.availableReactionsNotModified\",\"params\":[],\"type\":\"messages.AvailableReactions\"},{\"id\":1989032621,\"predicate\":\"messages.availableReactions\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"Vector<AvailableReaction>\"}],\"type\":\"messages.AvailableReactions\"},{\"id\":852137487,\"predicate\":\"messageEntitySpoiler\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1102180616,\"predicate\":\"channelAdminLogEventActionChangeAvailableReactions\",\"params\":[{\"name\":\"prev_value\",\"type\":\"ChatReactions\"},{\"name\":\"new_value\",\"type\":\"ChatReactions\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1938180548,\"predicate\":\"messagePeerReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.0?true\"},{\"name\":\"unread\",\"type\":\"flags.1?true\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"Reaction\"}],\"type\":\"MessagePeerReaction\"},{\"id\":-2132064081,\"predicate\":\"groupCallStreamChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"int\"},{\"name\":\"scale\",\"type\":\"int\"},{\"name\":\"last_timestamp_ms\",\"type\":\"long\"}],\"type\":\"GroupCallStreamChannel\"},{\"id\":-790330702,\"predicate\":\"phone.groupCallStreamChannels\",\"params\":[{\"name\":\"channels\",\"type\":\"Vector<GroupCallStreamChannel>\"}],\"type\":\"phone.GroupCallStreamChannels\"},{\"id\":177124030,\"predicate\":\"inputReportReasonIllegalDrugs\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1631091139,\"predicate\":\"inputReportReasonPersonalDetails\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":767505458,\"predicate\":\"phone.groupCallStreamRtmpUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"key\",\"type\":\"string\"}],\"type\":\"phone.GroupCallStreamRtmpUrl\"},{\"id\":1165423600,\"predicate\":\"attachMenuBotIconColor\",\"params\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"color\",\"type\":\"int\"}],\"type\":\"AttachMenuBotIconColor\"},{\"id\":-1297663893,\"predicate\":\"attachMenuBotIcon\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"icon\",\"type\":\"Document\"},{\"name\":\"colors\",\"type\":\"flags.0?Vector<AttachMenuBotIconColor>\"}],\"type\":\"AttachMenuBotIcon\"},{\"id\":-928371502,\"predicate\":\"attachMenuBot\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inactive\",\"type\":\"flags.0?true\"},{\"name\":\"has_settings\",\"type\":\"flags.1?true\"},{\"name\":\"request_write_access\",\"type\":\"flags.2?true\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"peer_types\",\"type\":\"Vector<AttachMenuPeerType>\"},{\"name\":\"icons\",\"type\":\"Vector<AttachMenuBotIcon>\"}],\"type\":\"AttachMenuBot\"},{\"id\":-237467044,\"predicate\":\"attachMenuBotsNotModified\",\"params\":[],\"type\":\"AttachMenuBots\"},{\"id\":1011024320,\"predicate\":\"attachMenuBots\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"bots\",\"type\":\"Vector<AttachMenuBot>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"AttachMenuBots\"},{\"id\":-1816172929,\"predicate\":\"attachMenuBotsBot\",\"params\":[{\"name\":\"bot\",\"type\":\"AttachMenuBot\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"AttachMenuBotsBot\"},{\"id\":397910539,\"predicate\":\"updateAttachMenuBots\",\"params\":[],\"type\":\"Update\"},{\"id\":202659196,\"predicate\":\"webViewResultUrl\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"WebViewResult\"},{\"id\":-2010155333,\"predicate\":\"simpleWebViewResultUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"SimpleWebViewResult\"},{\"id\":211046684,\"predicate\":\"webViewMessageSent\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"msg_id\",\"type\":\"flags.0?InputBotInlineMessageID\"}],\"type\":\"WebViewMessageSent\"},{\"id\":361936797,\"predicate\":\"updateWebViewResultSent\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":326529584,\"predicate\":\"keyboardButtonWebView\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1598009252,\"predicate\":\"keyboardButtonSimpleWebView\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":1205698681,\"predicate\":\"messageActionWebViewDataSentMe\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":-1262252875,\"predicate\":\"messageActionWebViewDataSent\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":347625491,\"predicate\":\"updateBotMenuButton\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"button\",\"type\":\"BotMenuButton\"}],\"type\":\"Update\"},{\"id\":1966318984,\"predicate\":\"botMenuButtonDefault\",\"params\":[],\"type\":\"BotMenuButton\"},{\"id\":1113113093,\"predicate\":\"botMenuButtonCommands\",\"params\":[],\"type\":\"BotMenuButton\"},{\"id\":-944407322,\"predicate\":\"botMenuButton\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"BotMenuButton\"},{\"id\":-67704655,\"predicate\":\"account.savedRingtonesNotModified\",\"params\":[],\"type\":\"account.SavedRingtones\"},{\"id\":-1041683259,\"predicate\":\"account.savedRingtones\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"ringtones\",\"type\":\"Vector<Document>\"}],\"type\":\"account.SavedRingtones\"},{\"id\":1960361625,\"predicate\":\"updateSavedRingtones\",\"params\":[],\"type\":\"Update\"},{\"id\":-1746354498,\"predicate\":\"notificationSoundDefault\",\"params\":[],\"type\":\"NotificationSound\"},{\"id\":1863070943,\"predicate\":\"notificationSoundNone\",\"params\":[],\"type\":\"NotificationSound\"},{\"id\":-2096391452,\"predicate\":\"notificationSoundLocal\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"NotificationSound\"},{\"id\":-9666487,\"predicate\":\"notificationSoundRingtone\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"NotificationSound\"},{\"id\":-1222230163,\"predicate\":\"account.savedRingtone\",\"params\":[],\"type\":\"account.SavedRingtone\"},{\"id\":523271863,\"predicate\":\"account.savedRingtoneConverted\",\"params\":[{\"name\":\"document\",\"type\":\"Document\"}],\"type\":\"account.SavedRingtone\"},{\"id\":2104224014,\"predicate\":\"attachMenuPeerTypeSameBotPM\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":-1020528102,\"predicate\":\"attachMenuPeerTypeBotPM\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":-247016673,\"predicate\":\"attachMenuPeerTypePM\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":84480319,\"predicate\":\"attachMenuPeerTypeChat\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":2080104188,\"predicate\":\"attachMenuPeerTypeBroadcast\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":-317687113,\"predicate\":\"chatInvitePublicJoinRequests\",\"params\":[],\"type\":\"ExportedChatInvite\"},{\"id\":-977967015,\"predicate\":\"inputInvoiceMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"InputInvoice\"},{\"id\":-1020867857,\"predicate\":\"inputInvoiceSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputInvoice\"},{\"id\":-1362048039,\"predicate\":\"payments.exportedInvoice\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"payments.ExportedInvoice\"},{\"id\":8703322,\"predicate\":\"updateTranscribedAudio\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pending\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"transcription_id\",\"type\":\"long\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":-1821037486,\"predicate\":\"messages.transcribedAudio\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pending\",\"type\":\"flags.0?true\"},{\"name\":\"transcription_id\",\"type\":\"long\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"messages.TranscribedAudio\"},{\"id\":909284270,\"predicate\":\"dialogFilterDefault\",\"params\":[],\"type\":\"DialogFilter\"},{\"id\":1395946908,\"predicate\":\"help.premiumPromo\",\"params\":[{\"name\":\"status_text\",\"type\":\"string\"},{\"name\":\"status_entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"video_sections\",\"type\":\"Vector<string>\"},{\"name\":\"videos\",\"type\":\"Vector<Document>\"},{\"name\":\"period_options\",\"type\":\"Vector<PremiumSubscriptionOption>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"help.PremiumPromo\"},{\"id\":-925956616,\"predicate\":\"messageEntityCustomEmoji\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"document_id\",\"type\":\"long\"}],\"type\":\"MessageEntity\"},{\"id\":-48981863,\"predicate\":\"documentAttributeCustomEmoji\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"free\",\"type\":\"flags.0?true\"},{\"name\":\"text_color\",\"type\":\"flags.1?true\"},{\"name\":\"alt\",\"type\":\"string\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"DocumentAttribute\"},{\"id\":1087454222,\"predicate\":\"stickerSetFullCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"keywords\",\"type\":\"Vector<StickerKeyword>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"}],\"type\":\"StickerSetCovered\"},{\"id\":-1502273946,\"predicate\":\"inputStorePaymentPremiumSubscription\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"restore\",\"type\":\"flags.0?true\"},{\"name\":\"upgrade\",\"type\":\"flags.1?true\"}],\"type\":\"InputStorePaymentPurpose\"},{\"id\":1634697192,\"predicate\":\"inputStorePaymentGiftPremium\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"InputStorePaymentPurpose\"},{\"id\":-935499028,\"predicate\":\"messageActionGiftPremium\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"crypto_currency\",\"type\":\"flags.0?string\"},{\"name\":\"crypto_amount\",\"type\":\"flags.0?long\"}],\"type\":\"MessageAction\"},{\"id\":1958953753,\"predicate\":\"premiumGiftOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"},{\"name\":\"bot_url\",\"type\":\"string\"},{\"name\":\"store_product\",\"type\":\"flags.0?string\"}],\"type\":\"PremiumGiftOption\"},{\"id\":-930399486,\"predicate\":\"inputStickerSetPremiumGifts\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":-78886548,\"predicate\":\"updateReadFeaturedEmojiStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":-1360618136,\"predicate\":\"inputPrivacyKeyVoiceMessages\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":110621716,\"predicate\":\"privacyKeyVoiceMessages\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-1996951013,\"predicate\":\"paymentFormMethod\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"PaymentFormMethod\"},{\"id\":-193992412,\"predicate\":\"inputWebFileAudioAlbumThumbLocation\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"small\",\"type\":\"flags.2?true\"},{\"name\":\"document\",\"type\":\"flags.0?InputDocument\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"performer\",\"type\":\"flags.1?string\"}],\"type\":\"InputWebFileLocation\"},{\"id\":769727150,\"predicate\":\"emojiStatusEmpty\",\"params\":[],\"type\":\"EmojiStatus\"},{\"id\":-1835310691,\"predicate\":\"emojiStatus\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"}],\"type\":\"EmojiStatus\"},{\"id\":-97474361,\"predicate\":\"emojiStatusUntil\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"},{\"name\":\"until\",\"type\":\"int\"}],\"type\":\"EmojiStatus\"},{\"id\":674706841,\"predicate\":\"updateUserEmojiStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"emoji_status\",\"type\":\"EmojiStatus\"}],\"type\":\"Update\"},{\"id\":821314523,\"predicate\":\"updateRecentEmojiStatuses\",\"params\":[],\"type\":\"Update\"},{\"id\":-796072379,\"predicate\":\"account.emojiStatusesNotModified\",\"params\":[],\"type\":\"account.EmojiStatuses\"},{\"id\":-1866176559,\"predicate\":\"account.emojiStatuses\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"statuses\",\"type\":\"Vector<EmojiStatus>\"}],\"type\":\"account.EmojiStatuses\"},{\"id\":2046153753,\"predicate\":\"reactionEmpty\",\"params\":[],\"type\":\"Reaction\"},{\"id\":455247544,\"predicate\":\"reactionEmoji\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"Reaction\"},{\"id\":-1992950669,\"predicate\":\"reactionCustomEmoji\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"}],\"type\":\"Reaction\"},{\"id\":-352570692,\"predicate\":\"chatReactionsNone\",\"params\":[],\"type\":\"ChatReactions\"},{\"id\":1385335754,\"predicate\":\"chatReactionsAll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"allow_custom\",\"type\":\"flags.0?true\"}],\"type\":\"ChatReactions\"},{\"id\":1713193015,\"predicate\":\"chatReactionsSome\",\"params\":[{\"name\":\"reactions\",\"type\":\"Vector<Reaction>\"}],\"type\":\"ChatReactions\"},{\"id\":-1334846497,\"predicate\":\"messages.reactionsNotModified\",\"params\":[],\"type\":\"messages.Reactions\"},{\"id\":-352454890,\"predicate\":\"messages.reactions\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"reactions\",\"type\":\"Vector<Reaction>\"}],\"type\":\"messages.Reactions\"},{\"id\":1870160884,\"predicate\":\"updateRecentReactions\",\"params\":[],\"type\":\"Update\"},{\"id\":-2030252155,\"predicate\":\"updateMoveStickerSetToTop\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"},{\"name\":\"stickerset\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-196020837,\"predicate\":\"auth.sentCodeTypeEmailCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"apple_signin_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"google_signin_allowed\",\"type\":\"flags.1?true\"},{\"name\":\"email_pattern\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"reset_available_period\",\"type\":\"flags.3?int\"},{\"name\":\"reset_pending_date\",\"type\":\"flags.4?int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1521934870,\"predicate\":\"auth.sentCodeTypeSetUpEmailRequired\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"apple_signin_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"google_signin_allowed\",\"type\":\"flags.1?true\"}],\"type\":\"auth.SentCodeType\"},{\"id\":1128644211,\"predicate\":\"emailVerifyPurposeLoginSetup\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"EmailVerifyPurpose\"},{\"id\":1383932651,\"predicate\":\"emailVerifyPurposeLoginChange\",\"params\":[],\"type\":\"EmailVerifyPurpose\"},{\"id\":-1141565819,\"predicate\":\"emailVerifyPurposePassport\",\"params\":[],\"type\":\"EmailVerifyPurpose\"},{\"id\":-1842457175,\"predicate\":\"emailVerificationCode\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"EmailVerification\"},{\"id\":-611279166,\"predicate\":\"emailVerificationGoogle\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"EmailVerification\"},{\"id\":-1764723459,\"predicate\":\"emailVerificationApple\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"EmailVerification\"},{\"id\":731303195,\"predicate\":\"account.emailVerified\",\"params\":[{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"account.EmailVerified\"},{\"id\":-507835039,\"predicate\":\"account.emailVerifiedLogin\",\"params\":[{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"sent_code\",\"type\":\"auth.SentCode\"}],\"type\":\"account.EmailVerified\"},{\"id\":1596792306,\"predicate\":\"premiumSubscriptionOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"current\",\"type\":\"flags.1?true\"},{\"name\":\"can_purchase_upgrade\",\"type\":\"flags.2?true\"},{\"name\":\"transaction\",\"type\":\"flags.3?string\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"},{\"name\":\"bot_url\",\"type\":\"string\"},{\"name\":\"store_product\",\"type\":\"flags.0?string\"}],\"type\":\"PremiumSubscriptionOption\"},{\"id\":80008398,\"predicate\":\"inputStickerSetEmojiGenericAnimations\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":701560302,\"predicate\":\"inputStickerSetEmojiDefaultStatuses\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":-1206095820,\"predicate\":\"sendAsPeer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"premium_required\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"SendAsPeer\"},{\"id\":-1386050360,\"predicate\":\"messageExtendedMediaPreview\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"w\",\"type\":\"flags.0?int\"},{\"name\":\"h\",\"type\":\"flags.0?int\"},{\"name\":\"thumb\",\"type\":\"flags.1?PhotoSize\"},{\"name\":\"video_duration\",\"type\":\"flags.2?int\"}],\"type\":\"MessageExtendedMedia\"},{\"id\":-297296796,\"predicate\":\"messageExtendedMedia\",\"params\":[{\"name\":\"media\",\"type\":\"MessageMedia\"}],\"type\":\"MessageExtendedMedia\"},{\"id\":1517529484,\"predicate\":\"updateMessageExtendedMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"extended_media\",\"type\":\"MessageExtendedMedia\"}],\"type\":\"Update\"},{\"id\":-50416996,\"predicate\":\"stickerKeyword\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"},{\"name\":\"keyword\",\"type\":\"Vector<string>\"}],\"type\":\"StickerKeyword\"},{\"id\":-1274595769,\"predicate\":\"username\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"editable\",\"type\":\"flags.0?true\"},{\"name\":\"active\",\"type\":\"flags.1?true\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Username\"},{\"id\":-263212119,\"predicate\":\"channelAdminLogEventActionChangeUsernames\",\"params\":[{\"name\":\"prev_value\",\"type\":\"Vector<string>\"},{\"name\":\"new_value\",\"type\":\"Vector<string>\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":46949251,\"predicate\":\"channelAdminLogEventActionToggleForum\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1483767080,\"predicate\":\"channelAdminLogEventActionCreateTopic\",\"params\":[{\"name\":\"topic\",\"type\":\"ForumTopic\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-261103096,\"predicate\":\"channelAdminLogEventActionEditTopic\",\"params\":[{\"name\":\"prev_topic\",\"type\":\"ForumTopic\"},{\"name\":\"new_topic\",\"type\":\"ForumTopic\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1374254839,\"predicate\":\"channelAdminLogEventActionDeleteTopic\",\"params\":[{\"name\":\"topic\",\"type\":\"ForumTopic\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1569535291,\"predicate\":\"channelAdminLogEventActionPinTopic\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"prev_topic\",\"type\":\"flags.0?ForumTopic\"},{\"name\":\"new_topic\",\"type\":\"flags.1?ForumTopic\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":37687451,\"predicate\":\"forumTopicDeleted\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"ForumTopic\"},{\"id\":1903173033,\"predicate\":\"forumTopic\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"my\",\"type\":\"flags.1?true\"},{\"name\":\"closed\",\"type\":\"flags.2?true\"},{\"name\":\"pinned\",\"type\":\"flags.3?true\"},{\"name\":\"short\",\"type\":\"flags.5?true\"},{\"name\":\"hidden\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"icon_color\",\"type\":\"int\"},{\"name\":\"icon_emoji_id\",\"type\":\"flags.0?long\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"unread_mentions_count\",\"type\":\"int\"},{\"name\":\"unread_reactions_count\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"draft\",\"type\":\"flags.4?DraftMessage\"}],\"type\":\"ForumTopic\"},{\"id\":913709011,\"predicate\":\"messages.forumTopics\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"order_by_create_date\",\"type\":\"flags.0?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"topics\",\"type\":\"Vector<ForumTopic>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"messages.ForumTopics\"},{\"id\":228168278,\"predicate\":\"messageActionTopicCreate\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"icon_color\",\"type\":\"int\"},{\"name\":\"icon_emoji_id\",\"type\":\"flags.0?long\"}],\"type\":\"MessageAction\"},{\"id\":-1064024032,\"predicate\":\"messageActionTopicEdit\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"icon_emoji_id\",\"type\":\"flags.1?long\"},{\"name\":\"closed\",\"type\":\"flags.2?Bool\"},{\"name\":\"hidden\",\"type\":\"flags.3?Bool\"}],\"type\":\"MessageAction\"},{\"id\":422509539,\"predicate\":\"updateChannelPinnedTopic\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"topic_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1548122514,\"predicate\":\"inputNotifyForumTopic\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"int\"}],\"type\":\"InputNotifyPeer\"},{\"id\":577659656,\"predicate\":\"notifyForumTopic\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_msg_id\",\"type\":\"int\"}],\"type\":\"NotifyPeer\"},{\"id\":1153562857,\"predicate\":\"inputStickerSetEmojiDefaultTopicIcons\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":406407439,\"predicate\":\"messages.sponsoredMessagesEmpty\",\"params\":[],\"type\":\"messages.SponsoredMessages\"},{\"id\":-31881726,\"predicate\":\"updateChannelPinnedTopics\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"order\",\"type\":\"flags.0?Vector<int>\"}],\"type\":\"Update\"},{\"id\":1135897376,\"predicate\":\"defaultHistoryTTL\",\"params\":[{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"DefaultHistoryTTL\"},{\"id\":116234636,\"predicate\":\"auth.codeTypeFragmentSms\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":-648651719,\"predicate\":\"auth.sentCodeTypeFragmentSms\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":1103040667,\"predicate\":\"exportedContactToken\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"ExportedContactToken\"},{\"id\":1693675004,\"predicate\":\"channelAdminLogEventActionToggleAntiSpam\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1474192222,\"predicate\":\"messageActionSuggestProfilePhoto\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"}],\"type\":\"MessageAction\"},{\"id\":2008112412,\"predicate\":\"stickerSetNoCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"}],\"type\":\"StickerSetCovered\"},{\"id\":542282808,\"predicate\":\"updateUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":596704836,\"predicate\":\"auth.sentCodeSuccess\",\"params\":[{\"name\":\"authorization\",\"type\":\"auth.Authorization\"}],\"type\":\"auth.SentCode\"},{\"id\":-25742243,\"predicate\":\"messageActionRequestedPeer\",\"params\":[{\"name\":\"button_id\",\"type\":\"int\"},{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"MessageAction\"},{\"id\":1597737472,\"predicate\":\"requestPeerTypeUser\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"flags.0?Bool\"},{\"name\":\"premium\",\"type\":\"flags.1?Bool\"}],\"type\":\"RequestPeerType\"},{\"id\":-906990053,\"predicate\":\"requestPeerTypeChat\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"bot_participant\",\"type\":\"flags.5?true\"},{\"name\":\"has_username\",\"type\":\"flags.3?Bool\"},{\"name\":\"forum\",\"type\":\"flags.4?Bool\"},{\"name\":\"user_admin_rights\",\"type\":\"flags.1?ChatAdminRights\"},{\"name\":\"bot_admin_rights\",\"type\":\"flags.2?ChatAdminRights\"}],\"type\":\"RequestPeerType\"},{\"id\":865857388,\"predicate\":\"requestPeerTypeBroadcast\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"has_username\",\"type\":\"flags.3?Bool\"},{\"name\":\"user_admin_rights\",\"type\":\"flags.1?ChatAdminRights\"},{\"name\":\"bot_admin_rights\",\"type\":\"flags.2?ChatAdminRights\"}],\"type\":\"RequestPeerType\"},{\"id\":218842764,\"predicate\":\"keyboardButtonRequestPeer\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"button_id\",\"type\":\"int\"},{\"name\":\"peer_type\",\"type\":\"RequestPeerType\"}],\"type\":\"KeyboardButton\"},{\"id\":1209970170,\"predicate\":\"emojiListNotModified\",\"params\":[],\"type\":\"EmojiList\"},{\"id\":2048790993,\"predicate\":\"emojiList\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"document_id\",\"type\":\"Vector<long>\"}],\"type\":\"EmojiList\"},{\"id\":-444918734,\"predicate\":\"auth.sentCodeTypeFirebaseSms\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"nonce\",\"type\":\"flags.0?bytes\"},{\"name\":\"receipt\",\"type\":\"flags.1?string\"},{\"name\":\"push_timeout\",\"type\":\"flags.1?int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":2056961449,\"predicate\":\"emojiGroup\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"icon_emoji_id\",\"type\":\"long\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiGroup\"},{\"id\":1874111879,\"predicate\":\"messages.emojiGroupsNotModified\",\"params\":[],\"type\":\"messages.EmojiGroups\"},{\"id\":-2011186869,\"predicate\":\"messages.emojiGroups\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"groups\",\"type\":\"Vector<EmojiGroup>\"}],\"type\":\"messages.EmojiGroups\"},{\"id\":-128171716,\"predicate\":\"videoSizeEmojiMarkup\",\"params\":[{\"name\":\"emoji_id\",\"type\":\"long\"},{\"name\":\"background_colors\",\"type\":\"Vector<int>\"}],\"type\":\"VideoSize\"},{\"id\":228623102,\"predicate\":\"videoSizeStickerMarkup\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"sticker_id\",\"type\":\"long\"},{\"name\":\"background_colors\",\"type\":\"Vector<int>\"}],\"type\":\"VideoSize\"},{\"id\":1964978502,\"predicate\":\"textWithEntities\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"}],\"type\":\"TextWithEntities\"},{\"id\":870003448,\"predicate\":\"messages.translateResult\",\"params\":[{\"name\":\"result\",\"type\":\"Vector<TextWithEntities>\"}],\"type\":\"messages.TranslatedText\"},{\"id\":-934791986,\"predicate\":\"autoSaveSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"photos\",\"type\":\"flags.0?true\"},{\"name\":\"videos\",\"type\":\"flags.1?true\"},{\"name\":\"video_max_size\",\"type\":\"flags.2?long\"}],\"type\":\"AutoSaveSettings\"},{\"id\":-2124403385,\"predicate\":\"autoSaveException\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"settings\",\"type\":\"AutoSaveSettings\"}],\"type\":\"AutoSaveException\"},{\"id\":1279133341,\"predicate\":\"account.autoSaveSettings\",\"params\":[{\"name\":\"users_settings\",\"type\":\"AutoSaveSettings\"},{\"name\":\"chats_settings\",\"type\":\"AutoSaveSettings\"},{\"name\":\"broadcasts_settings\",\"type\":\"AutoSaveSettings\"},{\"name\":\"exceptions\",\"type\":\"Vector<AutoSaveException>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.AutoSaveSettings\"},{\"id\":-335171433,\"predicate\":\"updateAutoSaveSettings\",\"params\":[],\"type\":\"Update\"},{\"id\":2094949405,\"predicate\":\"help.appConfigNotModified\",\"params\":[],\"type\":\"help.AppConfig\"},{\"id\":-585598930,\"predicate\":\"help.appConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"config\",\"type\":\"JSONValue\"}],\"type\":\"help.AppConfig\"},{\"id\":-1457472134,\"predicate\":\"inputBotAppID\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputBotApp\"},{\"id\":-1869872121,\"predicate\":\"inputBotAppShortName\",\"params\":[{\"name\":\"bot_id\",\"type\":\"InputUser\"},{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"InputBotApp\"},{\"id\":1571189943,\"predicate\":\"botAppNotModified\",\"params\":[],\"type\":\"BotApp\"},{\"id\":-1778593322,\"predicate\":\"botApp\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"document\",\"type\":\"flags.0?Document\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"BotApp\"},{\"id\":-347034123,\"predicate\":\"messages.botApp\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inactive\",\"type\":\"flags.0?true\"},{\"name\":\"request_write_access\",\"type\":\"flags.1?true\"},{\"name\":\"app\",\"type\":\"BotApp\"}],\"type\":\"messages.BotApp\"},{\"id\":1008422669,\"predicate\":\"appWebViewResultUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"AppWebViewResult\"},{\"id\":-1250781739,\"predicate\":\"inlineBotWebView\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"InlineBotWebView\"},{\"id\":1246753138,\"predicate\":\"readParticipantDate\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ReadParticipantDate\"},{\"id\":-856651050,\"predicate\":\"updateGroupInvitePrivacyForbidden\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-699792216,\"predicate\":\"dialogFilterChatlist\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_my_invites\",\"type\":\"flags.26?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"emoticon\",\"type\":\"flags.25?string\"},{\"name\":\"pinned_peers\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"include_peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"DialogFilter\"},{\"id\":-203367885,\"predicate\":\"inputChatlistDialogFilter\",\"params\":[{\"name\":\"filter_id\",\"type\":\"int\"}],\"type\":\"InputChatlist\"},{\"id\":206668204,\"predicate\":\"exportedChatlistInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"peers\",\"type\":\"Vector<Peer>\"}],\"type\":\"ExportedChatlistInvite\"},{\"id\":283567014,\"predicate\":\"chatlists.exportedChatlistInvite\",\"params\":[{\"name\":\"filter\",\"type\":\"DialogFilter\"},{\"name\":\"invite\",\"type\":\"ExportedChatlistInvite\"}],\"type\":\"chatlists.ExportedChatlistInvite\"},{\"id\":279670215,\"predicate\":\"chatlists.exportedInvites\",\"params\":[{\"name\":\"invites\",\"type\":\"Vector<ExportedChatlistInvite>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"chatlists.ExportedInvites\"},{\"id\":-91752871,\"predicate\":\"chatlists.chatlistInviteAlready\",\"params\":[{\"name\":\"filter_id\",\"type\":\"int\"},{\"name\":\"missing_peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"already_peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"chatlists.ChatlistInvite\"},{\"id\":500007837,\"predicate\":\"chatlists.chatlistInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"emoticon\",\"type\":\"flags.0?string\"},{\"name\":\"peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"chatlists.ChatlistInvite\"},{\"id\":-1816295539,\"predicate\":\"chatlists.chatlistUpdates\",\"params\":[{\"name\":\"missing_peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"chatlists.ChatlistUpdates\"},{\"id\":-1136350937,\"predicate\":\"messageActionSetChatWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"WallPaper\"}],\"type\":\"MessageAction\"},{\"id\":-632006598,\"predicate\":\"messageActionSetSameChatWallPaper\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-391678544,\"predicate\":\"bots.botInfo\",\"params\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"bots.BotInfo\"},{\"id\":238759180,\"predicate\":\"inlineQueryPeerTypeBotPM\",\"params\":[],\"type\":\"InlineQueryPeerType\"}],\"methods\":[{\"id\":-878758099,\"method\":\"invokeAfterMsg\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":1036301552,\"method\":\"invokeAfterMsgs\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1502141361,\"method\":\"auth.sendCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":-2131827673,\"method\":\"auth.signUp\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":-1923962543,\"method\":\"auth.signIn\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"flags.0?string\"},{\"name\":\"email_verification\",\"type\":\"flags.1?EmailVerification\"}],\"type\":\"auth.Authorization\"},{\"id\":1047706137,\"method\":\"auth.logOut\",\"params\":[],\"type\":\"auth.LoggedOut\"},{\"id\":-1616179942,\"method\":\"auth.resetAuthorizations\",\"params\":[],\"type\":\"Bool\"},{\"id\":-440401971,\"method\":\"auth.exportAuthorization\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"auth.ExportedAuthorization\"},{\"id\":-1518699091,\"method\":\"auth.importAuthorization\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"auth.Authorization\"},{\"id\":-841733627,\"method\":\"auth.bindTempAuthKey\",\"params\":[{\"name\":\"perm_auth_key_id\",\"type\":\"long\"},{\"name\":\"nonce\",\"type\":\"long\"},{\"name\":\"expires_at\",\"type\":\"int\"},{\"name\":\"encrypted_message\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-326762118,\"method\":\"account.registerDevice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_muted\",\"type\":\"flags.0?true\"},{\"name\":\"token_type\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"app_sandbox\",\"type\":\"Bool\"},{\"name\":\"secret\",\"type\":\"bytes\"},{\"name\":\"other_uids\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":1779249670,\"method\":\"account.unregisterDevice\",\"params\":[{\"name\":\"token_type\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"other_uids\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-2067899501,\"method\":\"account.updateNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputNotifyPeer\"},{\"name\":\"settings\",\"type\":\"InputPeerNotifySettings\"}],\"type\":\"Bool\"},{\"id\":313765169,\"method\":\"account.getNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputNotifyPeer\"}],\"type\":\"PeerNotifySettings\"},{\"id\":-612493497,\"method\":\"account.resetNotifySettings\",\"params\":[],\"type\":\"Bool\"},{\"id\":2018596725,\"method\":\"account.updateProfile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"first_name\",\"type\":\"flags.0?string\"},{\"name\":\"last_name\",\"type\":\"flags.1?string\"},{\"name\":\"about\",\"type\":\"flags.2?string\"}],\"type\":\"User\"},{\"id\":1713919532,\"method\":\"account.updateStatus\",\"params\":[{\"name\":\"offline\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":127302966,\"method\":\"account.getWallPapers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.WallPapers\"},{\"id\":-977650298,\"method\":\"account.reportPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":227648840,\"method\":\"users.getUsers\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Vector<User>\"},{\"id\":-1240508136,\"method\":\"users.getFullUser\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"}],\"type\":\"users.UserFull\"},{\"id\":2061264541,\"method\":\"contacts.getContactIDs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Vector<int>\"},{\"id\":-995929106,\"method\":\"contacts.getStatuses\",\"params\":[],\"type\":\"Vector<ContactStatus>\"},{\"id\":1574346258,\"method\":\"contacts.getContacts\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"contacts.Contacts\"},{\"id\":746589157,\"method\":\"contacts.importContacts\",\"params\":[{\"name\":\"contacts\",\"type\":\"Vector<InputContact>\"}],\"type\":\"contacts.ImportedContacts\"},{\"id\":157945344,\"method\":\"contacts.deleteContacts\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":269745566,\"method\":\"contacts.deleteByPhones\",\"params\":[{\"name\":\"phones\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":1758204945,\"method\":\"contacts.block\",\"params\":[{\"name\":\"id\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-1096393392,\"method\":\"contacts.unblock\",\"params\":[{\"name\":\"id\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-176409329,\"method\":\"contacts.getBlocked\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"contacts.Blocked\"},{\"id\":1673946374,\"method\":\"messages.getMessages\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputMessage>\"}],\"type\":\"messages.Messages\"},{\"id\":-1594569905,\"method\":\"messages.getDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_pinned\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Dialogs\"},{\"id\":1143203525,\"method\":\"messages.getHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":-1593989278,\"method\":\"messages.search\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"from_id\",\"type\":\"flags.0?InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":238054714,\"method\":\"messages.readHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":-1332768214,\"method\":\"messages.deleteHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"just_clear\",\"type\":\"flags.0?true\"},{\"name\":\"revoke\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_date\",\"type\":\"flags.2?int\"},{\"name\":\"max_date\",\"type\":\"flags.3?int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-443640366,\"method\":\"messages.deleteMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":94983360,\"method\":\"messages.receivedMessages\",\"params\":[{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Vector<ReceivedNotifyMessage>\"},{\"id\":1486110434,\"method\":\"messages.setTyping\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Bool\"},{\"id\":482476935,\"method\":\"messages.sendMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"update_stickersets_order\",\"type\":\"flags.15?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"top_msg_id\",\"type\":\"flags.9?int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":1967638886,\"method\":\"messages.sendMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"update_stickersets_order\",\"type\":\"flags.15?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"top_msg_id\",\"type\":\"flags.9?int\"},{\"name\":\"media\",\"type\":\"InputMedia\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-966673468,\"method\":\"messages.forwardMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"with_my_score\",\"type\":\"flags.8?true\"},{\"name\":\"drop_author\",\"type\":\"flags.11?true\"},{\"name\":\"drop_media_captions\",\"type\":\"flags.12?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"from_peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"random_id\",\"type\":\"Vector<long>\"},{\"name\":\"to_peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.9?int\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-820669733,\"method\":\"messages.reportSpam\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-270948702,\"method\":\"messages.getPeerSettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.PeerSettings\"},{\"id\":-1991005362,\"method\":\"messages.report\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1240027791,\"method\":\"messages.getChats\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<long>\"}],\"type\":\"messages.Chats\"},{\"id\":-1364194508,\"method\":\"messages.getFullChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"messages.ChatFull\"},{\"id\":1937260541,\"method\":\"messages.editChatTitle\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":903730804,\"method\":\"messages.editChatPhoto\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"photo\",\"type\":\"InputChatPhoto\"}],\"type\":\"Updates\"},{\"id\":-230206493,\"method\":\"messages.addChatUser\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"fwd_limit\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1575461717,\"method\":\"messages.deleteChatUser\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke_history\",\"type\":\"flags.0?true\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":3450904,\"method\":\"messages.createChat\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"ttl_period\",\"type\":\"flags.0?int\"}],\"type\":\"Updates\"},{\"id\":-304838614,\"method\":\"updates.getState\",\"params\":[],\"type\":\"updates.State\"},{\"id\":630429265,\"method\":\"updates.getDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_total_limit\",\"type\":\"flags.0?int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":166207545,\"method\":\"photos.updateProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"fallback\",\"type\":\"flags.0?true\"},{\"name\":\"bot\",\"type\":\"flags.1?InputUser\"},{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"photos.Photo\"},{\"id\":59286453,\"method\":\"photos.uploadProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"fallback\",\"type\":\"flags.3?true\"},{\"name\":\"bot\",\"type\":\"flags.5?InputUser\"},{\"name\":\"file\",\"type\":\"flags.0?InputFile\"},{\"name\":\"video\",\"type\":\"flags.1?InputFile\"},{\"name\":\"video_start_ts\",\"type\":\"flags.2?double\"},{\"name\":\"video_emoji_markup\",\"type\":\"flags.4?VideoSize\"}],\"type\":\"photos.Photo\"},{\"id\":-2016444625,\"method\":\"photos.deletePhotos\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputPhoto>\"}],\"type\":\"Vector<long>\"},{\"id\":-1291540959,\"method\":\"upload.saveFilePart\",\"params\":[{\"name\":\"file_id\",\"type\":\"long\"},{\"name\":\"file_part\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-1101843010,\"method\":\"upload.getFile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"precise\",\"type\":\"flags.0?true\"},{\"name\":\"cdn_supported\",\"type\":\"flags.1?true\"},{\"name\":\"location\",\"type\":\"InputFileLocation\"},{\"name\":\"offset\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.File\"},{\"id\":-990308245,\"method\":\"help.getConfig\",\"params\":[],\"type\":\"Config\"},{\"id\":531836966,\"method\":\"help.getNearestDc\",\"params\":[],\"type\":\"NearestDc\"},{\"id\":1378703997,\"method\":\"help.getAppUpdate\",\"params\":[{\"name\":\"source\",\"type\":\"string\"}],\"type\":\"help.AppUpdate\"},{\"id\":1295590211,\"method\":\"help.getInviteText\",\"params\":[],\"type\":\"help.InviteText\"},{\"id\":-1848823128,\"method\":\"photos.getUserPhotos\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"photos.Photos\"},{\"id\":651135312,\"method\":\"messages.getDhConfig\",\"params\":[{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"random_length\",\"type\":\"int\"}],\"type\":\"messages.DhConfig\"},{\"id\":-162681021,\"method\":\"messages.requestEncryption\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"g_a\",\"type\":\"bytes\"}],\"type\":\"EncryptedChat\"},{\"id\":1035731989,\"method\":\"messages.acceptEncryption\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":-208425312,\"method\":\"messages.discardEncryption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"delete_history\",\"type\":\"flags.0?true\"},{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":2031374829,\"method\":\"messages.setEncryptedTyping\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"typing\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":2135648522,\"method\":\"messages.readEncryptedHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"max_date\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1157265941,\"method\":\"messages.sendEncrypted\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":1431914525,\"method\":\"messages.sendEncryptedFile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"file\",\"type\":\"InputEncryptedFile\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":852769188,\"method\":\"messages.sendEncryptedService\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":1436924774,\"method\":\"messages.receivedQueue\",\"params\":[{\"name\":\"max_qts\",\"type\":\"int\"}],\"type\":\"Vector<long>\"},{\"id\":1259113487,\"method\":\"messages.reportEncryptedSpam\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"}],\"type\":\"Bool\"},{\"id\":-562337987,\"method\":\"upload.saveBigFilePart\",\"params\":[{\"name\":\"file_id\",\"type\":\"long\"},{\"name\":\"file_part\",\"type\":\"int\"},{\"name\":\"file_total_parts\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-1043505495,\"method\":\"initConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"device_model\",\"type\":\"string\"},{\"name\":\"system_version\",\"type\":\"string\"},{\"name\":\"app_version\",\"type\":\"string\"},{\"name\":\"system_lang_code\",\"type\":\"string\"},{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"proxy\",\"type\":\"flags.0?InputClientProxy\"},{\"name\":\"params\",\"type\":\"flags.1?JSONValue\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1663104819,\"method\":\"help.getSupport\",\"params\":[],\"type\":\"help.Support\"},{\"id\":916930423,\"method\":\"messages.readMessageContents\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":655677548,\"method\":\"account.checkUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1040964988,\"method\":\"account.updateUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":301470424,\"method\":\"contacts.search\",\"params\":[{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"contacts.Found\"},{\"id\":-623130288,\"method\":\"account.getPrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"InputPrivacyKey\"}],\"type\":\"account.PrivacyRules\"},{\"id\":-906486552,\"method\":\"account.setPrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"InputPrivacyKey\"},{\"name\":\"rules\",\"type\":\"Vector<InputPrivacyRule>\"}],\"type\":\"account.PrivacyRules\"},{\"id\":-1564422284,\"method\":\"account.deleteAccount\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reason\",\"type\":\"string\"},{\"name\":\"password\",\"type\":\"flags.0?InputCheckPasswordSRP\"}],\"type\":\"Bool\"},{\"id\":150761757,\"method\":\"account.getAccountTTL\",\"params\":[],\"type\":\"AccountDaysTTL\"},{\"id\":608323678,\"method\":\"account.setAccountTTL\",\"params\":[{\"name\":\"ttl\",\"type\":\"AccountDaysTTL\"}],\"type\":\"Bool\"},{\"id\":-627372787,\"method\":\"invokeWithLayer\",\"params\":[{\"name\":\"layer\",\"type\":\"int\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-113456221,\"method\":\"contacts.resolveUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":-2108208411,\"method\":\"account.sendChangePhoneCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1891839707,\"method\":\"account.changePhone\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":-710552671,\"method\":\"messages.getStickers\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Stickers\"},{\"id\":-1197432408,\"method\":\"messages.getAllStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.AllStickers\"},{\"id\":954152242,\"method\":\"account.updateDeviceLocked\",\"params\":[{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1738800940,\"method\":\"auth.importBotAuthorization\",\"params\":[{\"name\":\"flags\",\"type\":\"int\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"bot_auth_token\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":-1956073268,\"method\":\"messages.getWebPagePreview\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"MessageMedia\"},{\"id\":-484392616,\"method\":\"account.getAuthorizations\",\"params\":[],\"type\":\"account.Authorizations\"},{\"id\":-545786948,\"method\":\"account.resetAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":1418342645,\"method\":\"account.getPassword\",\"params\":[],\"type\":\"account.Password\"},{\"id\":-1663767815,\"method\":\"account.getPasswordSettings\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"account.PasswordSettings\"},{\"id\":-1516564433,\"method\":\"account.updatePasswordSettings\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"},{\"name\":\"new_settings\",\"type\":\"account.PasswordInputSettings\"}],\"type\":\"Bool\"},{\"id\":-779399914,\"method\":\"auth.checkPassword\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"auth.Authorization\"},{\"id\":-661144474,\"method\":\"auth.requestPasswordRecovery\",\"params\":[],\"type\":\"auth.PasswordRecovery\"},{\"id\":923364464,\"method\":\"auth.recoverPassword\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"code\",\"type\":\"string\"},{\"name\":\"new_settings\",\"type\":\"flags.0?account.PasswordInputSettings\"}],\"type\":\"auth.Authorization\"},{\"id\":-1080796745,\"method\":\"invokeWithoutUpdates\",\"params\":[{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1607670315,\"method\":\"messages.exportChatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"legacy_revoke_permanent\",\"type\":\"flags.2?true\"},{\"name\":\"request_needed\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"expire_date\",\"type\":\"flags.0?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.1?int\"},{\"name\":\"title\",\"type\":\"flags.4?string\"}],\"type\":\"ExportedChatInvite\"},{\"id\":1051570619,\"method\":\"messages.checkChatInvite\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"}],\"type\":\"ChatInvite\"},{\"id\":1817183516,\"method\":\"messages.importChatInvite\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-928977804,\"method\":\"messages.getStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.StickerSet\"},{\"id\":-946871200,\"method\":\"messages.installStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"archived\",\"type\":\"Bool\"}],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":-110209570,\"method\":\"messages.uninstallStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":-421563528,\"method\":\"messages.startBot\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-1877938321,\"method\":\"help.getAppChangelog\",\"params\":[{\"name\":\"prev_app_version\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1468322785,\"method\":\"messages.getMessagesViews\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"increment\",\"type\":\"Bool\"}],\"type\":\"messages.MessageViews\"},{\"id\":-871347913,\"method\":\"channels.readHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-2067661490,\"method\":\"channels.deleteMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":-196443371,\"method\":\"channels.reportSpam\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-1383294429,\"method\":\"channels.getMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<InputMessage>\"}],\"type\":\"messages.Messages\"},{\"id\":2010044880,\"method\":\"channels.getParticipants\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"filter\",\"type\":\"ChannelParticipantsFilter\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"channels.ChannelParticipants\"},{\"id\":-1599378234,\"method\":\"channels.getParticipant\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"}],\"type\":\"channels.ChannelParticipant\"},{\"id\":176122811,\"method\":\"channels.getChannels\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputChannel>\"}],\"type\":\"messages.Chats\"},{\"id\":141781513,\"method\":\"channels.getFullChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"messages.ChatFull\"},{\"id\":-1862244601,\"method\":\"channels.createChannel\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"broadcast\",\"type\":\"flags.0?true\"},{\"name\":\"megagroup\",\"type\":\"flags.1?true\"},{\"name\":\"for_import\",\"type\":\"flags.3?true\"},{\"name\":\"forum\",\"type\":\"flags.5?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"geo_point\",\"type\":\"flags.2?InputGeoPoint\"},{\"name\":\"address\",\"type\":\"flags.2?string\"},{\"name\":\"ttl_period\",\"type\":\"flags.4?int\"}],\"type\":\"Updates\"},{\"id\":-751007486,\"method\":\"channels.editAdmin\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1450044624,\"method\":\"channels.editTitle\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-248621111,\"method\":\"channels.editPhoto\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"photo\",\"type\":\"InputChatPhoto\"}],\"type\":\"Updates\"},{\"id\":283557164,\"method\":\"channels.checkUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":890549214,\"method\":\"channels.updateUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":615851205,\"method\":\"channels.joinChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":-130635115,\"method\":\"channels.leaveChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":429865580,\"method\":\"channels.inviteToChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":-1072619549,\"method\":\"channels.deleteChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":51854712,\"method\":\"updates.getChannelDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"filter\",\"type\":\"ChannelMessagesFilter\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1470377534,\"method\":\"messages.editChatAdmin\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"is_admin\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1568189671,\"method\":\"messages.migrateChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":1271290010,\"method\":\"messages.searchGlobal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"offset_rate\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":2016638777,\"method\":\"messages.reorderStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"},{\"name\":\"order\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-1309538785,\"method\":\"messages.getDocumentByHash\",\"params\":[{\"name\":\"sha256\",\"type\":\"bytes\"},{\"name\":\"size\",\"type\":\"long\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":1559270965,\"method\":\"messages.getSavedGifs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.SavedGifs\"},{\"id\":846868683,\"method\":\"messages.saveGif\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":1364105629,\"method\":\"messages.getInlineBotResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"geo_point\",\"type\":\"flags.0?InputGeoPoint\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"offset\",\"type\":\"string\"}],\"type\":\"messages.BotResults\"},{\"id\":-1156406247,\"method\":\"messages.setInlineBotResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gallery\",\"type\":\"flags.0?true\"},{\"name\":\"private\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"results\",\"type\":\"Vector<InputBotInlineResult>\"},{\"name\":\"cache_time\",\"type\":\"int\"},{\"name\":\"next_offset\",\"type\":\"flags.2?string\"},{\"name\":\"switch_pm\",\"type\":\"flags.3?InlineBotSwitchPM\"},{\"name\":\"switch_webview\",\"type\":\"flags.4?InlineBotWebView\"}],\"type\":\"Bool\"},{\"id\":-738468661,\"method\":\"messages.sendInlineBotResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"hide_via\",\"type\":\"flags.11?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"top_msg_id\",\"type\":\"flags.9?int\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-432034325,\"method\":\"channels.exportMessageLink\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"grouped\",\"type\":\"flags.0?true\"},{\"name\":\"thread\",\"type\":\"flags.1?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"ExportedMessageLink\"},{\"id\":527021574,\"method\":\"channels.toggleSignatures\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":1056025023,\"method\":\"auth.resendCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"auth.SentCode\"},{\"id\":520357240,\"method\":\"auth.cancelCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-39416522,\"method\":\"messages.getMessageEditData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"messages.MessageEditData\"},{\"id\":1224152952,\"method\":\"messages.editMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"flags.11?string\"},{\"name\":\"media\",\"type\":\"flags.14?InputMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.15?int\"}],\"type\":\"Updates\"},{\"id\":-2091549254,\"method\":\"messages.editInlineBotMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"message\",\"type\":\"flags.11?string\"},{\"name\":\"media\",\"type\":\"flags.14?InputMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"Bool\"},{\"id\":-1824339449,\"method\":\"messages.getBotCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"game\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"password\",\"type\":\"flags.2?InputCheckPasswordSRP\"}],\"type\":\"messages.BotCallbackAnswer\"},{\"id\":-712043766,\"method\":\"messages.setBotCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"alert\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"cache_time\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-1758168906,\"method\":\"contacts.getTopPeers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"correspondents\",\"type\":\"flags.0?true\"},{\"name\":\"bots_pm\",\"type\":\"flags.1?true\"},{\"name\":\"bots_inline\",\"type\":\"flags.2?true\"},{\"name\":\"phone_calls\",\"type\":\"flags.3?true\"},{\"name\":\"forward_users\",\"type\":\"flags.4?true\"},{\"name\":\"forward_chats\",\"type\":\"flags.5?true\"},{\"name\":\"groups\",\"type\":\"flags.10?true\"},{\"name\":\"channels\",\"type\":\"flags.15?true\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"contacts.TopPeers\"},{\"id\":451113900,\"method\":\"contacts.resetTopPeerRating\",\"params\":[{\"name\":\"category\",\"type\":\"TopPeerCategory\"},{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-462373635,\"method\":\"messages.getPeerDialogs\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<InputDialogPeer>\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-1271718337,\"method\":\"messages.saveDraft\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"top_msg_id\",\"type\":\"flags.2?int\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"Bool\"},{\"id\":1782549861,\"method\":\"messages.getAllDrafts\",\"params\":[],\"type\":\"Updates\"},{\"id\":1685588756,\"method\":\"messages.getFeaturedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":1527873830,\"method\":\"messages.readFeaturedStickers\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-1649852357,\"method\":\"messages.getRecentStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.RecentStickers\"},{\"id\":958863608,\"method\":\"messages.saveRecentSticker\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1986437075,\"method\":\"messages.clearRecentStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":1475442322,\"method\":\"messages.getArchivedStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"},{\"name\":\"offset_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ArchivedStickers\"},{\"id\":457157256,\"method\":\"account.sendConfirmPhoneCode\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1596029123,\"method\":\"account.confirmPhone\",\"params\":[{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-122669393,\"method\":\"channels.getAdminedPublicChannels\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"by_location\",\"type\":\"flags.0?true\"},{\"name\":\"check_limit\",\"type\":\"flags.1?true\"}],\"type\":\"messages.Chats\"},{\"id\":1678738104,\"method\":\"messages.getMaskStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.AllStickers\"},{\"id\":-866424884,\"method\":\"messages.getAttachedStickers\",\"params\":[{\"name\":\"media\",\"type\":\"InputStickeredMedia\"}],\"type\":\"Vector<StickerSetCovered>\"},{\"id\":-1907842680,\"method\":\"auth.dropTempAuthKeys\",\"params\":[{\"name\":\"except_auth_keys\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-1896289088,\"method\":\"messages.setGameScore\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"edit_message\",\"type\":\"flags.0?true\"},{\"name\":\"force\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":363700068,\"method\":\"messages.setInlineGameScore\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"edit_message\",\"type\":\"flags.0?true\"},{\"name\":\"force\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-400399203,\"method\":\"messages.getGameHighScores\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"messages.HighScores\"},{\"id\":258170395,\"method\":\"messages.getInlineGameHighScores\",\"params\":[{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"messages.HighScores\"},{\"id\":-468934396,\"method\":\"messages.getCommonChats\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Chats\"},{\"id\":-2023787330,\"method\":\"messages.getAllChats\",\"params\":[{\"name\":\"except_ids\",\"type\":\"Vector<long>\"}],\"type\":\"messages.Chats\"},{\"id\":-333262899,\"method\":\"help.setBotUpdatesStatus\",\"params\":[{\"name\":\"pending_updates_count\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":852135825,\"method\":\"messages.getWebPage\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"WebPage\"},{\"id\":-1489903017,\"method\":\"messages.toggleDialogPin\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputDialogPeer\"}],\"type\":\"Bool\"},{\"id\":991616823,\"method\":\"messages.reorderPinnedDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"int\"},{\"name\":\"order\",\"type\":\"Vector<InputDialogPeer>\"}],\"type\":\"Bool\"},{\"id\":-692498958,\"method\":\"messages.getPinnedDialogs\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-1440257555,\"method\":\"bots.sendCustomRequest\",\"params\":[{\"name\":\"custom_method\",\"type\":\"string\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"DataJSON\"},{\"id\":-434028723,\"method\":\"bots.answerWebhookJSONQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":619086221,\"method\":\"upload.getWebFile\",\"params\":[{\"name\":\"location\",\"type\":\"InputWebFileLocation\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.WebFile\"},{\"id\":924093883,\"method\":\"payments.getPaymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"invoice\",\"type\":\"InputInvoice\"},{\"name\":\"theme_params\",\"type\":\"flags.0?DataJSON\"}],\"type\":\"payments.PaymentForm\"},{\"id\":611897804,\"method\":\"payments.getPaymentReceipt\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"payments.PaymentReceipt\"},{\"id\":-1228345045,\"method\":\"payments.validateRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"save\",\"type\":\"flags.0?true\"},{\"name\":\"invoice\",\"type\":\"InputInvoice\"},{\"name\":\"info\",\"type\":\"PaymentRequestedInfo\"}],\"type\":\"payments.ValidatedRequestedInfo\"},{\"id\":755192367,\"method\":\"payments.sendPaymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"form_id\",\"type\":\"long\"},{\"name\":\"invoice\",\"type\":\"InputInvoice\"},{\"name\":\"requested_info_id\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"credentials\",\"type\":\"InputPaymentCredentials\"},{\"name\":\"tip_amount\",\"type\":\"flags.2?long\"}],\"type\":\"payments.PaymentResult\"},{\"id\":1151208273,\"method\":\"account.getTmpPassword\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"},{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"account.TmpPassword\"},{\"id\":578650699,\"method\":\"payments.getSavedInfo\",\"params\":[],\"type\":\"payments.SavedInfo\"},{\"id\":-667062079,\"method\":\"payments.clearSavedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"credentials\",\"type\":\"flags.0?true\"},{\"name\":\"info\",\"type\":\"flags.1?true\"}],\"type\":\"Bool\"},{\"id\":-436833542,\"method\":\"messages.setBotShippingResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"error\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_options\",\"type\":\"flags.1?Vector<ShippingOption>\"}],\"type\":\"Bool\"},{\"id\":163765653,\"method\":\"messages.setBotPrecheckoutResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"success\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"error\",\"type\":\"flags.0?string\"}],\"type\":\"Bool\"},{\"id\":-1876841625,\"method\":\"stickers.createStickerSet\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"animated\",\"type\":\"flags.1?true\"},{\"name\":\"videos\",\"type\":\"flags.4?true\"},{\"name\":\"emojis\",\"type\":\"flags.5?true\"},{\"name\":\"text_color\",\"type\":\"flags.6?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"thumb\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"stickers\",\"type\":\"Vector<InputStickerSetItem>\"},{\"name\":\"software\",\"type\":\"flags.3?string\"}],\"type\":\"messages.StickerSet\"},{\"id\":-143257775,\"method\":\"stickers.removeStickerFromSet\",\"params\":[{\"name\":\"sticker\",\"type\":\"InputDocument\"}],\"type\":\"messages.StickerSet\"},{\"id\":-4795190,\"method\":\"stickers.changeStickerPosition\",\"params\":[{\"name\":\"sticker\",\"type\":\"InputDocument\"},{\"name\":\"position\",\"type\":\"int\"}],\"type\":\"messages.StickerSet\"},{\"id\":-2041315650,\"method\":\"stickers.addStickerToSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"sticker\",\"type\":\"InputStickerSetItem\"}],\"type\":\"messages.StickerSet\"},{\"id\":1369162417,\"method\":\"messages.uploadMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"media\",\"type\":\"InputMedia\"}],\"type\":\"MessageMedia\"},{\"id\":1430593449,\"method\":\"phone.getCallConfig\",\"params\":[],\"type\":\"DataJSON\"},{\"id\":1124046573,\"method\":\"phone.requestCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"g_a_hash\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":1003664544,\"method\":\"phone.acceptCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":788404002,\"method\":\"phone.confirmCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"g_a\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":399855457,\"method\":\"phone.receivedCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"}],\"type\":\"Bool\"},{\"id\":-1295269440,\"method\":\"phone.discardCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"reason\",\"type\":\"PhoneCallDiscardReason\"},{\"name\":\"connection_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":1508562471,\"method\":\"phone.setCallRating\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_initiative\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"rating\",\"type\":\"int\"},{\"name\":\"comment\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":662363518,\"method\":\"phone.saveCallDebug\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"debug\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":962554330,\"method\":\"upload.getCdnFile\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"offset\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.CdnFile\"},{\"id\":-1691921240,\"method\":\"upload.reuploadCdnFile\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"request_token\",\"type\":\"bytes\"}],\"type\":\"Vector<FileHash>\"},{\"id\":1375900482,\"method\":\"help.getCdnConfig\",\"params\":[],\"type\":\"CdnConfig\"},{\"id\":-219008246,\"method\":\"langpack.getLangPack\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"LangPackDifference\"},{\"id\":-269862909,\"method\":\"langpack.getStrings\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"keys\",\"type\":\"Vector<string>\"}],\"type\":\"Vector<LangPackString>\"},{\"id\":-845657435,\"method\":\"langpack.getDifference\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"}],\"type\":\"LangPackDifference\"},{\"id\":1120311183,\"method\":\"langpack.getLanguages\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"}],\"type\":\"Vector<LangPackLanguage>\"},{\"id\":-1763259007,\"method\":\"channels.editBanned\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"Updates\"},{\"id\":870184064,\"method\":\"channels.getAdminLog\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"events_filter\",\"type\":\"flags.0?ChannelAdminLogEventsFilter\"},{\"name\":\"admins\",\"type\":\"flags.1?Vector<InputUser>\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"min_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"channels.AdminLogResults\"},{\"id\":-1847836879,\"method\":\"upload.getCdnFileHashes\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"offset\",\"type\":\"long\"}],\"type\":\"Vector<FileHash>\"},{\"id\":-914493408,\"method\":\"messages.sendScreenshotNotification\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"int\"},{\"name\":\"random_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":-359881479,\"method\":\"channels.setStickers\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":82946729,\"method\":\"messages.getFavedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FavedStickers\"},{\"id\":-1174420133,\"method\":\"messages.faveSticker\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unfave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-357180360,\"method\":\"channels.readMessageContents\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-2020263951,\"method\":\"contacts.resetSaved\",\"params\":[],\"type\":\"Bool\"},{\"id\":-251140208,\"method\":\"messages.getUnreadMentions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":-1683319225,\"method\":\"channels.deleteHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"for_everyone\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1036054804,\"method\":\"help.getRecentMeUrls\",\"params\":[{\"name\":\"referer\",\"type\":\"string\"}],\"type\":\"help.RecentMeUrls\"},{\"id\":-356796084,\"method\":\"channels.togglePreHistoryHidden\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":921026381,\"method\":\"messages.readMentions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1881817312,\"method\":\"messages.getRecentLocations\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":-1225713124,\"method\":\"messages.sendMultiMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"update_stickersets_order\",\"type\":\"flags.15?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"top_msg_id\",\"type\":\"flags.9?int\"},{\"name\":\"multi_media\",\"type\":\"Vector<InputSingleMedia>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":1347929239,\"method\":\"messages.uploadEncryptedFile\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"file\",\"type\":\"InputEncryptedFile\"}],\"type\":\"EncryptedFile\"},{\"id\":405695855,\"method\":\"account.getWebAuthorizations\",\"params\":[],\"type\":\"account.WebAuthorizations\"},{\"id\":755087855,\"method\":\"account.resetWebAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":1747789204,\"method\":\"account.resetWebAuthorizations\",\"params\":[],\"type\":\"Bool\"},{\"id\":896555914,\"method\":\"messages.searchStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_featured\",\"type\":\"flags.0?true\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FoundStickerSets\"},{\"id\":-1856595926,\"method\":\"upload.getFileHashes\",\"params\":[{\"name\":\"location\",\"type\":\"InputFileLocation\"},{\"name\":\"offset\",\"type\":\"long\"}],\"type\":\"Vector<FileHash>\"},{\"id\":749019089,\"method\":\"help.getTermsOfServiceUpdate\",\"params\":[],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":-294455398,\"method\":\"help.acceptTermsOfService\",\"params\":[{\"name\":\"id\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":-1299661699,\"method\":\"account.getAllSecureValues\",\"params\":[],\"type\":\"Vector<SecureValue>\"},{\"id\":1936088002,\"method\":\"account.getSecureValue\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"Vector<SecureValue>\"},{\"id\":-1986010339,\"method\":\"account.saveSecureValue\",\"params\":[{\"name\":\"value\",\"type\":\"InputSecureValue\"},{\"name\":\"secure_secret_id\",\"type\":\"long\"}],\"type\":\"SecureValue\"},{\"id\":-1199522741,\"method\":\"account.deleteSecureValue\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"Bool\"},{\"id\":-1865902923,\"method\":\"users.setSecureValueErrors\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"},{\"name\":\"errors\",\"type\":\"Vector<SecureValueError>\"}],\"type\":\"Bool\"},{\"id\":-1456907910,\"method\":\"account.getAuthorizationForm\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"scope\",\"type\":\"string\"},{\"name\":\"public_key\",\"type\":\"string\"}],\"type\":\"account.AuthorizationForm\"},{\"id\":-202552205,\"method\":\"account.acceptAuthorization\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"scope\",\"type\":\"string\"},{\"name\":\"public_key\",\"type\":\"string\"},{\"name\":\"value_hashes\",\"type\":\"Vector<SecureValueHash>\"},{\"name\":\"credentials\",\"type\":\"SecureCredentialsEncrypted\"}],\"type\":\"Bool\"},{\"id\":-1516022023,\"method\":\"account.sendVerifyPhoneCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1305716726,\"method\":\"account.verifyPhone\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-1730136133,\"method\":\"account.sendVerifyEmailCode\",\"params\":[{\"name\":\"purpose\",\"type\":\"EmailVerifyPurpose\"},{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"account.SentEmailCode\"},{\"id\":53322959,\"method\":\"account.verifyEmail\",\"params\":[{\"name\":\"purpose\",\"type\":\"EmailVerifyPurpose\"},{\"name\":\"verification\",\"type\":\"EmailVerification\"}],\"type\":\"account.EmailVerified\"},{\"id\":1072547679,\"method\":\"help.getDeepLinkInfo\",\"params\":[{\"name\":\"path\",\"type\":\"string\"}],\"type\":\"help.DeepLinkInfo\"},{\"id\":-2098076769,\"method\":\"contacts.getSaved\",\"params\":[],\"type\":\"Vector<SavedContact>\"},{\"id\":-2092831552,\"method\":\"channels.getLeftChannels\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"messages.Chats\"},{\"id\":-1896617296,\"method\":\"account.initTakeoutSession\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"contacts\",\"type\":\"flags.0?true\"},{\"name\":\"message_users\",\"type\":\"flags.1?true\"},{\"name\":\"message_chats\",\"type\":\"flags.2?true\"},{\"name\":\"message_megagroups\",\"type\":\"flags.3?true\"},{\"name\":\"message_channels\",\"type\":\"flags.4?true\"},{\"name\":\"files\",\"type\":\"flags.5?true\"},{\"name\":\"file_max_size\",\"type\":\"flags.5?long\"}],\"type\":\"account.Takeout\"},{\"id\":489050862,\"method\":\"account.finishTakeoutSession\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"success\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":486505992,\"method\":\"messages.getSplitRanges\",\"params\":[],\"type\":\"Vector<MessageRange>\"},{\"id\":911373810,\"method\":\"invokeWithMessagesRange\",\"params\":[{\"name\":\"range\",\"type\":\"MessageRange\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1398145746,\"method\":\"invokeWithTakeout\",\"params\":[{\"name\":\"takeout_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1031349873,\"method\":\"messages.markDialogUnread\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unread\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputDialogPeer\"}],\"type\":\"Bool\"},{\"id\":585256482,\"method\":\"messages.getDialogUnreadMarks\",\"params\":[],\"type\":\"Vector<DialogPeer>\"},{\"id\":-2062238246,\"method\":\"contacts.toggleTopPeers\",\"params\":[{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":2119757468,\"method\":\"messages.clearAllDrafts\",\"params\":[],\"type\":\"Bool\"},{\"id\":1642330196,\"method\":\"help.getAppConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.AppConfig\"},{\"id\":1862465352,\"method\":\"help.saveAppLog\",\"params\":[{\"name\":\"events\",\"type\":\"Vector<InputAppEvent>\"}],\"type\":\"Bool\"},{\"id\":-966677240,\"method\":\"help.getPassportConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.PassportConfig\"},{\"id\":1784243458,\"method\":\"langpack.getLanguage\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"LangPackLanguage\"},{\"id\":-760547348,\"method\":\"messages.updatePinnedMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"unpin\",\"type\":\"flags.1?true\"},{\"name\":\"pm_oneside\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1881204448,\"method\":\"account.confirmPasswordEmail\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":2055154197,\"method\":\"account.resendPasswordEmail\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1043606090,\"method\":\"account.cancelPasswordEmail\",\"params\":[],\"type\":\"Bool\"},{\"id\":-748624084,\"method\":\"help.getSupportName\",\"params\":[],\"type\":\"help.SupportName\"},{\"id\":59377875,\"method\":\"help.getUserInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"help.UserInfo\"},{\"id\":1723407216,\"method\":\"help.editUserInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"}],\"type\":\"help.UserInfo\"},{\"id\":-1626880216,\"method\":\"account.getContactSignUpNotification\",\"params\":[],\"type\":\"Bool\"},{\"id\":-806076575,\"method\":\"account.setContactSignUpNotification\",\"params\":[{\"name\":\"silent\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":1398240377,\"method\":\"account.getNotifyExceptions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"compare_sound\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"flags.0?InputNotifyPeer\"}],\"type\":\"Updates\"},{\"id\":283795844,\"method\":\"messages.sendVote\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"}],\"type\":\"Updates\"},{\"id\":1941660731,\"method\":\"messages.getPollResults\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1848369232,\"method\":\"messages.getOnlines\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"ChatOnlines\"},{\"id\":-554301545,\"method\":\"messages.editChatAbout\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"about\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-1517917375,\"method\":\"messages.editChatDefaultBannedRights\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"Updates\"},{\"id\":-57811990,\"method\":\"account.getWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"}],\"type\":\"WallPaper\"},{\"id\":-476410109,\"method\":\"account.uploadWallPaper\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"for_chat\",\"type\":\"flags.0?true\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":1817860919,\"method\":\"account.saveWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"},{\"name\":\"unsave\",\"type\":\"Bool\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"Bool\"},{\"id\":-18000023,\"method\":\"account.installWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"Bool\"},{\"id\":-1153722364,\"method\":\"account.resetWallPapers\",\"params\":[],\"type\":\"Bool\"},{\"id\":1457130303,\"method\":\"account.getAutoDownloadSettings\",\"params\":[],\"type\":\"account.AutoDownloadSettings\"},{\"id\":1995661875,\"method\":\"account.saveAutoDownloadSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"low\",\"type\":\"flags.0?true\"},{\"name\":\"high\",\"type\":\"flags.1?true\"},{\"name\":\"settings\",\"type\":\"AutoDownloadSettings\"}],\"type\":\"Bool\"},{\"id\":899735650,\"method\":\"messages.getEmojiKeywords\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":352892591,\"method\":\"messages.getEmojiKeywordsDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":1318675378,\"method\":\"messages.getEmojiKeywordsLanguages\",\"params\":[{\"name\":\"lang_codes\",\"type\":\"Vector<string>\"}],\"type\":\"Vector<EmojiLanguage>\"},{\"id\":-709817306,\"method\":\"messages.getEmojiURL\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiURL\"},{\"id\":1749536939,\"method\":\"folders.editPeerFolders\",\"params\":[{\"name\":\"folder_peers\",\"type\":\"Vector<InputFolderPeer>\"}],\"type\":\"Updates\"},{\"id\":11435201,\"method\":\"messages.getSearchCounters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"filters\",\"type\":\"Vector<MessagesFilter>\"}],\"type\":\"Vector<messages.SearchCounter>\"},{\"id\":-170208392,\"method\":\"channels.getGroupsForDiscussion\",\"params\":[],\"type\":\"messages.Chats\"},{\"id\":1079520178,\"method\":\"channels.setDiscussionGroup\",\"params\":[{\"name\":\"broadcast\",\"type\":\"InputChannel\"},{\"name\":\"group\",\"type\":\"InputChannel\"}],\"type\":\"Bool\"},{\"id\":428848198,\"method\":\"messages.requestUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"flags.1?InputPeer\"},{\"name\":\"msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"button_id\",\"type\":\"flags.1?int\"},{\"name\":\"url\",\"type\":\"flags.2?string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1322487515,\"method\":\"messages.acceptUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"write_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"flags.1?InputPeer\"},{\"name\":\"msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"button_id\",\"type\":\"flags.1?int\"},{\"name\":\"url\",\"type\":\"flags.2?string\"}],\"type\":\"UrlAuthResult\"},{\"id\":1336717624,\"method\":\"messages.hidePeerSettingsBar\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-386636848,\"method\":\"contacts.addContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"add_phone_privacy_exception\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputUser\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-130964977,\"method\":\"contacts.acceptContact\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":-1892102881,\"method\":\"channels.editCreator\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"Updates\"},{\"id\":-750207932,\"method\":\"contacts.getLocated\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"background\",\"type\":\"flags.1?true\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"self_expires\",\"type\":\"flags.0?int\"}],\"type\":\"Updates\"},{\"id\":1491484525,\"method\":\"channels.editLocation\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"address\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-304832784,\"method\":\"channels.toggleSlowMode\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"seconds\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-183077365,\"method\":\"messages.getScheduledHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":-1111817116,\"method\":\"messages.getScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.Messages\"},{\"id\":-1120369398,\"method\":\"messages.sendScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":1504586518,\"method\":\"messages.deleteScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":473805619,\"method\":\"account.uploadTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"thumb\",\"type\":\"flags.0?InputFile\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":1697530880,\"method\":\"account.createTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<InputThemeSettings>\"}],\"type\":\"Theme\"},{\"id\":737414348,\"method\":\"account.updateTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"slug\",\"type\":\"flags.0?string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"document\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<InputThemeSettings>\"}],\"type\":\"Theme\"},{\"id\":-229175188,\"method\":\"account.saveTheme\",\"params\":[{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-953697477,\"method\":\"account.installTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"theme\",\"type\":\"flags.1?InputTheme\"},{\"name\":\"format\",\"type\":\"flags.2?string\"},{\"name\":\"base_theme\",\"type\":\"flags.3?BaseTheme\"}],\"type\":\"Bool\"},{\"id\":978872812,\"method\":\"account.getTheme\",\"params\":[{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"theme\",\"type\":\"InputTheme\"}],\"type\":\"Theme\"},{\"id\":1913054296,\"method\":\"account.getThemes\",\"params\":[{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.Themes\"},{\"id\":-1210022402,\"method\":\"auth.exportLoginToken\",\"params\":[{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"except_ids\",\"type\":\"Vector<long>\"}],\"type\":\"auth.LoginToken\"},{\"id\":-1783866140,\"method\":\"auth.importLoginToken\",\"params\":[{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":-392909491,\"method\":\"auth.acceptLoginToken\",\"params\":[{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"Authorization\"},{\"id\":-1250643605,\"method\":\"account.setContentSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sensitive_enabled\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":-1952756306,\"method\":\"account.getContentSettings\",\"params\":[],\"type\":\"account.ContentSettings\"},{\"id\":300429806,\"method\":\"channels.getInactiveChannels\",\"params\":[],\"type\":\"messages.InactiveChats\"},{\"id\":1705865692,\"method\":\"account.getMultiWallPapers\",\"params\":[{\"name\":\"wallpapers\",\"type\":\"Vector<InputWallPaper>\"}],\"type\":\"Vector<WallPaper>\"},{\"id\":-1200736242,\"method\":\"messages.getPollVotes\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"option\",\"type\":\"flags.0?bytes\"},{\"name\":\"offset\",\"type\":\"flags.1?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.VotesList\"},{\"id\":-1257951254,\"method\":\"messages.toggleStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"uninstall\",\"type\":\"flags.0?true\"},{\"name\":\"archive\",\"type\":\"flags.1?true\"},{\"name\":\"unarchive\",\"type\":\"flags.2?true\"},{\"name\":\"stickersets\",\"type\":\"Vector<InputStickerSet>\"}],\"type\":\"Bool\"},{\"id\":779736953,\"method\":\"payments.getBankCardData\",\"params\":[{\"name\":\"number\",\"type\":\"string\"}],\"type\":\"payments.BankCardData\"},{\"id\":-241247891,\"method\":\"messages.getDialogFilters\",\"params\":[],\"type\":\"Vector<DialogFilter>\"},{\"id\":-1566780372,\"method\":\"messages.getSuggestedDialogFilters\",\"params\":[],\"type\":\"Vector<DialogFilterSuggested>\"},{\"id\":450142282,\"method\":\"messages.updateDialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"filter\",\"type\":\"flags.0?DialogFilter\"}],\"type\":\"Bool\"},{\"id\":-983318044,\"method\":\"messages.updateDialogFiltersOrder\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-1421720550,\"method\":\"stats.getBroadcastStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"stats.BroadcastStats\"},{\"id\":1646092192,\"method\":\"stats.loadAsyncGraph\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"x\",\"type\":\"flags.0?long\"}],\"type\":\"StatsGraph\"},{\"id\":-1486204014,\"method\":\"stickers.setStickerSetThumb\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"thumb\",\"type\":\"flags.0?InputDocument\"},{\"name\":\"thumb_document_id\",\"type\":\"flags.1?long\"}],\"type\":\"messages.StickerSet\"},{\"id\":85399130,\"method\":\"bots.setBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"commands\",\"type\":\"Vector<BotCommand>\"}],\"type\":\"Bool\"},{\"id\":2127598753,\"method\":\"messages.getOldFeaturedStickers\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":-1063816159,\"method\":\"help.getPromoData\",\"params\":[],\"type\":\"help.PromoData\"},{\"id\":505748629,\"method\":\"help.hidePromoData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-8744061,\"method\":\"phone.sendSignalingData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-589330937,\"method\":\"stats.getMegagroupStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"stats.MegagroupStats\"},{\"id\":-349483786,\"method\":\"account.getGlobalPrivacySettings\",\"params\":[],\"type\":\"GlobalPrivacySettings\"},{\"id\":517647042,\"method\":\"account.setGlobalPrivacySettings\",\"params\":[{\"name\":\"settings\",\"type\":\"GlobalPrivacySettings\"}],\"type\":\"GlobalPrivacySettings\"},{\"id\":-183649631,\"method\":\"help.dismissSuggestion\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"suggestion\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1935116200,\"method\":\"help.getCountriesList\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.CountriesList\"},{\"id\":584962828,\"method\":\"messages.getReplies\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":1147761405,\"method\":\"messages.getDiscussionMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"messages.DiscussionMessage\"},{\"id\":-147740172,\"method\":\"messages.readDiscussion\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":698914348,\"method\":\"contacts.blockFromReplies\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"delete_message\",\"type\":\"flags.0?true\"},{\"name\":\"delete_history\",\"type\":\"flags.1?true\"},{\"name\":\"report_spam\",\"type\":\"flags.2?true\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1445996571,\"method\":\"stats.getMessagePublicForwards\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"offset_rate\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":-1226791947,\"method\":\"stats.getMessageStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"stats.MessageStats\"},{\"id\":-299714136,\"method\":\"messages.unpinAllMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1221445336,\"method\":\"phone.createGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"rtmp_stream\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"schedule_date\",\"type\":\"flags.1?int\"}],\"type\":\"Updates\"},{\"id\":-1322057861,\"method\":\"phone.joinGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"muted\",\"type\":\"flags.0?true\"},{\"name\":\"video_stopped\",\"type\":\"flags.2?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"join_as\",\"type\":\"InputPeer\"},{\"name\":\"invite_hash\",\"type\":\"flags.1?string\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Updates\"},{\"id\":1342404601,\"method\":\"phone.leaveGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"source\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":2067345760,\"method\":\"phone.inviteToGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":2054648117,\"method\":\"phone.discardGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":1958458429,\"method\":\"phone.toggleGroupCallSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reset_invite_hash\",\"type\":\"flags.1?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"join_muted\",\"type\":\"flags.0?Bool\"}],\"type\":\"Updates\"},{\"id\":68699611,\"method\":\"phone.getGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"phone.GroupCall\"},{\"id\":-984033109,\"method\":\"phone.getGroupParticipants\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"ids\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"},{\"name\":\"offset\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"phone.GroupParticipants\"},{\"id\":-1248003721,\"method\":\"phone.checkGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"}],\"type\":\"Vector<int>\"},{\"id\":1540419152,\"method\":\"messages.deleteChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":-104078327,\"method\":\"messages.deletePhoneCallHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke\",\"type\":\"flags.0?true\"}],\"type\":\"messages.AffectedFoundMessages\"},{\"id\":1140726259,\"method\":\"messages.checkHistoryImport\",\"params\":[{\"name\":\"import_head\",\"type\":\"string\"}],\"type\":\"messages.HistoryImportParsed\"},{\"id\":873008187,\"method\":\"messages.initHistoryImport\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"media_count\",\"type\":\"int\"}],\"type\":\"messages.HistoryImport\"},{\"id\":713433234,\"method\":\"messages.uploadImportedMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"import_id\",\"type\":\"long\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"InputMedia\"}],\"type\":\"MessageMedia\"},{\"id\":-1271008444,\"method\":\"messages.startHistoryImport\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"import_id\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":-1565154314,\"method\":\"messages.getExportedChatInvites\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"admin_id\",\"type\":\"InputUser\"},{\"name\":\"offset_date\",\"type\":\"flags.2?int\"},{\"name\":\"offset_link\",\"type\":\"flags.2?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ExportedChatInvites\"},{\"id\":1937010524,\"method\":\"messages.getExportedChatInvite\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":-1110823051,\"method\":\"messages.editExportedChatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"expire_date\",\"type\":\"flags.0?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.1?int\"},{\"name\":\"request_needed\",\"type\":\"flags.3?Bool\"},{\"name\":\"title\",\"type\":\"flags.4?string\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":1452833749,\"method\":\"messages.deleteRevokedExportedChatInvites\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"admin_id\",\"type\":\"InputUser\"}],\"type\":\"Bool\"},{\"id\":-731601877,\"method\":\"messages.deleteExportedChatInvite\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":958457583,\"method\":\"messages.getAdminsWithInvites\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.ChatAdminsWithInvites\"},{\"id\":-553329330,\"method\":\"messages.getChatInviteImporters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requested\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"flags.1?string\"},{\"name\":\"q\",\"type\":\"flags.2?string\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_user\",\"type\":\"InputUser\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ChatInviteImporters\"},{\"id\":-1207017500,\"method\":\"messages.setHistoryTTL\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-91437323,\"method\":\"account.reportProfilePhoto\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"photo_id\",\"type\":\"InputPhoto\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":187239529,\"method\":\"channels.convertToGigagroup\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":1573261059,\"method\":\"messages.checkHistoryImportPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.CheckedHistoryImportPeer\"},{\"id\":-248985848,\"method\":\"phone.toggleGroupCallRecord\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"start\",\"type\":\"flags.0?true\"},{\"name\":\"video\",\"type\":\"flags.2?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"video_portrait\",\"type\":\"flags.2?Bool\"}],\"type\":\"Updates\"},{\"id\":-1524155713,\"method\":\"phone.editGroupCallParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"muted\",\"type\":\"flags.0?Bool\"},{\"name\":\"volume\",\"type\":\"flags.1?int\"},{\"name\":\"raise_hand\",\"type\":\"flags.2?Bool\"},{\"name\":\"video_stopped\",\"type\":\"flags.3?Bool\"},{\"name\":\"video_paused\",\"type\":\"flags.4?Bool\"},{\"name\":\"presentation_paused\",\"type\":\"flags.5?Bool\"}],\"type\":\"Updates\"},{\"id\":480685066,\"method\":\"phone.editGroupCallTitle\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-277077702,\"method\":\"phone.getGroupCallJoinAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"phone.JoinAsPeers\"},{\"id\":-425040769,\"method\":\"phone.exportGroupCallInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_self_unmute\",\"type\":\"flags.0?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"phone.ExportedGroupCallInvite\"},{\"id\":563885286,\"method\":\"phone.toggleGroupCallStartSubscription\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"subscribed\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":1451287362,\"method\":\"phone.startScheduledGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":1465786252,\"method\":\"phone.saveDefaultGroupCallJoinAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"join_as\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-873829436,\"method\":\"phone.joinGroupCallPresentation\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Updates\"},{\"id\":475058500,\"method\":\"phone.leaveGroupCallPresentation\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":676017721,\"method\":\"stickers.checkShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1303364867,\"method\":\"stickers.suggestShortName\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"stickers.SuggestedShortName\"},{\"id\":1032708345,\"method\":\"bots.resetBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-481554986,\"method\":\"bots.getBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Vector<BotCommand>\"},{\"id\":-1828139493,\"method\":\"account.resetPassword\",\"params\":[],\"type\":\"account.ResetPasswordResult\"},{\"id\":1284770294,\"method\":\"account.declinePasswordReset\",\"params\":[],\"type\":\"Bool\"},{\"id\":221691769,\"method\":\"auth.checkRecoveryPassword\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-700916087,\"method\":\"account.getChatThemes\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.Themes\"},{\"id\":-432283329,\"method\":\"messages.setChatTheme\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-1095836780,\"method\":\"channels.viewSponsoredMessage\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"random_id\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-333377601,\"method\":\"channels.getSponsoredMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"messages.SponsoredMessages\"},{\"id\":834782287,\"method\":\"messages.getMessageReadParticipants\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Vector<ReadParticipantDate>\"},{\"id\":1240514025,\"method\":\"messages.getSearchResultsCalendar\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"}],\"type\":\"messages.SearchResultsCalendar\"},{\"id\":1855292323,\"method\":\"messages.getSearchResultsPositions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.SearchResultsPositions\"},{\"id\":2145904661,\"method\":\"messages.hideChatJoinRequest\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"approved\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":-528091926,\"method\":\"messages.hideAllChatJoinRequests\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"approved\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"flags.1?string\"}],\"type\":\"Updates\"},{\"id\":-1323389022,\"method\":\"messages.toggleNoForwards\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-855777386,\"method\":\"messages.saveDefaultSendAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"send_as\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":231174382,\"method\":\"channels.getSendAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"channels.SendAsPeers\"},{\"id\":-1081501024,\"method\":\"account.setAuthorizationTTL\",\"params\":[{\"name\":\"authorization_ttl_days\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1089766498,\"method\":\"account.changeAuthorizationSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"encrypted_requests_disabled\",\"type\":\"flags.0?Bool\"},{\"name\":\"call_requests_disabled\",\"type\":\"flags.1?Bool\"}],\"type\":\"Bool\"},{\"id\":913655003,\"method\":\"channels.deleteParticipantHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-754091820,\"method\":\"messages.sendReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.1?true\"},{\"name\":\"add_to_recent\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"flags.0?Vector<Reaction>\"}],\"type\":\"Updates\"},{\"id\":-1950707482,\"method\":\"messages.getMessagesReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":1176190792,\"method\":\"messages.getMessageReactionsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"flags.0?Reaction\"},{\"name\":\"offset\",\"type\":\"flags.1?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.MessageReactionsList\"},{\"id\":-21928079,\"method\":\"messages.setChatAvailableReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"available_reactions\",\"type\":\"ChatReactions\"}],\"type\":\"Updates\"},{\"id\":417243308,\"method\":\"messages.getAvailableReactions\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.AvailableReactions\"},{\"id\":1330094102,\"method\":\"messages.setDefaultReaction\",\"params\":[{\"name\":\"reaction\",\"type\":\"Reaction\"}],\"type\":\"Bool\"},{\"id\":1662529584,\"method\":\"messages.translateText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"flags.0?InputPeer\"},{\"name\":\"id\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"text\",\"type\":\"flags.1?Vector<TextWithEntities>\"},{\"name\":\"to_lang\",\"type\":\"string\"}],\"type\":\"messages.TranslatedText\"},{\"id\":841173339,\"method\":\"messages.getUnreadReactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":1420459918,\"method\":\"messages.readReactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-1963375804,\"method\":\"contacts.resolvePhone\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":447879488,\"method\":\"phone.getGroupCallStreamChannels\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"phone.GroupCallStreamChannels\"},{\"id\":-558650433,\"method\":\"phone.getGroupCallStreamRtmpUrl\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"revoke\",\"type\":\"Bool\"}],\"type\":\"phone.GroupCallStreamRtmpUrl\"},{\"id\":276705696,\"method\":\"messages.searchSentMedia\",\"params\":[{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":385663691,\"method\":\"messages.getAttachMenuBots\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"AttachMenuBots\"},{\"id\":1998676370,\"method\":\"messages.getAttachMenuBot\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"AttachMenuBotsBot\"},{\"id\":1777704297,\"method\":\"messages.toggleBotInAttachMenu\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"write_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":395003915,\"method\":\"messages.requestWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"from_bot_menu\",\"type\":\"flags.4?true\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"url\",\"type\":\"flags.1?string\"},{\"name\":\"start_param\",\"type\":\"flags.3?string\"},{\"name\":\"theme_params\",\"type\":\"flags.2?DataJSON\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"top_msg_id\",\"type\":\"flags.9?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"WebViewResult\"},{\"id\":2146648841,\"method\":\"messages.prolongWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"top_msg_id\",\"type\":\"flags.9?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Bool\"},{\"id\":698084494,\"method\":\"messages.requestSimpleWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"from_switch_webview\",\"type\":\"flags.1?true\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"theme_params\",\"type\":\"flags.0?DataJSON\"},{\"name\":\"platform\",\"type\":\"string\"}],\"type\":\"SimpleWebViewResult\"},{\"id\":172168437,\"method\":\"messages.sendWebViewResultMessage\",\"params\":[{\"name\":\"bot_query_id\",\"type\":\"string\"},{\"name\":\"result\",\"type\":\"InputBotInlineResult\"}],\"type\":\"WebViewMessageSent\"},{\"id\":-603831608,\"method\":\"messages.sendWebViewData\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"button_text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1157944655,\"method\":\"bots.setBotMenuButton\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"button\",\"type\":\"BotMenuButton\"}],\"type\":\"Bool\"},{\"id\":-1671369944,\"method\":\"bots.getBotMenuButton\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"BotMenuButton\"},{\"id\":-510647672,\"method\":\"account.getSavedRingtones\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.SavedRingtones\"},{\"id\":1038768899,\"method\":\"account.saveRingtone\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"account.SavedRingtone\"},{\"id\":-2095414366,\"method\":\"account.uploadRingtone\",\"params\":[{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":2021942497,\"method\":\"bots.setBotBroadcastDefaultAdminRights\",\"params\":[{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"}],\"type\":\"Bool\"},{\"id\":-1839281686,\"method\":\"bots.setBotGroupDefaultAdminRights\",\"params\":[{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"}],\"type\":\"Bool\"},{\"id\":1092913030,\"method\":\"phone.saveCallLog\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"file\",\"type\":\"InputFile\"}],\"type\":\"Bool\"},{\"id\":-456419968,\"method\":\"channels.toggleJoinToSend\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":1277789622,\"method\":\"channels.toggleJoinRequest\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":261206117,\"method\":\"payments.exportInvoice\",\"params\":[{\"name\":\"invoice_media\",\"type\":\"InputMedia\"}],\"type\":\"payments.ExportedInvoice\"},{\"id\":647928393,\"method\":\"messages.transcribeAudio\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"messages.TranscribedAudio\"},{\"id\":2132608815,\"method\":\"messages.rateTranscribedAudio\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"transcription_id\",\"type\":\"long\"},{\"name\":\"good\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-2131921795,\"method\":\"payments.assignAppStoreTransaction\",\"params\":[{\"name\":\"receipt\",\"type\":\"bytes\"},{\"name\":\"purpose\",\"type\":\"InputStorePaymentPurpose\"}],\"type\":\"Updates\"},{\"id\":-537046829,\"method\":\"payments.assignPlayMarketTransaction\",\"params\":[{\"name\":\"receipt\",\"type\":\"DataJSON\"},{\"name\":\"purpose\",\"type\":\"InputStorePaymentPurpose\"}],\"type\":\"Updates\"},{\"id\":-1614700874,\"method\":\"payments.canPurchasePremium\",\"params\":[{\"name\":\"purpose\",\"type\":\"InputStorePaymentPurpose\"}],\"type\":\"Bool\"},{\"id\":-1206152236,\"method\":\"help.getPremiumPromo\",\"params\":[],\"type\":\"help.PremiumPromo\"},{\"id\":-643100844,\"method\":\"messages.getCustomEmojiDocuments\",\"params\":[{\"name\":\"document_id\",\"type\":\"Vector<long>\"}],\"type\":\"Vector<Document>\"},{\"id\":-67329649,\"method\":\"messages.getEmojiStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.AllStickers\"},{\"id\":248473398,\"method\":\"messages.getFeaturedEmojiStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":-70001045,\"method\":\"account.updateEmojiStatus\",\"params\":[{\"name\":\"emoji_status\",\"type\":\"EmojiStatus\"}],\"type\":\"Bool\"},{\"id\":-696962170,\"method\":\"account.getDefaultEmojiStatuses\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.EmojiStatuses\"},{\"id\":257392901,\"method\":\"account.getRecentEmojiStatuses\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.EmojiStatuses\"},{\"id\":404757166,\"method\":\"account.clearRecentEmojiStatuses\",\"params\":[],\"type\":\"Bool\"},{\"id\":1063567478,\"method\":\"messages.reportReaction\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"reaction_peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-1149164102,\"method\":\"messages.getTopReactions\",\"params\":[{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Reactions\"},{\"id\":960896434,\"method\":\"messages.getRecentReactions\",\"params\":[{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Reactions\"},{\"id\":-1644236876,\"method\":\"messages.clearRecentReactions\",\"params\":[],\"type\":\"Bool\"},{\"id\":-2064119788,\"method\":\"messages.getExtendedMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":767062953,\"method\":\"auth.importWebTokenAuthorization\",\"params\":[{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"web_auth_token\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":-279966037,\"method\":\"account.reorderUsernames\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":1490465654,\"method\":\"account.toggleUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"active\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1268978403,\"method\":\"channels.reorderUsernames\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"order\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":1358053637,\"method\":\"channels.toggleUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"active\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":170155475,\"method\":\"channels.deactivateAllUsernames\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Bool\"},{\"id\":-1540781271,\"method\":\"channels.toggleForum\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-200539612,\"method\":\"channels.createForumTopic\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"icon_color\",\"type\":\"flags.0?int\"},{\"name\":\"icon_emoji_id\",\"type\":\"flags.3?long\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"send_as\",\"type\":\"flags.2?InputPeer\"}],\"type\":\"Updates\"},{\"id\":233136337,\"method\":\"channels.getForumTopics\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"q\",\"type\":\"flags.0?string\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_topic\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ForumTopics\"},{\"id\":-1333584199,\"method\":\"channels.getForumTopicsByID\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"topics\",\"type\":\"Vector<int>\"}],\"type\":\"messages.ForumTopics\"},{\"id\":-186670715,\"method\":\"channels.editForumTopic\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"topic_id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"icon_emoji_id\",\"type\":\"flags.1?long\"},{\"name\":\"closed\",\"type\":\"flags.2?Bool\"},{\"name\":\"hidden\",\"type\":\"flags.3?Bool\"}],\"type\":\"Updates\"},{\"id\":1814925350,\"method\":\"channels.updatePinnedForumTopic\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"topic_id\",\"type\":\"int\"},{\"name\":\"pinned\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":876830509,\"method\":\"channels.deleteTopicHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"top_msg_id\",\"type\":\"int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":693150095,\"method\":\"channels.reorderPinnedForumTopics\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":1760814315,\"method\":\"channels.toggleAntiSpam\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-1471109485,\"method\":\"channels.reportAntiSpamFalsePositive\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-1632299963,\"method\":\"messages.setDefaultHistoryTTL\",\"params\":[{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1703637384,\"method\":\"messages.getDefaultHistoryTTL\",\"params\":[],\"type\":\"DefaultHistoryTTL\"},{\"id\":-127582169,\"method\":\"contacts.exportContactToken\",\"params\":[],\"type\":\"ExportedContactToken\"},{\"id\":318789512,\"method\":\"contacts.importContactToken\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":-515093903,\"method\":\"photos.uploadContactProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"suggest\",\"type\":\"flags.3?true\"},{\"name\":\"save\",\"type\":\"flags.4?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"file\",\"type\":\"flags.0?InputFile\"},{\"name\":\"video\",\"type\":\"flags.1?InputFile\"},{\"name\":\"video_start_ts\",\"type\":\"flags.2?double\"},{\"name\":\"video_emoji_markup\",\"type\":\"flags.5?VideoSize\"}],\"type\":\"photos.Photo\"},{\"id\":1785624660,\"method\":\"channels.toggleParticipantsHidden\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-29831141,\"method\":\"messages.sendBotRequestedPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"button_id\",\"type\":\"int\"},{\"name\":\"requested_peer\",\"type\":\"InputPeer\"}],\"type\":\"Updates\"},{\"id\":-495647960,\"method\":\"account.getDefaultProfilePhotoEmojis\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"EmojiList\"},{\"id\":-1856479058,\"method\":\"account.getDefaultGroupPhotoEmojis\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"EmojiList\"},{\"id\":-1991881904,\"method\":\"auth.requestFirebaseSms\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"safety_net_token\",\"type\":\"flags.0?string\"},{\"name\":\"ios_push_secret\",\"type\":\"flags.1?string\"}],\"type\":\"Bool\"},{\"id\":1955122779,\"method\":\"messages.getEmojiGroups\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.EmojiGroups\"},{\"id\":785209037,\"method\":\"messages.getEmojiStatusGroups\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.EmojiGroups\"},{\"id\":564480243,\"method\":\"messages.getEmojiProfilePhotoGroups\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.EmojiGroups\"},{\"id\":739360983,\"method\":\"messages.searchCustomEmoji\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"EmojiList\"},{\"id\":-461589127,\"method\":\"messages.togglePeerTranslations\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"disabled\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-1379156774,\"method\":\"account.getAutoSaveSettings\",\"params\":[],\"type\":\"account.AutoSaveSettings\"},{\"id\":-694451359,\"method\":\"account.saveAutoSaveSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"users\",\"type\":\"flags.0?true\"},{\"name\":\"chats\",\"type\":\"flags.1?true\"},{\"name\":\"broadcasts\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"flags.3?InputPeer\"},{\"name\":\"settings\",\"type\":\"AutoSaveSettings\"}],\"type\":\"Bool\"},{\"id\":1404829728,\"method\":\"account.deleteAutoSaveExceptions\",\"params\":[],\"type\":\"Bool\"},{\"id\":-179077444,\"method\":\"stickers.changeSticker\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sticker\",\"type\":\"InputDocument\"},{\"name\":\"emoji\",\"type\":\"flags.0?string\"},{\"name\":\"mask_coords\",\"type\":\"flags.1?MaskCoords\"},{\"name\":\"keywords\",\"type\":\"flags.2?string\"}],\"type\":\"messages.StickerSet\"},{\"id\":306912256,\"method\":\"stickers.renameStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"messages.StickerSet\"},{\"id\":-2022685804,\"method\":\"stickers.deleteStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":889046467,\"method\":\"messages.getBotApp\",\"params\":[{\"name\":\"app\",\"type\":\"InputBotApp\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.BotApp\"},{\"id\":-1940243652,\"method\":\"messages.requestAppWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"write_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"app\",\"type\":\"InputBotApp\"},{\"name\":\"start_param\",\"type\":\"flags.1?string\"},{\"name\":\"theme_params\",\"type\":\"flags.2?DataJSON\"},{\"name\":\"platform\",\"type\":\"string\"}],\"type\":\"AppWebViewResult\"},{\"id\":282013987,\"method\":\"bots.setBotInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"flags.2?InputUser\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"flags.3?string\"},{\"name\":\"about\",\"type\":\"flags.0?string\"},{\"name\":\"description\",\"type\":\"flags.1?string\"}],\"type\":\"Bool\"},{\"id\":-589753091,\"method\":\"bots.getBotInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"flags.0?InputUser\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"bots.BotInfo\"},{\"id\":2123760019,\"method\":\"auth.resetLoginEmail\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"auth.SentCode\"},{\"id\":-2072885362,\"method\":\"chatlists.exportChatlistInvite\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"chatlists.ExportedChatlistInvite\"},{\"id\":1906072670,\"method\":\"chatlists.deleteExportedInvite\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"},{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1698543165,\"method\":\"chatlists.editExportedInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chatlist\",\"type\":\"InputChatlist\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"peers\",\"type\":\"flags.2?Vector<InputPeer>\"}],\"type\":\"ExportedChatlistInvite\"},{\"id\":-838608253,\"method\":\"chatlists.getExportedInvites\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"}],\"type\":\"chatlists.ExportedInvites\"},{\"id\":1103171583,\"method\":\"chatlists.checkChatlistInvite\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"chatlists.ChatlistInvite\"},{\"id\":-1498291302,\"method\":\"chatlists.joinChatlistInvite\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"Updates\"},{\"id\":-1992190687,\"method\":\"chatlists.getChatlistUpdates\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"}],\"type\":\"chatlists.ChatlistUpdates\"},{\"id\":-527828747,\"method\":\"chatlists.joinChatlistUpdates\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"},{\"name\":\"peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"Updates\"},{\"id\":1726252795,\"method\":\"chatlists.hideChatlistUpdates\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"}],\"type\":\"Bool\"},{\"id\":-37955820,\"method\":\"chatlists.getLeaveChatlistSuggestions\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"}],\"type\":\"Vector<Peer>\"},{\"id\":1962598714,\"method\":\"chatlists.leaveChatlist\",\"params\":[{\"name\":\"chatlist\",\"type\":\"InputChatlist\"},{\"name\":\"peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"Updates\"},{\"id\":-1760972350,\"method\":\"bots.reorderUsernames\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"order\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":87861619,\"method\":\"bots.toggleUsername\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"active\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-609568219,\"method\":\"messages.setChatWallPaper\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"wallpaper\",\"type\":\"flags.0?InputWallPaper\"},{\"name\":\"settings\",\"type\":\"flags.0?WallPaperSettings\"},{\"name\":\"id\",\"type\":\"flags.1?int\"}],\"type\":\"Updates\"}]},\"layer\":158} as {\n  MTProto: {\n    constructors: MTProtoConstructor[],\n    methods: MTProtoMethod[],\n    constructorsIndex?: {[id: number]: number}\n  },\n  API: {\n    constructors: MTProtoConstructor[],\n    methods: MTProtoMethod[],\n    constructorsIndex?: {[id: number]: number}\n  },\n  layer: number,\n};\n","export default function intToUint(val: number) {\n  // return val < 0 ? val + 4294967296 : val; // 0 <= val <= Infinity\n  return val >>> 0; // (4294967296 >>> 0) === 0; 0 <= val <= 4294967295\n}\n","import bigInt from 'big-integer';\nimport intToUint from '../number/intToUint';\n\nexport default function ulongFromInts(high: number, low: number) {\n  high = intToUint(high), low = intToUint(low);\n  return bigInt(high).shiftLeft(32).add(bigInt(low));\n}\n","import bigInt from 'big-integer';\n\nexport const safeBigInt = bigInt(Number.MAX_SAFE_INTEGER);\nexport const ulongBigInt = bigInt(bigInt[2]).pow(64);\nexport const longBigInt = ulongBigInt.divide(bigInt[2]);\n","import bigInt from 'big-integer';\nimport { longBigInt, ulongBigInt } from './bigIntConstants';\n\nexport function bigIntFromBytes(bytes: Uint8Array | number[], base = 256) {\n  return bigInt.fromArray(bytes instanceof Uint8Array ? [...bytes] : bytes, base);\n}\n\nexport function bigIntToBytes(bigInt: bigInt.BigInteger) {\n  return new Uint8Array(bigInt.toArray(256).value);\n}\n\nexport function bigIntToSigned(bigInt: bigInt.BigInteger) {\n  return bigInt.greater(longBigInt) ? bigInt.minus(ulongBigInt) : bigInt;\n}\n\nexport function bigIntToUnsigned(bigInt: bigInt.BigInteger) {\n  return bigInt.isNegative() ? ulongBigInt.add(bigInt) : bigInt;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport Schema, {MTProtoConstructor, MTProtoMethod} from './schema';\nimport {JSONValue} from '../../layer';\nimport {MOUNT_CLASS_TO} from '../../config/debug';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport isObject from '../../helpers/object/isObject';\nimport gzipUncompress from '../../helpers/gzipUncompress';\nimport bigInt from 'big-integer';\nimport ulongFromInts from '../../helpers/long/ulongFromInts';\nimport {safeBigInt} from '../../helpers/bigInt/bigIntConstants';\nimport {bigIntToSigned, bigIntToUnsigned} from '../../helpers/bigInt/bigIntConversion';\n\nconst boolFalse = +Schema.API.constructors.find((c) => c.predicate === 'boolFalse').id;\nconst boolTrue = +Schema.API.constructors.find((c) => c.predicate === 'boolTrue').id;\nconst vector = +Schema.API.constructors.find((c) => c.predicate === 'vector').id;\nconst gzipPacked = +Schema.MTProto.constructors.find((c) => c.predicate === 'gzip_packed').id;\n\n// * using slice to have a new buffer, otherwise the buffer will be copied to main thread\nconst sliceMethod: 'slice' | 'subarray' = 'slice'; // subarray\n\nclass TLSerialization {\n  private maxLength = 2048; // 2Kb\n  private offset = 0; // in bytes\n  private mtproto = false;\n  private debug = false;// Modes.debug;\n\n  private buffer: ArrayBuffer;\n  private intView: Int32Array;\n  private byteView: Uint8Array;\n\n  constructor(options: Partial<{startMaxLength: number, mtproto: true}> = {}) {\n    this.maxLength = options.startMaxLength || 2048; // 2Kb\n    this.mtproto = options.mtproto || false;\n    this.createBuffer();\n  }\n\n  public createBuffer() {\n    this.buffer = new ArrayBuffer(this.maxLength);\n    this.intView = new Int32Array(this.buffer);\n    this.byteView = new Uint8Array(this.buffer);\n  }\n\n  public getArray() {\n    const resultBuffer = new ArrayBuffer(this.offset);\n\n    // let perf = performance.now();\n    /* const resultUint8: any = new Uint8Array(resultBuffer);\n    resultUint8.set(this.byteView.subarray(0, this.offset)); */\n    // console.log('perf uint8', performance.now() - perf);\n\n    // perf = performance.now();\n    const resultInt32 = new Int32Array(resultBuffer);\n    resultInt32.set(this.intView.subarray(0, this.offset / 4));\n    // console.log('perf int32', performance.now() - perf);\n\n    /* if(resultUint8.buffer.byteLength !== resultInt32.buffer.byteLength) {\n      console.error(resultUint8, resultInt32);\n    } */\n\n    return resultInt32;\n  }\n\n  public getBuffer() {\n    return this.getArray().buffer;\n  }\n\n  public getBytes(typed: true): Uint8Array;\n  public getBytes(typed?: false): number[];\n  public getBytes(typed: boolean = true): number[] | Uint8Array {\n    if(typed) {\n      const resultBuffer = new ArrayBuffer(this.offset);\n      const resultArray = new Uint8Array(resultBuffer);\n\n      resultArray.set(this.byteView.subarray(0, this.offset));\n\n      return resultArray;\n    }\n\n    const bytes: number[] = new Array(this.offset);\n    for(let i = 0; i < this.offset; ++i) {\n      bytes[i] = this.byteView[i];\n    }\n    return bytes;\n  }\n\n  public getOffset() {\n    return this.offset;\n  }\n\n  public checkLength(needBytes: number) {\n    if(this.offset + needBytes < this.maxLength) {\n      return;\n    }\n\n    // console.log('Increase buffer start', this.offset, needBytes, this.maxLength, this.byteView.slice(0, 32));\n    this.maxLength = Math.ceil(Math.max(this.maxLength * 2, this.offset + needBytes + 16) / 4) * 4;\n    const previousBuffer = this.buffer;\n    // const previousByteView = this.byteView;\n    const previousArray = new Int32Array(previousBuffer);\n\n    this.createBuffer();\n\n    new Int32Array(this.buffer).set(previousArray);\n    /* console.log('Increase buffer end', this.offset, needBytes, this.maxLength, this.byteView.slice(0, 32),\n      bytesCmp(previousByteView, this.byteView.slice(0, previousByteView.length))); */\n  }\n\n  public writeInt(i: number, field: string) {\n    this.debug && console.log('>>>', i.toString(16), i, field);\n\n    const offset = this.offset / 4;\n    this.checkLength(4);\n    this.intView[offset] = i;\n    this.offset += 4;\n\n    return offset;\n  }\n\n  public storeInt(i: number, field?: string) {\n    return this.writeInt(i, (field || '') + ':int');\n  }\n\n  public storeBool(i: boolean, field?: string) {\n    if(i) {\n      this.writeInt(boolTrue, (field || '') + ':bool');\n    } else {\n      this.writeInt(boolFalse, (field || '') + ':bool');\n    }\n  }\n\n  public storeLongP(iHigh: number, iLow: number, field?: string) {\n    this.writeInt(iLow, (field || '') + ':long[low]');\n    this.writeInt(iHigh, (field || '') + ':long[high]');\n  }\n\n  public storeLong(sLong: Array<number> | string | number, field?: string) {\n    if(Array.isArray(sLong)) {\n      if(sLong.length === 2) {\n        return this.storeLongP(sLong[0], sLong[1], field);\n      } else {\n        return this.storeIntBytes(sLong, 64, field);\n      }\n    }\n\n    const _bigInt = bigIntToUnsigned(bigInt(sLong as string));\n    const {quotient, remainder} = _bigInt.divmod(0x100000000);\n    const high = quotient.toJSNumber();\n    const low = remainder.toJSNumber();\n\n    this.writeInt(low, (field || '') + ':long[low]');\n    this.writeInt(high, (field || '') + ':long[high]');\n  }\n\n  public storeDouble(f: any, field?: string) {\n    const buffer = new ArrayBuffer(8);\n    const intView = new Int32Array(buffer);\n    const doubleView = new Float64Array(buffer);\n\n    doubleView[0] = f;\n\n    this.writeInt(intView[0], (field || '') + ':double[low]');\n    this.writeInt(intView[1], (field || '') + ':double[high]');\n  }\n\n  public storeString(s: string, field?: string) {\n    this.debug && console.log('>>>', s, (field || '') + ':string');\n\n    if(s === undefined) {\n      s = '';\n    }\n    const sUTF8 = unescape(encodeURIComponent(s));\n\n    this.checkLength(sUTF8.length + 8);\n\n    const len = sUTF8.length;\n    if(len <= 253) {\n      this.byteView[this.offset++] = len;\n    } else {\n      this.byteView[this.offset++] = 254;\n      this.byteView[this.offset++] = len & 0xFF;\n      this.byteView[this.offset++] = (len & 0xFF00) >> 8;\n      this.byteView[this.offset++] = (len & 0xFF0000) >> 16;\n    }\n    for(let i = 0; i < len; ++i) {\n      this.byteView[this.offset++] = sUTF8.charCodeAt(i);\n    }\n\n    // Padding\n    while(this.offset % 4) {\n      this.byteView[this.offset++] = 0;\n    }\n  }\n\n  public storeBytes(bytes: ArrayBuffer | Uint8Array | number[], field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    } else if(bytes === undefined) {\n      bytes = [];\n    }\n\n    this.debug && console.log('>>>', bytesToHex(bytes as number[]), (field || '') + ':bytes');\n\n    // if uint8array was json.stringified, then will be: {'0': 123, '1': 123}\n    const len = (bytes as Uint8Array).length;\n    this.checkLength(len + 8);\n    if(len <= 253) {\n      this.byteView[this.offset++] = len;\n    } else {\n      this.byteView[this.offset++] = 254;\n      this.byteView[this.offset++] = len & 0xFF;\n      this.byteView[this.offset++] = (len & 0xFF00) >> 8;\n      this.byteView[this.offset++] = (len & 0xFF0000) >> 16;\n    }\n\n    this.byteView.set(bytes as Uint8Array, this.offset);\n    this.offset += len;\n\n    // Padding\n    while(this.offset % 4) {\n      this.byteView[this.offset++] = 0;\n    }\n  }\n\n  public storeIntBytes(bytes: ArrayBuffer | Uint8Array | number[], bits: number, field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    }\n\n    const len = (bytes as Uint8Array).length;\n    if((bits % 32) || (len * 8) !== bits) {\n      const error = new Error('Invalid bits: ' + bits + ', ' + len);\n      console.error(error, bytes, field);\n      throw error;\n    }\n\n    this.debug && console.log('>>>', bytesToHex(bytes as Uint8Array), (field || '') + ':int' + bits);\n    this.checkLength(len);\n\n    this.byteView.set(bytes as Uint8Array, this.offset);\n    this.offset += len;\n  }\n\n  public storeRawBytes(bytes: ArrayLike<number>, field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    }\n\n    const len = bytes.length;\n\n    this.debug && console.log('>>>', bytesToHex(bytes), (field || ''));\n    this.checkLength(len);\n\n    this.byteView.set(bytes, this.offset);\n    this.offset += len;\n  }\n\n  public storeMethod(methodName: string, params: any) {\n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    const methodData = schema.methods.find((m) => m.method === methodName);\n\n    if(!methodData) {\n      throw new Error('No method ' + methodName + ' found');\n    }\n\n    this.storeInt(methodData.id, methodName + '[id]');\n\n    this.storeBody(params, methodData, methodName);\n\n    return methodData.type;\n  }\n\n  public storeObject(obj: any, type: string, field?: string) {\n    switch(type) {\n      case '#':\n        obj ||= 0;\n      case 'int':\n        return this.storeInt(obj, field);\n      case 'long':\n        return this.storeLong(obj, field);\n      case 'int128':\n        return this.storeIntBytes(obj, 128, field);\n      case 'int256':\n        return this.storeIntBytes(obj, 256, field);\n      case 'int512':\n        return this.storeIntBytes(obj, 512, field);\n      case 'string':\n        return this.storeString(obj, field);\n      case 'bytes':\n        return this.storeBytes(obj, field);\n      case 'double':\n        return this.storeDouble(obj, field);\n      case 'Bool':\n        return this.storeBool(obj, field);\n      case 'true':\n        return;\n    }\n\n    if(Array.isArray(obj)) {\n      if(type.substr(0, 6) === 'Vector') {\n        this.writeInt(vector, field + '[id]');\n      } else if(type.substr(0, 6) !== 'vector') {\n        throw new Error('Invalid vector type ' + type);\n      }\n\n      const itemType = type.substr(7, type.length - 8); // for \"Vector<itemType>\"\n      this.writeInt(obj.length, field + '[count]');\n      for(let i = 0; i < obj.length; ++i) {\n        this.storeObject(obj[i], itemType, field + '[' + i + ']');\n      }\n\n      return true;\n    } else if(type.substr(0, 6).toLowerCase() === 'vector') {\n      throw new Error('Invalid vector object');\n    }\n\n    if(!isObject(obj)) {\n      throw new Error('Invalid object for type ' + type);\n    }\n\n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    const predicate = obj['_'];\n    let isBare = false;\n    const constructorData: MTProtoConstructor = schema.constructors.find((c) => c.predicate === predicate);\n\n    if(isBare = (type.charAt(0) === '%')) {\n      type = type.substr(1);\n    }\n\n    if(!constructorData) {\n      throw new Error('No predicate ' + predicate + ' found');\n    }\n\n    if(predicate === type) {\n      isBare = true;\n    }\n\n    if(!isBare) {\n      this.writeInt(constructorData.id, field + '[' + predicate + '][id]');\n    }\n\n    this.storeBody(obj, constructorData, field + '[' + predicate + ']');\n\n    return constructorData.type;\n  }\n\n  private storeBody(obj: any, constructorData: MTProtoConstructor | MTProtoMethod, field: string) {\n    const pFlags = obj.pFlags || obj; // * support pFlags, though am not expecting it to be there\n    let flagsHandler: {[paramName: string]: {flags: number, offset?: number}};\n    for(const param of constructorData.params) {\n      let type = param.type;\n\n      if(type.indexOf('?') !== -1) {\n        const condType = type.split('?');\n        const fieldBit = condType[0].split('.');\n\n        // * commented to avoid using 'flags' property\n        // if(!(obj[fieldBit[0]] & (1 << +fieldBit[1]))) {\n        if(condType[1] === 'true' ? pFlags?.[param.name] : obj[param.name] !== undefined) {\n          flagsHandler[fieldBit[0]].flags |= 1 << +fieldBit[1];\n        } else {\n          continue;\n        }\n        // }\n\n        type = condType[1];\n      }\n\n      const isFlagHandler = type === '#';\n      if(isFlagHandler) {\n        (flagsHandler ??= {})[param.name] = {flags: 0};\n      }\n\n      const result = this.storeObject(\n        isFlagHandler ? flagsHandler[param.name].flags : obj[param.name],\n        type,\n        field + '[' + param.name + ']'\n      );\n\n      if(isFlagHandler) {\n        flagsHandler[param.name].offset = result as number;\n      }\n    }\n\n    for(const paramName in flagsHandler) {\n      const {flags, offset} = flagsHandler[paramName];\n      this.intView[offset] = flags;\n    }\n  }\n}\n\nclass TLDeserialization<FetchLongAs extends Long> {\n  private offset = 0; // in bytes\n  private override: {[key: string]: (result: any, field: string) => void};\n\n  private buffer: ArrayBuffer;\n  private intView: Int32Array;\n  private byteView: Uint8Array;\n\n  // this.debug =\n  private mtproto: boolean = false;\n  private debug: boolean;\n\n  constructor(buffer: ArrayBuffer | Uint8Array, options: Partial<{override: any, mtproto: true, debug: true}> = {}) {\n    // buffer = addPadding(buffer, 4, true); // fix 21.01.2020 for wss\n    if(buffer instanceof ArrayBuffer) {\n      this.buffer = buffer;\n      this.intView = new Int32Array(buffer);\n      this.byteView = new Uint8Array(this.buffer);\n    } else {\n      this.buffer = buffer.buffer;\n      this.intView = new Int32Array(buffer.buffer);\n      this.byteView = buffer;\n    }\n\n    this.override = options.override || {};\n    this.mtproto = !!options.mtproto;\n    this.debug = options.debug !== undefined ? options.debug : /* Modes.debug */false;\n  }\n\n  /* public setMtproto(mtproto: boolean) {\n    this.mtproto = mtproto;\n  } */\n\n  private readInt(field: string) {\n    // if(this.offset >= this.intView.length * 4) {\n    if((this.byteView.length - this.offset) < 4) {\n      console.error(this.byteView, this.offset);\n      throw new Error('Nothing to fetch: ' + field);\n    }\n\n    const i = this.intView[this.offset / 4];\n    // const i = new Uint32Array(this.byteView.buffer.slice(this.offset, this.offset + 4))[0];\n\n    this.debug &&/*  || field.includes('[dialog][read_outbox_max_id]') */\n      console.log('<<<', i.toString(16), i, field,\n        this.byteView.slice(this.offset - 16, this.offset + 16),\n        bytesToHex(this.byteView.slice(this.offset - 16, this.offset + 16)));\n\n    this.offset += 4;\n\n    return i;\n  }\n\n  public fetchInt(field?: string) {\n    return this.readInt((field || '') + ':int');\n  }\n\n  public fetchDouble(field?: string) {\n    const buffer = new ArrayBuffer(8);\n    const intView = new Int32Array(buffer);\n    const doubleView = new Float64Array(buffer);\n\n    intView[0] = this.readInt((field || '') + ':double[low]'),\n    intView[1] = this.readInt((field || '') + ':double[high]');\n\n    return doubleView[0];\n  }\n\n  // ! it should've been signed\n  public fetchLong(field?: string): FetchLongAs {\n    const iLow = this.readInt((field || '') + ':long[low]');\n    const iHigh = this.readInt((field || '') + ':long[high]');\n\n    let ulong = ulongFromInts(iHigh, iLow);\n    if(/* !unsigned &&  */!this.mtproto) { // make it signed\n      ulong = bigIntToSigned(ulong);\n    }\n\n    if(!this.mtproto) {\n      if(safeBigInt.greaterOrEquals(ulong.abs())) {\n        // @ts-ignore\n        return ulong.toJSNumber();\n      }\n    }\n\n    // @ts-ignore\n    return ulong.toString(10);\n  }\n\n  public fetchBool(field?: string): boolean {\n    const i = this.readInt((field || '') + ':bool');\n    if(i === boolTrue) {\n      return true;\n    } else if(i === boolFalse) {\n      return false;\n    }\n\n    this.offset -= 4;\n    return this.fetchObject('Object', field);\n  }\n\n  public fetchString(field?: string): string {\n    let len = this.byteView[this.offset++];\n\n    if(len === 254) {\n      len = this.byteView[this.offset++] |\n        (this.byteView[this.offset++] << 8) |\n        (this.byteView[this.offset++] << 16);\n    }\n\n    let sUTF8 = '';\n    for(let i = 0; i < len; ++i) {\n      sUTF8 += String.fromCharCode(this.byteView[this.offset++]);\n    }\n\n    // Padding\n    while(this.offset % 4) {\n      ++this.offset;\n    }\n\n    let s: string;\n    try {\n      s = decodeURIComponent(escape(sUTF8));\n    } catch(e) {\n      s = sUTF8;\n    }\n\n    this.debug && console.log('<<<', s, (field || '') + ':string');\n\n    return s;\n  }\n\n  public fetchBytes(field?: string) {\n    let len = this.byteView[this.offset++];\n\n    if(len === 254) {\n      len = this.byteView[this.offset++] |\n        (this.byteView[this.offset++] << 8) |\n        (this.byteView[this.offset++] << 16);\n    }\n\n    const bytes = this.byteView[sliceMethod](this.offset, this.offset + len);\n    this.offset += len;\n\n    // Padding\n    while(this.offset % 4) {\n      ++this.offset;\n    }\n\n    this.debug && console.log('<<<', bytesToHex(bytes), (field || '') + ':bytes');\n\n    return bytes;\n  }\n\n  public fetchIntBytes(bits: number, typed: true, field?: string): Uint8Array;\n  public fetchIntBytes(bits: number, typed?: false, field?: string): number[];\n  public fetchIntBytes(bits: number, typed: boolean = true, field?: string) {\n    if(bits % 32) {\n      throw new Error('Invalid bits: ' + bits);\n    }\n\n    const len = bits / 8;\n    if(typed) {\n      const result = this.byteView[sliceMethod](this.offset, this.offset + len);\n      this.offset += len;\n      return result;\n    }\n\n    const bytes: number[] = new Array(len);\n    for(let i = 0; i < len; ++i) {\n      bytes[i] = this.byteView[this.offset++];\n    }\n\n    this.debug && console.log('<<<', bytesToHex(bytes), (field || '') + ':int' + bits);\n\n    return bytes;\n  }\n\n  public fetchRawBytes(len: number | false, typed: true, field: string): Uint8Array;\n  public fetchRawBytes(len: number | false, typed: false, field: string): number[];\n  public fetchRawBytes(len: number | false, typed: boolean = true, field: string) {\n    if(len === false) {\n      len = this.readInt((field || '') + '_length');\n      if(len > this.byteView.byteLength) {\n        throw new Error('Invalid raw bytes length: ' + len + ', buffer len: ' + this.byteView.byteLength);\n      }\n    }\n\n    if(typed) {\n      const bytes = new Uint8Array(len);\n      bytes.set(this.byteView[sliceMethod](this.offset, this.offset + len));\n      this.offset += len;\n      return bytes;\n    }\n\n    const bytes: number[] = new Array(len);\n    for(let i = 0; i < len; ++i) {\n      bytes[i] = this.byteView[this.offset++];\n    }\n\n    this.debug && console.log('<<<', bytesToHex(bytes), (field || ''));\n\n    return bytes;\n  }\n\n  private fetchVector(type: string, field?: string) {\n    const len = this.readInt(field + '[count]');\n    const result: any[] = new Array(len);\n    if(len > 0) {\n      const itemType = type.substr(7, type.length - 8); // for \"Vector<itemType>\"\n      for(let i = 0; i < len; ++i) {\n        result[i] = this.fetchObject(itemType, field + '[' + i + ']');\n      }\n    }\n\n    return result;\n  }\n\n  public fetchObject(type: string, field?: string): any {\n    switch(type) {\n      case '#':\n      case 'int':\n        return this.fetchInt(field);\n      case 'long':\n        return this.fetchLong(field);\n      case 'int128':\n        return this.fetchIntBytes(128, true, field);\n      case 'int256':\n        return this.fetchIntBytes(256, true, field);\n      case 'int512':\n        return this.fetchIntBytes(512, true, field);\n      case 'string':\n        return this.fetchString(field);\n      case 'bytes':\n        return this.fetchBytes(field);\n      case 'double':\n        return this.fetchDouble(field);\n      case 'Bool':\n        return this.fetchBool(field);\n      case 'true':\n        return true;\n    }\n\n    field = field || type || 'Object';\n\n    if(type.charAt(0) === 'v' && type.substr(1, 5) === 'ector') {\n      return this.fetchVector(type, field);\n    }\n\n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    let constructorData: MTProtoConstructor = null;\n    let fallback = false;\n\n    if(type.charAt(0) === '%') {\n      const checkType = type.substr(1);\n      constructorData = schema.constructors.find((c) => c.type === checkType);\n      if(!constructorData) {\n        throw new Error('Constructor not found for type: ' + type);\n      }\n    }/*  else if(type.charAt(0) >= 97 && type.charAt(0) <= 122) {\n      constructorData = schema.constructors.find((c) => c.predicate === type);\n      if(!constructorData) {\n        throw new Error('Constructor not found for predicate: ' + type);\n      }\n    } */ else {\n      const constructorCmp = this.readInt(field + '[id]');\n\n      if(constructorCmp === gzipPacked) { // Gzip packed\n        const compressed = this.fetchBytes(field + '[packed_string]');\n        const uncompressed = gzipUncompress(compressed) as Uint8Array;\n        const newDeserializer = new TLDeserialization(uncompressed); // rpc_result is packed here\n\n        return newDeserializer.fetchObject(type, field);\n      }\n\n      if(constructorCmp === vector) {\n        return this.fetchVector(type, field);\n      }\n\n      let index = schema.constructorsIndex;\n      if(!index) {\n        schema.constructorsIndex = index = {};\n        for(let i = 0, len = schema.constructors.length; i < len; ++i) {\n          index[schema.constructors[i].id] = i;\n        }\n      }\n\n      const i = index[constructorCmp];\n      if(i !== undefined) {\n        constructorData = schema.constructors[i];\n      }\n\n      if(!constructorData && this.mtproto) {\n        const schemaFallback = Schema.API;\n        for(let i = 0, len = schemaFallback.constructors.length; i < len; ++i) {\n          if(+schemaFallback.constructors[i].id === constructorCmp) {\n            constructorData = schemaFallback.constructors[i];\n\n            delete this.mtproto;\n            fallback = true;\n            break;\n          }\n        }\n      }\n\n      if(!constructorData) {\n        console.error('Constructor not found:', constructorCmp);\n\n        let int1: number, int2: number;\n        try {\n          int1 = this.fetchInt(field);\n          int2 = this.fetchInt(field);\n        } catch(err) {\n\n        }\n\n        throw new Error('Constructor not found: ' + constructorCmp + ' ' + int1 + ' ' + int2 + ' ' + field);\n      }\n    }\n\n    const predicate = constructorData.predicate;\n\n    const result: any = {'_': predicate};\n    const overrideKey = (this.mtproto ? 'mt_' : '') + predicate;\n    if(this.override[overrideKey]) {\n      this.override[overrideKey](result, field + '[' + predicate + ']');\n    } else {\n      // * will use local flags storage to avoid passing 'flags' property anywhere\n      let flagsHandler: {[name: string]: number} = {};\n      for(let i = 0, len = constructorData.params.length; i < len; ++i) {\n        const param = constructorData.params[i];\n        let type = param.type;\n\n        const isFlagHandler = type === '#';\n        if(isFlagHandler) {\n          result.pFlags ??= {};\n          (flagsHandler ??= {})[param.name] = 0;\n        }\n\n        const isCond = type.indexOf('?') !== -1;\n        if(isCond) {\n          const condType = type.split('?');\n          const fieldBit = condType[0].split('.');\n\n          if(!(flagsHandler[fieldBit[0]] & (1 << +fieldBit[1]))) {\n            continue;\n          }\n\n          type = condType[1];\n        }\n\n        const value = this.fetchObject(type, field + '[' + predicate + '][' + param.name + ']');\n\n        if(isCond && type === 'true') {\n          result.pFlags[param.name] = value;\n        } else {\n          (isFlagHandler ? flagsHandler : result)[param.name] = value;\n        }\n      }\n    }\n\n    if(fallback) {\n      this.mtproto = true;\n    }\n\n    if(type === 'JSONValue') {\n      return this.formatJSONValue(result);\n    }\n\n    return result;\n  }\n\n  private formatJSONValue(jsonValue: JSONValue): any {\n    if(!jsonValue._) return jsonValue;\n    switch(jsonValue._) {\n      case 'jsonNull':\n        return null;\n      case 'jsonObject': {\n        const out: any = {};\n        const objectValues = jsonValue.value;\n        for(let i = 0, length = objectValues.length; i < length; ++i) {\n          const objectValue = objectValues[i];\n          out[objectValue.key] = this.formatJSONValue(objectValue.value);\n        }\n        return out;\n      }\n      default:\n        return jsonValue.value;\n    }\n  }\n\n  public getOffset() {\n    return this.offset;\n  }\n\n  public setOffset(offset: number) {\n    this.offset = offset;\n  }\n\n  /* public fetchEnd() {\n    if(this.offset !== this.byteView.length) {\n      throw new Error('Fetch end with non-empty buffer');\n    }\n\n    return true;\n  } */\n}\n\nMOUNT_CLASS_TO.TLDeserialization = TLDeserialization;\nMOUNT_CLASS_TO.TLSerialization = TLSerialization;\nexport {TLDeserialization, TLSerialization};\n","// export function gzipUncompress(bytes: ArrayBuffer, toString: true): string;\n\n// @ts-ignore\nimport pako from 'pako/dist/pako_inflate.min.js';\n// import dT from './dT';\n\n// export function gzipUncompress(bytes: ArrayBuffer, toString?: false): Uint8Array;\nexport default function gzipUncompress(bytes: ArrayBuffer, toString?: boolean): string | Uint8Array {\n  // console.log(dT(), 'Gzip uncompress start');\n  const result = pako.inflate(bytes, toString ? {to: 'string'} : undefined);\n  // console.log(dT(), 'Gzip uncompress finish'/* , result */);\n  return result;\n}\n","import randomize from '../array/randomize';\nimport bufferConcats from './bufferConcats';\n\nexport default function addPadding<T extends number[] | ArrayBuffer | Uint8Array>(\n  bytes: T,\n  blockSize: number = 16,\n  zeroes?: boolean,\n  blockSizeAsTotalLength = false,\n  prepend = false\n): T {\n  const len = (bytes as ArrayBuffer).byteLength || (bytes as Uint8Array).length;\n  const needPadding = blockSizeAsTotalLength ? blockSize - len : blockSize - (len % blockSize);\n  if(needPadding > 0 && needPadding < blockSize) {\n    // //console.log('addPadding()', len, blockSize, needPadding);\n    const padding = new Uint8Array(needPadding);\n    if(zeroes) {\n      for(let i = 0; i < needPadding; ++i) {\n        padding[i] = 0;\n      }\n    } else {\n      randomize(padding);\n    }\n\n    if(bytes instanceof ArrayBuffer) {\n      return (prepend ? bufferConcats(padding, bytes) : bufferConcats(bytes, padding)).buffer as T;\n    } else if(bytes instanceof Uint8Array) {\n      return (prepend ? bufferConcats(padding, bytes) : bufferConcats(bytes, padding)) as T;\n    } else {\n      // @ts-ignore\n      return (prepend ? [...padding].concat(bytes) : bytes.concat([...padding])) as T;\n    }\n  }\n\n  return bytes;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {TLDeserialization, TLSerialization} from './tl_utils';\nimport CryptoWorker from '../crypto/cryptoMessagePort';\nimport sessionStorage from '../sessionStorage';\nimport Schema from './schema';\nimport {NetworkerFactory} from './networkerFactory';\nimport {logger, LogTypes} from '../logger';\nimport {InvokeApiOptions} from '../../types';\nimport longToBytes from '../../helpers/long/longToBytes';\nimport MTTransport from './transports/transport';\nimport {nextRandomUint, randomLong} from '../../helpers/random';\nimport App from '../../config/app';\nimport DEBUG from '../../config/debug';\nimport Modes from '../../config/modes';\nimport noop from '../../helpers/noop';\n\n                       \nimport HTTP from './transports/http';\n         \n\nimport type TcpObfuscated from './transports/tcpObfuscated';\nimport bigInt from 'big-integer';\nimport {ConnectionStatus} from './connectionStatus';\nimport ctx from '../../environment/ctx';\nimport bufferConcats from '../../helpers/bytes/bufferConcats';\nimport bytesCmp from '../../helpers/bytes/bytesCmp';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport convertToUint8Array from '../../helpers/bytes/convertToUint8Array';\nimport isObject from '../../helpers/object/isObject';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport sortLongsArray from '../../helpers/long/sortLongsArray';\nimport randomize from '../../helpers/array/randomize';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport pause from '../../helpers/schedulers/pause';\nimport {getEnvironment} from '../../environment/utils';\nimport {TimeManager} from './timeManager';\n\n// console.error('networker included!', new Error().stack);\n\nexport type MTMessageOptions = InvokeApiOptions & Partial<{\n  noResponse: true, // http_wait\n  longPoll: true,\n\n  notContentRelated: true, // ACK\n  noSchedule: true,\n  // withResult: true,\n  messageId: MTLong,\n}>;\n\nexport type MTMessage = InvokeApiOptions & MTMessageOptions & {\n  msg_id: MTLong,\n  seq_no: number,\n  body?: Uint8Array | number[],\n  isAPI?: boolean,\n  // only these four are important\n\n  acked?: boolean,\n\n  deferred?: CancellablePromise<void>,\n\n  container?: boolean,\n  inner?: MTLong[],\n\n  // below - options\n\n  notContentRelated?: true,\n  noSchedule?: true,\n\n  resultType?: string,\n\n  longPoll?: true,\n  noResponse?: true, // only with http (http_wait for longPoll)\n};\n\nconst DRAIN_TIMEOUT = 10000;\nconst delays: {\n  [k in 'client' | 'file']: {\n    disconnectDelayMin: number,\n    disconnectDelayMax: number,\n    pingInterval: number,\n    pingMaxTime: number,\n    connectionTimeout: number\n  }\n} = {\n  client: {\n    disconnectDelayMin: 7,\n    disconnectDelayMax: 20,\n    pingInterval: 2000,\n    pingMaxTime: 5,\n    connectionTimeout: 5000\n  },\n  file: {\n    disconnectDelayMin: 10,\n    disconnectDelayMax: 24,\n    pingInterval: 3000,\n    pingMaxTime: 7,\n    connectionTimeout: 7500\n  }\n};\nconst RESEND_OPTIONS: MTMessageOptions = {\n  noSchedule: true,\n  notContentRelated: true\n};\nlet invokeAfterMsgConstructor: number;\nlet networkerTempId = 0;\n\nexport default class MTPNetworker {\n  private authKeyUint8: Uint8Array;\n\n  public isFileNetworker: boolean;\n  private isFileUpload: boolean;\n  private isFileDownload: boolean;\n\n  private lastServerMessages: Array<MTLong> = [];\n\n  private sentMessages: {\n    [msgId: MTLong]: MTMessage\n  } = {};\n\n  private pendingMessages: {[msgId: MTLong]: number} = {};\n  private pendingAcks: Array<MTLong> = [];\n  private pendingResendReq: MTLong[] = [];\n  // private pendingResendAnsReq: MTLong[] = [];\n  public connectionInited: boolean;\n\n  private nextReqTimeout: number;\n  private nextReq: number = 0;\n\n                         \n  private longPollInterval: number;\n  private longPollPending: number;\n  private checkConnectionRetryAt: number;\n  private checkConnectionTimeout: number;\n  private checkConnectionPeriod = 0;\n  private sleepAfter: number;\n  private offline = false;\n  private sendingLongPoll: boolean;\n           \n\n  private seqNo: number;\n  private prevSessionId: Uint8Array;\n  private sessionId: Uint8Array;\n  private serverSalt: Uint8Array;\n\n  private lastResendReq: {\n    reqMsgId: MTLong,\n    msgIds: MTPNetworker['pendingResendReq']\n  };\n  // private lastResendAnsReq: MTPNetworker['lastResendReq'];\n\n  private name: string;\n  private log: ReturnType<typeof logger>;\n\n  public isOnline = false;\n  private status: ConnectionStatus = ConnectionStatus.Closed;\n  private lastResponseTime = 0;\n\n  private debug = DEBUG /* && false */ || Modes.debug;\n\n  public activeRequests = 0;\n\n  public onDrain: () => void;\n  private onDrainTimeout: number;\n\n  public transport: MTTransport;\n\n                       \n  private pingDelayDisconnectDeferred: CancellablePromise<string>;\n  private pingPromise: Promise<void>;\n  // private pingInterval: number;\n  private lastPingTime: number;\n  private lastPingStartTime: number;\n  private lastPingDelayDisconnectId: string;\n           \n  // public onConnectionStatusChange: (online: boolean) => void;\n\n  // private debugRequests: Array<{before: Uint8Array, after: Uint8Array}> = [];\n\n  private delays: typeof delays[keyof typeof delays];\n  // private getNewTimeOffset: boolean;\n\n  constructor(\n    private networkerFactory: NetworkerFactory,\n    private timeManager: TimeManager,\n    public dcId: number,\n    private authKey: Uint8Array,\n    private authKeyId: Uint8Array,\n    serverSalt: Uint8Array,\n    options: InvokeApiOptions = {}\n  ) {\n    this.authKeyUint8 = convertToUint8Array(this.authKey);\n    this.serverSalt = convertToUint8Array(serverSalt);\n\n    this.isFileUpload = !!options.fileUpload;\n    this.isFileDownload = !!options.fileDownload;\n    this.isFileNetworker = this.isFileUpload || this.isFileDownload;\n    this.delays = this.isFileNetworker ? delays.file : delays.client;\n\n    const suffix = this.isFileUpload ? '-U' : this.isFileDownload ? '-D' : '';\n    this.name = 'NET-' + dcId + suffix;\n    // this.log = logger(this.name, this.upload && this.dcId === 2 ? LogLevels.debug | LogLevels.warn | LogLevels.log | LogLevels.error : LogLevels.error);\n    this.log = logger(this.name + (suffix ? '' : '-C') + '-' + networkerTempId++, LogTypes.Log/*  | LogTypes.Debug */ | LogTypes.Error | LogTypes.Warn);\n    this.log('constructor'/* , this.authKey, this.authKeyID, this.serverSalt */);\n\n    // Test resend after bad_server_salt\n    /* if(this.dcId === 2 && this.upload) {\n      //timeManager.applyServerTime((Date.now() / 1000 - 86400) | 0);\n      this.serverSalt[0] = 0;\n    } */\n\n    this.updateSession();\n\n    // if(!NetworkerFactory.offlineInited) {\n    //   NetworkerFactory.offlineInited = true;\n    //   /* rootScope.offline = true\n    //   rootScope.offlineConnecting = true */\n    // }\n  }\n\n  private updateSession() {\n    this.seqNo = 0;\n    this.prevSessionId = this.sessionId;\n    this.sessionId = randomize(new Uint8Array(8));\n  }\n\n  /* private clearContainers() {\n    for(const messageId in this.sentMessages) {\n      const message = this.sentMessages[messageId];\n      if(message.container) {\n        delete this.sentMessages[messageId];\n      }\n    }\n  } */\n\n  private updateSentMessage(sentMessageId: string) {\n    const sentMessage = this.sentMessages[sentMessageId];\n    if(!sentMessage) {\n      return false;\n    }\n\n    if(sentMessage.container) {\n      forEachReverse(sentMessage.inner, (innerSentMessageId, idx) => {\n        const innerSentMessage = this.updateSentMessage(innerSentMessageId);\n        if(!innerSentMessage) {\n          sentMessage.inner.splice(idx, 1);\n        } else {\n          sentMessage.inner[idx] = innerSentMessage.msg_id;\n        }\n      });\n    }\n\n    sentMessage.msg_id = this.timeManager.generateId();\n    sentMessage.seq_no = this.generateSeqNo(sentMessage.notContentRelated || sentMessage.container);\n\n    if(this.debug) {\n      this.log(`updateSentMessage, old=${sentMessageId}, new=${sentMessage.msg_id}`);\n    }\n\n    this.sentMessages[sentMessage.msg_id] = sentMessage;\n    delete this.sentMessages[sentMessageId];\n\n    return sentMessage;\n  }\n\n  private generateSeqNo(notContentRelated?: boolean) {\n    let seqNo = this.seqNo * 2;\n\n    if(!notContentRelated) {\n      seqNo++;\n      this.seqNo++;\n    }\n\n    return seqNo;\n  }\n\n  public wrapMtpCall(method: string, params: any, options: MTMessageOptions) {\n    const serializer = new TLSerialization({mtproto: true});\n\n    serializer.storeMethod(method, params);\n\n    const messageId = this.timeManager.generateId();\n    const seqNo = this.generateSeqNo();\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true)\n    };\n\n    if(Modes.debug) {\n      this.log('MT call', method, params, messageId, seqNo);\n    }\n\n    return this.pushMessage(message, options);\n  }\n\n  public wrapMtpMessage(object: any, options: MTMessageOptions) {\n    const serializer = new TLSerialization({mtproto: true});\n    serializer.storeObject(object, 'Object');\n\n    const messageId = this.timeManager.generateId();\n    const seqNo = this.generateSeqNo(options.notContentRelated);\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true)\n    };\n\n    if(Modes.debug) {\n      this.log('MT message', object, messageId, seqNo);\n    }\n\n    return this.pushMessage(message, options);\n  }\n\n  public wrapApiCall(method: string, params: any = {}, options: InvokeApiOptions = {}) {\n    const serializer = new TLSerialization(options);\n\n    if(!this.connectionInited) { // this will call once for each new session\n      // /////this.log('Wrap api call !this.connectionInited');\n\n      const invokeWithLayer = Schema.API.methods.find((m) => m.method === 'invokeWithLayer');\n      if(!invokeWithLayer) throw new Error('no invokeWithLayer!');\n      serializer.storeInt(+invokeWithLayer.id, 'invokeWithLayer');\n\n      // @ts-ignore\n      serializer.storeInt(Schema.layer, 'layer');\n\n      const initConnection = Schema.API.methods.find((m) => m.method === 'initConnection');\n      if(!initConnection) throw new Error('no initConnection!');\n\n      serializer.storeInt(+initConnection.id, 'initConnection');\n      serializer.storeInt(0x0, 'flags');\n      serializer.storeInt(App.id, 'api_id');\n      serializer.storeString(getEnvironment().USER_AGENT || 'Unknown UserAgent', 'device_model');\n      serializer.storeString(navigator.platform || 'Unknown Platform', 'system_version');\n      serializer.storeString(App.version + (App.isMainDomain ? ' ' + App.suffix : ''), 'app_version');\n      serializer.storeString(navigator.language || 'en', 'system_lang_code');\n      serializer.storeString(App.langPack, 'lang_pack');\n      serializer.storeString(this.networkerFactory.language, 'lang_code');\n      // serializer.storeInt(0x0, 'proxy');\n      /* serializer.storeMethod('initConnection', {\n        'flags': 0,\n        'api_id': App.id,\n        'device_model': navigator.userAgent || 'Unknown UserAgent',\n        'system_version': navigator.platform || 'Unknown Platform',\n        'app_version': App.version,\n        'system_lang_code': navigator.language || 'en',\n        'lang_pack': '',\n        'lang_code': navigator.language || 'en'\n      }); */\n    }\n\n    if(options.afterMessageId) {\n      if(invokeAfterMsgConstructor === undefined) {\n        const m = Schema.API.methods.find((m) => m.method === 'invokeAfterMsg');\n        invokeAfterMsgConstructor = m ? +m.id : 0;\n      }\n\n      if(invokeAfterMsgConstructor) {\n        // if(this.debug) {\n        //   this.log('invokeApi: store invokeAfterMsg');\n        // }\n\n        serializer.storeInt(invokeAfterMsgConstructor, 'invokeAfterMsg');\n        serializer.storeLong(options.afterMessageId, 'msg_id');\n      } else {\n        this.log.error('no invokeAfterMsg!');\n      }\n    }\n\n    options.resultType = serializer.storeMethod(method, params);\n\n    /* if(method === 'account.updateNotifySettings') {\n      this.log('api call body:', serializer.getBytes(true));\n    } */\n\n    const messageId = this.timeManager.generateId();\n    const seqNo = this.generateSeqNo();\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true),\n      isAPI: true\n    };\n\n    if(Modes.debug/*  || true */) {\n      this.log('Api call', method, message, params, options);\n    } else if(this.debug) {\n      this.log('Api call', method, params, options);\n    }\n\n    return this.pushMessage(message, options);\n  }\n\n  public changeTransport(transport?: MTTransport) {\n    const oldTransport = this.transport;\n    if(oldTransport) {\n      oldTransport.destroy();\n\n      if(this.nextReqTimeout) {\n        clearTimeout(this.nextReqTimeout);\n        this.nextReqTimeout = 0;\n        this.nextReq = 0;\n      }\n\n      this.connectionInited = false;\n\n                             \n      if(this.longPollInterval !== undefined) {\n        clearInterval(this.longPollInterval);\n        this.longPollInterval = undefined;\n      }\n\n      this.clearCheckConnectionTimeout();\n               \n    }\n\n    this.log('change transport', transport, oldTransport);\n\n                         \n    this.clearPingDelayDisconnect();\n\n    // if(this.pingInterval !== undefined) {\n    //   clearInterval(this.pingInterval);\n    //   this.pingInterval = undefined;\n    // }\n\n    // this.clearPing();\n             \n\n    this.transport = transport;\n    if(!transport) {\n      return;\n    }\n\n    transport.networker = this;\n\n                           \n                         \n    if(transport instanceof HTTP) {\n             \n      this.longPollInterval = ctx.setInterval(this.checkLongPoll, 10000);\n      this.checkLongPoll();\n      this.checkConnection('changed transport');\n                         \n    }\n             \n             \n\n                         \n    // * handle outcoming dead socket, server will close the connection\n    if((transport as TcpObfuscated).connection) {\n      // this.sendPingDelayDisconnect();\n\n      if(transport.connected) {\n        this.setConnectionStatus(ConnectionStatus.Connected);\n      }\n\n      // this.pingInterval = ctx.setInterval(this.sendPing, PING_INTERVAL);\n      // this.sendPing();\n    }\n             \n\n    this.resend();\n  }\n\n  public destroy() {\n    this.log('destroy');\n  }\n\n  public forceReconnectTimeout() {\n    if((this.transport as TcpObfuscated).reconnect) {\n      (this.transport as TcpObfuscated).reconnect();\n    } else {\n      this.resend();\n    }\n  }\n\n  public forceReconnect() {\n    if((this.transport as TcpObfuscated).forceReconnect) {\n      (this.transport as TcpObfuscated).forceReconnect();\n    } else {\n      this.checkConnection('force reconnect');\n    }\n  }\n\n  /* private clearPing() {\n    if(this.pingPromise) {\n      this.pingPromise = undefined;\n    }\n\n    this.lastPingTime = undefined;\n  }\n\n  private sendPing = () => {\n    // return;\n\n    // if(!(this.transport as TcpObfuscated).connected) {\n    //   this.clearPing();\n    //   return;\n    // }\n\n    if(this.pingPromise) {\n      return;\n    }\n\n    const startTime = Date.now();\n    this.log('sendPing: ping', startTime);\n    const promise = this.pingPromise = this.wrapMtpCall('ping', {\n      ping_id: randomLong()\n    }, {\n      notContentRelated: true\n    }).then(() => {\n      const elapsedTime = Date.now() - startTime;\n      this.lastPingTime = elapsedTime / 1000;\n      this.log('sendPing: pong', elapsedTime);\n\n      setTimeout(() => {\n        if(this.pingPromise !== promise) {\n          return;\n        }\n\n        this.pingPromise = undefined;\n        this.sendPing();\n      }, Math.max(0, PING_INTERVAL - elapsedTime));\n    });\n  }; */\n\n  private clearPingDelayDisconnect() {\n    const deferred = this.pingDelayDisconnectDeferred;\n    this.pingDelayDisconnectDeferred = undefined;\n    this.lastPingDelayDisconnectId = undefined;\n\n    if(deferred) {\n      deferred.reject();\n    }\n  }\n\n  private sendPingDelayDisconnect = () => {\n    // return;\n\n    if(this.pingDelayDisconnectDeferred || !this.transport || !this.transport.connected) return;\n\n    /* if(!this.isOnline) {\n      if((this.transport as TcpObfuscated).connected) {\n        (this.transport as TcpObfuscated).connection.close();\n      }\n\n      return;\n    } */\n\n    const deferred = this.pingDelayDisconnectDeferred = deferredPromise();\n    const delays = this.delays;\n    const pingMaxTime = this.delays.pingMaxTime;\n    const lastPingTime = Math.min(this.lastPingTime ?? 0, pingMaxTime);\n    const disconnectDelay = Math.round(delays.disconnectDelayMin + lastPingTime / pingMaxTime * (delays.disconnectDelayMax - delays.disconnectDelayMin));\n    const timeoutTime = disconnectDelay * 1000;\n    const startTime = this.lastPingStartTime = Date.now();\n    const pingId = this.lastPingDelayDisconnectId = randomLong();\n    const options: MTMessageOptions = {notContentRelated: true};\n    this.wrapMtpCall('ping_delay_disconnect', {\n      ping_id: pingId,\n      disconnect_delay: disconnectDelay\n    }, options);\n\n    const log = this.log.bindPrefix('sendPingDelayDisconnect');\n    this.debug && log.debug(`ping, timeout=${timeoutTime}, lastPingTime=${this.lastPingTime}, msgId=${options.messageId}, pingId=${pingId}`);\n    const rejectTimeout = ctx.setTimeout(deferred.reject, timeoutTime);\n\n    const onResolved = (reason: string) => {\n      clearTimeout(rejectTimeout);\n      const elapsedTime = Date.now() - startTime;\n      this.lastPingTime = elapsedTime / 1000;\n      this.debug && log.debug(`pong, reason='${reason}', time=${lastPingTime}, msgId=${options.messageId}`);\n      if(elapsedTime > timeoutTime) {\n        throw undefined;\n      } else {\n        return pause(Math.max(0, this.delays.pingInterval - elapsedTime/* timeoutTime - elapsedTime - PING_INTERVAL */));\n      }\n    };\n\n    const onTimeout = () => {\n      clearTimeout(rejectTimeout);\n      const transport = this.transport as TcpObfuscated;\n      if(this.pingDelayDisconnectDeferred !== deferred || !transport?.connection) {\n        return;\n      }\n\n      log.error('catch, closing connection', this.lastPingTime, options.messageId);\n      transport.connection.close();\n    };\n\n    const onFinally = () => {\n      if(this.pingDelayDisconnectDeferred !== deferred) {\n        return;\n      }\n\n      this.pingDelayDisconnectDeferred = undefined;\n      this.sendPingDelayDisconnect();\n    };\n\n    deferred\n    .then(onResolved)\n    .catch(onTimeout)\n    .finally(onFinally);\n  };\n\n                         \n  private checkLongPoll = () => {\n    const isClean = this.cleanupSent();\n    // this.log.error('Check lp', this.longPollPending, this.dcId, isClean, this);\n    if((this.longPollPending && Date.now() < this.longPollPending) ||\n      this.offline ||\n      this.isStopped() ||\n      this.isFileNetworker) {\n      // this.log('No lp this time');\n      return false;\n    }\n\n    sessionStorage.get('dc').then((baseDcId) => {\n      if(isClean && (\n        baseDcId !== this.dcId ||\n          (this.sleepAfter && Date.now() > this.sleepAfter)\n      )) {\n        // console.warn(dT(), 'Send long-poll for DC is delayed', this.dcId, this.sleepAfter);\n        return;\n      }\n\n      this.sendLongPoll();\n    });\n  };\n\n  private sendLongPoll() {\n    if(this.sendingLongPoll) return;\n    this.sendingLongPoll = true;\n    const maxWait = 25000;\n\n    this.longPollPending = Date.now() + maxWait;\n    this.debug && this.log.debug('sendLongPoll', this.longPollPending);\n\n    this.wrapMtpCall('http_wait', {\n      max_delay: 500,\n      wait_after: 150,\n      max_wait: maxWait\n    }, {\n      noResponse: true,\n      // notContentRelated: true,\n      longPoll: true\n    }).then(() => {\n      this.longPollPending = undefined;\n      setTimeout(this.checkLongPoll, 0);\n    }, (error: ErrorEvent) => {\n      this.log('Long-poll failed', error);\n    }).finally(() => {\n      this.sendingLongPoll = undefined;\n    });\n  }\n\n  private checkConnection = (event: Event | string) => {\n    this.debug && this.log('Check connection', event);\n    this.clearCheckConnectionTimeout();\n\n    if(!this.transport) {\n      this.log.warn('No transport for checkConnection');\n      return;\n    }\n\n    const serializer = new TLSerialization({mtproto: true});\n    const pingId = randomLong();\n\n    serializer.storeMethod('ping', {\n      ping_id: pingId\n    });\n\n    const pingMessage = {\n      msg_id: this.timeManager.generateId(),\n      seq_no: this.generateSeqNo(true),\n      body: serializer.getBytes(true)\n    };\n\n    if(this.offline) {\n      this.setConnectionStatus(ConnectionStatus.Connecting);\n    }\n\n    this.sendEncryptedRequest(pingMessage).then(() => {\n      this.toggleOffline(false);\n    }, () => {\n      this.debug && this.log('Delay', this.checkConnectionPeriod * 1000);\n      this.checkConnectionTimeout = ctx.setTimeout(() => this.checkConnection('from failed checkConnection request'), this.checkConnectionPeriod * 1000 | 0);\n      this.checkConnectionPeriod = Math.min(60, this.checkConnectionPeriod * 1.5);\n    });\n  };\n\n  private clearCheckConnectionTimeout() {\n    if(this.checkConnectionTimeout !== undefined) {\n      clearTimeout(this.checkConnectionTimeout);\n      this.checkConnectionTimeout = undefined;\n    }\n  }\n\n  private toggleOffline(offline: boolean) {\n    if(this.offline !== offline) {\n      this.offline = offline;\n\n      this.clearCheckConnectionTimeout();\n      if(offline) {\n        clearTimeout(this.nextReqTimeout);\n        this.nextReqTimeout = 0;\n        this.nextReq = 0;\n\n        if(this.checkConnectionPeriod < 1.5) {\n          this.checkConnectionPeriod = 0;\n        }\n\n        const delay = this.checkConnectionPeriod * 1000 | 0;\n        this.checkConnectionRetryAt = Date.now() + delay;\n        this.setConnectionStatus(ConnectionStatus.Closed, this.checkConnectionRetryAt);\n        this.checkConnectionTimeout = ctx.setTimeout(() => this.checkConnection('from toggleOfline'), delay);\n        this.checkConnectionPeriod = Math.min(30, (1 + this.checkConnectionPeriod) * 1.5);\n\n                              \n                                                                              \n                                                                             \n                 \n      } else {\n        this.setConnectionStatus(ConnectionStatus.Connected);\n        this.checkLongPoll();\n\n        this.scheduleRequest();\n\n                              \n                                                                          \n                                                                         \n                 \n      }\n    }\n\n    this.setConnectionStatus(offline ? ConnectionStatus.Closed : ConnectionStatus.Connected, offline ? this.checkConnectionRetryAt : undefined);\n  }\n\n  private handleSentEncryptedRequestHTTP(promise: ReturnType<MTPNetworker['sendEncryptedRequest']>, message: MTMessage, noResponseMsgs: string[]) {\n    // let timeout = setTimeout(() => {\n    //   this.log.error('handleSentEncryptedRequestHTTP timeout', promise, message, noResponseMsgs);\n    // }, 5e3);\n\n    promise.then((result) => {\n      this.toggleOffline(false);\n      // this.log('parse for', message);\n      return this.parseResponse(result).then((response) => {\n        this.debug && this.log.debug('Server response', response);\n\n        this.processMessage(response.response, response.messageId, response.sessionId);\n\n        this.checkLongPoll();\n        this.checkConnectionPeriod = Math.max(1.1, Math.sqrt(this.checkConnectionPeriod));\n\n        return true;\n      });\n    }, (error) => {\n      this.log.error('Encrypted request failed', error, message);\n\n      this.pushResend(message.msg_id);\n      this.toggleOffline(true);\n\n      return false;\n    }).then((shouldResolve) => {\n      // clearTimeout(timeout);\n      const sentMessages = this.sentMessages;\n      noResponseMsgs.forEach((msgId) => {\n        const sentMessage = sentMessages[msgId];\n        if(sentMessage) {\n          const deferred = sentMessage.deferred;\n          delete sentMessages[msgId];\n          delete this.pendingMessages[msgId];\n          shouldResolve ? deferred.resolve() : deferred.reject();\n        }\n      });\n    });\n  }\n           \n\n  // тут можно сделать таймаут и выводить дисконнект\n  private pushMessage(message: {\n    msg_id: string,\n    seq_no: number,\n    body: Uint8Array | number[],\n    isAPI?: boolean\n  }, options: MTMessageOptions) {\n    let promise: CancellablePromise<void>;\n    if(!options.notContentRelated || options.noResponse) {\n      promise = deferredPromise();\n    }\n\n    this.sentMessages[message.msg_id] = Object.assign(\n      message,\n      options,\n      promise ? {deferred: promise} : undefined\n    );\n\n    // this.log.error('Networker pushMessage:', this.sentMessages[message.msg_id]);\n\n    this.pendingMessages[message.msg_id] = 0;\n\n    if(!options.noSchedule) {\n      this.scheduleRequest();\n    }\n\n    if(isObject(options)) {\n      options.messageId = message.msg_id;\n    }\n\n    return promise;\n  }\n\n  public attachPromise(promise: Promise<any>, message: MTMessage) {\n    const canIncrement = true;\n    const timeout = setTimeout(() => {\n      if(this.lastResponseTime && (Date.now() - this.lastResponseTime) < this.delays.connectionTimeout) {\n        return;\n      }\n\n      this.log.error('timeout', message);\n      if(this.isOnline) {\n        this.setConnectionStatus(ConnectionStatus.TimedOut);\n      }\n\n      /* this.getEncryptedOutput(message).then((bytes) => {\n        this.log.error('timeout encrypted', bytes);\n      }); */\n    }, this.delays.connectionTimeout);\n\n    promise.catch(noop).finally(() => {\n      clearTimeout(timeout);\n      this.setConnectionStatus(ConnectionStatus.Connected);\n\n      if(canIncrement) {\n        --this.activeRequests;\n        this.setDrainTimeout();\n      }\n    });\n\n    if(canIncrement) {\n      ++this.activeRequests;\n      if(this.onDrainTimeout !== undefined) {\n        clearTimeout(this.onDrainTimeout);\n        this.onDrainTimeout = undefined;\n      }\n    }\n  }\n\n  public setDrainTimeout() {\n    if(!this.activeRequests && this.onDrain && this.onDrainTimeout === undefined) {\n      this.onDrainTimeout = ctx.setTimeout(() => {\n        this.onDrainTimeout = undefined;\n        this.log('drain');\n        this.onDrain();\n      }, DRAIN_TIMEOUT);\n    }\n  }\n\n  public setConnectionStatus(status: ConnectionStatus, retryAt?: number) {\n    const isOnline = status === ConnectionStatus.Connected;\n    const willChange = this.status !== status;\n    this.isOnline = isOnline;\n    this.status = status;\n\n    if(willChange) {\n      if(this.networkerFactory.onConnectionStatusChange) {\n        this.networkerFactory.onConnectionStatusChange({\n          _: 'networkerStatus',\n          status,\n          dcId: this.dcId,\n          name: this.name,\n          isFileNetworker: this.isFileNetworker,\n          isFileDownload: this.isFileDownload,\n          isFileUpload: this.isFileUpload,\n          retryAt\n        });\n      }\n\n      if(this.isOnline) {\n        this.scheduleRequest();\n      }\n\n      if((this.transport as TcpObfuscated)?.connection) {\n        this.clearPingDelayDisconnect();\n        this.sendPingDelayDisconnect();\n      }\n\n      // this.getNewTimeOffset = true;\n    }\n    /* if(this.onConnectionStatusChange) {\n      this.onConnectionStatusChange(this.isOnline);\n    } */\n  }\n\n  private pushResend(messageId: string, delay = 100) {\n    const value = delay ? Date.now() + delay : 0;\n    const sentMessage = this.sentMessages[messageId];\n    if(sentMessage.container) {\n      for(const innerMsgId of sentMessage.inner) {\n        this.pendingMessages[innerMsgId] = value;\n      }\n    } else {\n      this.pendingMessages[messageId] = value;\n    }\n\n    if(sentMessage.acked) {\n      this.log.error('pushResend: acked message?', sentMessage);\n    }\n\n    if(this.debug) {\n      this.log.debug('pushResend:', messageId, sentMessage, this.pendingMessages, delay);\n    }\n\n    this.scheduleRequest(delay);\n  }\n\n  // * correct, fully checked\n  private async getMsgKey(dataWithPadding: Uint8Array, isOut: boolean) {\n    const x = isOut ? 0 : 8;\n    const msgKeyLargePlain = bufferConcats(this.authKeyUint8.subarray(88 + x, 88 + x + 32), dataWithPadding);\n\n    const msgKeyLarge = await CryptoWorker.invokeCrypto('sha256', msgKeyLargePlain);\n    const msgKey = new Uint8Array(msgKeyLarge).subarray(8, 24);\n    return msgKey;\n  };\n\n  // * correct, fully checked\n  private getAesKeyIv(msgKey: Uint8Array, isOut: boolean): Promise<[Uint8Array, Uint8Array]> {\n    const x = isOut ? 0 : 8;\n    const sha2aText = new Uint8Array(52);\n    const sha2bText = new Uint8Array(52);\n    const promises: Array<Promise<Uint8Array>> = [];\n\n    sha2aText.set(msgKey, 0);\n    sha2aText.set(this.authKeyUint8.subarray(x, x + 36), 16);\n    promises.push(CryptoWorker.invokeCrypto('sha256', sha2aText));\n\n    sha2bText.set(this.authKeyUint8.subarray(40 + x, 40 + x + 36), 0);\n    sha2bText.set(msgKey, 36);\n    promises.push(CryptoWorker.invokeCrypto('sha256', sha2bText));\n\n    return Promise.all(promises).then((results) => {\n      const aesKey = new Uint8Array(32);\n      const aesIv = new Uint8Array(32);\n      const sha2a = new Uint8Array(results[0]);\n      const sha2b = new Uint8Array(results[1]);\n\n      aesKey.set(sha2a.subarray(0, 8));\n      aesKey.set(sha2b.subarray(8, 24), 8);\n      aesKey.set(sha2a.subarray(24, 32), 24);\n\n      aesIv.set(sha2b.subarray(0, 8));\n      aesIv.set(sha2a.subarray(8, 24), 8);\n      aesIv.set(sha2b.subarray(24, 32), 24);\n\n      return [aesKey, aesIv];\n    });\n  }\n\n  public isStopped() {\n    return this.networkerFactory.akStopped && !this.isFileNetworker;\n  }\n\n  private performScheduledRequest() {\n    if(this.isStopped()) {\n      return false;\n    }\n\n    if(this.pendingAcks.length) {\n      const ackMsgIds = this.pendingAcks.slice();\n\n      // this.log('acking messages', ackMsgIDs)\n      this.wrapMtpMessage({\n        _: 'msgs_ack',\n        msg_ids: ackMsgIds\n      }, {\n        notContentRelated: true,\n        noSchedule: true\n      });\n    }\n\n    const pendingResendReqLength = this.pendingResendReq.length;\n    if(pendingResendReqLength) {\n      const options: MTMessageOptions = {...RESEND_OPTIONS};\n      const msgIds = this.pendingResendReq.splice(0, pendingResendReqLength);\n      this.wrapMtpMessage({\n        _: 'msg_resend_req',\n        msg_ids: msgIds\n      }, options);\n\n      this.log('resend: resending requests', options.messageId, msgIds);\n      /* this.lastResendReq = {\n        reqMsgId: options.messageId,\n        msgIds: msgIds\n      }; */\n\n      // this.pendingResendReq.length = 0;\n    }\n\n    // if(this.pendingResendAnsReq.length) {\n    //   const options: MTMessageOptions = {...RESEND_OPTIONS};\n    //   const msgIds = this.pendingResendAnsReq.slice();\n    //   this.wrapMtpMessage({\n    //     _: 'msg_resend_ans_req',\n    //     msg_ids: msgIds\n    //   }, options);\n\n    //   this.log('resend: requesting answers', options.messageId, msgIds);\n    //   this.lastResendAnsReq = {\n    //     reqMsgId: options.messageId,\n    //     msgIds: msgIds\n    //   };\n\n    //   // this.pendingResendAnsReq.length = 0;\n    // }\n\n    let outMessage: MTMessage;\n    const messages: typeof outMessage[] = [];\n\n    // const currentTime = Date.now();\n    let messagesByteLen = 0;\n\n                           \n    let hasApiCall = false;\n    let hasHttpWait = false;\n             \n\n    let lengthOverflow = false;\n\n    // * Сюда никогда не попадут контейнеры, так как их не будет в pendingMessages\n    const keys = sortLongsArray(Object.keys(this.pendingMessages));\n    for(const messageId of keys) {\n      // const value = this.pendingMessages[messageId];\n\n      // if(!value || value <= currentTime) {\n      const message = this.sentMessages[messageId];\n      if(message && message.body) {\n        /* if(message.fileUpload) {\n            this.log('performScheduledRequest message:', message, message.body.length, (message.body as Uint8Array).byteLength, (message.body as Uint8Array).buffer.byteLength);\n          } */\n\n        const messageByteLength = message.body.length + 32;\n\n        if((messagesByteLen + messageByteLength) > 655360) { // 640 Kb\n          this.log.warn('lengthOverflow', message, messages);\n          lengthOverflow = true;\n\n          if(outMessage) { // if it's not a first message\n            break;\n          }\n        }\n\n        messages.push(message);\n        messagesByteLen += messageByteLength;\n\n                               \n        if(message.isAPI) {\n          hasApiCall = true;\n        } else if(message.longPoll) {\n          hasHttpWait = true;\n        }\n                 \n\n        outMessage = message;\n      } else {\n        // this.log(message, messageId)\n      }\n\n      delete this.pendingMessages[messageId];\n      // }\n    }\n\n                           \n                         \n    if(this.transport instanceof HTTP)\n             \n      if(hasApiCall && !hasHttpWait) {\n        const serializer = new TLSerialization({mtproto: true});\n        serializer.storeMethod('http_wait', {\n          max_delay: 500,\n          wait_after: 150,\n          max_wait: 3000\n        });\n\n        messages.push({\n          msg_id: this.timeManager.generateId(),\n          seq_no: this.generateSeqNo(),\n          body: serializer.getBytes(true)\n        });\n      }\n             \n\n    if(!messages.length) {\n      // this.log('no scheduled messages')\n      return;\n    }\n\n                           \n    const noResponseMsgs: Array<string> = messages.filter((message) => message.noResponse).map((message) => message.msg_id);\n             \n\n    if(messages.length > 1) {\n      const container = this.generateContainerMessage(messagesByteLen, messages);\n      outMessage = container.messageWithBody;\n\n      this.sentMessages[outMessage.msg_id] = container.message;\n    } else {\n      this.sentMessages[outMessage.msg_id] = outMessage;\n    }\n\n    this.pendingAcks = [];\n\n    const promise = this.sendEncryptedRequest(outMessage);\n\n                           \n                         \n    if(this.transport instanceof HTTP)\n             \n      this.handleSentEncryptedRequestHTTP(promise, outMessage, noResponseMsgs);\n             \n\n                         \n                           \n    if(!(this.transport instanceof HTTP))\n             \n      this.cleanupSent(); // ! WARNING\n             \n\n    if(lengthOverflow) {\n      this.scheduleRequest();\n    }\n  }\n\n  private generateContainerMessage(messagesByteLen: number, messages: MTMessage[]) {\n    const container = new TLSerialization({\n      mtproto: true,\n      startMaxLength: messagesByteLen + 64\n    });\n\n    container.storeInt(0x73f1f8dc, 'CONTAINER[id]');\n    container.storeInt(messages.length, 'CONTAINER[count]');\n\n    const innerMessages: string[] = [];\n    messages.forEach((message, i) => {\n      innerMessages.push(message.msg_id);\n      // this.log('Pushing to container:', message.msg_id);\n      container.storeLong(message.msg_id, 'CONTAINER[' + i + '][msg_id]');\n      container.storeInt(message.seq_no, 'CONTAINER[' + i + '][seq_no]');\n      container.storeInt(message.body.length, 'CONTAINER[' + i + '][bytes]');\n      container.storeRawBytes(message.body, 'CONTAINER[' + i + '][body]');\n    });\n\n    const message: MTMessage = {\n      msg_id: this.timeManager.generateId(),\n      seq_no: this.generateSeqNo(true),\n      container: true,\n      inner: innerMessages\n    };\n\n    if(Modes.debug/*  || true */) {\n      this.log.warn('Container', innerMessages, message.msg_id, message.seq_no);\n    }\n\n    return {\n      message,\n      messageWithBody: Object.assign({body: container.getBytes(true)}, message)\n    };\n  }\n\n  private async getEncryptedMessage(dataWithPadding: Uint8Array) {\n    const msgKey = await this.getMsgKey(dataWithPadding, true);\n    const keyIv = await this.getAesKeyIv(msgKey, true);\n    // this.log('after msg key iv')\n\n    const encryptedBytes = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithPadding, keyIv[0], keyIv[1]);\n    // this.log('Finish encrypt')\n\n    return {\n      bytes: encryptedBytes,\n      msgKey\n    };\n  }\n\n  private getDecryptedMessage(msgKey: Uint8Array, encryptedData: Uint8Array) {\n    // this.log('get decrypted start')\n    return this.getAesKeyIv(msgKey, false).then((keyIv) => {\n      // this.log('after msg key iv')\n      return CryptoWorker.invokeCrypto('aes-decrypt', encryptedData, keyIv[0], keyIv[1]);\n    });\n  }\n\n  private getEncryptedOutput(message: MTMessage) {\n    /* if(DEBUG) {\n      this.log.debug('Send encrypted', message, this.authKeyId);\n    } */\n    /* if(!this.isOnline) {\n      this.log('trying to send message when offline:', Object.assign({}, message));\n      //debugger;\n    } */\n\n    const data = new TLSerialization({\n      startMaxLength: message.body.length + 2048\n    });\n\n    data.storeIntBytes(this.serverSalt, 64, 'salt');\n    data.storeIntBytes(this.sessionId, 64, 'session_id');\n\n    data.storeLong(message.msg_id, 'message_id');\n    data.storeInt(message.seq_no, 'seq_no');\n\n    data.storeInt(message.body.length, 'message_data_length');\n    data.storeRawBytes(message.body, 'message_data');\n\n    /* const des = new TLDeserialization(data.getBuffer().slice(16));\n    const desSalt = des.fetchLong();\n    const desSessionId = des.fetchLong();\n\n    if(!this.isOnline) {\n      this.log.error('trying to send message when offline', message, new Uint8Array(des.buffer), desSalt, desSessionId);\n    } */\n\n    /* const messageDataLength = message.body.length;\n    let canBeLength = 0; // bytes\n    canBeLength += 8;\n    canBeLength += 8;\n    canBeLength += 8;\n    canBeLength += 4;\n    canBeLength += 4;\n    canBeLength += message.body.length; */\n\n    const dataBuffer = data.getBuffer();\n\n    /* if(dataBuffer.byteLength !== canBeLength || !bytesCmp(new Uint8Array(dataBuffer.slice(dataBuffer.byteLength - message.body.length)), new Uint8Array(message.body))) {\n      this.log.error('wrong length', dataBuffer, canBeLength, message.msg_id);\n    } */\n\n    const paddingLength = (16 - (data.getOffset() % 16)) + 16 * (1 + nextRandomUint(8) % 5);\n    const padding = /* (message as any).padding ||  */randomize(new Uint8Array(paddingLength))/* .fill(0) */;\n    /* const padding = [167, 148, 207, 226, 86, 192, 193, 57, 124, 153, 174, 145, 159, 1, 5, 70, 127, 157,\n      51, 241, 46, 85, 141, 212, 139, 234, 213, 164, 197, 116, 245, 70, 184, 40, 40, 201, 233, 211, 150,\n      94, 57, 84, 1, 135, 108, 253, 34, 139, 222, 208, 71, 214, 90, 67, 36, 28, 167, 148, 207, 226, 86, 192, 193, 57, 124, 153, 174, 145, 159, 1, 5, 70, 127, 157,\n      51, 241, 46, 85, 141, 212, 139, 234, 213, 164, 197, 116, 245, 70, 184, 40, 40, 201, 233, 211, 150,\n      94, 57, 84, 1, 135, 108, 253, 34, 139, 222, 208, 71, 214, 90, 67, 36, 28].slice(0, paddingLength); */\n\n    // (message as any).padding = padding;\n\n    const dataWithPadding = bufferConcats(dataBuffer, padding);\n    // this.log('Adding padding', dataBuffer, padding, dataWithPadding)\n    // this.log('auth_key_id', bytesToHex(self.authKeyID))\n\n    /* if(dataWithPadding.byteLength % 16) {\n      this.log.error('aaa', dataWithPadding, paddingLength);\n    }\n\n    if(message.fileUpload) {\n      this.log('Send encrypted: body length:', (message.body as ArrayBuffer).byteLength, paddingLength, dataWithPadding);\n    } */\n\n    // * full next block is correct\n    return this.getEncryptedMessage(dataWithPadding).then((encryptedResult) => {\n      /* if(DEBUG) {\n        this.log('Got encrypted out message', encryptedResult);\n      } */\n\n      const request = new TLSerialization({\n        startMaxLength: encryptedResult.bytes.length + 256\n      });\n      request.storeIntBytes(this.authKeyId, 64, 'auth_key_id');\n      request.storeIntBytes(encryptedResult.msgKey, 128, 'msg_key');\n      request.storeRawBytes(encryptedResult.bytes, 'encrypted_data');\n\n      const requestData = request.getBytes(true);\n\n      // if(this.isFileNetworker) {\n      //   //this.log('Send encrypted: requestData length:', requestData.length, requestData.length % 16, paddingLength % 16, paddingLength, data.offset, encryptedResult.msgKey.length % 16, encryptedResult.bytes.length % 16);\n      //   //this.log('Send encrypted: messageId:', message.msg_id, requestData.length);\n      //   //this.log('Send encrypted:', message, new Uint8Array(bufferConcat(des.buffer, padding)), requestData, this.serverSalt.hex, this.sessionId.hex/* new Uint8Array(des.buffer) */);\n      //   this.debugRequests.push({before: new Uint8Array(bufferConcat(des.buffer, padding)), after: requestData});\n      // }\n\n      return requestData;\n    });\n  }\n\n  private async sendEncryptedRequest(message: MTMessage) {\n    const requestData = await this.getEncryptedOutput(message);\n\n    if(!this.transport) {\n      this.log.error('trying to send something when offline', this.transport, this);\n    }\n\n    this.debug && this.log.debug('sending:', message, [message.msg_id].concat(message.inner || []), requestData.length);\n    const promise: Promise<Uint8Array> = this.transport ? this.transport.send(requestData) as any : Promise.reject({});\n    // this.debug && this.log.debug('sendEncryptedRequest: launched message into space:', message, promise);\n\n                            \n                   \n            \n\n                         \n    if(!(this.transport instanceof HTTP)) return promise;\n             \n\n    const baseError: ApiError = {\n      code: 406,\n      type: 'NETWORK_BAD_RESPONSE',\n      // @ts-ignore\n      transport: this.transport\n    };\n\n    return promise.then((result) => {\n      if(!result?.byteLength) {\n        throw baseError;\n      }\n\n      // this.debug && this.log.debug('sendEncryptedRequest: got response for:', message, [message.msg_id].concat(message.inner || []));\n      return result;\n    }, (error) => {\n      if(!error.message && !error.type) {\n        error = Object.assign(baseError, {\n          type: 'NETWORK_BAD_REQUEST',\n          originalError: error\n        });\n      }\n\n      throw error;\n    });\n             \n  }\n\n  public parseResponse(responseBuffer: Uint8Array) {\n    // const perf = performance.now();\n    /* if(this.debug) {\n      this.log.debug('Start parsing response', responseBuffer);\n    } */\n\n    this.lastResponseTime = Date.now();\n\n    const deserializer = new TLDeserialization(responseBuffer);\n\n    const authKeyId = deserializer.fetchIntBytes(64, true, 'auth_key_id');\n    if(!bytesCmp(authKeyId, this.authKeyId)) {\n      throw new Error('[MT] Invalid server auth_key_id: ' + bytesToHex(authKeyId));\n    }\n\n    const msgKey = deserializer.fetchIntBytes(128, true, 'msg_key');\n    const encryptedData = deserializer.fetchRawBytes(responseBuffer.byteLength - deserializer.getOffset(), true, 'encrypted_data');\n\n    return this.getDecryptedMessage(msgKey, encryptedData).then((dataWithPadding) => {\n      // this.log('after decrypt')\n      return this.getMsgKey(dataWithPadding, false).then((calcMsgKey) => {\n        if(!bytesCmp(msgKey, calcMsgKey)) {\n          this.log.warn('[MT] msg_keys', msgKey, calcMsgKey);\n          this.updateSession(); // fix 28.01.2020\n          throw new Error('[MT] server msgKey mismatch, updating session');\n        }\n        // this.log('after msgKey check')\n\n        let deserializer = new TLDeserialization<MTLong>(dataWithPadding, {mtproto: true});\n\n        /* const salt =  */deserializer.fetchIntBytes(64, true, 'salt'); // need\n        const sessionId = deserializer.fetchIntBytes(64, true, 'session_id');\n        const messageId = deserializer.fetchLong('message_id');\n\n        if(!bytesCmp(sessionId, this.sessionId) &&\n          (!this.prevSessionId || !bytesCmp(sessionId, this.prevSessionId))) {\n          this.log.warn('Sessions', sessionId, this.sessionId, this.prevSessionId, dataWithPadding);\n          // this.updateSession();\n          // this.sessionID = sessionID;\n          throw new Error('[MT] Invalid server session_id: ' + bytesToHex(sessionId));\n        }\n\n        const seqNo = deserializer.fetchInt('seq_no');\n\n        const totalLength = dataWithPadding.byteLength;\n\n        const messageBodyLength = deserializer.fetchInt('message_data[length]');\n        let offset = deserializer.getOffset();\n\n        if((messageBodyLength % 4) ||\n          messageBodyLength > totalLength - offset) {\n          throw new Error('[MT] Invalid body length: ' + messageBodyLength);\n        }\n        const messageBody = deserializer.fetchRawBytes(messageBodyLength, true, 'message_data');\n\n        offset = deserializer.getOffset();\n        const paddingLength = totalLength - offset;\n        if(paddingLength < 12 || paddingLength > 1024) {\n          throw new Error('[MT] Invalid padding length: ' + paddingLength);\n        }\n\n        // let buffer = bytesToArrayBuffer(messageBody);\n        deserializer = new TLDeserialization<MTLong>(/* buffer */messageBody, {\n          mtproto: true,\n          override: {\n            mt_message: (result: any, field: string) => {\n              result.msg_id = deserializer.fetchLong(field + '[msg_id]');\n              result.seqno = deserializer.fetchInt(field + '[seqno]');\n              result.bytes = deserializer.fetchInt(field + '[bytes]');\n\n              const offset = deserializer.getOffset();\n\n              // self.log('mt_message!!!!!', result, field);\n\n              try {\n                result.body = deserializer.fetchObject('Object', field + '[body]');\n              } catch(e) {\n                this.log.error('parse error', (e as Error).message, (e as Error).stack);\n                result.body = {\n                  _: 'parse_error',\n                  error: e\n                };\n              }\n\n              if(deserializer.getOffset() !== offset + result.bytes) {\n                // console.warn(dT(), 'set offset', this.offset, offset, result.bytes)\n                // this.log(result)\n                deserializer.setOffset(offset + result.bytes);\n              }\n              // this.log('override message', result)\n            },\n            mt_rpc_result: (result: any, field: any) => {\n              result.req_msg_id = deserializer.fetchLong(field + '[req_msg_id]');\n\n              const sentMessage = this.sentMessages[result.req_msg_id];\n              const type = sentMessage && sentMessage.resultType || 'Object';\n\n              if(result.req_msg_id && !sentMessage) {\n                // console.warn(dT(), 'Result for unknown message', result);\n                return;\n              }\n\n              // deserializer.setMtproto(false);\n              result.result = deserializer.fetchObject(type, field + '[result]');\n              // deserializer.setMtproto(true);\n              // self.log(dT(), 'override rpc_result', sentMessage, type, result);\n            }\n          }\n        });\n\n        const response = deserializer.fetchObject('', 'INPUT');\n        // this.log.error('Parse response time:', performance.now() - perf);\n        return {\n          response,\n          messageId,\n          sessionId,\n          seqNo\n        };\n      });\n    });\n  }\n\n  private applyServerSalt(newServerSalt: string) {\n    const serverSalt = longToBytes(newServerSalt);\n\n    sessionStorage.set({\n      ['dc' + this.dcId + '_server_salt']: bytesToHex(serverSalt)\n    });\n\n    this.serverSalt = new Uint8Array(serverSalt);\n  }\n\n  // ! таймаут очень сильно тормозит скорость работы сокета (даже нулевой)\n  public scheduleRequest(delay?: number) {\n    /* if(!this.isOnline) {\n      return;\n    } */\n\n                           \n                         \n    if(this.transport instanceof HTTP) {\n             \n      if(this.offline) {\n        this.checkConnection('forced schedule');\n      }\n\n      delay ||= 0; // set zero timeout to pack other messages too\n                         \n    }\n             \n             \n\n    const nextReq = Date.now() + (delay || 0);\n    if(this.nextReq && (delay === undefined || this.nextReq <= nextReq)) {\n      // this.debug && this.log('scheduleRequest: nextReq', this.nextReq, nextReq);\n      return;\n    }\n\n    // this.debug && this.log('scheduleRequest: delay', delay);\n\n    /* if(this.nextReqTimeout) {\n      return;\n    } */\n\n    // const perf = performance.now();\n    if(this.nextReqTimeout) {\n      clearTimeout(this.nextReqTimeout);\n    }\n\n    const cb = () => {\n      // this.debug && this.log('scheduleRequest: timeout delay was:', performance.now() - perf);\n\n      this.nextReqTimeout = 0;\n      this.nextReq = 0;\n\n                             \n                           \n      if(this.transport instanceof HTTP)\n               \n        if(this.offline) {\n        // this.log('Cancel scheduled');\n          return;\n        }\n               \n\n      this.performScheduledRequest();\n    };\n\n    this.nextReq = nextReq;\n\n    if(delay !== undefined) {\n      this.nextReqTimeout = ctx.setTimeout(cb, delay);\n    } else {\n      cb();\n    }\n  }\n\n  private ackMessage(msgId: MTLong) {\n    // this.log('ack message', msgID)\n    this.pendingAcks.push(msgId);\n\n    let delay: number;\n\n                           \n                         \n    if(this.transport instanceof HTTP)\n             \n      delay = 30000;\n             \n\n    this.scheduleRequest(delay);\n  }\n\n  private reqResend(msgId: MTLong/* , isAnswer?: boolean */) {\n    if(this.debug) {\n      this.log.debug('Req resend', msgId/* , isAnswer */);\n    }\n\n    // (isAnswer ? this.pendingResendAnsReq : this.pendingResendReq).push(msgId);\n    this.pendingResendReq.push(msgId);\n    this.scheduleRequest(100);\n  }\n\n  public cleanupSent() {\n    let notEmpty = false;\n    const sentMessages = this.sentMessages;\n    // this.log('clean start', this.dcId/*, sentMessages*/)\n    Object.keys(sentMessages).forEach((msgId) => {\n      const message = sentMessages[msgId];\n\n      // this.log('clean iter', msgID, message)\n      if(message.notContentRelated && this.pendingMessages[msgId] === undefined) {\n        // this.log('clean notContentRelated', msgID)\n        delete sentMessages[msgId];\n      } else if(message.container) {\n        for(const innerMsgId of message.inner) {\n          if(sentMessages[innerMsgId] !== undefined) {\n            // this.log('clean failed, found', msgID, message.inner[i], sentMessages[message.inner[i]].seq_no)\n            notEmpty = true;\n            return;\n          }\n        }\n        // this.log('clean container', msgID)\n        delete sentMessages[msgId];\n      } else {\n        notEmpty = true;\n      }\n    });\n\n    return !notEmpty;\n  }\n\n  private processMessageAck(messageId: Long) {\n    const sentMessage = this.sentMessages[messageId];\n    if(sentMessage && !sentMessage.acked) {\n      // delete sentMessage.body;\n      sentMessage.acked = true;\n    }\n  }\n\n  private processError(rawError: {error_message: string, error_code: number}): ApiError {\n    const matches = (rawError.error_message || '').match(/^([A-Z_0-9]+\\b)(: (.+))?/) || [];\n    rawError.error_code = rawError.error_code;\n\n    return {\n      code: !rawError.error_code || rawError.error_code <= 0 ? 500 : rawError.error_code,\n      type: matches[1] as any || 'UNKNOWN',\n      description: matches[3] || ('CODE#' + rawError.error_code + ' ' + rawError.error_message),\n      originalError: rawError\n    };\n  }\n\n  /**\n   * * только для сокета\n   * TODO: consider about containers resend\n   */\n  public resend() {\n    const sentMessages = this.sentMessages;\n    for(const id in sentMessages) {\n      const msg = sentMessages[id];\n      if(msg.body || msg.container) {\n        this.pushResend(id);\n      }\n    }\n\n    if((this.transport as TcpObfuscated).connection) {\n      this.clearPingDelayDisconnect();\n      this.sendPingDelayDisconnect();\n    }\n  }\n\n  /* public requestMessageStatus() {\n    const ids: string[] = [];\n    for(const id in this.sentMessages) {\n      const message = this.sentMessages[id];\n      if(message.isAPI && message.fileUpload) {\n        ids.push(message.msg_id);\n      }\n    }\n\n    this.wrapMtpMessage({\n      _: 'msgs_state_req',\n      msg_ids: ids\n    }, {\n      notContentRelated: true\n    }).then((res) => {\n      this.log('status', res);\n    });\n  } */\n\n  private applyServerTime(messageId: string) {\n    const serverTime = bigInt(messageId).shiftRight(32).toJSNumber();\n    this.log('applying server time', serverTime);\n    return this.timeManager.applyServerTime(serverTime);\n  }\n\n  // * https://core.telegram.org/mtproto/service_messages_about_messages#notice-of-ignored-error-message\n  public processMessage(message: any, messageId: MTLong, sessionId: Uint8Array | number[]) {\n    if(message._ === 'messageEmpty') {\n      this.log.warn('processMessage: messageEmpty', message, messageId);\n      return;\n    }\n\n    // messageId = messageId.toString();\n\n    const msgidInt = parseInt(messageId.substr(0, -10), 10);\n    if(msgidInt % 2) {\n      this.log.warn('Server even message id: ', messageId, message);\n      return;\n    }\n\n    if(this.debug) {\n      this.log.debug('process message', message, messageId);\n    }\n\n    if(this.pingDelayDisconnectDeferred) {\n      this.pingDelayDisconnectDeferred.resolve('any message');\n    }\n\n    // let changedTimeOffset: boolean;\n    // if(this.getNewTimeOffset) {\n    //   changedTimeOffset = this.applyServerTime(messageId);\n    //   this.getNewTimeOffset = undefined;\n    // }\n\n    switch(message._) {\n      case 'msg_container': {\n        for(const innerMessage of message.messages) {\n          this.processMessage(innerMessage, innerMessage.msg_id, sessionId);\n        }\n\n        break;\n      }\n\n      case 'bad_server_salt': {\n        this.log('Bad server salt', message);\n\n        this.applyServerSalt(message.new_server_salt);\n\n        if(this.sentMessages[message.bad_msg_id]) {\n          this.pushResend(message.bad_msg_id);\n        }\n\n        this.ackMessage(messageId);\n\n        // simulate disconnect\n        /* try {\n          this.log('networker state:', this);\n          // @ts-ignore\n          this.transport.ws.close(1000);\n        } catch(err) {\n          this.log.error('transport', this.transport, err);\n        } */\n\n        break;\n      }\n\n      case 'bad_msg_notification': {\n        this.log.error('Bad msg notification', message);\n\n        switch(message.error_code) {\n          case 16:    // * msg_id too low\n          case 17:    // * msg_id too high\n          case 32:    // * msg_seqno too low\n          case 33:    // * msg_seqno too high\n          case 64: {  // * invalid container\n            // if(changedTimeOffset === undefined) {\n            //   changedTimeOffset = this.applyServerTime(messageId);\n            // }\n\n            const changedTimeOffset = this.applyServerTime(messageId);\n            if(message.error_code === 17 || changedTimeOffset) {\n              this.log('Update session');\n              this.updateSession();\n            }\n\n            const badMessage = this.updateSentMessage(message.bad_msg_id);\n            if(badMessage) this.pushResend(badMessage.msg_id); // fix 23.01.2020\n            // this.ackMessage(messageId);\n          }\n\n          // * invalid container\n          /* case 64: {\n            const badMessage = this.sentMessages[message.bad_msg_id];\n            if(badMessage) {\n              for(const msgId of badMessage.inner) {\n                if(this.sentMessages[msgId] !== undefined) {\n                  this.updateSentMessage\n                }\n              }\n              const inner = badMessage.inner;\n            }\n          } */\n        }\n\n        break;\n      }\n\n      case 'message': {\n        if(this.lastServerMessages.indexOf(messageId) !== -1) {\n          // console.warn('[MT] Server same messageId: ', messageId)\n          this.ackMessage(messageId);\n          return;\n        }\n\n        this.lastServerMessages.push(messageId);\n        if(this.lastServerMessages.length > 100) {\n          this.lastServerMessages.shift();\n        }\n\n        this.processMessage(message.body, message.msg_id, sessionId);\n        break;\n      }\n\n      case 'new_session_created': {\n        this.ackMessage(messageId);\n\n        if(this.debug) {\n          this.log.debug('new_session_created', message);\n        }\n        // this.updateSession();\n\n        this.processMessageAck(message.first_msg_id);\n        this.applyServerSalt(message.server_salt);\n\n        sessionStorage.get('dc').then((baseDcId) => {\n          if(baseDcId === this.dcId && !this.isFileNetworker && this.networkerFactory.updatesProcessor) {\n            this.networkerFactory.updatesProcessor(message);\n          }\n        });\n        break;\n      }\n\n      case 'msgs_ack': {\n        this.debug && this.log('got acks', message.msg_ids);\n        for(const msgId of message.msg_ids) {\n          this.processMessageAck(msgId);\n        }\n\n        break;\n      }\n\n      case 'msg_detailed_info': {\n        const sentMessage = this.sentMessages[message.msg_id];\n        if(!sentMessage) {\n          this.ackMessage(message.answer_msg_id);\n          break;\n        }/*  else if(sentMessage.acked) {\n          this.reqResend(message.answer_msg_id, true);\n        }\n\n        break; */\n      }\n\n      case 'msg_new_detailed_info': {\n        if(this.pendingAcks.indexOf(message.answer_msg_id) !== -1) {\n          break;\n        }\n\n        this.reqResend(message.answer_msg_id);\n        break;\n      }\n\n      case 'msgs_state_info': {\n        this.ackMessage(message.answer_msg_id);\n        const arr = [\n          [this.lastResendReq, this.pendingResendReq] as const\n          // [this.lastResendAnsReq, this.pendingResendAnsReq] as const\n        ];\n\n        for(const [lastResend, pendingResend] of arr) {\n          if(lastResend?.reqMsgId === message.req_msg_id && pendingResend.length) {\n            for(const badMsgId of lastResend.msgIds) {\n              const pos = pendingResend.indexOf(badMsgId);\n              if(pos !== -1) {\n                pendingResend.splice(pos, 1);\n              }\n            }\n          }\n        }\n\n        break;\n      }\n\n      case 'rpc_result': {\n        this.ackMessage(messageId);\n\n        const sentMessageId = message.req_msg_id;\n        const sentMessage = this.sentMessages[sentMessageId];\n\n        if(this.debug) {\n          this.log('Rpc response', message.result, sentMessage);\n        }\n\n        this.processMessageAck(sentMessageId);\n        if(sentMessage) {\n          const deferred = sentMessage.deferred;\n          if(message.result._ === 'rpc_error') {\n            const error = this.processError(message.result);\n            this.log('Rpc error', error);\n            if(deferred) {\n              deferred.reject(error);\n            }\n          } else {\n            if(deferred) {\n              deferred.resolve(message.result);\n            }\n\n            if(sentMessage.isAPI && !this.connectionInited) {\n              this.connectionInited = true;\n            }\n          }\n\n          delete this.sentMessages[sentMessageId];\n        } else {\n          if(this.debug) {\n            this.log('Rpc result for unknown message:', sentMessageId, message);\n          }\n        }\n\n        break;\n      }\n\n      case 'pong': { // * https://core.telegram.org/mtproto/service_messages#ping-messages-pingpong - These messages don't require acknowledgments\n        /* const sentMessageId = message.msg_id;\n        const sentMessage = this.sentMessages[sentMessageId];\n\n        if(sentMessage) {\n          sentMessage.deferred.resolve(message);\n          delete this.sentMessages[sentMessageId];\n        } */\n        const pingId = message.ping_id;\n        if(this.lastPingDelayDisconnectId === pingId) {\n          const deferred = this.pingDelayDisconnectDeferred;\n          if(deferred) {\n            deferred.resolve('pong');\n          } else {\n            this.log('ping deferred deleted', pingId);\n          }\n        }\n\n        break;\n      }\n\n      default:\n        this.ackMessage(messageId);\n\n        /* if(this.debug) {\n          this.log.debug('Update', message);\n        } */\n\n        if(this.networkerFactory.updatesProcessor !== null) {\n          this.networkerFactory.updatesProcessor(message);\n        }\n        break;\n    }\n  }\n}\n","import bigInt from 'big-integer';\n\nexport default function sortLongsArray(arr: string[]) {\n  return arr.map((long) => {\n    return bigInt(long);\n  }).sort((a, b) => {\n    return a.compare(b);\n  }).map((bigInt) => {\n    return bigInt.toString(10);\n  });\n}\n","import addPadding from '../bytes/addPadding';\nimport bigInt from 'big-integer';\nimport {bigIntToBytes} from '../bigInt/bigIntConversion';\n\nexport default function longToBytes(sLong: string) {\n  const bigIntBytes = bigIntToBytes(bigInt(sLong)).reverse();\n  const bytes = addPadding(bigIntBytes, 8, true, false, false);\n  // console.log('longToBytes', bytes, bigIntBytes);\n\n  return bytes;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {ConnectionStatusChange} from './connectionStatus';\nimport MTPNetworker from './networker';\nimport {InvokeApiOptions} from '../../types';\nimport App from '../../config/app';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport {AppManager} from '../appManagers/manager';\n\nexport class NetworkerFactory extends AppManager {\n  private networkers: MTPNetworker[] = [];\n  public language = navigator.language || App.langPackCode;\n  public updatesProcessor: (obj: any) => void = null;\n  // public onConnectionStatusChange: (status: ConnectionStatusChange) => void = null;\n  public akStopped = false;\n\n  public onConnectionStatusChange(status: ConnectionStatusChange) {\n    this.rootScope.dispatchEvent('connection_status_change', status);\n    //  ({type: 'connectionStatusChange', payload: status});\n  }\n\n  public removeNetworker(networker: MTPNetworker) {\n    indexOfAndSplice(this.networkers, networker);\n  }\n\n  public setUpdatesProcessor(callback: (obj: any) => void) {\n    this.updatesProcessor = callback;\n  }\n\n  public getNetworker(dcId: number, authKey: Uint8Array, authKeyId: Uint8Array, serverSalt: Uint8Array, options: InvokeApiOptions) {\n    // console.log('NetworkerFactory: creating new instance of MTPNetworker:', dcId, options);\n    const networker = new MTPNetworker(this, this.timeManager, dcId, authKey, authKeyId, serverSalt, options);\n    this.networkers.push(networker);\n    return networker;\n  }\n\n  public startAll() {\n    if(this.akStopped) {\n      const stoppedNetworkers = this.networkers.filter((networker) => networker.isStopped());\n\n      this.akStopped = false;\n      this.updatesProcessor && this.updatesProcessor({_: 'new_session_created'});\n\n      for(const networker of stoppedNetworkers) {\n        networker.scheduleRequest();\n      }\n    }\n  }\n\n  public stopAll() {\n    this.akStopped = true;\n  }\n\n  public setLanguage(langCode: string) {\n    this.language = langCode;\n    for(const networker of this.networkers) {\n      if(!networker.isFileNetworker) {\n        networker.connectionInited = false;\n      }\n    }\n  }\n\n  public unsetConnectionInited() {\n    for(const networker of this.networkers) {\n      networker.connectionInited = false;\n    }\n  }\n\n  public forceReconnectTimeout() {\n    for(const networker of this.networkers) {\n      networker.forceReconnectTimeout();\n    }\n  }\n\n  public forceReconnect() {\n    for(const networker of this.networkers) {\n      if(!networker.isFileNetworker) {\n        networker.forceReconnect();\n        break;\n      }\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {TLSerialization} from './tl_utils';\nimport cryptoWorker from '../crypto/cryptoMessagePort';\nimport Modes from '../../config/modes';\nimport bytesFromHex from '../../helpers/bytes/bytesFromHex';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport bigInt from 'big-integer';\n\nexport type RSAPublicKeyHex = {\n  modulus: string,\n  exponent: string\n};\n\nexport class RSAKeysManager {\n  /**\n   *  Server public key, obtained from here: https://core.telegram.org/api/obtaining_api_id\n   *\n   *\n   *  -----BEGIN RSA PUBLIC KEY-----\n   *  MIIBCgKCAQEA6LszBcC1LGzyr992NzE0ieY+BSaOW622Aa9Bd4ZHLl+TuFQ4lo4g\n   *  5nKaMBwK/BIb9xUfg0Q29/2mgIR6Zr9krM7HjuIcCzFvDtr+L0GQjae9H0pRB2OO\n   *  62cECs5HKhT5DZ98K33vmWiLowc621dQuwKWSQKjWf50XYFw42h21P2KXUGyp2y/\n   *  +aEyZ+uVgLLQbRA1dEjSDZ2iGRy12Mk5gpYc397aYp438fsJoHIgJ2lgMv5h7WY9\n   *  t6N/byY9Nw9p21Og3AoXSL2q/2IJ1WRUhebgAdGVMlV1fkuOQoEzR7EdpqtQD9Cs\n   *  5+bfo3Nhmcyvk5ftB0WkJ9z6bNZ7yxrP8wIDAQAB\n   *  -----END RSA PUBLIC KEY-----\n   *\n   *  -----BEGIN RSA PUBLIC KEY-----\n   *  MIIBCgKCAQEBadMIUYSKhyznMh+Pg+OxTLyDZrWEjQIPZC3oJCtuZX7qUxgcWqFX\n   *  Q1952TSY8S8NYuz12sK9Fvp+lil1hIG0U/cuPsK08VB1hB4VA+p0S46fGwVsRovq\n   *  4qUiUIzQSjSHDASuXTOinlYEHwmg/GaLc5G7qhePWa0p9YmqYR5Ha3xHJywcXZrn\n   *  yE3nC9igL96Aanqv+Prbu1N+r9vAgZeHh9cfbtbV8WWwruOANOTEv2ctQLR0dfr9\n   *  MwQXNePTPQlYsO9HNIGS1LWe7hZFtGBAVJH92F7Kig68WqHM3PIZ6Sq7N0VSzfzL\n   *  b11Z/YHz2UXYtXADwL/m5pTpKBUtJBXkOQIDAQAB\n   *  -----END RSA PUBLIC KEY-----\n   *\n   * Bytes can be got via\n   * $ openssl rsa -in rsa.pem -RSAPublicKey_in -pubout > pub.pem\n   * $ openssl rsa -pubin -in pub.pem -text -noout\n   */\n\n  /* private publisKeysHex = [{\n    modulus: 'c150023e2f70db7985ded064759cfecf0af328e69a41daf4d6f01b538135a6f91f8f8b2a0ec9ba9720ce352efcf6c5680ffc424bd634864902de0b4bd6d49f4e580230e3ae97d95c8b19442b3c0a10d8f5633fecedd6926a7f6dab0ddb7d457f9ea81b8465fcd6fffeed114011df91c059caedaf97625f6c96ecc74725556934ef781d866b34f011fce4d835a090196e9a5f0e4449af7eb697ddb9076494ca5f81104a305b6dd27665722c46b60e5df680fb16b210607ef217652e60236c255f6a28315f4083a96791d7214bf64c1df4fd0db1944fb26a2a57031b32eee64ad15a8ba68885cde74a5bfc920f6abf59ba5c75506373e7130f9042da922179251f',\n    exponent: '010001'\n  }, {\n    modulus: 'aeec36c8ffc109cb099624685b97815415657bd76d8c9c3e398103d7ad16c9bba6f525ed0412d7ae2c2de2b44e77d72cbf4b7438709a4e646a05c43427c7f184debf72947519680e651500890c6832796dd11f772c25ff8f576755afe055b0a3752c696eb7d8da0d8be1faf38c9bdd97ce0a77d3916230c4032167100edd0f9e7a3a9b602d04367b689536af0d64b613ccba7962939d3b57682beb6dae5b608130b2e52aca78ba023cf6ce806b1dc49c72cf928a7199d22e3d7ac84e47bc9427d0236945d10dbd15177bab413fbf0edfda09f014c7a7da088dde9759702ca760af2b8e4e97cc055c617bd74c3d97008635b98dc4d621b4891da9fb0473047927',\n    exponent: '010001'\n  }, {\n    modulus: 'bdf2c77d81f6afd47bd30f29ac76e55adfe70e487e5e48297e5a9055c9c07d2b93b4ed3994d3eca5098bf18d978d54f8b7c713eb10247607e69af9ef44f38e28f8b439f257a11572945cc0406fe3f37bb92b79112db69eedf2dc71584a661638ea5becb9e23585074b80d57d9f5710dd30d2da940e0ada2f1b878397dc1a72b5ce2531b6f7dd158e09c828d03450ca0ff8a174deacebcaa22dde84ef66ad370f259d18af806638012da0ca4a70baa83d9c158f3552bc9158e69bf332a45809e1c36905a5caa12348dd57941a482131be7b2355a5f4635374f3bd3ddf5ff925bf4809ee27c1e67d9120c5fe08a9de458b1b4a3c5d0a428437f2beca81f4e2d5ff',\n    exponent: '010001'\n  }, {\n    modulus: 'b3f762b739be98f343eb1921cf0148cfa27ff7af02b6471213fed9daa0098976e667750324f1abcea4c31e43b7d11f1579133f2b3d9fe27474e462058884e5e1b123be9cbbc6a443b2925c08520e7325e6f1a6d50e117eb61ea49d2534c8bb4d2ae4153fabe832b9edf4c5755fdd8b19940b81d1d96cf433d19e6a22968a85dc80f0312f596bd2530c1cfb28b5fe019ac9bc25cd9c2a5d8a0f3a1c0c79bcca524d315b5e21b5c26b46babe3d75d06d1cd33329ec782a0f22891ed1db42a1d6c0dea431428bc4d7aabdcf3e0eb6fda4e23eb7733e7727e9a1915580796c55188d2596d2665ad1182ba7abf15aaa5a8b779ea996317a20ae044b820bff35b6e8a1',\n    exponent: '010001'\n  }, {\n    modulus: 'be6a71558ee577ff03023cfa17aab4e6c86383cff8a7ad38edb9fafe6f323f2d5106cbc8cafb83b869cffd1ccf121cd743d509e589e68765c96601e813dc5b9dfc4be415c7a6526132d0035ca33d6d6075d4f535122a1cdfe017041f1088d1419f65c8e5490ee613e16dbf662698c0f54870f0475fa893fc41eb55b08ff1ac211bc045ded31be27d12c96d8d3cfc6a7ae8aa50bf2ee0f30ed507cc2581e3dec56de94f5dc0a7abee0be990b893f2887bd2c6310a1e0a9e3e38bd34fded2541508dc102a9c9b4c95effd9dd2dfe96c29be647d6c69d66ca500843cfaed6e440196f1dbe0e2e22163c61ca48c79116fa77216726749a976a1c4b0944b5121e8c01',\n    exponent: '010001'\n  }]; */\n\n  private testPublicKeysHex: RSAPublicKeyHex[] = [{\n    modulus: 'c8c11d635691fac091dd9489aedced2932aa8a0bcefef05fa800892d9b52ed03200865c9e97211cb2ee6c7ae96d3fb0e15aeffd66019b44a08a240cfdd2868a85e1f54d6fa5deaa041f6941ddf302690d61dc476385c2fa655142353cb4e4b59f6e5b6584db76fe8b1370263246c010c93d011014113ebdf987d093f9d37c2be48352d69a1683f8f6e6c2167983c761e3ab169fde5daaa12123fa1beab621e4da5935e9c198f82f35eae583a99386d8110ea6bd1abb0f568759f62694419ea5f69847c43462abef858b4cb5edc84e7b9226cd7bd7e183aa974a712c079dde85b9dc063b8a5c08e8f859c0ee5dcd824c7807f20153361a7f63cfd2a433a1be7f5',\n    exponent: '010001'\n  }];\n\n  private publisKeysHex: RSAPublicKeyHex[] = [{\n    // modulus: '00e8bb3305c0b52c6cf2afdf7637313489e63e05268e5badb601af417786472e5f93b85438968e20e6729a301c0afc121bf7151f834436f7fda680847a66bf64accec78ee21c0b316f0edafe2f41908da7bd1f4a5107638eeb67040ace472a14f90d9f7c2b7def99688ba3073adb5750bb02964902a359fe745d8170e36876d4fd8a5d41b2a76cbff9a13267eb9580b2d06d10357448d20d9da2191cb5d8c93982961cdfdeda629e37f1fb09a0722027696032fe61ed663db7a37f6f263d370f69db53a0dc0a1748bdaaff6209d5645485e6e001d1953255757e4b8e42813347b11da6ab500fd0ace7e6dfa3736199ccaf9397ed0745a427dcfa6cd67bcb1acff3',\n    modulus: 'e8bb3305c0b52c6cf2afdf7637313489e63e05268e5badb601af417786472e5f93b85438968e20e6729a301c0afc121bf7151f834436f7fda680847a66bf64accec78ee21c0b316f0edafe2f41908da7bd1f4a5107638eeb67040ace472a14f90d9f7c2b7def99688ba3073adb5750bb02964902a359fe745d8170e36876d4fd8a5d41b2a76cbff9a13267eb9580b2d06d10357448d20d9da2191cb5d8c93982961cdfdeda629e37f1fb09a0722027696032fe61ed663db7a37f6f263d370f69db53a0dc0a1748bdaaff6209d5645485e6e001d1953255757e4b8e42813347b11da6ab500fd0ace7e6dfa3736199ccaf9397ed0745a427dcfa6cd67bcb1acff3',\n    exponent: '010001'\n  }];\n\n  private publicKeysParsed: {\n    [hex: string]: RSAPublicKeyHex\n  } = {};\n  private prepared = false;\n  private preparePromise: Promise<void> = null;\n\n  constructor() {\n    if(Modes.test) {\n      this.publisKeysHex = this.testPublicKeysHex;\n    }\n  }\n\n  public prepare(): Promise<void> {\n    if(this.preparePromise) return this.preparePromise;\n    else if(this.prepared) {\n      return Promise.resolve();\n    }\n\n    return this.preparePromise = Promise.all(this.publisKeysHex.map((keyParsed) => {\n      const RSAPublicKey = new TLSerialization();\n      RSAPublicKey.storeBytes(bytesFromHex(keyParsed.modulus), 'n');\n      RSAPublicKey.storeBytes(bytesFromHex(keyParsed.exponent), 'e');\n\n      const buffer = RSAPublicKey.getBuffer();\n\n      return cryptoWorker.invokeCrypto('sha1', buffer).then((bytes) => {\n        const fingerprintBytes = bytes.slice(-8);\n        fingerprintBytes.reverse();\n\n        this.publicKeysParsed[bytesToHex(fingerprintBytes).toLowerCase()] = {\n          modulus: keyParsed.modulus,\n          exponent: keyParsed.exponent\n        };\n      });\n    })).then(() => {\n      this.prepared = true;\n\n      // console.log('[MT] Prepared keys');\n      this.preparePromise = null;\n    });\n  }\n\n  public async select(fingerprints: Array<string>) {\n    await this.prepare();\n\n    for(let i = 0; i < fingerprints.length; ++i) {\n      let fingerprintHex = bigInt(fingerprints[i]).toString(16).toLowerCase();\n\n      if(fingerprintHex.length < 16) {\n        fingerprintHex = new Array(16 - fingerprintHex.length).fill('0').join('') + fingerprintHex;\n      }\n\n      // console.log(fingerprintHex, this.publicKeysParsed);\n      const foundKey = this.publicKeysParsed[fingerprintHex];\n      if(foundKey) {\n        return Object.assign({\n          fingerprint: fingerprints[i]\n        }, foundKey);\n      }\n    }\n  }\n}\n\nexport default new RSAKeysManager();\n","export default function bytesXor(bytes1: Uint8Array, bytes2: Uint8Array) {\n  const len = bytes1.length;\n  const bytes = new Uint8Array(len);\n\n  for(let i = 0; i < len; ++i) {\n    bytes[i] = bytes1[i] ^ bytes2[i];\n  }\n\n  return bytes;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\n                   \nimport transportController from './transports/controller';\n         \n\nimport {TLSerialization, TLDeserialization} from './tl_utils';\nimport {TransportType} from './dcConfigurator';\nimport rsaKeysManager from './rsaKeysManager';\n\nimport CryptoWorker from '../crypto/cryptoMessagePort';\n\nimport {logger, LogTypes} from '../logger';\nimport DEBUG from '../../config/debug';\nimport {Awaited, DcId} from '../../types';\nimport addPadding from '../../helpers/bytes/addPadding';\nimport bytesCmp from '../../helpers/bytes/bytesCmp';\nimport bytesFromHex from '../../helpers/bytes/bytesFromHex';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport bytesXor from '../../helpers/bytes/bytesXor';\nimport {bigIntFromBytes} from '../../helpers/bigInt/bigIntConversion';\nimport bigInt from 'big-integer';\nimport randomize from '../../helpers/array/randomize';\nimport {AppManager} from '../appManagers/manager';\n\n/* let fNewNonce: any = bytesFromHex('8761970c24cb2329b5b2459752c502f3057cb7e8dbab200e526e8767fdc73b3c').reverse();\nlet fNonce: any = bytesFromHex('b597720d11faa5914ef485c529cde414').reverse();\nlet fResult: any = new Uint8Array(bytesFromHex('000000000000000001b473a0661b285e480000006324160514e4cd29c585f44e91a5fa110d7297b5c0c4134c84893db5715ecd56af5ed618082182053cc5de91cd00000015c4b51c02000000a5b7f709355fc30b216be86c022bb4c3'));\n\nfNewNonce = false;\nfNonce = false;\nfResult = false; */\n\ntype AuthOptions = {\n  dcId: number,\n  nonce: Uint8Array,\n\n  serverNonce?: Uint8Array,\n  pq?: Uint8Array,\n  fingerprints?: string[],\n  publicKey?: {\n    modulus: string,\n    exponent: string,\n    fingerprint: string\n  },\n\n  // good\n  p?: Uint8Array,\n  q?: Uint8Array,\n\n  newNonce?: Uint8Array,\n\n  retry?: number,\n\n  b?: Uint8Array,\n  g?: number,\n  gA?: Uint8Array,\n  dhPrime?: Uint8Array,\n\n  tmpAesKey?: Uint8Array,\n  tmpAesIv?: Uint8Array,\n\n  authKeyId?: Uint8Array,\n  authKey?: Uint8Array,\n  serverSalt?: Uint8Array,\n\n  localTime?: number,\n  serverTime?: any,\n};\n\ntype ResPQ = {\n  _: 'resPQ';\n  nonce: Uint8Array;\n  pq: Uint8Array;\n  server_nonce: Uint8Array;\n  server_public_key_fingerprints: string[];\n};\n\ntype P_Q_inner_data = {\n  _: 'p_q_inner_data_dc';\n  pq: Uint8Array;\n  p: Uint8Array;\n  q: Uint8Array;\n  nonce: Uint8Array;\n  server_nonce: Uint8Array;\n  new_nonce: Uint8Array;\n  dc: number;\n};\n\ntype req_DH_params = {\n  nonce: Uint8Array;\n  server_nonce: Uint8Array;\n  p: Uint8Array;\n  q: Uint8Array;\n  public_key_fingerprint: string;\n  encrypted_data: Uint8Array;\n};\n\nexport class Authorizer extends AppManager {\n  private cached: {\n    [dcId: DcId]: Promise<AuthOptions>\n  };\n\n  private log: ReturnType<typeof logger>;\n\n  private transportType: TransportType;\n\n                     \n  private getTransportTypePromise: Promise<void>;\n           \n\n  protected after() {\n    this.cached = {};\n    this.log = logger(`AUTHORIZER`, LogTypes.Error | LogTypes.Log);\n  }\n\n  private sendPlainRequest(dcId: DcId, requestArray: Uint8Array) {\n    const requestLength = requestArray.byteLength;\n\n    const header = new TLSerialization();\n    header.storeLongP(0, 0, 'auth_key_id');\n    header.storeLong(this.timeManager.generateId(), 'msg_id');\n    header.storeInt(requestLength, 'request_length');\n\n    const headerArray = header.getBytes(true) as Uint8Array;\n    const resultArray = new Uint8Array(headerArray.byteLength + requestLength);\n    resultArray.set(headerArray);\n    resultArray.set(requestArray, headerArray.length);\n\n    const transport = this.dcConfigurator.chooseServer(dcId, 'client', this.transportType);\n    const baseError = {\n      code: 406,\n      type: 'NETWORK_BAD_RESPONSE'\n    };\n\n    if(DEBUG) {\n      this.log('mtpSendPlainRequest: creating requestPromise');\n    }\n\n    const promise = transport.send(resultArray) as any as Promise<Uint8Array>;\n    return promise.then((result) => {\n      if(DEBUG) {\n        this.log('mtpSendPlainRequest: in good sector', result);\n      }\n\n      if(!result || !result.byteLength) {\n        throw baseError;\n      }\n\n      try {\n        /* result = fResult ? fResult : result;\n        fResult = new Uint8Array(0); */\n\n        const deserializer = new TLDeserialization<MTLong>(result, {mtproto: true});\n\n        if(result.length === 4) {\n          const errorCode = deserializer.fetchInt();\n          this.log.error('mtpSendPlainRequest: wrong response, error code:', errorCode);\n          throw errorCode;\n        }\n\n        const auth_key_id = deserializer.fetchLong('auth_key_id');\n        if(auth_key_id !== '0') this.log.error('auth_key_id !== 0', auth_key_id);\n\n        const msg_id = deserializer.fetchLong('msg_id');\n        if(msg_id === '0') this.log.error('msg_id === 0', msg_id);\n\n        const msg_len = deserializer.fetchInt('msg_len');\n        if(!msg_len) this.log.error('no msg_len', msg_len);\n\n        return deserializer;\n      } catch(e) {\n        this.log.error('mtpSendPlainRequest: deserialization went bad', e);\n        const error = Object.assign(baseError, {originalError: e});\n        throw error;\n      }\n    }, (error) => {\n      if(!error.message && !error.type) {\n        error = Object.assign(baseError, {\n          originalError: error\n        });\n      }\n\n      throw error;\n    });\n  }\n\n  private async sendReqPQ(auth: AuthOptions) {\n    const request = new TLSerialization({mtproto: true});\n\n    request.storeMethod('req_pq_multi', {nonce: auth.nonce});\n\n    if(DEBUG) {\n      this.log('Send req_pq', bytesToHex(auth.nonce));\n    }\n\n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      const promise = this.sendPlainRequest(auth.dcId, request.getBytes(true));\n      rsaKeysManager.prepare();\n      deserializer = await promise;\n    } catch(error) {\n      this.log.error('req_pq error', (error as Error).message);\n      throw error;\n    }\n\n    const response: ResPQ = deserializer.fetchObject('ResPQ');\n\n    if(response._ !== 'resPQ') {\n      throw new Error('[MT] resPQ response invalid: ' + response._);\n    }\n\n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      this.log.error(auth.nonce, response.nonce);\n      throw new Error('[MT] resPQ nonce mismatch');\n    }\n\n    auth.serverNonce = response.server_nonce; // need\n    auth.pq = response.pq;\n    auth.fingerprints = response.server_public_key_fingerprints;\n\n    if(DEBUG) {\n      this.log('Got ResPQ', bytesToHex(auth.serverNonce), bytesToHex(auth.pq), auth.fingerprints);\n    }\n\n    const publicKey = await rsaKeysManager.select(auth.fingerprints);\n    if(!publicKey) {\n      throw new Error('[MT] No public key found');\n    }\n\n    auth.publicKey = publicKey;\n\n    if(DEBUG) {\n      this.log('PQ factorization start', auth.pq);\n    }\n\n    // let pAndQ: Awaited<ReturnType<typeof CryptoWorker['factorize']>>;\n    try {\n      var pAndQ = await CryptoWorker.invokeCrypto('factorize', auth.pq);\n    } catch(error) {\n      this.log.error('worker error factorize', error);\n      throw error;\n    }\n\n    auth.p = pAndQ[0];\n    auth.q = pAndQ[1];\n\n    if(DEBUG) {\n      this.log('PQ factorization done', pAndQ);\n    }\n\n    return this.sendReqDhParams(auth);\n  }\n\n  private async sendReqDhParams(auth: AuthOptions): Promise<AuthOptions> {\n    auth.newNonce = randomize(new Uint8Array(32));\n\n    const p_q_inner_data_dc: P_Q_inner_data = {\n      _: 'p_q_inner_data_dc',\n      pq: auth.pq,\n      p: auth.p,\n      q: auth.q,\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      new_nonce: auth.newNonce,\n      dc: 0\n    };\n\n    const pQInnerDataSerialization = new TLSerialization({mtproto: true});\n    pQInnerDataSerialization.storeObject(p_q_inner_data_dc, 'P_Q_inner_data', 'DECRYPTED_DATA');\n\n    const data = pQInnerDataSerialization.getBytes(true);\n    if(data.length > 144) {\n      throw 'DH_params: data is more than 144 bytes!';\n    }\n\n    const dataWithPadding = addPadding(data, 192, false, true, false);\n    const dataPadReversed = dataWithPadding.slice().reverse();\n\n    const getKeyAesEncrypted = async() => {\n      for(;;) {\n        const tempKey = randomize(new Uint8Array(32));\n        const dataWithHash = dataPadReversed.concat(await CryptoWorker.invokeCrypto('sha256', tempKey.concat(dataWithPadding)));\n        if(dataWithHash.length !== 224) {\n          throw 'DH_params: dataWithHash !== 224 bytes!';\n        }\n\n        const aesEncrypted = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithHash, tempKey, new Uint8Array([0]));\n        const tempKeyXor = bytesXor(tempKey, await CryptoWorker.invokeCrypto('sha256', aesEncrypted));\n        const keyAesEncrypted = tempKeyXor.concat(aesEncrypted);\n\n        const keyAesEncryptedBigInt = bigIntFromBytes(keyAesEncrypted);\n        const publicKeyModulusBigInt = bigInt(auth.publicKey.modulus, 16);\n\n        if(keyAesEncryptedBigInt.compare(publicKeyModulusBigInt) === -1) {\n          return keyAesEncrypted;\n        }\n      }\n    };\n\n    const keyAesEncrypted = await getKeyAesEncrypted();\n    const encryptedData = addPadding(await CryptoWorker.invokeCrypto('rsa-encrypt', keyAesEncrypted, auth.publicKey), 256, true, true, true);\n\n    const req_DH_params: req_DH_params = {\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      p: auth.p,\n      q: auth.q,\n      public_key_fingerprint: auth.publicKey.fingerprint,\n      encrypted_data: encryptedData\n    };\n\n    const request = new TLSerialization({mtproto: true});\n    request.storeMethod('req_DH_params', req_DH_params);\n\n    const requestBytes = request.getBytes(true);\n\n    if(DEBUG) {\n      this.log('Send req_DH_params', req_DH_params/* , requestBytes.hex */);\n    }\n\n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      deserializer = await this.sendPlainRequest(auth.dcId, requestBytes);\n    } catch(error) {\n      this.log.error('Send req_DH_params FAIL!', error);\n      throw error;\n    }\n\n    const response = deserializer.fetchObject('Server_DH_Params', 'RESPONSE');\n\n    if(DEBUG) {\n      this.log('Sent req_DH_params, response:', response);\n    }\n\n    if(response._ !== 'server_DH_params_fail' && response._ !== 'server_DH_params_ok') {\n      throw new Error('[MT] Server_DH_Params response invalid: ' + response._);\n    }\n\n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] Server_DH_Params nonce mismatch');\n    }\n\n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] Server_DH_Params server_nonce mismatch');\n    }\n\n    if(response._ === 'server_DH_params_fail') {\n      const newNonceHash = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce)).slice(-16);\n      if(!bytesCmp(newNonceHash, response.new_nonce_hash)) {\n        throw new Error('[MT] server_DH_params_fail new_nonce_hash mismatch');\n      }\n\n      throw new Error('[MT] server_DH_params_fail');\n    }\n\n    // fill auth object\n    try {\n      await this.decryptServerDhDataAnswer(auth, response.encrypted_answer);\n    } catch(e) {\n      this.log.error('mtpDecryptServerDhDataAnswer FAILED!', e);\n      throw e;\n    }\n\n    // console.log(dT(), 'mtpSendReqDhParams: executing mtpSendSetClientDhParams...');\n\n    return this.sendSetClientDhParams(auth);\n  }\n\n  private async decryptServerDhDataAnswer(auth: AuthOptions, encryptedAnswer: any) {\n    auth.localTime = Date.now();\n\n    // ! can't concat Array with Uint8Array!\n    auth.tmpAesKey = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat(auth.serverNonce)))\n    .concat((await CryptoWorker.invokeCrypto('sha1', auth.serverNonce.concat(auth.newNonce))).slice(0, 12));\n\n    auth.tmpAesIv = (await CryptoWorker.invokeCrypto('sha1', auth.serverNonce.concat(auth.newNonce))).slice(12)\n    .concat(await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat(auth.newNonce)), auth.newNonce.slice(0, 4));\n\n    const answerWithHash = new Uint8Array(await CryptoWorker.invokeCrypto('aes-decrypt', encryptedAnswer, auth.tmpAesKey, auth.tmpAesIv));\n\n    const hash = answerWithHash.slice(0, 20);\n    const answerWithPadding = answerWithHash.slice(20);\n\n    const deserializer = new TLDeserialization<MTLong>(answerWithPadding, {mtproto: true});\n    const response = deserializer.fetchObject('Server_DH_inner_data');\n\n    if(response._ !== 'server_DH_inner_data') {\n      throw new Error('[MT] server_DH_inner_data response invalid: ' + response);\n    }\n\n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] server_DH_inner_data nonce mismatch');\n    }\n\n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] server_DH_inner_data serverNonce mismatch');\n    }\n\n    if(DEBUG) {\n      this.log('Done decrypting answer');\n    }\n    auth.g = response.g;\n    auth.dhPrime = response.dh_prime;\n    auth.gA = response.g_a;\n    auth.serverTime = response.server_time;\n    auth.retry = 0;\n\n    this.verifyDhParams(auth.g, auth.dhPrime, auth.gA);\n\n    const offset = deserializer.getOffset();\n\n    if(!bytesCmp(hash, await CryptoWorker.invokeCrypto('sha1', answerWithPadding.slice(0, offset)))) {\n      throw new Error('[MT] server_DH_inner_data SHA1 mismatch');\n    }\n\n    this.timeManager.applyServerTime(auth.serverTime, auth.localTime);\n  }\n\n  private verifyDhParams(g: number, dhPrime: Uint8Array, gA: Uint8Array) {\n    if(DEBUG) {\n      this.log('Verifying DH params', g, dhPrime, gA);\n    }\n\n    const dhPrimeHex = bytesToHex(dhPrime);\n    if(g !== 3 || dhPrimeHex !== 'c71caeb9c6b1c9048e6c522f70f13f73980d40238e3e21c14934d037563d930f48198a0aa7c14058229493d22530f4dbfa336f6e0ac925139543aed44cce7c3720fd51f69458705ac68cd4fe6b6b13abdc9746512969328454f18faf8c595f642477fe96bb2a941d5bcd1d4ac8cc49880708fa9b378e3c4f3a9060bee67cf9a4a4a695811051907e162753b56b0f6b410dba74d8a84b2a14b3144e0ef1284754fd17ed950d5965b4b9dd46582db1178d169c6bc465b0d6ff9ca3928fef5b9ae4e418fc15e83ebea0f87fa9ff5eed70050ded2849f47bf959d956850ce929851f0d8115f635b105ee2e4e15d04b2454bf6f4fadf034b10403119cd8e3b92fcc5b') {\n      // The verified value is from https://core.telegram.org/mtproto/security_guidelines\n      throw new Error('[MT] DH params are not verified: unknown dhPrime');\n    }\n\n    if(DEBUG) {\n      this.log('dhPrime cmp OK');\n    }\n\n    const gABigInt = bigIntFromBytes(gA);\n    const dhPrimeBigInt = bigInt(dhPrimeHex, 16);\n\n    if(gABigInt.compare(bigInt.one) <= 0) {\n      throw new Error('[MT] DH params are not verified: gA <= 1');\n    }\n\n    if(gABigInt.compare(dhPrimeBigInt.subtract(bigInt.one)) >= 0) {\n      throw new Error('[MT] DH params are not verified: gA >= dhPrime - 1');\n    }\n\n    if(DEBUG) {\n      this.log('1 < gA < dhPrime-1 OK');\n    }\n\n    const twoPow = bigInt(2).pow(2048 - 64);\n\n    if(gABigInt.compare(twoPow) < 0) {\n      throw new Error('[MT] DH params are not verified: gA < 2^{2048-64}');\n    }\n    if(gABigInt.compare(dhPrimeBigInt.subtract(twoPow)) >= 0) {\n      throw new Error('[MT] DH params are not verified: gA > dhPrime - 2^{2048-64}');\n    }\n\n    if(DEBUG) {\n      this.log('2^{2048-64} < gA < dhPrime-2^{2048-64} OK');\n    }\n\n    return true;\n  }\n\n  private async sendSetClientDhParams(auth: AuthOptions): Promise<AuthOptions> {\n    const gBytes = bytesFromHex(auth.g.toString(16));\n\n    auth.b = randomize(new Uint8Array(256));\n    // MTProto.secureRandom.nextBytes(auth.b);\n\n    // let gB: Awaited<ReturnType<typeof CryptoWorker['modPow']>>;\n    try {\n      var gB = await CryptoWorker.invokeCrypto('mod-pow', gBytes, auth.b, auth.dhPrime);\n    } catch(error) {\n      throw error;\n    }\n\n    const data = new TLSerialization({mtproto: true});\n    data.storeObject({\n      _: 'client_DH_inner_data',\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      retry_id: [0, auth.retry++],\n      g_b: gB\n    }, 'Client_DH_Inner_Data');\n\n    const dataWithHash = (await CryptoWorker.invokeCrypto('sha1', data.getBuffer())).concat(data.getBytes(true));\n    const encryptedData = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithHash, auth.tmpAesKey, auth.tmpAesIv);\n\n    const request = new TLSerialization({mtproto: true});\n    request.storeMethod('set_client_DH_params', {\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      encrypted_data: encryptedData\n    });\n\n    if(DEBUG) {\n      this.log('Send set_client_DH_params');\n    }\n\n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      deserializer = await this.sendPlainRequest(auth.dcId, request.getBytes(true));\n    } catch(err) {\n      throw err;\n    }\n\n    const response = deserializer.fetchObject('Set_client_DH_params_answer');\n\n    if(response._ !== 'dh_gen_ok' && response._ !== 'dh_gen_retry' && response._ !== 'dh_gen_fail') {\n      throw new Error('[MT] Set_client_DH_params_answer response invalid: ' + response._);\n    }\n\n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] Set_client_DH_params_answer nonce mismatch');\n    }\n\n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] Set_client_DH_params_answer server_nonce mismatch');\n    }\n\n    // let authKey: Uint8Array;\n    try {\n      var authKey = await CryptoWorker.invokeCrypto('mod-pow', auth.gA, auth.b, auth.dhPrime);\n    } catch(err) {\n      throw authKey;\n    }\n\n    const authKeyHash = await CryptoWorker.invokeCrypto('sha1', authKey),\n      authKeyAux = authKeyHash.slice(0, 8),\n      authKeyId = authKeyHash.slice(-8);\n\n    if(DEBUG) {\n      this.log('Got Set_client_DH_params_answer', response._, authKey);\n    }\n    switch(response._) {\n      case 'dh_gen_ok': {\n        const newNonceHash1 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([1], authKeyAux))).slice(-16);\n\n        if(!bytesCmp(newNonceHash1, response.new_nonce_hash1)) {\n          this.log.error('Set_client_DH_params_answer new_nonce_hash1 mismatch', newNonceHash1, response);\n          throw new Error('new_nonce_hash1 mismatch');\n        }\n\n        const serverSalt = bytesXor(auth.newNonce.slice(0, 8), auth.serverNonce.slice(0, 8));\n        if(DEBUG) {\n          this.log('Auth successfull!', authKeyId, authKey, serverSalt);\n        }\n\n        auth.authKeyId = authKeyId;\n        auth.authKey = authKey;\n        auth.serverSalt = serverSalt;\n\n        return auth;\n      }\n\n      case 'dh_gen_retry': {\n        const newNonceHash2 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([2], authKeyAux))).slice(-16);\n        if(!bytesCmp(newNonceHash2, response.new_nonce_hash2)) {\n          throw new Error('[MT] Set_client_DH_params_answer new_nonce_hash2 mismatch');\n        }\n\n        return this.sendSetClientDhParams(auth);\n      }\n\n      case 'dh_gen_fail': {\n        const newNonceHash3 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([3], authKeyAux))).slice(-16);\n        if(!bytesCmp(newNonceHash3, response.new_nonce_hash3)) {\n          throw new Error('[MT] Set_client_DH_params_answer new_nonce_hash3 mismatch');\n        }\n\n        throw new Error('[MT] Set_client_DH_params_answer fail');\n      }\n    }\n  }\n\n                     \n  private getTransportType() {\n    if(this.getTransportTypePromise) return this.getTransportTypePromise;\n    return this.getTransportTypePromise = transportController.pingTransports().then(({websocket}) => {\n      this.transportType = websocket ? 'websocket' : 'https';\n      this.log('will use transport:', this.transportType);\n    });\n  }\n           \n\n  public auth(dcId: DcId) {\n    let promise = this.cached[dcId];\n    if(promise) {\n      return promise;\n    }\n\n    promise = new Promise(async(resolve, reject) => {\n                         \n      await this.getTransportType();\n               \n\n      let error: ApiError;\n      let _try = 1;\n      while(_try++ <= 3) {\n        try {\n          const auth: AuthOptions = {\n            dcId,\n            nonce: randomize(new Uint8Array(16))\n          };\n\n          const promise = this.sendReqPQ(auth);\n          resolve(await promise);\n          return;\n        } catch(err) {\n          error = err;\n        }\n      }\n\n      reject(error);\n    });\n\n    return this.cached[dcId] = promise;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport sessionStorage from '../sessionStorage';\nimport {nextRandomUint} from '../../helpers/random';\nimport {WorkerTaskVoidTemplate} from '../../types';\nimport ulongFromInts from '../../helpers/long/ulongFromInts';\nimport {AppManager} from '../appManagers/manager';\n\n/*\nlet lol: any = {};\nfor(var i = 0; i < 100; i++) {\n    timeManager.generateId();\n}\n*/\n\nexport interface ApplyServerTimeOffsetTask extends WorkerTaskVoidTemplate {\n  type: 'applyServerTimeOffset',\n  payload: TimeManager['timeOffset']\n};\n\nexport class TimeManager extends AppManager {\n  private lastMessageId: [number, number];\n  private timeOffset: number;\n\n  /* private midnightNoOffset: number;\n  private midnightOffseted: Date;\n\n  private midnightOffset: number; */\n\n  /* private timeParams: {\n    midnightOffset: number,\n    serverTimeOffset: number\n  }; */\n\n  protected after() {\n    this.lastMessageId = [0, 0];\n    this.timeOffset = 0;\n\n    sessionStorage.get('server_time_offset').then((to) => {\n      if(to) {\n        this.timeOffset = to;\n      }\n    });\n\n\n    // * migrated from ServerTimeManager\n    /* const timestampNow = tsNow(true);\n    this.midnightNoOffset = timestampNow - (timestampNow % 86400);\n    this.midnightOffseted = new Date();\n    this.midnightOffseted.setHours(0, 0, 0, 0);\n\n    this.midnightOffset = this.midnightNoOffset - (Math.floor(+this.midnightOffseted / 1000)); */\n\n    /* this.timeParams = {\n      midnightOffset: this.midnightOffset,\n      serverTimeOffset: this.serverTimeOffset\n    }; */\n  }\n\n  public getServerTimeOffset() {\n    return this.timeOffset;\n  }\n\n  public generateId(): string {\n    const timeTicks = Date.now(),\n      timeSec = Math.floor(timeTicks / 1000) + this.timeOffset,\n      timeMSec = timeTicks % 1000,\n      random = nextRandomUint(16);\n\n    let messageId: TimeManager['lastMessageId'] = [timeSec, (timeMSec << 21) | (random << 3) | 4];\n    if(this.lastMessageId[0] > messageId[0] ||\n      this.lastMessageId[0] === messageId[0] && this.lastMessageId[1] >= messageId[1]) {\n      messageId = [this.lastMessageId[0], this.lastMessageId[1] + 4];\n    }\n\n    this.lastMessageId = messageId;\n\n    const ret = ulongFromInts(messageId[0], messageId[1]).toString(10);\n\n    // if(lol[ret]) {\n    //   console.error('[TimeManager]: Generated SAME msg id', messageId, this.timeOffset, ret);\n    // }\n    // lol[ret] = true;\n\n    // console.log('[TimeManager]: Generated msg id', messageId, this.timeOffset, ret);\n\n    return ret\n  }\n\n  public applyServerTime(serverTime: number, localTime?: number) {\n    localTime = (localTime || Date.now()) / 1000 | 0;\n    const newTimeOffset = serverTime - localTime;\n    const changed = Math.abs(this.timeOffset - newTimeOffset) > 10;\n    this.lastMessageId = [0, 0];\n\n    if(this.timeOffset !== newTimeOffset) {\n      sessionStorage.set({\n        server_time_offset: newTimeOffset\n      });\n\n      this.timeOffset = newTimeOffset;\n    }\n\n    // console.log('[TimeManager]: Apply server time', serverTime, localTime, newTimeOffset, changed);\n\n    return changed;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {DocumentAttribute, WebDocument} from '../../layer';\n\nexport default class AppWebDocsManager {\n  public saveWebDocument(webDocument: WebDocument) {\n    if(!webDocument) {\n      return;\n    }\n\n    const attribute: DocumentAttribute.documentAttributeImageSize = webDocument.attributes.find((attribute) => attribute._ === 'documentAttributeImageSize') as any;\n    if(attribute) {\n      webDocument.w = attribute.w;\n      webDocument.h = attribute.h;\n    }\n\n    return webDocument;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {InputInvoice, InputPaymentCredentials, PaymentRequestedInfo, PaymentsPaymentForm} from '../../layer';\nimport {AppManager} from './manager';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\n\nexport default class AppPaymentsManager extends AppManager {\n  public getInputInvoiceBySlug(slug: string): InputInvoice.inputInvoiceSlug {\n    return {\n      _: 'inputInvoiceSlug',\n      slug\n    };\n  }\n\n  public getInputInvoiceByPeerId(peerId: PeerId, mid: number): InputInvoice.inputInvoiceMessage {\n    return {\n      _: 'inputInvoiceMessage',\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid)\n    };\n  }\n\n  public getPaymentForm(invoice: InputInvoice) {\n    return this.apiManager.invokeApi('payments.getPaymentForm', {\n      invoice\n    }).then((paymentForm) => {\n      this.appUsersManager.saveApiUsers(paymentForm.users);\n      paymentForm.photo = this.appWebDocsManager.saveWebDocument(paymentForm.photo);\n\n      return paymentForm;\n    });\n  }\n\n  public getPaymentReceipt(peerId: PeerId, mid: number) {\n    return this.apiManager.invokeApi('payments.getPaymentReceipt', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid)\n    }).then((paymentForm) => {\n      this.appUsersManager.saveApiUsers(paymentForm.users);\n      paymentForm.photo = this.appWebDocsManager.saveWebDocument(paymentForm.photo);\n\n      return paymentForm;\n    });\n  }\n\n  public validateRequestedInfo(invoice: InputInvoice, info: PaymentRequestedInfo, save?: boolean) {\n    return this.apiManager.invokeApi('payments.validateRequestedInfo', {\n      save,\n      invoice,\n      info\n    });\n  }\n\n  public sendPaymentForm(\n    invoice: InputInvoice,\n    formId: PaymentsPaymentForm['form_id'],\n    requestedInfoId: string,\n    shippingOptionId: string,\n    credentials: InputPaymentCredentials,\n    tipAmount?: number\n  ) {\n    return this.apiManager.invokeApi('payments.sendPaymentForm', {\n      form_id: formId,\n      invoice,\n      requested_info_id: requestedInfoId,\n      shipping_option_id: shippingOptionId,\n      credentials,\n      tip_amount: tipAmount || undefined\n    }).then((result) => {\n      if(result._ === 'payments.paymentResult') {\n        this.apiUpdatesManager.processUpdateMessage(result.updates);\n      }\n\n      return result;\n    });\n  }\n\n  public clearSavedInfo(info?: boolean, credentials?: boolean) {\n    return this.apiManager.invokeApi('payments.clearSavedInfo', {\n      info,\n      credentials\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {MessageSendingParams} from './appMessagesManager';\nimport {AppManager} from './manager';\nimport {AttachMenuBots, AttachMenuBot, Update, DataJSON, InputBotApp, BotApp} from '../../layer';\nimport assumeType from '../../helpers/assumeType';\nimport makeError from '../../helpers/makeError';\nimport getAttachMenuBotIcon from './utils/attachMenuBots/getAttachMenuBotIcon';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\nimport {randomLong} from '../../helpers/random';\n\nconst BOTS_SUPPORTED = true;\n\nexport type RequestWebViewOptions = MessageSendingParams & {\n  botId: BotId,\n  peerId: PeerId,\n  // platform: string,\n  startParam?: string,\n  fromBotMenu?: boolean,\n  fromAttachMenu?: boolean,\n  fromSwitchWebView?: boolean,\n  attachMenuBot?: AttachMenuBot,\n  url?: string,\n  themeParams?: DataJSON,\n  isSimpleWebView?: boolean,\n  buttonText?: string,\n  writeAllowed?: boolean,\n  app?: BotApp.botApp\n};\n\nexport default class AppAttachMenuBotsManager extends AppManager {\n  private attachMenuBots: Map<BotId, AttachMenuBot>;\n  private attachMenuBotsArr: AttachMenuBot[];\n\n  protected after() {\n    this.clear(true);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateAttachMenuBots: this.onUpdateAttachMenuBots,\n\n      updateWebViewResultSent: this.onUpdateWebViewResultSent\n    });\n  }\n\n  public clear = (init = false) => {\n    if(!init) {\n      this.attachMenuBots.clear();\n      this.attachMenuBotsArr = undefined;\n    } else {\n      this.attachMenuBots = new Map();\n    }\n  };\n\n  private onUpdateAttachMenuBots = (update: Update.updateAttachMenuBots) => {\n    this.clear();\n    this.getAttachMenuBots();\n  };\n\n  private onUpdateWebViewResultSent = (update: Update.updateWebViewResultSent) => {\n    this.rootScope.dispatchEvent('web_view_result_sent', update.query_id);\n  };\n\n  public saveAttachMenuBot(attachMenuBot: AttachMenuBot) {\n    this.attachMenuBots.set(attachMenuBot.bot_id, attachMenuBot);\n    const icon = getAttachMenuBotIcon(attachMenuBot);\n    icon.icon = this.appDocsManager.saveDoc(icon.icon, {type: 'attachMenuBotIcon', botId: attachMenuBot.bot_id});\n    this.rootScope.dispatchEvent('attach_menu_bot', attachMenuBot);\n    return attachMenuBot;\n  }\n\n  public saveAttachMenuBots(attachMenuBots: AttachMenuBot[]) {\n    if((attachMenuBots as any).saved) return;\n    (attachMenuBots as any).saved = true;\n    attachMenuBots.forEach((user) => this.saveAttachMenuBot(user));\n  }\n\n  public getAttachMenuBots() {\n    return this.attachMenuBotsArr ?? this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getAttachMenuBots',\n      processResult: (attachMenuBots) => {\n        assumeType<AttachMenuBots.attachMenuBots>(attachMenuBots);\n        this.appUsersManager.saveApiUsers(attachMenuBots.users);\n        this.saveAttachMenuBots(attachMenuBots.bots);\n        return this.attachMenuBotsArr = attachMenuBots.bots.slice(0, BOTS_SUPPORTED ? undefined : 0);\n      }\n    });\n  }\n\n  public getAttachMenuBotCached(botId: BotId) {\n    return this.attachMenuBots.get(botId);\n  }\n\n  public getAttachMenuBot(botId: BotId, overwrite?: boolean) {\n    if(!this.appUsersManager.isAttachMenuBot(botId) || !BOTS_SUPPORTED) {\n      throw makeError('BOT_INVALID');\n    }\n\n    return (!overwrite && this.getAttachMenuBotCached(botId)) ?? this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getAttachMenuBot',\n      params: {\n        bot: this.appUsersManager.getUserInput(botId)\n      },\n      processResult: (attachMenuBotsBot) => {\n        this.appUsersManager.saveApiUsers(attachMenuBotsBot.users);\n        const attachMenuBot = this.saveAttachMenuBot(attachMenuBotsBot.bot);\n        return attachMenuBot;\n      }\n    });\n  }\n\n  public requestWebView(options: RequestWebViewOptions) {\n    const {\n      botId,\n      peerId,\n      url,\n      fromBotMenu,\n      fromSwitchWebView,\n      themeParams,\n      // platform,\n      replyToMsgId,\n      silent,\n      sendAsPeerId,\n      startParam,\n      threadId,\n      isSimpleWebView,\n      app,\n      writeAllowed\n    } = options;\n\n    const platform = 'web';\n\n    if(app) {\n      return this.apiManager.invokeApiSingleProcess({\n        method: 'messages.requestAppWebView',\n        params: {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          start_param: startParam,\n          theme_params: themeParams,\n          platform,\n          write_allowed: writeAllowed,\n          app: {\n            _: 'inputBotAppID',\n            access_hash: app.access_hash,\n            id: app.id\n          }\n        },\n        processResult: (result) => {\n          return result;\n        }\n      });\n    }\n\n    if(isSimpleWebView) {\n      return this.apiManager.invokeApiSingleProcess({\n        method: 'messages.requestSimpleWebView',\n        params: {\n          bot: this.appUsersManager.getUserInput(botId),\n          url,\n          platform,\n          from_switch_webview: fromSwitchWebView,\n          theme_params: themeParams\n        },\n        processResult: (result) => {\n          return result;\n        }\n      });\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.requestWebView',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        bot: this.appUsersManager.getUserInput(botId),\n        silent,\n        platform,\n        url,\n        reply_to_msg_id: replyToMsgId ? getServerMessageId(replyToMsgId) : undefined,\n        from_bot_menu: fromBotMenu,\n        theme_params: themeParams,\n        send_as: sendAsPeerId ? this.appPeersManager.getInputPeerById(sendAsPeerId) : undefined,\n        start_param: startParam,\n        top_msg_id: threadId ? getServerMessageId(threadId) : undefined\n      },\n      processResult: (result) => {\n        return result;\n      }\n    });\n  }\n\n  public prolongWebView(options: MessageSendingParams & {\n    peerId: PeerId,\n    botId: BotId,\n    queryId: string | number\n  }) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.prolongWebView',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(options.peerId),\n        bot: this.appUsersManager.getUserInput(options.botId),\n        query_id: options.queryId,\n        silent: options.silent,\n        reply_to_msg_id: options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined,\n        send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined,\n        top_msg_id: options.threadId ? getServerMessageId(options.threadId) : undefined\n      },\n      processResult: (result) => {\n        return result;\n      }\n    });\n  }\n\n  public toggleBotInAttachMenu(botId: BotId, enabled: boolean, writeAllowed?: boolean) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.toggleBotInAttachMenu',\n      params: {\n        bot: this.appUsersManager.getUserInput(botId),\n        enabled,\n        write_allowed: writeAllowed\n      },\n      processResult: (result) => {\n        return result;\n        // this.apiUpdatesManager.processLocalUpdate({_: 'updateAttachMenuBots'});\n      }\n    });\n  }\n\n  public sendWebViewData(botId: BotId, buttonText: string, data: string) {\n    return this.apiManager.invokeApi('messages.sendWebViewData', {\n      bot: this.appUsersManager.getUserInput(botId),\n      button_text: buttonText,\n      data,\n      random_id: randomLong()\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public getBotApp(botId: BotId, shortName: string) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getBotApp',\n      params: {\n        app: {\n          _: 'inputBotAppShortName',\n          bot_id: this.appUsersManager.getUserInput(botId),\n          short_name: shortName\n        },\n        hash: 0\n      },\n      processResult: (result) => {\n        return result;\n      }\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {UrlAuthResult} from '../../layer';\nimport {AppManager} from './manager';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\n\nexport default class AppSeamlessLoginManager extends AppManager {\n  public requestUrlAuth(url: string, peerId?: PeerId, mid?: number, buttonId?: number) {\n    return this.apiManager.invokeApi('messages.requestUrlAuth', {\n      button_id: buttonId,\n      msg_id: mid ? getServerMessageId(mid) : undefined,\n      peer: peerId ? this.appPeersManager.getInputPeerById(peerId) : undefined,\n      url\n    }).then((urlAuthResult) => {\n      if(urlAuthResult._ === 'urlAuthResultRequest') {\n        this.appUsersManager.saveApiUser(urlAuthResult.bot);\n      }\n\n      return urlAuthResult;\n    });\n  }\n\n  public acceptUrlAuth(url: string, peerId?: PeerId, mid?: number, buttonId?: number, writeAllowed?: boolean) {\n    return this.apiManager.invokeApi('messages.acceptUrlAuth', {\n      button_id: buttonId,\n      msg_id: mid ? getServerMessageId(mid) : undefined,\n      peer: peerId ? this.appPeersManager.getInputPeerById(peerId) : undefined,\n      url,\n      write_allowed: writeAllowed\n    }).then((urlAuthResult) => {\n      return urlAuthResult as Exclude<UrlAuthResult, UrlAuthResult.urlAuthResultRequest>;\n    });\n  }\n\n  public getWebAuthorizations() {\n    return this.apiManager.invokeApi('account.getWebAuthorizations').then((webAuthorizations) => {\n      this.appUsersManager.saveApiUsers(webAuthorizations.users);\n      return webAuthorizations.authorizations;\n    });\n  }\n\n  public resetWebAuthorization(hash: Long) {\n    return this.apiManager.invokeApi('account.resetWebAuthorization', {\n      hash\n    });\n  }\n\n  public resetWebAuthorizations() {\n    return this.apiManager.invokeApi('account.resetWebAuthorizations');\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport assumeType from '../../helpers/assumeType';\nimport {AccountThemes, AccountWallPapers, InputWallPaper, WallPaper} from '../../layer';\nimport {AppManager} from './manager';\n\ntype WallPaperId = WallPaper['id'];\n\nexport default class AppThemesManager extends AppManager {\n  private wallPapers: {[id: WallPaperId]: WallPaper};\n\n  protected after() {\n    this.wallPapers = {};\n  }\n\n  private saveWallPaper(wallPaper: WallPaper) {\n    if(!wallPaper) {\n      return wallPaper;\n    }\n    // const oldWallPaper = this.wallPapers[wallPaper.id];\n\n    // ! IT'S BROKEN NOW. SERVER RETURNS SAME ID FOR DIFFERENT WALLPAPERS\n    // if(oldWallPaper) {\n    //   console.log('rewrite', {...oldWallPaper}, {...wallPaper});\n    // }\n\n    if(wallPaper._ !== 'wallPaperNoFile') {\n      wallPaper.document = this.appDocsManager.saveDoc(wallPaper.document, {type: 'wallPaper', wallPaperId: wallPaper.id});\n    }\n\n    // if(oldWallPaper) {\n    //   return Object.assign(oldWallPaper, wallPaper);\n    // } else {\n    this.wallPapers[wallPaper.id] = wallPaper;\n    // }\n\n    return wallPaper;\n  }\n\n  public getWallPaper(inputWallPaper: InputWallPaper) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'account.getWallPaper',\n      params: {wallpaper: inputWallPaper},\n      processResult: (wallPaper) => {\n        return this.saveWallPaper(wallPaper);\n      }\n    });\n  }\n\n  public getInputWallPaper(wallPaper: WallPaper | string): InputWallPaper {\n    if(typeof(wallPaper) === 'string') {\n      return {_: 'inputWallPaperSlug', slug: wallPaper};\n    } else if(wallPaper._ === 'wallPaperNoFile') {\n      return {_: 'inputWallPaperNoFile', id: wallPaper.id};\n    } else {\n      return {_: 'inputWallPaper', id: wallPaper.id, access_hash: wallPaper.access_hash};\n    }\n  }\n\n  public getWallPaperById(id: WallPaperId) {\n    const wallPaper = this.wallPapers[id];\n    return this.getWallPaper(this.getInputWallPaper(wallPaper));\n  }\n\n  public getThemes() {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'account.getThemes',\n      params: {format: 'macos', hash: 0},\n      processResult: (accountThemes) => {\n        assumeType<AccountThemes.accountThemes>(accountThemes);\n\n        accountThemes.themes.forEach((theme) => {\n          if(!theme.settings) {\n            return;\n          }\n\n          theme.settings.forEach((themeSettings) => {\n            themeSettings.wallpaper = this.saveWallPaper(themeSettings.wallpaper);\n          });\n        });\n\n        return accountThemes.themes;\n      }\n    });\n  }\n\n  public getWallPapers() {\n    return this.apiManager.invokeApiHashable({method: 'account.getWallPapers'}).then((accountWallpapers) => {\n      const wallPapers = (accountWallpapers as AccountWallPapers.accountWallPapers).wallpapers;\n      wallPapers.forEach((wallPaper, idx, arr) => {\n        arr[idx] = this.saveWallPaper(wallPaper);\n      });\n\n      return wallPapers;\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {AppManager} from './manager';\n\nexport default class AppUsernamesManager extends AppManager {\n  public toggleUsername({\n    username,\n    active,\n    peerId\n  }: {\n    username: string,\n    active: boolean,\n    peerId?: PeerId\n  }) {\n    if(!peerId || peerId === this.appUsersManager.userId) {\n      return this.apiManager.invokeApi('account.toggleUsername', {username, active});\n    } else if(peerId.isAnyChat()) {\n      const chatId = peerId.toChatId();\n      const promise = this.apiManager.invokeApi('channels.toggleUsername', {\n        channel: this.appChatsManager.getChannelInput(chatId),\n        username,\n        active\n      });\n\n      return this.appChatsManager.refreshChatAfterRequest(chatId, promise);\n    } else {\n      return this.apiManager.invokeApi('bots.toggleUsername', {\n        bot: this.appUsersManager.getUserInput(peerId),\n        username,\n        active\n      });\n    }\n  }\n\n  public reorderUsernames({\n    peerId,\n    order\n  }: {\n    peerId: PeerId,\n    order: string[]\n  }) {\n    if(!peerId) {\n      return this.apiManager.invokeApi('account.reorderUsernames', {order});\n    } else if(peerId.isAnyChat()) {\n      const chatId = peerId.toChatId();\n      const promise = this.apiManager.invokeApi('channels.reorderUsernames', {\n        channel: this.appChatsManager.getChannelInput(chatId),\n        order\n      });\n\n      return this.appChatsManager.refreshChatAfterRequest(chatId, promise);\n    } else {\n      return this.apiManager.invokeApi('bots.reorderUsernames', {\n        bot: this.appUsersManager.getUserInput(peerId),\n        order\n      });\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport App from '../../config/app';\nimport {MOUNT_CLASS_TO} from '../../config/debug';\nimport callbackify from '../../helpers/callbackify';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport cryptoMessagePort from '../crypto/cryptoMessagePort';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\nimport appStateManager from './appStateManager';\nimport {AppStoragesManager} from './appStoragesManager';\nimport createManagers from './createManagers';\n\ntype Managers = Awaited<ReturnType<typeof createManagers>>;\n\nexport class AppManagersManager {\n  private managers: Managers | Promise<Managers>;\n  private cryptoWorkersURLs: string[];\n  private cryptoPortsAttached: number;\n  private cryptoPortPromise: CancellablePromise<void>;\n\n  constructor() {\n    this.cryptoWorkersURLs = [];\n    this.cryptoPortsAttached = 0;\n    this.cryptoPortPromise = deferredPromise();\n    this.cryptoPortPromise.then(() => {\n      this.cryptoPortPromise = undefined;\n    });\n  }\n\n  public start() {\n    const port = MTProtoMessagePort.getInstance<false>();\n\n    port.addEventListener('manager', ({name, method, args}) => {\n      return callbackify(this.getManagers(), (managers) => {\n        // @ts-ignore\n        const manager = managers[name];\n        return manager[method](...args);\n      });\n    });\n\n    port.addEventListener('cryptoPort', (payload, source, event) => {\n      const port = event.ports[0];\n      if(this.cryptoPortsAttached >= this.cryptoWorkersURLs.length) {\n        port.close();\n        return;\n      }\n\n      ++this.cryptoPortsAttached;\n      cryptoMessagePort.attachPort(port);\n      this.cryptoPortPromise?.resolve();\n    });\n\n    port.addEventListener('createProxyWorkerURLs', ({originalUrl, blob}) => {\n      let length = this.cryptoWorkersURLs.length;\n      if(!length) {\n        this.cryptoWorkersURLs.push(originalUrl);\n        ++length;\n      }\n\n      const maxLength = App.cryptoWorkers;\n      if(length === maxLength) {\n        return this.cryptoWorkersURLs;\n      }\n\n      const newURLs = new Array(maxLength - length).fill(undefined).map(() => URL.createObjectURL(blob));\n      this.cryptoWorkersURLs.push(...newURLs);\n      return this.cryptoWorkersURLs;\n    });\n  }\n\n  private async createManagers() {\n    const appStoragesManager = new AppStoragesManager();\n\n    await Promise.all([\n      // new Promise(() => {}),\n      appStoragesManager.loadStorages(),\n      this.cryptoPortPromise\n    ]);\n\n    const managers = await createManagers(appStoragesManager, appStateManager.userId);\n    return this.managers = managers; // have to overwrite cached promise\n  }\n\n  public getManagers() {\n    return this.managers ??= this.createManagers();\n  }\n}\n\nconst appManagersManager = new AppManagersManager();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appManagersManager = appManagersManager);\nexport default appManagersManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {PasswordManager} from '../mtproto/passwordManager';\nimport {ReferenceDatabase} from '../mtproto/referenceDatabase';\nimport DialogsStorage from '../storages/dialogs';\nimport FiltersStorage from '../storages/filters';\nimport {ApiUpdatesManager} from './apiUpdatesManager';\nimport {AppAvatarsManager} from './appAvatarsManager';\nimport {AppCallsManager} from './appCallsManager';\nimport {AppChatsManager} from './appChatsManager';\nimport {AppDocsManager} from './appDocsManager';\nimport {AppDraftsManager} from './appDraftsManager';\nimport {AppEmojiManager} from './appEmojiManager';\nimport {AppGroupCallsManager} from './appGroupCallsManager';\nimport {AppInlineBotsManager} from './appInlineBotsManager';\nimport {AppMessagesIdsManager} from './appMessagesIdsManager';\nimport {AppMessagesManager} from './appMessagesManager';\nimport {AppNotificationsManager} from './appNotificationsManager';\nimport {AppPeersManager} from './appPeersManager';\nimport {AppPhotosManager} from './appPhotosManager';\nimport {AppPollsManager} from './appPollsManager';\nimport {AppPrivacyManager} from './appPrivacyManager';\nimport {AppProfileManager} from './appProfileManager';\nimport {AppReactionsManager} from './appReactionsManager';\nimport {AppStickersManager} from './appStickersManager';\nimport {AppUsersManager} from './appUsersManager';\nimport {AppWebPagesManager} from './appWebPagesManager';\nimport {ApiFileManager} from '../mtproto/apiFileManager';\nimport {ApiManager} from '../mtproto/apiManager';\nimport ctx from '../../environment/ctx';\nimport PeersStorage from '../storages/peers';\nimport ThumbsStorage from '../storages/thumbs';\nimport {NetworkerFactory} from '../mtproto/networkerFactory';\nimport {RootScope} from '../rootScope';\nimport {Authorizer} from '../mtproto/authorizer';\nimport {DcConfigurator} from '../mtproto/dcConfigurator';\nimport {TimeManager} from '../mtproto/timeManager';\nimport {AppStoragesManager} from './appStoragesManager';\nimport cryptoMessagePort from '../crypto/cryptoMessagePort';\nimport appStateManager from './appStateManager';\nimport filterUnique from '../../helpers/array/filterUnique';\nimport AppWebDocsManager from './appWebDocsManager';\nimport AppPaymentsManager from './appPaymentsManager';\nimport AppAttachMenuBotsManager from './appAttachMenuBotsManager';\nimport AppSeamlessLoginManager from './appSeamlessLoginManager';\nimport AppThemesManager from './appThemesManager';\nimport AppUsernamesManager from './appUsernamesManager';\n\nexport default function createManagers(appStoragesManager: AppStoragesManager, userId: UserId) {\n  const managers = {\n    appPeersManager: new AppPeersManager,\n    appChatsManager: new AppChatsManager,\n    appDocsManager: new AppDocsManager,\n    appPhotosManager: new AppPhotosManager,\n    appPollsManager: new AppPollsManager,\n    appUsersManager: new AppUsersManager,\n    appWebPagesManager: new AppWebPagesManager,\n    appDraftsManager: new AppDraftsManager,\n    appProfileManager: new AppProfileManager,\n    appNotificationsManager: new AppNotificationsManager,\n    apiUpdatesManager: new ApiUpdatesManager,\n    appAvatarsManager: new AppAvatarsManager,\n    appGroupCallsManager: new AppGroupCallsManager,\n    appCallsManager: new AppCallsManager,\n    appReactionsManager: new AppReactionsManager,\n    appMessagesManager: new AppMessagesManager,\n    appMessagesIdsManager: new AppMessagesIdsManager,\n    appPrivacyManager: new AppPrivacyManager,\n    appInlineBotsManager: new AppInlineBotsManager,\n    appStickersManager: new AppStickersManager,\n    referenceDatabase: new ReferenceDatabase,\n    appEmojiManager: new AppEmojiManager,\n    filtersStorage: new FiltersStorage,\n    dialogsStorage: new DialogsStorage,\n    apiManager: new ApiManager,\n    cryptoWorker: cryptoMessagePort,\n    passwordManager: new PasswordManager,\n    apiFileManager: new ApiFileManager,\n    peersStorage: new PeersStorage,\n    thumbsStorage: new ThumbsStorage,\n    networkerFactory: new NetworkerFactory,\n    rootScope: new RootScope,\n    authorizer: new Authorizer,\n    dcConfigurator: new DcConfigurator,\n    timeManager: new TimeManager,\n    appStoragesManager: appStoragesManager,\n    appStateManager: appStateManager,\n    appWebDocsManager: new AppWebDocsManager,\n    appPaymentsManager: new AppPaymentsManager,\n    appAttachMenuBotsManager: new AppAttachMenuBotsManager,\n    appSeamlessLoginManager: new AppSeamlessLoginManager,\n    appThemesManager: new AppThemesManager,\n    appUsernamesManager: new AppUsernamesManager\n  };\n\n  type T = typeof managers;\n\n  for(const name in managers) {\n    const manager = managers[name as keyof T];\n    if(!manager) {\n      continue;\n    }\n\n    if((manager as AppMessagesManager).setManagers) {\n      (manager as AppMessagesManager).setManagers(managers as any);\n      delete (manager as AppMessagesManager).setManagers;\n    }\n\n    // @ts-ignore\n    ctx[name] = manager;\n  }\n\n  const promises: Array<Promise<(() => void) | void> | void>[] = [];\n  let names = Object.keys(managers) as (keyof T)[];\n  names.unshift(\n    'appUsersManager',\n    'appChatsManager',\n    'appNotificationsManager',\n    'appMessagesManager',\n    'dialogsStorage'\n  );\n  names = filterUnique(names);\n  for(const name of names) {\n    const manager = managers[name];\n    if((manager as any)?.after) {\n      // console.log('injecting after', name);\n      const result = (manager as any).after();\n      promises.push(result);\n\n      // if(result instanceof Promise) {\n      //   result.then(() => {\n      //     console.log('injected after', name);\n      //   });\n      // }\n    }\n  }\n\n  if(userId) {\n    managers.apiManager.setUserAuth(userId);\n  }\n\n  return Promise.all(promises).then(() => managers);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// just to include\nimport '../polyfill';\nimport '../../helpers/peerIdPolyfill';\n\nimport cryptoWorker from '../crypto/cryptoMessagePort';\nimport {setEnvironment} from '../../environment/utils';\nimport appStateManager from '../appManagers/appStateManager';\nimport transportController from './transports/controller';\nimport MTProtoMessagePort from './mtprotoMessagePort';\nimport RESET_STORAGES_PROMISE from '../appManagers/utils/storages/resetStoragesPromise';\nimport appManagersManager from '../appManagers/appManagersManager';\nimport listenMessagePort from '../../helpers/listenMessagePort';\nimport {logger} from '../logger';\nimport {State} from '../../config/state';\nimport toggleStorages from '../../helpers/toggleStorages';\nimport appTabsManager from '../appManagers/appTabsManager';\nimport ServiceMessagePort from '../serviceWorker/serviceMessagePort';\nimport callbackify from '../../helpers/callbackify';\n\nlet _isServiceWorkerOnline = true;\nexport function isServiceWorkerOnline() {\n  return _isServiceWorkerOnline;\n}\n\nlet serviceMessagePort: ServiceMessagePort<true>, _serviceMessagePort: MessagePort;\nexport function getServiceMessagePort() {\n  return _isServiceWorkerOnline ? serviceMessagePort : undefined;\n}\n\nconst log = logger('MTPROTO');\n// let haveState = false;\n\nconst port = new MTProtoMessagePort<false>();\nport.addMultipleEventsListeners({\n  environment: (environment) => {\n    setEnvironment(environment);\n\n    transportController.waitForWebSocket();\n  },\n\n  crypto: ({method, args}) => {\n    return cryptoWorker.invokeCrypto(method as any, ...args as any);\n  },\n\n  state: ({state, resetStorages, pushedKeys, newVersion, oldVersion, userId}) => {\n    // if(haveState) {\n    //   return;\n    // }\n\n    log('got state', state, pushedKeys);\n\n    appStateManager.userId = userId;\n    appStateManager.newVersion = newVersion;\n    appStateManager.oldVersion = oldVersion;\n\n    RESET_STORAGES_PROMISE.resolve({\n      storages: resetStorages,\n      callback: () => {\n        (Object.keys(state) as any as (keyof State)[]).forEach((key) => {\n          appStateManager.pushToState(key, state[key], true, !pushedKeys.includes(key));\n        });\n      }\n    });\n    // haveState = true;\n  },\n\n  toggleStorages: ({enabled, clearWrite}) => {\n    return toggleStorages(enabled, clearWrite);\n  },\n\n  event: (payload, source) => {\n    log('will redirect event', payload, source);\n    port.invokeExceptSource('event', payload, source);\n  },\n\n  serviceWorkerOnline: (online) => {\n    _isServiceWorkerOnline = online;\n  },\n\n  serviceWorkerPort: (payload, source, event) => {\n    if(serviceMessagePort) {\n      serviceMessagePort.detachPort(_serviceMessagePort);\n      _serviceMessagePort = undefined;\n    } else {\n      serviceMessagePort = new ServiceMessagePort();\n      serviceMessagePort.addMultipleEventsListeners({\n        requestFilePart: (payload) => {\n          return callbackify(appManagersManager.getManagers(), (managers) => {\n            const {docId, dcId, offset, limit} = payload;\n            return managers.appDocsManager.requestDocPart(docId, dcId, offset, limit);\n          });\n        }\n      });\n    }\n\n    // * port can be undefined in the future\n    if(_serviceMessagePort = event.ports[0]) {\n      serviceMessagePort.attachPort(_serviceMessagePort);\n    }\n  },\n\n  createObjectURL: (blob) => {\n    return URL.createObjectURL(blob);\n  }\n\n  // socketProxy: (task) => {\n  //   const socketTask = task.payload;\n  //   const id = socketTask.id;\n\n  //   const socketProxied = socketsProxied.get(id);\n  //   if(socketTask.type === 'message') {\n  //     socketProxied.dispatchEvent('message', socketTask.payload);\n  //   } else if(socketTask.type === 'open') {\n  //     socketProxied.dispatchEvent('open');\n  //   } else if(socketTask.type === 'close') {\n  //     socketProxied.dispatchEvent('close');\n  //     socketsProxied.delete(id);\n  //   }\n  // },\n});\n\nlog('MTProto start');\n\nappManagersManager.start();\nappManagersManager.getManagers();\nappTabsManager.start();\n\n// let sentHello = false;\nlistenMessagePort(port, (source) => {\n  appTabsManager.addTab(source);\n\n  // port.invokeVoid('hello', undefined, source);\n  // if(!sentHello) {\n  //   port.invokeVoid('hello', undefined, source);\n  //   sentHello = true;\n  // }\n}, (source) => {\n  appTabsManager.deleteTab(source);\n});\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type SuperMessagePort from '../lib/mtproto/superMessagePort';\nimport ctx from '../environment/ctx';\n\nexport default function listenMessagePort(\n  messagePort: SuperMessagePort<any, any, any>,\n  onConnect?: (source: MessageEventSource) => void,\n  onDisconnect?: (source: MessageEventSource) => void\n) {\n  const attachPort = (listenPort: any, sendPort: any) => {\n    messagePort.attachListenPort(listenPort);\n    sendPort && messagePort.attachSendPort(sendPort);\n    onConnect?.(listenPort);\n  };\n\n  messagePort.setOnPortDisconnect(onDisconnect);\n\n  if(typeof(SharedWorkerGlobalScope) !== 'undefined') {\n    (ctx as any as SharedWorkerGlobalScope).addEventListener('connect', (e) => attachPort(e.source, e.source));\n  } else if(typeof(ServiceWorkerGlobalScope) !== 'undefined') {\n    attachPort(ctx, null);\n  } else {\n    attachPort(ctx, ctx);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {MyDialogFilter} from '../storages/filters';\n\n/**\n * Legacy Webogram's format, don't change dcID to camelCase. date is timestamp\n */\nexport type UserAuth = {dcID: number | string, date: number, id: PeerId};\nexport type REAL_FOLDER_ID = 0 | 1;\n\nexport const NULL_PEER_ID: PeerId = 0;\nexport const REPLIES_PEER_ID: PeerId = 1271266957;\nexport const REPLIES_HIDDEN_CHANNEL_ID: ChatId = 777;\nexport const SERVICE_PEER_ID: PeerId = 777000;\nexport const MUTE_UNTIL = 0x7FFFFFFF;\nexport const BOT_START_PARAM = '';\nexport const MAX_FILE_SAVE_SIZE = 20 * 1024 * 1024;\nexport const THUMB_TYPE_FULL = '';\nexport const TOPIC_COLORS = [0x6FB9F0, 0xFFD67E, 0xCB86DB, 0x8EEE98, 0xFF93B2, 0xFB6F5F];\nexport const ATTACH_MENU_BOT_ICON_NAME = 'default_static';\nexport const MESSAGE_ID_OFFSET = 0x100000000;\nexport const GENERAL_TOPIC_ID = MESSAGE_ID_OFFSET + 1;\nexport const T_ME_PREFIXES = new Set(['web', 'k', 'z', 'a']);\nexport const SEND_WHEN_ONLINE_TIMESTAMP = 0x7FFFFFFE;\n\nexport const FOLDER_ID_ALL: REAL_FOLDER_ID = 0;\nexport const FOLDER_ID_ARCHIVE: REAL_FOLDER_ID = 1;\nexport const REAL_FOLDERS: Set<number> = new Set([FOLDER_ID_ALL, FOLDER_ID_ARCHIVE]);\nexport const START_LOCAL_ID = Math.max(...Array.from(REAL_FOLDERS)) + 1 as MyDialogFilter['localId'];\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport emojiRegExp from '../../vendor/emoji/regex';\nimport {MessageEntity} from '../../layer';\n\nconst EmojiHelper = {\n  emojiMap: (code: string) => { return code; },\n  shortcuts: [] as any,\n  emojis: [] as any\n};\n\nexport const ALPHA_CHARS_REG_EXP = 'a-z' +\n  '\\\\u00c0-\\\\u00d6\\\\u00d8-\\\\u00f6\\\\u00f8-\\\\u00ff' + // Latin-1\n  '\\\\u0100-\\\\u024f' + // Latin Extended A and B\n  '\\\\u0253\\\\u0254\\\\u0256\\\\u0257\\\\u0259\\\\u025b\\\\u0263\\\\u0268\\\\u026f\\\\u0272\\\\u0289\\\\u028b' + // IPA Extensions\n  '\\\\u02bb' + // Hawaiian\n  '\\\\u0300-\\\\u036f' + // Combining diacritics\n  '\\\\u1e00-\\\\u1eff' + // Latin Extended Additional (mostly for Vietnamese)\n  '\\\\u0400-\\\\u04ff\\\\u0500-\\\\u0527' + // Cyrillic\n  '\\\\u2de0-\\\\u2dff\\\\ua640-\\\\ua69f' + // Cyrillic Extended A/B\n  '\\\\u0591-\\\\u05bf\\\\u05c1-\\\\u05c2\\\\u05c4-\\\\u05c5\\\\u05c7' +\n  '\\\\u05d0-\\\\u05ea\\\\u05f0-\\\\u05f4' + // Hebrew\n  '\\\\ufb1d-\\\\ufb28\\\\ufb2a-\\\\ufb36\\\\ufb38-\\\\ufb3c\\\\ufb3e\\\\ufb40-\\\\ufb41' +\n  '\\\\ufb43-\\\\ufb44\\\\ufb46-\\\\ufb4f' + // Hebrew Pres. Forms\n  '\\\\u0610-\\\\u061a\\\\u0620-\\\\u065f\\\\u066e-\\\\u06d3\\\\u06d5-\\\\u06dc' +\n  '\\\\u06de-\\\\u06e8\\\\u06ea-\\\\u06ef\\\\u06fa-\\\\u06fc\\\\u06ff' + // Arabic\n  '\\\\u0750-\\\\u077f\\\\u08a0\\\\u08a2-\\\\u08ac\\\\u08e4-\\\\u08fe' + // Arabic Supplement and Extended A\n  '\\\\ufb50-\\\\ufbb1\\\\ufbd3-\\\\ufd3d\\\\ufd50-\\\\ufd8f\\\\ufd92-\\\\ufdc7\\\\ufdf0-\\\\ufdfb' + // Pres. Forms A\n  '\\\\ufe70-\\\\ufe74\\\\ufe76-\\\\ufefc' + // Pres. Forms B\n  '\\\\u200c' + // Zero-Width Non-Joiner\n  '\\\\u0e01-\\\\u0e3a\\\\u0e40-\\\\u0e4e' + // Thai\n  '\\\\u1100-\\\\u11ff\\\\u3130-\\\\u3185\\\\uA960-\\\\uA97F\\\\uAC00-\\\\uD7AF\\\\uD7B0-\\\\uD7FF' + // Hangul (Korean)\n  '\\\\u3003\\\\u3005\\\\u303b' + // Kanji/Han iteration marks\n  '\\\\uff21-\\\\uff3a\\\\uff41-\\\\uff5a' + // full width Alphabet\n  '\\\\uff66-\\\\uff9f' + // half width Katakana\n  '\\\\uffa1-\\\\uffdc'; // half width Hangul (Korean)\nexport const ALPHA_NUMERIC_REG_EXP = '0-9\\_' + ALPHA_CHARS_REG_EXP;\nexport const DOMAIN_ADD_CHARS = '\\u00b7';\n// Based on Regular Expression for URL validation by Diego Perini\nexport const URL_ALPHANUMERIC_REG_EXP_PART = '[' + ALPHA_CHARS_REG_EXP + '0-9]';\nexport const URL_PROTOCOL_REG_EXP_PART = '((?:https?|ftp)://|mailto:)?';\nexport const URL_REG_EXP = URL_PROTOCOL_REG_EXP_PART +\n  // user:pass authentication\n  '(?:' + URL_ALPHANUMERIC_REG_EXP_PART + '{1,64}(?::' + URL_ALPHANUMERIC_REG_EXP_PART + '{0,64})?@)?' +\n  '(?:' +\n  // sindresorhus/ip-regexp\n  '(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(?:\\\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])){3}' +\n  '|' +\n  // host name\n  URL_ALPHANUMERIC_REG_EXP_PART + '[' + ALPHA_CHARS_REG_EXP + DOMAIN_ADD_CHARS + '0-9\\-]{0,64}' +\n  // domain name\n  '(?:\\\\.' + URL_ALPHANUMERIC_REG_EXP_PART + '[' + ALPHA_CHARS_REG_EXP + DOMAIN_ADD_CHARS + '0-9\\-]{0,64}){0,10}' +\n  // TLD identifier\n  '(?:\\\\.(xn--[0-9a-z]{2,16}|[' + ALPHA_CHARS_REG_EXP + ']{2,24}))' +\n  ')' +\n  // port number\n  '(?::\\\\d{2,5})?' +\n  // resource path\n  '(?:/(?:\\\\S{0,255}[^\\\\s.;,(\\\\[\\\\]{}<>\"\\'])?)?';\nexport const URL_PROTOCOL_REG_EXP = new RegExp('^' + URL_PROTOCOL_REG_EXP_PART.slice(0, -1), 'i');\nexport const URL_ANY_PROTOCOL_REG_EXP = /^((?:[^\\/]+?):\\/\\/|mailto:)/;\nexport const USERNAME_REG_EXP = '[a-zA-Z\\\\d_]{5,32}';\nexport const TIMESTAMP_REG_EXP = '(?:\\\\s|^)((?:\\\\d{1,2}:)?(?:[0-5]?[0-9]):(?:[0-5][0-9]))(?:\\\\s|$)';\nexport const BOT_COMMAND_REG_EXP = '\\\\/([a-zA-Z\\\\d_]{1,32})(?:@(' + USERNAME_REG_EXP + '))?(\\\\b|$)';\nexport const FULL_REG_EXP = new RegExp('(^| )(@)(' + USERNAME_REG_EXP + ')|(' + URL_REG_EXP + ')|(\\\\n)|(' + emojiRegExp + ')|(^|[\\\\s\\\\(\\\\]])(#[' + ALPHA_NUMERIC_REG_EXP + ']{2,64})|(^|\\\\s)' + BOT_COMMAND_REG_EXP + '|' + TIMESTAMP_REG_EXP + '', 'i');\nexport const EMAIL_REG_EXP = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n// const markdownTestRegExp = /[`_*@~]/;\nexport const MARKDOWN_REG_EXP = /(^|\\s|\\n)(````?)([\\s\\S]+?)(````?)([\\s\\n\\.,:?!;]|$)|(^|\\s|\\x01)(`|~~|\\*\\*|__|_-_|\\|\\|)([^\\n]+?)\\7([\\x01\\s\\.,:?!;]|$)|@(\\d+)\\s*\\((.+?)\\)|(\\[(.+?)\\]\\((.+?)\\))/m;\nexport const SITE_HASHTAGS: {[siteName: string]: string} = {\n  'Telegram': 'tg://search_hashtag?hashtag={1}',\n  'Twitter': 'https://twitter.com/hashtag/{1}',\n  'Instagram': 'https://instagram.com/explore/tags/{1}/',\n  'Google Plus': 'https://plus.google.com/explore/{1}'\n};\n\n// export const SITE_MENTIONS: {[siteName in 'Telegram' | 'Twitter' | 'Instagram' | 'GitHub']: string} = {\n//   Telegram: '#{1}',\n//   Twitter: 'https://twitter.com/{1}',\n//   Instagram: 'https://instagram.com/{1}/',\n//   GitHub: 'https://github.com/{1}'\n// };\n\nexport const MARKDOWN_ENTITIES: {[markdown: string]: MessageEntity['_']} = {\n  '`': 'messageEntityCode',\n  '``': 'messageEntityPre',\n  '**': 'messageEntityBold',\n  '__': 'messageEntityItalic',\n  '~~': 'messageEntityStrike',\n  '_-_': 'messageEntityUnderline',\n  '||': 'messageEntitySpoiler'\n};\n\nexport const MARKDOWN_ENTITIES_TYPES = new Set(Object.values(MARKDOWN_ENTITIES));\n\nexport const PASS_CONFLICTING_ENTITIES: Set<MessageEntity['_']> = new Set([\n  'messageEntityEmoji',\n  'messageEntityLinebreak',\n  'messageEntityCaret'\n]);\nexport const PASS_SINGLE_CONFLICTING_ENTITIES = new Set(PASS_CONFLICTING_ENTITIES);\nfor(const i in MARKDOWN_ENTITIES) {\n  PASS_CONFLICTING_ENTITIES.add(MARKDOWN_ENTITIES[i]);\n}\n\nexport const PHONE_NUMBER_REG_EXP = /^\\+\\d+$/;\n\n/* export function parseEmojis(text: string) {\n  return text.replace(/:([a-z0-9\\-\\+\\*_]+?):/gi, function (all, shortcut) {\n    var emojiCode = EmojiHelper.shortcuts[shortcut]\n    if (emojiCode !== undefined) {\n      return EmojiHelper.emojis[emojiCode][0]\n    }\n    return all\n  })\n} */\n\n\n/* export function replaceUrlEncodings(urlWithEncoded: string) {\n  return urlWithEncoded.replace(/(%[A-Z\\d]{2})+/g, (str) => {\n    try {\n      return decodeURIComponent(str);\n    } catch (e) {\n      return str;\n    }\n  });\n} */\n","// https://github.com/twitter/twemoji-parser/blob/master/src/lib/regex.js\n\nexport function encodeEmoji(emojiText: string) {\n  const codepoints = toCodePoints(removeVS16s(emojiText)).join('-');\n  return codepoints;\n}\n\nconst vs16RegExp = /\\uFE0F/g;\n// avoid using a string literal like '\\u200D' here because minifiers expand it inline\nconst zeroWidthJoiner = String.fromCharCode(0x200d);\n\nconst removeVS16s = (rawEmoji: string) => (rawEmoji.indexOf(zeroWidthJoiner) < 0 ? rawEmoji.replace(vs16RegExp, '') : rawEmoji);\n\nexport function toCodePoints(unicodeSurrogates: string): Array<string> {\n  const points = [];\n  let char = 0;\n  let previous = 0;\n  let i = 0;\n  while(i < unicodeSurrogates.length) {\n    char = unicodeSurrogates.charCodeAt(i++);\n    if(previous) {\n      points.push((0x10000 + ((previous - 0xd800) << 10) + (char - 0xdc00)).toString(16));\n      previous = 0;\n    } else if(char > 0xd800 && char <= 0xdbff) {\n      previous = char;\n    } else {\n      points.push(char.toString(16));\n    }\n  }\n\n  if(points.length && points[0].length === 2) {\n    points[0] = '00' + points[0];\n  }\n\n  return points;\n}\n\nexport function getEmojiToneIndex(input: string) {\n  const match = input.match(/[\\uDFFB-\\uDFFF]/);\n  return match ? 5 - (57343 - match[0].charCodeAt(0)) : 0;\n}\n\nconst VIRTUAL_COUNTRIES_EMOJIS: Map<string, string> = new Map([\n  ['FT', '🏴‍☠']\n]);\n\nexport function getCountryEmoji(iso2: string) {\n  return VIRTUAL_COUNTRIES_EMOJIS.get(iso2) ??\n    String.fromCharCode(55356, 56741 + iso2.charCodeAt(0), 55356, 56741 + iso2.charCodeAt(1));\n}\n\nexport function emojiFromCodePoints(codePoints: string) {\n  return codePoints.split('-').reduce((prev, curr) => prev + String.fromCodePoint(parseInt(curr, 16)), '');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [699,211,41,85,116], () => (__webpack_require__(5869)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames not based on template\n\tif (chunkId === 85) return \"85.887945ef5f43bc205112.bundle.js\";\n\tif (chunkId === 116) return \"116.693aa1ba2a8af3e38d46.bundle.js\";\n\t// return url for filenames based on template\n\treturn \"\" + ({\"211\":\"npm.big-integer\",\"699\":\"npm.pako\"}[chunkId] || chunkId) + \".\" + {\"8\":\"93d2f33af815eb0455aa\",\"41\":\"83c36e3548aa9e7591e3\",\"104\":\"45250b69db45c6c9da15\",\"211\":\"363d763daad0ee4e2741\",\"301\":\"95838a8203f23dd1ce8f\",\"642\":\"be93122d1116ecdc9322\",\"699\":\"89deb457201f16c93925\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","(() => {\n  if (typeof __webpack_require__ !== 'undefined') {\n    var oldGetScript = __webpack_require__.u;\n    var oldLoadScript = __webpack_require__.e;\n    var queryMap = {};\n    var countMap = {};\n    var getRetryDelay = function () {\n      return 3000;\n    };\n    __webpack_require__.u = function (chunkId) {\n      var result = oldGetScript(chunkId);\n      return (\n        result +\n        (queryMap.hasOwnProperty(chunkId) ? '?' + queryMap[chunkId] : '')\n      );\n    };\n    __webpack_require__.e = function (chunkId) {\n      var result = oldLoadScript(chunkId);\n      return result.catch(function (error) {\n        var retries = countMap.hasOwnProperty(chunkId)\n          ? countMap[chunkId]\n          : 999999;\n        if (retries < 1) {\n          var realSrc = oldGetScript(chunkId);\n          error.message =\n            'Loading chunk ' +\n            chunkId +\n            ' failed after 999999 retries.\\n(' +\n            realSrc +\n            ')';\n          error.request = realSrc;\n          throw error;\n        }\n        return new Promise(function (resolve) {\n          var retryAttempt = 999999 - retries + 1;\n          setTimeout(function () {\n            var retryAttemptString = '&retry-attempt=' + retryAttempt;\n            var cacheBust = (function () {\n              return Date.now();\n            })();\n            +retryAttemptString;\n            queryMap[chunkId] = cacheBust;\n            countMap[chunkId] = retries - 1;\n            resolve(__webpack_require__.e(chunkId));\n          }, getRetryDelay(retryAttempt));\n        });\n      });\n    };\n  }\n})();\n","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t678: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = this[\"webpackChunktweb\"] = this[\"webpackChunktweb\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","next","DEBUG","MOUNT_CLASS_TO","window","self","EmojiVersions","Emoji","version","Object","assign","USER_AGENT","navigator","userAgent","IS_SAFARI","search","toLowerCase","indexOf","test","vendor","platform","maxTouchPoints","match","IS_FIREFOX","undefined","badCharsRe","trimRe","C2L","cleanSearchText","text","latinize","processSearchText","clearBadChars","ignoreCase","options","hasTag","includeTag","charAt","originalText","replace","clearBadCharsAndTrim","ch","latinizeCh","latinizeString","fixCyrillic","FILENAME_JOINER","getFileNameByLocation","location","ext","length","str","_","id","thumb_size","filter","Boolean","join","photo_id","pFlags","big","stickerset","short_name","emoticon","thumb_version","volume_id","local_id","url","geoPoint","geo_point","lat","long","w","h","zoom","scale","console","error","downloadId","getFileURL","type","encodeURIComponent","JSON","stringify","platforms","Set","ignore","getRestrictionReason","reasons","find","reason","has","isRestricted","ignoreRestrictionReasons","clear","forEach","add","getPeerId","peerId","isPeerId","userId","user_id","toPeerId","chatId","channel_id","chat_id","isUser","peerParams","substr","split","IDB","constructor","db","this","name","storageIsAvailable","log","openDatabase","INSTANCES","push","isAvailable","createNew","openDbPromise","createIndexes","os","store","indexNames","Array","from","indexName","deleteIndex","indexes","index","contains","createIndex","keyPath","objectParameters","request","indexedDB","open","Promise","reject","message","finished","setTimeout","onerror","resolve","onsuccess","event","result","calledNew","onclose","e","onabort","transaction","target","close","onversionchange","onupgradeneeded","warn","oldVersion","newVersion","stores","objectStoreNames","objectStore","createObjectStore","static","instance","preserve","storage","IDBStorage","storeName","idb","create","delete","entryName","isArray","concat","getObjectStore","promises","map","save","value","idx","put","get","mode","callback","perf","performance","now","then","onError","clearTimeout","timeout","onComplete","results","requests","r","waitForTransactionComplete","oncomplete","callbackResult","left","onRequestFinished","i","getAll","environment","getEnvironment","setEnvironment","env","RootScope","super","myId","connectionStatus","premium","addEventListener","isNew","isPremium","dispatchEventSingle","status","dispatchEvent","args","invokeVoid","settings","getConnectionStatus","getPremium","state","stateStorage","getState","setByKey","key","object","splitted","getDeepProperty","slice","pop","setDeepProperty","first","pushToState","direct","onlyLocal","setKeyValueToStorage","set","MAIN_DOMAINS","threads","Math","min","hardwareConcurrency","App","hash","versionFull","build","langPackVersion","langPack","langPackCode","domains","baseDcId","isMainDomain","includes","hostname","suffix","cryptoWorkers","HTTP","dcId","logSuffix","pending","debug","logTypes","Log","logger","connected","_send","body","fetch","method","response","arrayBuffer","buffer","TextDecoder","decode","Uint8Array","setConnected","err","destroyed","destroy","send","networker","promise","releasePending","releasing","splice","pause","Socket","handleOpen","handleError","handleClose","removeListeners","handleMessage","data","byteLength","ws","connect","removeEventListener","WebSocket","binaryType","randomize","arr","crypto","Error","getRandomValues","Obfuscation","_process","operation","cryptoMessagePort","transfer","init","codec","idPromise","release","initPayload","val","val2","reversedPayload","reverse","encKey","encIv","decKey","decIv","process","obfuscateTag","encrypted","encode","payload","tag","encodePacket","len","header","readPacket","bytesToHex","bytes","toString","TcpObfuscated","Connection","retryTimeout","abridged","obfuscation","autoReconnect","onOpen","connection","setConnectionStatus","cleanupSent","resend","onMessage","parseResponse","processMessage","messageId","sessionId","catch","shift","onClose","needTimeout","retryAt","time","Date","diff","lastCloseTime","isNaN","reconnectTimeout","ctx","reconnect","bodySent","forceReconnect","setAutoReconnect","once","enable","changeUrl","encodeBody","toEncode","encoded","releasingPending","sent","TEST_SUFFIX","getTelegramConnectionSuffix","connectionType","constructTelegramWebSocketUrl","path","DcConfigurator","sslSubdomains","dcOptions","host","port","chosenServers","transportSocket","chosenServer","oooohLetMeLive","transportHTTP","dcOption","chooseServer","transportType","reuse","hasOwnProperty","client","download","upload","servers","transports","transport","obj","indexOfAndSplice","MTTransportController","opened","Map","waitForWebSocket","pingTransports","dcConfigurator","https","websocket","httpPromise","websocketPromise","socket","isFulfilled","isRejected","isHttpAvailable","isWebSocketAvailable","all","pinging","setTransportValue","setTransportOpened","setTransportClosed","AppManager","setManagers","managers","loadStorages","storages","recordPromise","storagesKeys","keys","storagesPromises","storagesResults","resetStorages","size","clearPromises","noop","loadStoragesInner","AppStoragesManager","names","createStorages","loadStorage","PasswordManager","apiManager","invokeApi","updateSettings","currentHashPromise","newHashPromise","params","password","new_settings","hint","email","currentPassword","cryptoWorker","invokeCrypto","newAlgo","new_algo","salt1","newPassword","hashes","new_password_hash","getInputCheckPassword","check","inputCheckPassword","auth","setUser","user","confirmPasswordEmail","code","resendPasswordEmail","cancelPasswordEmail","ReferenceDatabase","contexts","links","saveContext","reference","context","getContexts","_context","deepEqual","getReferenceByLink","getContext","values","deleteContext","refreshReference","c","appMessagesManager","reloadMessages","refreshEmojiesSoundsPromise","appStickersManager","getAnimatedEmojiSounds","appProfileManager","getProfile","appEmojiManager","getCustomEmojiDocuments","docId","appAttachMenuBotsManager","getAttachMenuBot","botId","appThemesManager","getWallPaperById","wallPaperId","hex","newHex","newContext","makeError","safeReplaceObject","wasObject","newObject","getServerMessageId","clearMessageId","getPeerIdsFromMessage","peerIds","fromId","viaBotId","fwdFromId","media","contactUserId","recentVoters","recent_voters","recentReactions","recent_reactions","reaction","peer_id","action","userIds","users","inviter_id","chatIds","recentRepliers","recent_repliers","reply","setDialogIndex","dialog","indexKey","GLOBAL_FOLDER_ID","DialogsStorage","allDialogsLoaded","pinnedOrders","folderId","saveAllDialogsLoaded","resetPinnedOrder","savePinnedOrders","forumTopics","folders","dialogsOffsetDate","dialogsNum","dialogsIndex","cachedResults","query","count","dialogs","onUpdateFolderPeers","update","folder_peers","folderPeer","folder_id","peer","appPeersManager","dropDialog","pinned","handleDialogUnpinning","generateIndexForDialog","pushDialog","scheduleHandleNewDialogs","onUpdateDialogPinned","getDialogOnly","handleDialogTogglePinned","onUpdateChannelPinnedTopic","channelId","topicId","appMessagesIdsManager","generateMessageId","topic_id","topic","getForumTopic","getFilterIdForForum","onUpdatePinnedDialogs","order","handleDialogsPinned","dialogsResult","applyDialogs","d","onUpdateChannelPinnedTopics","filterId","limit","getLimit","channel","appChatsManager","getChannelInput","offset_date","offset_id","offset_topic","processTopics","topics","after","onFilterUpdate","getCachedDialogs","processDialogForFilter","rootScope","processDialogForFilters","getDialogIndexKeyByFilterId","processChangedUnreadOrUnmuted","chat","getChat","dropDialogOnDeletion","enabled","flushForumTopicsCache","apiUpdatesManager","addMultipleEventsListeners","updateFolderPeers","updateDialogPinned","updateChannelPinnedTopic","updatePinnedDialogs","updateChannelPinnedTopics","appStateManager","appStoragesManager","getCache","_order","getPinnedOrders","setDialogsFromState","bind","appDraftsManager","addMissedDialogs","indexMyDialog","appUsersManager","getSelf","peerText","getPeerSearchText","indexObject","top_message","topMessage","saveMessages","saveDialog","ignoreOffsetDate","getMessageByPeer","reloadConversation","isDialogsLoaded","setDialogsLoaded","loaded","isForum","isFilterIdForForum","defineNotNumerableProperties","every","orders","isDialogPinned","filtersStorage","getFilter","isPinned","pinnedPeerIds","getOffsetDate","offsetDate","sort","a","b","generateFolder","folder","unreadMessagesCount","unreadPeerIds","unreadUnmutedPeerIds","getFolder","forumTopic","getDialogKey","isTopic","getFolderDialogs","skipMigrated","hidden","migratedTo","getNextDialog","currentPeerId","findIndex","getDialogIndexKey","localId","isDialogUnmuted","appNotificationsManager","isPeerLocalMuted","respectType","threadId","getFolderUnreadCount","unreadUnmutedCount","unreadCount","arrays","setDialogIndexInFilter","isRealFolder","testDialogForFilter","pinnedIds","pinnedKey","pinnedIndex","generateDialogIndex","generateDialogPinnedDateByIndex","getDialogIndex","getDialog","verify","skipped","getDialogOrTopic","isObject","date","tsNow","timeManager","getServerTimeOffset","noIndex","filters","getFilters","cmp","wasIndex","wasDialog","wasDialogIndex","newDialogIndex","prepareFolderUnreadCountModifyingByDialog","insertInDescendSortedArray","prepareDialogUnreadCountModifying","toggle","callbacks","wasUnreadCount","getDialogUnreadCount","wasUnmuted","newUnreadCount","newUnmuted","addMessagesCount","modifyFolderUnreadCount","toggleDialog","toggleUnmuted","forumUnreadCount","getForumUnreadCount","hasUnmuted","some","max","dispatchUnreadTimeout","_folder","justReturn","noPinnedOrderUpdate","topDate","generateDialogPinnedDate","isChannel","toChatId","draft","dialogKey","unshift","setDialogToState","pts","historyStorage","getHistoryStorage","messagesStorage","getHistoryMessagesStorage","history","incomingMessage","mid","getMessageFromStorage","is_outgoing","peersStorage","requestPeersForKey","isAnyChat","newPts","getChannelState","requestPeer","saveGlobalOffset","getForumTopicsCache","getDialogOffsetDate","savedGlobalOffsetDate","savedOffsetDate","dropDialogFromFolders","foundDialog","wasPinned","keepLocal","clearDialogFromState","releasePeer","dropDialogWithEvent","dropped","items","forEachReverse","assumeType","saveApiUsers","saveApiChats","chats","messages","updatedDialogs","topMid","topPendingMid","pendingTopMsgs","topPendingMessage","maxId","cache","getUpdateCache","getUpdateAfterReloadKey","updates","newUpdatesAfterReloadToHandle","saveUpdate","canSaveDialogByPeerId","isDialog","migrated_to","deactivated","migratedToPeer","migratedFromTo","migratedToFrom","wasDialogBefore","wasTopMessage","generateTempMessageId","from_id","getOutputPeer","deleted","out","isOutgoing","read_inbox_max_id","read_outbox_max_id","saveDraft","isOut","unread","unread_count","isEnd","insertSlice","setEnd","mergeReplyKeyboard","readMaxId","readOutboxMaxId","savePeerSettings","notify_settings","addChannelState","releaseUnreadCount","dialogsStorage","processTopicUpdate","oldTopic","isIconChanged","icon_emoji_id","isTitleChanged","title","isChanged","getDialogs","offsetIndex","fillContactsResult","fillContacts","cached","reloadMissingDialogsPromise","reloadMissingPeerIds","realFolderId","curDialogStorage","d1","d2","offset","loadedAll","isEnoughDialogs","isTopEnd","getTopMessages","markFolderAsRead","markDialogUnread","deletedTopics","getTopicPromises","getForumTopicById","getTopicsPromise","ids","fullfillLeft","messagesForumTopics","getForumTopicOrReload","callbackify","processTopicsPromise","f","reduce","acc","v","newPinned","convertment","PREPENDED_FILTERS","LOCAL_FILTER","exclude_peers","include_peers","pinned_peers","excludePeerIds","includePeerIds","FiltersStorage","filtersArr","reloadedPeerIds","localFilters","generateLocalFilter","clearFilters","onUpdateDialogFilter","saveDialogFilter","findAndSplice","onUpdateDialogFilters","oldFilters","copy","getDialogFilters","_filterId","onUpdateDialogFilterOrder","setLocalId","updateDialogFilter","updateDialogFilters","updateDialogFilterOrder","prependFilters","allChatsFilter","archiveFilter","allChatsFilterIndex","exclude_archived","exclude_unarchived","exclude_read","isDialogUnread","exclude_muted","unread_mentions_count","broadcasts","isBroadcast","groups","isAnyGroup","toUserId","isBot","bots","non_contacts","isContact","contacts","testDialogForFilterId","toggleDialogPin","getInputPeerById","createDialogFilter","prepend","remove","getOutputDialogFilter","updateDialogFiltersOrder","filterIncludedPinnedPeers","peers","reloadDialogs","inputPeer","isAlreadyReloaded","reloadPromises","missingPeerIds","overwrite","invokeApiSingle","getSuggestedDialogsFilters","silent","to","arrayFrom","oldFilter","_filter","isFilterIdAvailable","getChatlistInput","filter_id","exportChatlistInvite","invokeApiSingleProcess","chatlist","processResult","exportedChatlistInvite","deleteExportedInvite","slug","editExportedInvite","getExportedInvites","exportedInvites","invites","checkChatlistInvite","chatlistInvite","joinChatlistInvite","processUpdateMessage","getChatlistUpdates","chatlistUpdates","updatedTime","joinChatlistUpdates","hideChatlistUpdates","getLeaveChatlistSuggestions","leaveChatlist","applyMixins","derivedCtor","constructors","baseCtor","getOwnPropertyNames","prototype","getOwnPropertyDescriptor","defineProperty","ApiUpdatesManager","updatesState","pendingPtsUpdates","pendingSeqUpdates","syncPending","syncLoading","channelStates","attached","subscriptions","updateMessage","processOpts","seq","seqStart","seq_start","forceGetDifference","processUpdate","toId","fwd_from","reply_to","entities","pts_count","override","_constructor","setProxy","Proxy","saveUpdatesState","us","popPendingSeqUpdate","nextSeq","pendingUpdatesData","seqAwaiting","ptsAwaiting","clearStatePendingSync","popPendingPtsUpdate","curState","curPts","goodPts","goodIndex","getDifference","processLocalUpdate","wasSyncing","pts_total_limit","qts","differenceResult","other_updates","new_messages","apiMessage","nextState","intermediate_state","onDifferenceTooLong","justAName","getChannelDifference","channelState","bindPrefix","lastDifferenceTime","final","lastPtsUpdateTime","fwdHeader","hasUser","post","hasChat","popPts","popSeq","subscribeToChannelUpdates","subscription","cb","interval","unsubscribeFromChannelUpdates","force","clearInterval","attach","langCode","noErrorBox","stateResult","setUpdatesProcessor","strs","en","ru","getChangelog","lang","res","ok","langStr","parseMarkdown","inbox_date","languages","filterUnique","language","AppAvatarsManager","savedAvatarURLs","removeFromAvatarsCache","isAvatarCached","saved","loadAvatar","photo","peerPhotoFileLocation","downloadOptions","dc_id","limitPart","apiFileManager","blob","URL","createObjectURL","AppCallsManager","calls","IS_CALL_SUPPORTED","updatePhoneCall","saveCall","phone_call","updatePhoneCallSignalingData","callId","phone_call_id","computeKey","g_b","p","call","isDiscarded","oldCall","getCall","getCallInput","access_hash","savePhonePhoneCall","phonePhoneCall","generateDh","random_length","dhConfig","requestCall","protocol","g_a_hash","video","getUserInput","random_id","discardCall","duration","connection_id","AppChatsManager","isPeerNeeded","modifyUsernamesCache","onChatUpdated","onUpdateChannelParticipant","clearCache","onUpdateChatDefaultBannedRights","default_banned_rights","updateChannelParticipant","updateChatDefaultBannedRights","getFromCache","apiChats","saveApiChat","oldChat","participants_count","changedUsername","setUsernameToCache","oldPhotoId","newPhotoId","toggledForum","forum","changedPhoto","changedTitle","changedAnyBadge","verified","scam","fake","hasRights","rights","isThread","editChatDefaultBannedRights","banned_rights","until_date","isMegagroup","megagroup","isInChat","good","getInputPeer","getChannelInputPeer","getChatInputPeer","allowMin","getChatString","createChannel","inviteToChannel","input","usersInputs","u","createChat","leaveChannel","joinChannel","addChatUser","fwdLimit","fwd_limit","deleteChatUser","leaveChat","leave","deleteChannel","deleteChat","migrateChat","updateUsername","username","doNotRefresh","refreshChatAfterRequest","editPhoto","inputFile","inputChatPhoto","file","editTitle","editAbout","about","bool","editBanned","participant","getParticipantPeerId","wasChannel","timestamp","actor_id","prev_participant","new_participant","kicked_by","clearChannelParticipantBannedRights","kickFromChannel","view_messages","kickFromChat","resolveChannel","messagesChats","togglePreHistoryHidden","toggleSignatures","toggleNoForwards","setChatAvailableReactions","reactions","chatFull","getCachedFullChat","available_reactions","getSendAs","sendAsPeers","importChatInvite","checkUsername","getSponsoredMessage","invokeApiCacheable","cacheSeconds","sponsoredMessages","sponsoredMessage","channel_post","viewSponsoredMessage","randomId","checkChatInvite","chatInvite","deactivateAllUsernames","makeChannelPrivate","getChannels","toggleForum","editForumTopic","iconEmojiId","closed","createForumTopic","iconColor","channelFull","getChannelFull","sendAsInputPeer","default_send_as","icon_color","send_as","updatePinnedForumTopic","wrapUrl","unsafe","matchUrlProtocol","tgMeMatch","telescoPeMatch","tgMatch","onclick","prefix","pathname","fullPath","I18n","pluralRules","cacheLangPackPromise","setLangCode","lastRequestedLangCode","lastRequestedNormalizedLangCode","updateAmPm","timeFormat","dateTimeFormat","getDateTimeFormat","hour","minute","hour12","setHours","amText","format","amPmCache","am","pmText","pm","loadLocalLangPack","defaultCode","langSign","countries","strings","formatLocalStrings","default","saveLangPack","from_version","lang_code","local","loadLangPack","web","requestedServerLanguage","lang_pack","polyfillPromise","pushTo","appVersion","applyLangPack","currentLangCode","Intl","PluralRules","string","countriesList","country","langPackKey","default_name","lastAppliedLangCode","cachedDateTimeFormats","document","querySelectorAll","element","weakMap","superFormatter","indexHolder","lastIndex","p1","p2","p3","p4","createElement","append","lastIndexOf","wrappedUrl","href","setAttribute","DocumentFragment","firstChild","textContent","formatted","arg","pushNextArgument","plain","select","item","Node","isRTL","setRTL","rtl","getCacheLangPack","finally","setTimeFormat","haveToUpdate","IntlDateElement","getStrings","getLangPack","langPack1","langPack2","localLangPack1","localLangPack2","l","_Intl","WeakMap","IntlElementBase","classList","property","IntlElement","safeAssign","dataset","compareAndUpdate","json","DateTimeFormat","hours","getHours","getMinutes","i18n","i18n_","_i18n","months","monthsLocalized","daysLocalized","getWeekNumber","UTC","getFullYear","getMonth","getDate","dayNum","getUTCDay","setUTCDate","getUTCDate","yearStart","getUTCFullYear","ceil","getTime","today","year","day","month","weekday","minYear","yearPattern","RegExp","anyLetterRegExp","monthPattern","monthYearOrDayPattern","yearOrDayAndMonthPattern","shortDate","longDate","numberOfDaysEachMonth","createForMonthYear","dates","selectedYear","currentYear","setFullYear","minDate","setMonth","maxDate","formatterMonthYear","createForDayMonth","validDateForMonth","formatterDayMonth","formatterYearMax","formatWeekLong","getDay","q","safeReplaceArrayInObject","trim","haystack","dayOfWeek","setDate","getDayOfWeek","distance","setTime","matches","exec","g1","g2","k","g3","parseInt","k1","EXTENSION_MIME_TYPE_MAP","pdf","tgv","tgs","wav","mp3","ogg","jpeg","jpg","png","gif","webp","mp4","webm","mov","svg","MIME_TYPE_EXTENSION_MAP","uploadWallPaperTempId","AppDocsManager","onServiceWorkerFail","docs","doc","supportsStreaming","thumbsStorage","deleteCacheContext","stickerCachedThumbs","uploadingWallPapers","online","saveDoc","oldDoc","file_reference","referenceDatabase","attributes","attribute","file_name","wrapPlainText","voice","mime_type","round_message","alt","stickerEmojiRaw","stickerSetInput","thumbs","IS_WEBP_SUPPORTED","sticker","IS_WEBM_SUPPORTED","animated","mappedMimeType","joiner","monthAsNumber","noSeconds","getSeconds","leadingZero","noTime","getFullDate","isServiceWorkerOnline","getCacheContext","setCacheContextURL","thumb","getDocumentDownloadOptions","getDocumentURL","getDoc","downloadDoc","queueId","onlyCache","downloadMedia","getLottieCachedThumb","toneIndex","saveLottiePreview","width","height","clearColoredStickerThumbs","revokeObjectURL","saveWebPConvertedStrippedThumb","stickerThumbConverted","prepareWallPaperUpload","cacheContext","wallpaper","uploadWallPaper","fileName","wallPaper","downloaded","getGifs","invokeApiHashable","gifs","requestDocPart","requestFilePart","getDocumentInputFileLocation","AppDraftsManager","drafts","updateDraftMessage","notify","getKey","getDraft","getAllDrafts","getAllDraftPromise","apiDraft","processApiDraft","isEmptyDraft","reply_to_msg_id","syncDraft","localDraft","saveOnServer","serverDraft","draftsAreEqual","draftObj","getInputEntities","no_webpage","top_msg_id","saveLocalDraft","clearAllDrafts","combined","clearDraft","emptyDraft","setDraft","EMOJI_LANG_PACK","keywords","AppEmojiManager","keywordLangPacks","indexedLangPacks","getKeywordsPromises","recent","getRecentEmojisPromises","getCustomEmojiDocumentPromises","getEmojiKeywords","storageKey","pack","validateInitObject","keywordsDifference","packKeywords","keyword","emoticons","getBothEmojiKeywords","networkerFactory","native","getRecentEmojis","indexEmojis","searchEmojis","emojis","POPULAR_EMOJI","recentEmoji","recentCustomEmoji","pushRecentEmoji","emoji","fixEmoji","docIds","document_id","documents","appDocsManager","getCachedCustomEmojiDocuments","setDebouncedGetCustomEmojiDocuments","getCustomEmojiDocumentsPromise","allIds","getCustomEmojiDocument","getCustomEmojis","getEmojiStickers","AppGroupCallsManager","groupCalls","participants","nextOffsets","updateGroupCall","saveGroupCall","updateGroupCallParticipants","groupCallId","saveApiParticipants","groupCall","getCachedParticipants","prepareToSavingNextOffset","nextOffsetsMap","nextOffset","setNextOffset","newNextOffset","saveApiParticipant","skipCounterUpdating","oldParticipant","hasLeft","muted","can_self_unmute","getGroupCall","modified","just_joined","apiParticipants","editParticipant","getGroupCallInput","getInputPeerSelf","volume","raise_hand","raiseHand","video_paused","videoPaused","video_stopped","videoStopped","presentation_paused","presentationPaused","getGroupCallFull","participants_next_offset","shouldUpdate","createGroupCall","scheduleDate","schedule_date","getGroupCallParticipants","sources","groupCallParticipants","next_offset","hangUp","discard","groupCallInput","source","join_as","joinGroupCall","isMuted","joinVideo","leaveGroupCallPresentation","getPhotoInput","getPhotoMediaInput","ttl_seconds","getMediaInput","AppInlineBotsManager","inlineResults","setHash","getGeoInput","geo","accuracy_radius","getInlineResults","bot","stopTime","botResults","queryId","query_id","appPhotosManager","savePhoto","content","appWebDocsManager","saveWebDocument","generateQId","pushPopularBot","getTopPeers","topPeers","botPeerId","topPeer","rating","switchToPM","fromPeerId","startParam","startBot","checkSwitchReturn","getUser","bot_inline_placeholder","peerData","switchInlineQuery","getPeerUsername","callbackButtonClick","button","msg_id","sendInlineResult","queryAndResultIds","inlineResult","resultId","send_message","reply_markup","replyMarkup","sendText","inputMedia","messageMedia","caption","sendMessage","webDocument","address","provider","venue_id","venue_type","phone_number","first_name","last_name","vcard","description","currency","total_amount","shipping_address_requested","start_param","sendOther","AppMessagesIdsManager","toFixed","Number","isInteger","isLegacyMessageId","incrementMessageId","increment","getMessageIdInfo","splitMessageIdsByChannels","mids","_channelId","prevItem","messageIds","splitStringByLength","maxLength","lastSliceStartIndex","arrayIndex","cut","end","part","_arrayIndex","partLength","appTabsManager","tabs","start","getTabs","tab","addTab","deleteTab","getDocumentInput","setBooleanFlag","processAfter","AppMessagesManager","pendingByRandomId","pendingByMessageId","pendingAfterMsgs","tempFinalizeCallbacks","sendSmthLazyLoadQueue","needSingleMessages","extendedMedia","maxSeenId","newDialogsToHandle","notificationsToHandle","reloadConversationsPeers","groupedTempId","typings","unreadMentions","goToNextMentionPromises","batchUpdates","tempMids","middleware","clean","uploadFilePromises","messagesStorageByPeerId","groupedMessagesStorage","scheduledMessagesStorage","historiesStorage","threadsStorage","searchesStorage","pinnedMessages","threadsServiceMessagesIdsStorage","threadsToReplies","handleNewDialogs","newMaxSeenId","updateMap","processDialog","isDialogDefined","incrementMaxSeenId","handleNotifications","notificationsHandlePromise","notifyPeerToHandle","getNotifyPeerSettings","peerTypeNotifySettings","mentioned","notifyAboutMessage","fwdCount","onUpdateMessageId","pendingData","onUpdateNewMessage","getMessagePeer","isLocalThreadUpdate","createMessageStorage","threadKey","getThreadKey","handleNewUpdateAfterReload","threadStorage","reply_to_peer_id","reply_to_mid","receiptMessage","checkPendingMessage","updateMessageRepliesIfNeeded","ignoreExisting","findSlice","firstSlice","forceUserOnline","handleNewMessage","inboxUnread","modifyCachedMentions","setDialogTopMessage","notifyPeer","onUpdateMessageReactions","recentReaction","previousReactions","previousRecentReactions","show_previews","peerReaction","pushBatchUpdate","batchUpdateReactions","setDialogToStateIfMessageIsTop","onUpdateDialogUnreadMark","unread_mark","onUpdateEditMessage","oldMessage","newMessage","handleEditedMessage","isTopMessage","clear_history","dispatchEditEvent","newReactions","grouped_id","onUpdateReadHistory","max_id","read_max_id","getObjectKeysAndSort","stillUnreadCount","still_unread_count","newUnreadMentionsCount","foundAffected","repliesKey","getReadMaxIdIfUnread","messageThreadId","getMessageThreadId","setCount","threadKeyPart","onUpdateReadMessagesContents","topMsgId","findPeerIdByMids","media_unread","fixDialogUnreadMentionsIfNoMessage","onUpdateChannelAvailableMessages","availableMinId","available_min_id","onUpdateDeleteMessages","threadKeys","historyUpdated","handleDeletedMessages","threadsStorages","msgs","affected","onUpdateChannel","needDialog","getPeerActiveUsernames","onUpdateChannelReload","flushStoragesByPeerId","onUpdateChannelMessageViews","views","batchUpdateViews","onUpdateServiceNotification","popup","phone","onUpdatePinnedMessages","missingMessages","werePinned","getPinnedMessagesKey","hiddenPinnedMessages","onUpdateNotifySettings","onUpdateNewScheduledMessage","isScheduled","onUpdateDeleteScheduledMessages","onUpdateMessageExtendedMedia","extended_media","onUpdateTranscribedAudio","batch","toDispatch","getMessagesFromMap","previousResults","changedResults","reactionCount","previousReactionCount","_reactionCount","reactionsEqual","chosen_order","updateMessageID","updateNewDiscussionMessage","updateNewMessage","updateNewChannelMessage","updateDialogUnreadMark","updateEditMessage","updateEditChannelMessage","updateMessageReactions","updateReadChannelDiscussionInbox","updateReadChannelDiscussionOutbox","updateReadHistoryInbox","updateReadHistoryOutbox","updateReadChannelInbox","updateReadChannelOutbox","updateChannelReadMessagesContents","updateReadMessagesContents","updateChannelAvailableMessages","updateDeleteMessages","updateDeleteChannelMessages","updateChannel","updateChannelReload","updateChannelMessageViews","updateServiceNotification","updatePinnedMessages","updatePinnedChannelMessages","updateNotifySettings","updateNewScheduledMessage","updateDeleteScheduledMessages","updateMessageExtendedMedia","updateTranscribedAudio","filterFunc","getScheduledMessagesStorage","webpage","appWebPagesManager","getCachedWebPage","drop","poll","appPollsManager","pollToMessages","startsWith","batchUpdatesDebounced","debounce","details","maxSeenMsgId","sendEntites","entity","invokeAfterMessageIsSent","tempId","callbackName","finalize","editMessage","is_scheduled","newMedia","noWebPage","handled","transcribeAudio","transcription_id","processError","replyToMsgId","MAX_LENGTH","getConfig","message_length_max","webPage","getPeerMigratedTo","generateOutgoingMessage","toggleError","onMessagesSendError","sentRequestOptions","afterMessageId","sendAs","sendAsPeerId","apiPromise","invokeApiAfter","clear_draft","update_stickersets_order","updateStickersetOrder","wrapMessageEntities","beforeMessageSending","sequential","sendFile","attachType","apiFileName","fileType","File","isDocument","Blob","isPhoto","IMAGE_MIME_TYPES_SUPPORTED","strippedPhotoSize","strippedBytes","actionName","isVoiceMessage","waveform","isMedia","photoSize","sizes","objectURL","VIDEO_MIME_TYPES_SUPPORTED","videoAttribute","isRoundMessage","supports_streaming","noSound","thumbCacheContext","sentDeferred","spoiler","uploadingFileName","getFileNameForUpload","uploaded","uploadPromise","load","thumbUploadPromise","cancelPendingMessage","setTyping","addNotifyListener","progress","percents","floor","done","total","notifyAll","force_file","isGroupedItem","background","ret","sendAlbum","sendFileDetails","groupId","o","invoke","multiMedia","multi_media","originalInputMedia","inputSingleMedia","inputs","sendContact","contactPeerId","getContactMediaInput","noOutgoingMessage","pollId","savePoll","total_voters","getPoll","getPhoto","postAuthor","getPeer","signatures","generateFromId","post_author","generateFlags","generateReplyHeader","via_bot_id","replies","generateReplies","replyToTopId","originalMessage","forum_topic","reply_to_top_id","linked_chat_id","comments","replies_pts","isAnonymousSending","generateForwardHeader","isUserHidden","from_name","userFull","getCachedFullUser","private_forward_name","saved_from_msg_id","saved_from_peer","generateFakeAvatarMessage","MAX_SAFE_INTEGER","getUploadPromise","uploadFileName","admin_rights","anonymous","deleteMessageFromStorage","fillConversations","chatHistoryStorage","maxSeenIdIncremented","hasPrepend","noIdsDialogs","setFolderId","setMessageUnreadByDialog","folderDialogs","dialogsLength","slicedDialogs","offset_peer","offsetPeerId","forwardMessages","config","overflowMids","forwarded_count_max","dropCaptions","dropAuthor","newMids","newMessages","replyToMid","replyToMessageIdx","newReplyToMid","getStickerEffectThumb","nopremium","group","from_peer","to_peer","with_my_score","withMyScore","drop_author","drop_media_captions","generateEmptyMessage","getMessagesStorageByKey","s","getMessagesStorage","getGlobalHistoryMessagesStorage","setMessageToStorage","getMessageById","cantForwardDeleteMids","cantForward","cantDelete","canForward","canDeleteMessage","reloadConversationOrTopic","inputDialogPeer","getInputDialogPeerById","reloadConversationsPromise","inputDialogPeers","currentState","doFlushHistory","just_clear","revoke","affectedHistory","flushHistory","justClear","getHistory","offsetId","historyResult","getTypingKey","ss","globalStorage","hidePinnedMessages","getPinnedMessage","inputFilter","getPinnedMessagesCount","getPinnedMessagesMaxId","updatePinnedMessage","unpin","pm_oneside","unpinAllMessages","unpinAll","getAlbumText","getGroupsFirstMessage","minMid","getMidsByAlbum","groupedId","getMessagesByAlbum","getMidsByMessage","filterMessages","tempMid","saveMessage","isMessage","replyTo","replyToChannelId","overwriting","msgId","savedFromPeerId","savedFromMid","savedFrom","mediaContext","unsupported","originalDoc","messageKey","getMessageKeyForPendingWebPage","saveWebPage","extendedMediaMedia","totalEntities","migrateFrom","migrateTo","video_sizes","appGroupCallsManager","getMigration","migrateChecks","getFirstMessageToEdit","goodMessage","myPeerId","canEditMessage","apiEntities","myEntities","parseEntities","mergeEntities","reportMessages","editPeerFolders","getDialogPeer","read","readHistory","fromChat","canMessageBeEdited","kind","goodMedias","edit_time_limit","getReplyKeyboard","messageReplyMarkup","lastReplyMarkup","selective","maxOutId","single_use","getSearchStorage","createHistoryStorage","getSearchCounters","canCache","isPeerRestricted","migration","func","legacyResult","prev","searchCounters","legacySearchCounters","searchCounter","filterMessagesByInputFilterFromStorage","_storage","filterMessagesByInputFilter","subscribeRepliesThread","getDiscussionMessage","generateThreadServiceStartMessage","maxMessageId","serviceStartMessage","is_single","getThreadServiceMessageId","getMessageWithReplies","newMaxId","unsetEnd","newDialogsHandlePromise","deleteMessagesInner","isRecursion","creator","delete_messages","serverMessageIds","affectedMessages","deleteMessages","triedToReadMaxId","readPromise","getPeerString","readAllHistory","getUnreadMentionsKey","slicedArray","fixUnreadMentionsCountIfNeeded","goToNextMention","loadNextPromise","loadNextMentions","last","getUnreadMentions","mergeHistoryResult","addOffset","add_offset","minId","min_id","messagesMessages","readMessages","msgIds","getHistoryStorageTransferable","historySerialized","toJSON","inputNotifyPeer","getInputNotifyPeerById","ignorePeerId","getNotifyPeerTypeSettings","getNotifySettings","isMessageIsTopMessage","threadMessage","broadcastEventName","pendingMessage","finalizePendingMessage","mutePeer","validatePeerSettings","muteUntil","mute_until","togglePeerMute","mute","canSendToPeer","canSendToUser","finalMessage","tempMessage","finalizePendingMessageCallbacks","newPhoto","newDoc","newPhotoSize","oldCacheContext","getPhotoDownloadOptions","thumbSize","polls","handleReleasingMessage","getMessageReactionsListAndReadParticipants","skipReadParticipants","skipReactionsList","emptyMessageReactionsList","canViewMessageReadParticipants","getMessageReadParticipants","appReactionsManager","getMessageReactionsList","readParticipantDates","messageReactionsList","filteredReadParticipants","reactionsCount","readParticipantDate","appConfig","getAppConfig","chat_read_mark_size_threshold","chat_read_mark_expire_period","incrementMessageViews","chatPeerIds","idleStartTime","getScheduledMessageByPeer","getScheduledMessages","sendScheduledMessages","deleteScheduledMessages","getMessageWithCommentReplies","isFetchIntervalNeeded","backLimit","getEnds","offsetIdOffset","haveSlice","sliceMe","fulfilled","fillHistoryStorage","offset_id_offset","nextRate","next_rate","constructSlice","isHistoryResultEnd","topWasMeantToLoad","bottomWasMeantToLoad","abs","isBottomEnd","topLoaded","bottomLoaded","isOffsetIncluded","serverOffsetId","recursion","wasMaxId","requestPeerId","isRequestingLegacy","requestHistory","mergedResult","deleteSlice","firstMessage","lastMessage","toLoad","migratedResult","migratedResultCount","offsetMessage","commonOptions","min_date","max_date","offset_rate","fetchSingleMessages","fetchSingleMessagesPromise","requestPromises","getMessagesResult","getExtendedMedia","toRequest","fetchMessageReplyTo","replyToPeerId","typing","smth","deleteWebPageFromPending","updatePollToMessage","groupedStorage","albums","dispatchAlbumEdit","deletedMids","noforwards","noForwards","getElementCallback","newMap","peerIdStr","saveDefaultSendAs","sendBotRequestedPeer","buttonId","requestedPeerId","button_id","requested_peer","convertInputKeyToKey","inputKey","AppNotificationsManager","peerSettings","notifyUsers","notifyChats","notifyBroadcasts","notifyForumTopic","checkMuteUntil","checkMuteUntilTimeout","closestMuteUntil","peerNotifySettings","typeKey","checkMuteUntilThrottled","throttle","isPeerType","notifySettings","getNotifyPeerTypePromise","getContactSignUpNotification","notifyContactsSignUp","setContactSignUpNotification","getPeerKey","getPeerMuted","getPeerLocalSettings","n","peerKey","typeNotifySettings","AppPeersManager","canPinMessage","getPeerPhoto","getUserString","isRegularUser","getRestrictionReasonText","restriction_reason","getUserInputPeer","getUserSearchText","getDialogType","getDeleteButtonText","AppPhotosManager","photos","oldPhoto","Infinity","getUserPhotos","inputUser","photosResult","photoIds","photoId","AppPollsManager","updateMessagePoll","poll_id","saveResults","chosenIndexes","answer","chosen","getInputMediaPoll","correctAnswers","solution","solutionEntities","correct_answers","solution_entities","sendVote","optionIds","answers","option","getResults","getVotes","votesList","stopPoll","newPoll","AppPrivacyManager","privacy","updatePrivacy","rules","setPrivacy","privacyRules","inputRule","rule","getPrivacy","privacyKey","getGlobalPrivacySettings","setGlobalPrivacySettings","PEER_FULL_TTL","AppProfileManager","usersFull","chatsFull","fullExpiration","onUpdateChatParticipants","onUpdateChatParticipantAdd","_participants","onUpdateChatParticipantDelete","onUpdateUserTyping","getTypingsKey","typingsInPeer","t","cancelAction","getChatFull","onUpdatePeerBlocked","blocked","updateChatParticipants","updateChatParticipantAdd","updateChatParticipantDelete","updateUserTyping","updateChatUserTyping","updateChannelUserTyping","updatePeerBlocked","fullChat","updated","call_active","hasChatPhoto","chat_photo","refreshFullPeer","invalidateChannelParticipants","usersUserFull","full_user","profile_photo","botInfo","bot_info","referenceContext","description_document","description_photo","getProfileByPeerId","getCachedProfileByPeerId","getFullPhoto","profile","full_chat","getChatInviteLink","exported_invite","link","exportedInvite","getParticipants","getChannelParticipants","chatParticipants","createSearchIndex","chatParticipant","found","filteredParticipants","getParticipant","getChannelParticipant","syncIfHasResult","channelParticipant","fullChannel","getMentions","processUserIds","ratingMap","cP","updateProfile","saveApiUser","setBotInfo","getBotInfo","uploadProfilePhoto","updateResult","strippedThumb","stripped_thumb","deletePhotos","deletedList","verifyParticipantForOnlineCount","reduceParticipantsForOnlineCount","getOnlines","chatInfo","channelParticipants","onlines","getPeerTypings","canGiftPremium","premium_gifts","callbackifyAll","SAVE_DOC_KEYS","REFERENCE_CONTEXT","AppReactionsManager","sendReactionPromises","lastSendingTimes","getAvailableReactions","availableReactions","availableReaction","around_animation","static_icon","appear_animation","center_icon","resetAvailableReactions","messagesAvailableReactions","getActiveAvailableReactions","inactive","getAvailableReactionsForPeer","activeAvailableReactions","unshiftQuickReaction","getQuickReaction","quickReaction","chatAvailableReactions","filteredChatAvailableReactions","unshiftQuickReactionInner","getAvailableReactionsByMessage","isReactionActive","reactions_default","getReactionCached","getReaction","getMessagesReactions","setDefaultReaction","sendReaction","lastSendingTimeKey","myPeer","unsetReactionCount","canSeeList","can_see_list","chosenReactions","unsetReactions","chosenReactionIdx","chosenReactionCount","chosenReactionsLength","reactionCountIdx","id1","id2","promiseKey","editMessageUpdateIdx","editMessageUpdate","LOCAL_IDS","EMOJI","EMOJI_ANIMATIONS","PREMIUM_GIFTS","GENERIC_ANIMATIONS","DEFAULT_STATUSES","DEFAULT_TOPIC_ICONS","LOCAL_IDS_SET","AppStickersManager","getStickerSetPromises","getStickersByEmoticonsPromises","sounds","processAllStickersResult","allStickers","sets","stickerSet","videos","getAnimatedEmojiStickerSet","getGreetingStickersPromise","getGreetingStickersTimeout","getGreetingSticker","onStickersUpdated","updateNewStickerSet","saveStickerSet","updateRecentStickers","updateFavedStickers","updateMoveStickerSetToTop","updateStickerSetsOrder","masks","stickers","getFavedStickersStickers","getRecentStickersStickers","justPreload","getStickersByEmoticon","greetingStickers","random","saveStickers","canUseStickerSetCache","useCache","refreshTime","getStickerSet","cachedSet","getStickerSetInput","saveById","getLocalStickerSet","animations","getAnimatedEmojiSoundsPromise","emojies_sounds","sound","bytesStr","atob","file_reference_base64","charCodeAt","this_dc","getRecentStickers","recentStickers","saveRecentSticker","unsave","_doc","docEmoticon","faved","cleanEmoji","getAnimatedEmojiSticker","isAnimation","packs","getAnimatedEmojiSoundDocument","preloadAnimatedEmojiSticker","preloadEmojiPromise","preloadAnimatedEmojiStickerAnimation","animation","preloadSticker","isPremiumEffect","video_thumbs","newSet","setToCache","needSave","installed_date","getStickerSetThumbDownloadOptions","thumb_dc_id","isAnimated","mimeType","getFeaturedStickers","covered","getPromoPremiumStickers","getPremiumStickers","getFavedStickers","favedStickers","getFavedStickersLimit","faveSticker","unfave","toggleStickerSet","archived","toggleStickerSets","searchStickerSets","excludeFeatured","flags","exclude_featured","foundSaved","cover","getAllStickers","preloadStickerSets","includeOurStickers","includeServerStickers","cacheKey","messagesStickers","installedSets","foundStickers","cachedStickersAnimated","cachedStickersStatic","iteratePacks","clearRecentStickers","reorderStickerSets","AppUsersManager","usernames","getTopPeersPromises","contactsIndex","contactsFillPromise","contactsList","updatedContactsList","updateUsersStatuses","timestampNow","updateUserStatus","setInterval","expires","was_online","setUserToStateIfNeeded","updateUserName","contactsListCachedTime","contact","mutual_contact","pushContact","recentSearch","indexMyself","onContactsModified","fromServer","pushRecentSearch","clearRecentSearch","resolveUsername","resolvedPeer","processResolvedPeer","resolveUserByUsername","resolvePhone","popContact","getContacts","includeSaved","sortBy","_contactsList","userId1","userId2","sortName1","sortName","sortName2","localeCompare","status1","getUserStatusForSort","myUserId","testSelfSearch","getContactsPeerIds","toggleBlock","block","apiUsers","cleanedUsernames","cleanUsername","searchUsername","oldPeer","oldUser","fullName","changedPremium","wasContact","newContact","onContactUpdated","checkPremium","isUserOnlineVisible","getUserStatus","getUserPhone","isAnonymous","fragment_prefixes","isAttachMenuBot","bot_attach_menu","support","isNonContactUser","canEdit","bot_can_edit","eventTimestamp","importContact","importContacts","phones","inputContacts","j","client_id","importedContactsResult","imported","importedContact","topPeersCache","cachedTime","categories","getBlocked","contactsBlocked","getLocated","self_expires","searchContacts","my_results","curIsContact","setUserStatus","offline","updateMyOnlineStatus","addContact","addPhonePrivacyException","add_phone_privacy_exception","deleteContacts","getCommonChats","photoTypeSet","AppWebPagesManager","webpages","pendingWebPages","updateWebPage","apiWebPage","oldWebPage","isUpdated","siteName","site_name","shortTitle","author","pendingSet","getWebPage","readBlobAsArrayBuffer","readBlobAs","fileNameRFC","escape","DownloadWriter","serviceMessagePort","getServiceMessagePort","write","chunk","saveToStorage","DownloadStorage","getFile","prepareWriting","headers","cancel","getWriter","MIN_PART_SIZE","IGNORE_ERRORS","ApiFileManager","cacheStorage","downloadStorage","downloadPromises","uploadPromises","downloadPulls","downloadActives","refreshReferencePromises","maxUploadParts","maxDownloadParts","uncompressTGS","uncompressTGV","svgIndex","__","fixFirefoxSvg","TextEncoder","convertWebp","convertOpus","webFileDcId","webfile_dc_id","upload_max_fileparts_premium","upload_max_fileparts_default","downloadRequest","activeDelta","downloadPull","downloadCheck","downloadLimit","setQueueId","getFileStorage","cancelDownload","canceled","requestWebFilePart","checkCancel","isLocalWebFile","extension","file_type","mtime","fileDownload","getDelta","checkedReference","getLimitPart","isUpload","maxParts","maxPartSize","inputFileLocation","isDownloading","getDownload","getUpload","getConvertMethod","IS_OPUS_SUPPORTED","allocateDeferredPromises","startOffset","delayed","writeDeferred","writePromise","originalMimeType","convertMethod","getDownloadFileNameFromOptions","cacheFileName","errorHandler","prepared","isWebFile","isWebFileLocation","cachePrepared","downloadPrepared","possibleSize","_errorHandler","writer","truncate","downloadFileName","readBlobAsUint8Array","requestPart","dispatchProgress","throttledDispatchProgress","superpuper","isFinal","getParts","replaceParts","processedResult","getDownloadMediaDetails","downloadMediaURL","downloadMediaVoid","fileSize","isBigFile","partSize","totalParts","fileId","resultInputFile","parts","md5_checksum","resolved","it","_part","doneParts","file_id","file_part","file_total_parts","fileUpload","generator","ApiManagerMethods","apiPromisesSingleProcess","apiPromisesSingle","apiPromisesCacheable","afterMessageIdTemp","setUserAuth","prepareTempMessageId","queryJSON","newResult","oldPromise","getNewPromise","newPromise","helpAppConfig","ignore_restriction_reasons","pin","folderPin","bio","topicPin","chatlistInvites","chatlistsJoined","ApiManager","cachedNetworkers","cachedExportPromise","gettingNetworkers","afterMessageTempIds","changeTransportType","updateConfig","iterateNetworkers","getTransportType","connections","dcs","array","oldTransportType","oldObject","oldGetKey","newGetKey","info","changeNetworkerTransport","getBaseDcId","sessionStorage","setBaseDcId","userAuth","dcID","user_auth","wasDcId","getNetworker","setOnDrainIfNeeded","dc","logOut","loggingOut","storageKeys","storageResult","logoutPromises","ignoreErrors","toggleStorages","generateNetworkerGetKey","networkers","maxNetworkers","isOnline","ak","authKeyHex","serverSaltHex","authKey","bytesFromHex","authKeyId","serverSalt","authorizer","_error","newTransportType","removeTransport","stack","getNetworkerVoid","oldTransport","changeTransport","onNetworkerDrain","onDrain","removeNetworker","isFileNetworker","canRelease","setDrainTimeout","updatesProcessor","cachedNetworker","startTime","isStopped","performRequest","wrapApiCall","exportResolve","exportReject","exportedAuth","newDcId","unsetConnectionInited","rawError","waitTime","floodMaxTimeout","attachPromise","originalError","PeersStorage","neededPeers","singlePeerMap","thumbFullSize","ThumbsStorage","thumbsCache","intToUint","ulongFromInts","high","low","shiftLeft","safeBigInt","ulongBigInt","pow","longBigInt","divide","bigIntFromBytes","base","boolFalse","predicate","boolTrue","vector","gzipPacked","sliceMethod","TLSerialization","mtproto","startMaxLength","createBuffer","ArrayBuffer","intView","Int32Array","byteView","getArray","resultBuffer","resultInt32","subarray","getBuffer","getBytes","typed","resultArray","getOffset","checkLength","needBytes","previousBuffer","previousArray","writeInt","field","storeInt","storeBool","storeLongP","iHigh","iLow","storeLong","sLong","storeIntBytes","_bigInt","bigInt","isNegative","quotient","remainder","divmod","toJSNumber","storeDouble","Float64Array","storeString","sUTF8","unescape","storeBytes","bits","storeRawBytes","storeMethod","methodName","methodData","methods","m","storeBody","storeObject","itemType","schema","isBare","constructorData","flagsHandler","param","condType","fieldBit","isFlagHandler","paramName","TLDeserialization","readInt","fetchInt","fetchDouble","doubleView","fetchLong","ulong","greater","minus","greaterOrEquals","fetchBool","fetchObject","fetchString","String","fromCharCode","decodeURIComponent","fetchBytes","fetchIntBytes","fetchRawBytes","fetchVector","fallback","checkType","constructorCmp","uncompressed","constructorsIndex","schemaFallback","int1","int2","overrideKey","isCond","formatJSONValue","jsonValue","objectValues","objectValue","setOffset","addPadding","blockSize","zeroes","blockSizeAsTotalLength","needPadding","padding","bufferConcats","delays","disconnectDelayMin","disconnectDelayMax","pingInterval","pingMaxTime","connectionTimeout","RESEND_OPTIONS","noSchedule","notContentRelated","invokeAfterMsgConstructor","networkerTempId","MTPNetworker","lastServerMessages","sentMessages","pendingMessages","pendingAcks","pendingResendReq","nextReq","checkConnectionPeriod","lastResponseTime","activeRequests","sendPingDelayDisconnect","pingDelayDisconnectDeferred","lastPingTime","disconnectDelay","round","timeoutTime","lastPingStartTime","pingId","lastPingDelayDisconnectId","wrapMtpCall","ping_id","disconnect_delay","rejectTimeout","elapsedTime","checkLongPoll","isClean","longPollPending","sleepAfter","sendLongPoll","checkConnection","clearCheckConnectionTimeout","serializer","pingMessage","generateId","seq_no","generateSeqNo","sendEncryptedRequest","toggleOffline","checkConnectionTimeout","authKeyUint8","convertToUint8Array","isFileUpload","isFileDownload","updateSession","seqNo","prevSessionId","updateSentMessage","sentMessageId","sentMessage","container","inner","innerSentMessageId","innerSentMessage","pushMessage","wrapMtpMessage","connectionInited","invokeWithLayer","initConnection","resultType","isAPI","nextReqTimeout","longPollInterval","clearPingDelayDisconnect","forceReconnectTimeout","sendingLongPoll","max_delay","wait_after","max_wait","noResponse","longPoll","delay","checkConnectionRetryAt","scheduleRequest","handleSentEncryptedRequestHTTP","noResponseMsgs","sqrt","pushResend","shouldResolve","onDrainTimeout","willChange","onConnectionStatusChange","innerMsgId","acked","getMsgKey","dataWithPadding","x","msgKeyLargePlain","msgKeyLarge","getAesKeyIv","msgKey","sha2aText","sha2bText","aesKey","aesIv","sha2a","sha2b","akStopped","performScheduledRequest","ackMsgIds","msg_ids","pendingResendReqLength","outMessage","messagesByteLen","hasApiCall","hasHttpWait","lengthOverflow","compare","messageByteLength","generateContainerMessage","messageWithBody","innerMessages","getEncryptedMessage","keyIv","getDecryptedMessage","encryptedData","getEncryptedOutput","dataBuffer","paddingLength","encryptedResult","requestData","baseError","responseBuffer","deserializer","bytesCmp","calcMsgKey","totalLength","messageBodyLength","messageBody","mt_message","seqno","mt_rpc_result","req_msg_id","applyServerSalt","newServerSalt","toArray","ackMessage","reqResend","notEmpty","processMessageAck","error_message","error_code","msg","applyServerTime","serverTime","shiftRight","innerMessage","new_server_salt","bad_msg_id","changedTimeOffset","badMessage","first_msg_id","server_salt","answer_msg_id","lastResendReq","lastResend","pendingResend","reqMsgId","badMsgId","pos","NetworkerFactory","startAll","stoppedNetworkers","stopAll","setLanguage","testPublicKeysHex","modulus","exponent","publisKeysHex","publicKeysParsed","preparePromise","prepare","keyParsed","RSAPublicKey","fingerprintBytes","fingerprints","fingerprintHex","fill","foundKey","fingerprint","bytesXor","bytes1","bytes2","Authorizer","sendPlainRequest","requestArray","requestLength","headerArray","errorCode","auth_key_id","msg_len","sendReqPQ","nonce","rsaKeysManager","serverNonce","server_nonce","pq","server_public_key_fingerprints","publicKey","pAndQ","sendReqDhParams","newNonce","p_q_inner_data_dc","new_nonce","pQInnerDataSerialization","dataPadReversed","keyAesEncrypted","tempKey","dataWithHash","aesEncrypted","keyAesEncryptedBigInt","publicKeyModulusBigInt","getKeyAesEncrypted","req_DH_params","public_key_fingerprint","encrypted_data","requestBytes","newNonceHash","new_nonce_hash","decryptServerDhDataAnswer","encrypted_answer","sendSetClientDhParams","encryptedAnswer","localTime","tmpAesKey","tmpAesIv","answerWithHash","answerWithPadding","g","dhPrime","dh_prime","gA","g_a","server_time","retry","verifyDhParams","dhPrimeHex","gABigInt","dhPrimeBigInt","subtract","twoPow","gBytes","gB","retry_id","authKeyHash","authKeyAux","newNonceHash1","new_nonce_hash1","newNonceHash2","new_nonce_hash2","newNonceHash3","new_nonce_hash3","getTransportTypePromise","_try","TimeManager","lastMessageId","timeOffset","timeTicks","newTimeOffset","changed","server_time_offset","AppWebDocsManager","AppPaymentsManager","getInputInvoiceBySlug","getInputInvoiceByPeerId","getPaymentForm","invoice","paymentForm","getPaymentReceipt","validateRequestedInfo","sendPaymentForm","formId","requestedInfoId","shippingOptionId","credentials","tipAmount","form_id","requested_info_id","shipping_option_id","tip_amount","clearSavedInfo","AppAttachMenuBotsManager","attachMenuBots","attachMenuBotsArr","onUpdateAttachMenuBots","getAttachMenuBots","onUpdateWebViewResultSent","updateAttachMenuBots","updateWebViewResultSent","saveAttachMenuBot","attachMenuBot","bot_id","icon","getAttachMenuBotIcon","saveAttachMenuBots","getAttachMenuBotCached","attachMenuBotsBot","requestWebView","fromBotMenu","fromSwitchWebView","themeParams","isSimpleWebView","app","writeAllowed","theme_params","write_allowed","from_switch_webview","from_bot_menu","prolongWebView","toggleBotInAttachMenu","sendWebViewData","buttonText","button_text","getBotApp","shortName","AppSeamlessLoginManager","requestUrlAuth","urlAuthResult","acceptUrlAuth","getWebAuthorizations","webAuthorizations","authorizations","resetWebAuthorization","resetWebAuthorizations","AppThemesManager","wallPapers","saveWallPaper","getWallPaper","inputWallPaper","getInputWallPaper","getThemes","accountThemes","themes","theme","themeSettings","getWallPapers","accountWallpapers","wallpapers","AppUsernamesManager","toggleUsername","active","reorderUsernames","appManagersManager","cryptoWorkersURLs","cryptoPortsAttached","cryptoPortPromise","getManagers","ports","originalUrl","newURLs","createManagers","appAvatarsManager","appCallsManager","appPrivacyManager","appInlineBotsManager","passwordManager","appPaymentsManager","appSeamlessLoginManager","appUsernamesManager","manager","_serviceMessagePort","_isServiceWorkerOnline","pushedKeys","clearWrite","invokeExceptSource","serviceWorkerOnline","serviceWorkerPort","detachPort","attachPort","messagePort","onConnect","onDisconnect","listenPort","sendPort","attachListenPort","attachSendPort","setOnPortDisconnect","listenMessagePort","NULL_PEER_ID","REPLIES_PEER_ID","REPLIES_HIDDEN_CHANNEL_ID","SERVICE_PEER_ID","MUTE_UNTIL","MAX_FILE_SAVE_SIZE","THUMB_TYPE_FULL","ATTACH_MENU_BOT_ICON_NAME","MESSAGE_ID_OFFSET","GENERAL_TOPIC_ID","T_ME_PREFIXES","FOLDER_ID_ALL","FOLDER_ID_ARCHIVE","REAL_FOLDERS","START_LOCAL_ID","ALPHA_CHARS_REG_EXP","ALPHA_NUMERIC_REG_EXP","URL_ALPHANUMERIC_REG_EXP_PART","URL_PROTOCOL_REG_EXP_PART","URL_REG_EXP","URL_ANY_PROTOCOL_REG_EXP","USERNAME_REG_EXP","BOT_COMMAND_REG_EXP","FULL_REG_EXP","EMAIL_REG_EXP","MARKDOWN_REG_EXP","MARKDOWN_ENTITIES","PASS_CONFLICTING_ENTITIES","PASS_SINGLE_CONFLICTING_ENTITIES","PHONE_NUMBER_REG_EXP","encodeEmoji","emojiText","unicodeSurrogates","points","char","previous","toCodePoints","removeVS16s","vs16RegExp","zeroWidthJoiner","rawEmoji","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","__webpack_exports__","O","chunkIds","fn","priority","notFulfilled","getter","__esModule","definition","enumerable","chunkId","miniCssF","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","scriptUrl","importScripts","currentScript","src","scripts","getElementsByTagName","oldGetScript","oldLoadScript","queryMap","countMap","retries","realSrc","cacheBust","installedChunks","chunkLoadingGlobal","parentChunkLoadingFunction","moreModules","runtime"],"sourceRoot":""}