{"version":3,"file":"116.693aa1ba2a8af3e38d46.bundle.js","mappings":"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","sources":["webpack://tweb/./src/config/databases/state.ts","webpack://tweb/./src/helpers/blob/blobConstruct.ts","webpack://tweb/./src/helpers/blob/blobSafeMimeType.ts","webpack://tweb/./src/helpers/bytes/bufferConcats.ts","webpack://tweb/./src/helpers/cancellablePromise.ts","webpack://tweb/./src/helpers/context.ts","webpack://tweb/./src/helpers/noop.ts","webpack://tweb/./src/helpers/object/copy.ts","webpack://tweb/./src/helpers/object/deepEqual.ts","webpack://tweb/./src/helpers/object/isObject.ts","webpack://tweb/./src/helpers/object/safeAssign.ts","webpack://tweb/./src/helpers/object/validateInitObject.ts","webpack://tweb/./src/helpers/peerIdPolyfill.ts","webpack://tweb/./src/helpers/random.ts","webpack://tweb/./src/helpers/recordPromise.ts","webpack://tweb/./src/helpers/schedulers/pause.ts","webpack://tweb/./src/helpers/schedulers/throttle.ts","webpack://tweb/./src/helpers/string/capitalizeFirstLetter.ts","webpack://tweb/./src/helpers/toggleStorages.ts","webpack://tweb/./src/helpers/tsNow.ts","webpack://tweb/./src/lib/appManagers/utils/messageId/clearMessageId.ts","webpack://tweb/./src/lib/appManagers/utils/peers/isAnyChat.ts","webpack://tweb/./src/lib/appManagers/utils/peers/isUser.ts","webpack://tweb/./src/lib/crypto/cryptoMessagePort.ts","webpack://tweb/./src/lib/files/cacheStorage.ts","webpack://tweb/./src/lib/files/memoryWriter.ts","webpack://tweb/./src/lib/logger.ts","webpack://tweb/./src/lib/mtproto/mtprotoMessagePort.ts","webpack://tweb/./src/lib/polyfill.ts","webpack://tweb/./src/lib/richTextProcessor/matchUrlProtocol.ts","webpack://tweb/./src/lib/serviceWorker/serviceMessagePort.ts","webpack://tweb/./src/lib/localStorage.ts","webpack://tweb/./src/lib/sessionStorage.ts","webpack://tweb/./src/lib/stateStorage.ts","webpack://tweb/./src/lib/storage.ts","webpack://tweb/./src/vendor/emoji/regex.ts"],"sourcesContent":["/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {Database} from '.';\nimport type {IDBIndex} from '../../lib/files/idb';\n\nconst DATABASE_STATE: Database<'session' | 'stickerSets' | 'users' | 'chats' | 'messages' | 'dialogs'> = {\n  name: 'tweb',\n  version: 7,\n  stores: [{\n    name: 'session'\n  }, {\n    name: 'stickerSets'\n  }, {\n    name: 'users'\n  }, {\n    name: 'chats'\n  }, {\n    name: 'dialogs'\n    // indexes: [\n    //   ...(new Array(20 + 2).fill(0)).map((_, idx) => {\n    //     const name = `index_${idx}`;\n    //     const index: IDBIndex = {\n    //       indexName: name,\n    //       keyPath: name,\n    //       objectParameters: {}\n    //     };\n\n    //     return index\n    //   })\n    // ]\n  }, {\n    name: 'messages'\n  }]\n};\n\nexport default DATABASE_STATE;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport blobSafeMimeType from './blobSafeMimeType';\n\nexport default function blobConstruct<T extends Uint8Array | string>(blobParts: Array<T> | T, mimeType: string = ''): Blob {\n  if(!Array.isArray(blobParts)) {\n    blobParts = [blobParts];\n  }\n\n  const safeMimeType = blobSafeMimeType(mimeType);\n  const blob = new Blob(blobParts, {type: safeMimeType});\n  return blob;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\n// https://www.iana.org/assignments/media-types/media-types.xhtml\nexport default function blobSafeMimeType(mimeType: string) {\n  if([\n    'image/jpeg',\n    'image/png',\n    'image/gif',\n    'image/svg+xml',\n    'image/webp',\n    'image/bmp',\n    'video/mp4',\n    'video/webm',\n    'video/quicktime',\n    'audio/ogg',\n    'audio/mpeg',\n    'audio/mp4',\n    'audio/wav', // though it is not in list\n    'application/json',\n    'application/pdf'\n  ].indexOf(mimeType) === -1) {\n    return 'application/octet-stream';\n  }\n\n  return mimeType;\n}\n","export default function bufferConcats(...args: (ArrayBuffer | Uint8Array | number[])[]) {\n  const length = args.reduce((acc, v) => acc + ((v as ArrayBuffer).byteLength || (v as Uint8Array).length), 0);\n\n  const tmp = new Uint8Array(length);\n\n  let lastLength = 0;\n  args.forEach((b) => {\n    tmp.set(b instanceof ArrayBuffer ? new Uint8Array(b) : b, lastLength);\n    lastLength += (b as ArrayBuffer).byteLength || (b as Uint8Array).length;\n  });\n\n  return tmp/* .buffer */;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport noop from './noop';\n\nexport interface CancellablePromise<T> extends Promise<T> {\n  resolve?: (value: T) => void,\n  reject?: (...args: any[]) => void,\n  cancel?: (reason?: any) => void,\n\n  notify?: (...args: any[]) => void,\n  notifyAll?: (...args: any[]) => void,\n  lastNotify?: any,\n  listeners?: Array<(...args: any[]) => void>,\n  addNotifyListener?: (callback: (...args: any[]) => void) => void,\n\n  isFulfilled?: boolean,\n  isRejected?: boolean\n}\n\nexport default function deferredPromise<T>() {\n  const deferredHelper: any = {\n    isFulfilled: false,\n    isRejected: false,\n\n    notify: () => {},\n    notifyAll: (...args: any[]) => {\n      deferredHelper.lastNotify = args;\n      deferredHelper.listeners.forEach((callback: any) => callback(...args));\n    },\n\n    listeners: [],\n    addNotifyListener: (callback: (...args: any[]) => void) => {\n      if(deferredHelper.lastNotify) {\n        callback(...deferredHelper.lastNotify);\n      }\n\n      deferredHelper.listeners.push(callback);\n    }\n  };\n\n  const deferred: CancellablePromise<T> = new Promise<T>((resolve, reject) => {\n    deferredHelper.resolve = (value: T) => {\n      if(deferred.isFulfilled || deferred.isRejected) return;\n\n      deferred.isFulfilled = true;\n      resolve(value);\n    };\n\n    deferredHelper.reject = (...args: any[]) => {\n      if(deferred.isRejected || deferred.isFulfilled) return;\n\n      deferred.isRejected = true;\n      reject(...args);\n    };\n  });\n\n  // @ts-ignore\n  /* deferred.then = (resolve: (value: T) => any, reject: (...args: any[]) => any) => {\n    const n = deferredPromise<ReturnType<typeof resolve>>();\n\n  }; */\n\n  deferred.catch(noop).finally(() => {\n    deferred.notify = deferred.notifyAll = deferred.lastNotify = null;\n    deferred.listeners.length = 0;\n\n    if(deferred.cancel) {\n      deferred.cancel = noop;\n    }\n  });\n\n  Object.assign(deferred, deferredHelper);\n\n  return deferred;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// в SW может быть сразу две переменных TRUE\nexport const IS_SERVICE_WORKER = typeof ServiceWorkerGlobalScope !== 'undefined' && self instanceof ServiceWorkerGlobalScope;\nexport const IS_WEB_WORKER = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && !IS_SERVICE_WORKER;\nexport const IS_WORKER = IS_WEB_WORKER || IS_SERVICE_WORKER;\n\nexport const getWindowClients = () => {\n  return (self as any as ServiceWorkerGlobalScope)\n  .clients\n  .matchAll({includeUncontrolled: false, type: 'window'});\n};\n\nexport const getLastWindowClient = () => getWindowClients().then((windowClients) => windowClients.slice(-1)[0]);\n\nconst postMessage = (listener: WindowClient | DedicatedWorkerGlobalScope, ...args: any[]) => {\n  try {\n    // @ts-ignore\n    listener.postMessage(...args);\n  } catch(err) {\n    console.error('[worker] postMessage error:', err, args);\n  }\n};\n\nconst notifyServiceWorker = (all: boolean, ...args: any[]) => {\n  getWindowClients().then((listeners) => {\n    if(!listeners.length) {\n      // console.trace('no listeners?', self, listeners);\n      return;\n    }\n\n    listeners.slice(all ? 0 : -1).forEach((listener) => {\n      postMessage(listener, ...args);\n    });\n  });\n};\n\nconst notifyWorker = (...args: any[]) => {\n  postMessage(self as any as DedicatedWorkerGlobalScope, ...args);\n};\n\nconst noop = () => {};\n\nexport const notifySomeone = IS_SERVICE_WORKER ? notifyServiceWorker.bind(null, false) : (IS_WEB_WORKER ? notifyWorker : noop);\nexport const notifyAll = IS_SERVICE_WORKER ? notifyServiceWorker.bind(null, true) : (IS_WEB_WORKER ? notifyWorker : noop);\n","export default function noop() {}\n","export default function copy<T>(obj: T): T {\n  // in case of premitives\n  if(obj === null || typeof(obj) !== 'object') {\n    return obj;\n  }\n\n  // date objects should be\n  if(obj instanceof Date) {\n    return new Date(obj.getTime()) as any;\n  }\n\n  // handle Array\n  if(Array.isArray(obj)) {\n    // @ts-ignore\n    const clonedArr: T = obj.map((el) => copy(el)) as any as T;\n    return clonedArr;\n  }\n\n  if(ArrayBuffer.isView(obj)) {\n    // @ts-ignore\n    return obj.slice();\n  }\n\n  // lastly, handle objects\n  // @ts-ignore\n  const clonedObj = new obj.constructor();\n  for(var prop in obj) {\n    if(obj.hasOwnProperty(prop)) {\n      clonedObj[prop] = copy(obj[prop]);\n    }\n  }\n  return clonedObj;\n}\n","export default function deepEqual(x: any, y: any): boolean {\n  const ok = Object.keys, tx = typeof x, ty = typeof y;\n  return x && y && tx === 'object' && tx === ty ? (\n    ok(x).length === ok(y).length &&\n      ok(x).every((key) => deepEqual(x[key], y[key]))\n  ) : (x === y);\n}\n","export default function isObject<T extends Record<any, any>>(object: any): object is T {\n  return typeof(object) === 'object' && object !== null;\n}\n","export default function safeAssign<T>(object: T, fromObject: any) {\n  if(fromObject) {\n    for(const i in fromObject) {\n      if(fromObject[i] !== undefined) {\n        // @ts-ignore\n        object[i] = fromObject[i];\n      }\n    }\n  }\n\n  return object;\n}\n","import copy from './copy';\nimport isObject from './isObject';\n\nexport default function validateInitObject(\n  initObject: any,\n  currentObject: any,\n  onReplace?: (key: string) => void,\n  previousKey?: string,\n  ignorePaths?: Set<string>,\n  path?: string\n) {\n  for(const key in initObject) {\n    const _path = path ? `${path}.${key}` : key;\n    if(ignorePaths?.has(_path)) {\n      continue;\n    }\n\n    if(typeof(currentObject[key]) !== typeof(initObject[key])) {\n      currentObject[key] = copy(initObject[key]);\n      onReplace?.(previousKey || key);\n    } else if(isObject(initObject[key])) {\n      validateInitObject(initObject[key], currentObject[key], onReplace, previousKey || key, ignorePaths, _path);\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport isAnyChat from '../lib/appManagers/utils/peers/isAnyChat';\nimport isUser from '../lib/appManagers/utils/peers/isUser';\n\nString.prototype.toUserId = function() {\n  return (+this).toUserId();\n};\n\nString.prototype.toChatId = function() {\n  return (+this).toChatId();\n};\n\nString.prototype.toPeerId = function(isChat?: boolean) {\n  return (+this).toPeerId(isChat);\n};\n\nString.prototype.isPeerId = function() {\n  return /^[\\d-]/.test(this.toString());\n};\n\nNumber.prototype.toUserId = function() {\n  return this as any;\n};\n\nNumber.prototype.toChatId = function() {\n  return Math.abs(this as any);\n};\n\nNumber.prototype.toPeerId = function(isChat?: boolean) {\n  return isChat === undefined ? this as number : (isChat ? -Math.abs(this as number) : this as number);\n};\n\nNumber.prototype.isPeerId = function() {\n  return true;\n};\n\n[\n  ['isUser' as const, isUser],\n  ['isAnyChat' as const, isAnyChat]\n].forEach((value) => {\n  const newMethod = Array.isArray(value) ? value[0] : value;\n  const originMethod = Array.isArray(value) ? value[1] : value;\n  // @ts-ignore\n  String.prototype[newMethod] = function() {\n    // @ts-ignore\n    // eslint-disable-next-line no-useless-call\n    return originMethod.call(null, this.toString());\n  };\n\n  // @ts-ignore\n  Number.prototype[newMethod] = function() {\n    // @ts-ignore\n    // eslint-disable-next-line no-useless-call\n    return originMethod.call(null, this);\n  };\n});\n\ndeclare global {\n  interface String {\n    toUserId(): UserId;\n    toChatId(): ChatId;\n    toPeerId(isChat?: boolean): PeerId;\n    isPeerId(): this is string;\n\n    isUser(): boolean;\n    isAnyChat(): boolean;\n  }\n\n  interface Number {\n    toUserId(): UserId;\n    toChatId(): ChatId;\n    toPeerId(isChat?: boolean): PeerId;\n    isPeerId(): this is PeerId;\n\n    isUser(): boolean;\n    isAnyChat(): boolean;\n  }\n}\n\nexport {};\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nconst arrays = {\n  8: new Uint8Array(1),\n  16: new Uint16Array(1),\n  32: new Uint32Array(1)\n};\nexport function nextRandomUint(bits: 8 | 16 | 32) {\n  const array = arrays[bits];\n  crypto.getRandomValues(array);\n  return array[0];\n}\n\nexport function randomLong() {\n  return '' + nextRandomUint(32) + nextRandomUint(32) % 0xFFFFFF;\n}\n","import {logger} from '../lib/logger';\nimport dT from './dT';\n\nexport function recordPromise<T extends Promise<any>>(promise: T, description: string, log?: ReturnType<typeof logger> | Console) {\n  const perf = performance.now();\n  (log || console).warn(dT(), 'start', description);\n  promise.then(() => {\n    (log || console).warn(dT(), 'end', description, performance.now() - perf);\n  });\n  return promise;\n}\n\nexport function recordPromiseBound(log: ReturnType<typeof logger> | Console) {\n  return (...args: [Parameters<typeof recordPromise>[0], Parameters<typeof recordPromise>[1]]) => {\n    return recordPromise(...args, log);\n  };\n}\n","export default function pause(ms: number) {\n  return new Promise<void>((resolve) => {\n    setTimeout(resolve, ms);\n  });\n}\n","// * Jolly Cobra's schedulers\n\nimport {AnyToVoidFunction} from '../../types';\n\nexport default function throttle<F extends AnyToVoidFunction>(\n  fn: F,\n  ms: number,\n  shouldRunFirst = true\n) {\n  let interval: number | null = null;\n  let isPending: boolean;\n  let args: Parameters<F>;\n\n  return (..._args: Parameters<F>) => {\n    isPending = true;\n    args = _args;\n\n    if(!interval) {\n      if(shouldRunFirst) {\n        isPending = false;\n        // @ts-ignore\n        fn(...args);\n      }\n\n      interval = setInterval(() => {\n        if(!isPending) {\n          clearInterval(interval!);\n          interval = null;\n          return;\n        }\n\n        isPending = false;\n        // @ts-ignore\n        fn(...args);\n      }, ms) as any;\n    }\n  };\n}\n","export default function capitalizeFirstLetter(string: string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport CacheStorageController from '../lib/files/cacheStorage';\nimport AppStorage from '../lib/storage';\nimport sessionStorage from '../lib/sessionStorage';\nimport noop from './noop';\n\nexport default function toggleStorages(enabled: boolean, clearWrite: boolean) {\n  return Promise.all([\n    AppStorage.toggleStorage(enabled, clearWrite),\n    CacheStorageController.toggleStorage(enabled, clearWrite),\n    sessionStorage.toggleStorage(enabled, clearWrite)\n  ]).then(noop, noop);\n}\n","export default function tsNow(seconds?: true) {\n  const t = Date.now();\n  return seconds ? t / 1000 | 0 : t;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {MESSAGE_ID_OFFSET} from '../../../mtproto/mtproto_config';\n\nexport default function clearMessageId(messageId: number, toServer?: boolean) {\n  if(messageId === undefined) {\n    return;\n  }\n\n  messageId = +messageId.toFixed(0);\n  if(!toServer) {\n    return messageId;\n  }\n\n  return messageId < MESSAGE_ID_OFFSET ? messageId : messageId % MESSAGE_ID_OFFSET;\n  // const q = MESSAGE_ID_OFFSET;\n  // if(messageId < q) { // id 0 -> mid 0xFFFFFFFF, so 0xFFFFFFFF must convert to 0\n  //   return messageId;\n  // }\n\n  // const l = MESSAGE_ID_INCREMENT - 1;\n  // const used = messageId & l;\n  // if(used !== l) {\n  //   messageId -= used + 1;\n  // }\n\n  // return toServer ? (messageId - q) / MESSAGE_ID_INCREMENT : messageId;\n}\n","export default function isAnyChat(peerId: PeerId) {\n  return +peerId < 0;\n}\n","export default function isUser(peerId: PeerId) {\n  return +peerId >= 0;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {CryptoMethods} from './crypto_methods';\nimport SuperMessagePort from '../mtproto/superMessagePort';\nimport {Awaited} from '../../types';\nimport {MOUNT_CLASS_TO} from '../../config/debug';\nimport {IS_WORKER} from '../../helpers/context';\n\ntype CryptoEvent = {\n  invoke: <T extends keyof CryptoMethods>(payload: {method: T, args: Parameters<CryptoMethods[T]>}) => ReturnType<CryptoMethods[T]>,\n  port: (payload: void, source: MessageEventSource, event: MessageEvent) => void,\n  terminate: () => void\n};\n\nexport class CryptoMessagePort<Master extends boolean = false> extends SuperMessagePort<CryptoEvent, CryptoEvent, Master> {\n  private lastIndex: number;\n\n  constructor() {\n    super('CRYPTO');\n    this.lastIndex = -1;\n  }\n\n  public invokeCryptoNew<T extends keyof CryptoMethods>({method, args, transfer}: {\n    method: T,\n    args: Parameters<CryptoMethods[T]>,\n    transfer?: Transferable[]\n  }): Promise<Awaited<ReturnType<CryptoMethods[T]>>> {\n    const payload = {method, args};\n    const listeners = this.listeners['invoke'];\n    if(listeners?.length) { // already in worker\n      // try {\n      // @ts-ignore\n      let result: any = listeners[0].callback(payload);\n      if(!IS_WORKER && !(result instanceof Promise)) {\n        result = Promise.resolve(result);\n      }\n\n      return result;\n      // } catch(err) {\n      //   return Promise.reject(err);\n      // }\n    }\n\n    const sendPortIndex = method === 'aes-encrypt' || method === 'aes-decrypt' ?\n      this.lastIndex = (this.lastIndex + 1) % this.sendPorts.length :\n      0;\n    // @ts-ignore\n    return this.invoke('invoke', payload, undefined, this.sendPorts[sendPortIndex], transfer);\n  }\n\n  public invokeCrypto<T extends keyof CryptoMethods>(method: T, ...args: Parameters<CryptoMethods[T]>): Promise<Awaited<ReturnType<CryptoMethods[T]>>> {\n    return this.invokeCryptoNew({method, args});\n  }\n}\n\nconst cryptoMessagePort = new CryptoMessagePort<false>();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.cryptoMessagePort = cryptoMessagePort);\nexport default cryptoMessagePort;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport Modes from '../../config/modes';\nimport blobConstruct from '../../helpers/blob/blobConstruct';\nimport MemoryWriter from './memoryWriter';\nimport FileManager from './memoryWriter';\nimport FileStorage from './fileStorage';\nimport makeError from '../../helpers/makeError';\nimport deferredPromise from '../../helpers/cancellablePromise';\n\nexport type CacheStorageDbName = 'cachedFiles' | 'cachedStreamChunks' | 'cachedAssets';\n\nexport default class CacheStorageController implements FileStorage {\n  private static STORAGES: CacheStorageController[] = [];\n  private openDbPromise: Promise<Cache>;\n\n  private useStorage = true;\n\n  // private log: ReturnType<typeof logger> = logger('CS');\n\n  constructor(private dbName: CacheStorageDbName) {\n    if(Modes.test) {\n      this.dbName += '_test';\n    }\n\n    if(CacheStorageController.STORAGES.length) {\n      this.useStorage = CacheStorageController.STORAGES[0].useStorage;\n    }\n\n    this.openDatabase();\n    CacheStorageController.STORAGES.push(this);\n  }\n\n  private openDatabase(): Promise<Cache> {\n    return this.openDbPromise ?? (this.openDbPromise = caches.open(this.dbName));\n  }\n\n  public delete(entryName: string) {\n    return this.timeoutOperation((cache) => cache.delete('/' + entryName));\n  }\n\n  public deleteAll() {\n    return caches.delete(this.dbName);\n  }\n\n  public get(entryName: string) {\n    return this.timeoutOperation((cache) => cache.match('/' + entryName));\n  }\n\n  public save(entryName: string, response: Response) {\n    // return new Promise((resolve) => {}); // DEBUG\n    return this.timeoutOperation((cache) => cache.put('/' + entryName, response));\n  }\n\n  public getFile(fileName: string, method: 'blob' | 'json' | 'text' = 'blob'): Promise<any> {\n    // if(method === 'blob') {\n    //   return Promise.reject(makeError('NO_ENTRY_FOUND'));\n    // }\n\n    // const str = `get fileName: ${fileName}`;\n    // console.time(str);\n    return this.get(fileName).then((response) => {\n      if(!response) {\n        // console.warn('getFile:', response, fileName);\n        throw makeError('NO_ENTRY_FOUND');\n      }\n\n      const promise = response[method]();\n      // promise.then(() => {\n      //   console.timeEnd(str);\n      // });\n      return promise;\n    });\n  }\n\n  public saveFile(fileName: string, blob: Blob | Uint8Array) {\n    // return Promise.resolve(blobConstruct([blob]));\n    if(!(blob instanceof Blob)) {\n      blob = blobConstruct(blob);\n    }\n\n    const response = new Response(blob, {\n      headers: {\n        'Content-Length': '' + blob.size\n      }\n    });\n\n    return this.save(fileName, response).then(() => blob as Blob);\n  }\n\n  public timeoutOperation<T>(callback: (cache: Cache) => Promise<T>) {\n    if(!this.useStorage) {\n      return Promise.reject(makeError('STORAGE_OFFLINE'));\n    }\n\n    return new Promise<T>(async(resolve, reject) => {\n      let rejected = false;\n      const timeout = setTimeout(() => {\n        reject();\n        // console.warn('CACHESTORAGE TIMEOUT');\n        rejected = true;\n      }, 15e3);\n\n      try {\n        const cache = await this.openDatabase();\n        if(!cache) {\n          this.useStorage = false;\n          this.openDbPromise = undefined;\n          throw 'no cache?';\n        }\n\n        const res = await callback(cache);\n\n        if(rejected) return;\n        resolve(res);\n      } catch(err) {\n        reject(err);\n      }\n\n      clearTimeout(timeout);\n    });\n  }\n\n  public prepareWriting(fileName: string, fileSize: number, mimeType: string) {\n    return {\n      deferred: deferredPromise<Blob>(),\n      getWriter: () => {\n        const writer = new MemoryWriter(mimeType, fileSize, (blob) => {\n          return this.saveFile(fileName, blob).catch(() => blob);\n        });\n\n        return writer;\n      }\n    };\n  }\n\n  public static toggleStorage(enabled: boolean, clearWrite: boolean) {\n    return Promise.all(this.STORAGES.map((storage) => {\n      storage.useStorage = enabled;\n\n      if(!clearWrite) {\n        return;\n      }\n\n      if(!enabled) {\n        return storage.deleteAll();\n      }\n    }));\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport blobConstruct from '../../helpers/blob/blobConstruct';\nimport StreamWriter from './streamWriter';\n\nexport default class MemoryWriter implements StreamWriter {\n  private bytes: Uint8Array;\n\n  constructor(\n    private mimeType: string,\n    private size: number,\n    private saveFileCallback?: (blob: Blob) => Promise<Blob>\n  ) {\n    this.bytes = new Uint8Array(size);\n  }\n\n  public async write(part: Uint8Array, offset: number) {\n    // sometimes file size can be bigger than the prov\n    const endOffset = offset + part.byteLength;\n    if(endOffset > this.bytes.byteLength) {\n      const newBytes = new Uint8Array(endOffset);\n      newBytes.set(this.bytes, 0);\n      this.bytes = newBytes;\n    }\n\n    this.bytes.set(part, offset);\n  };\n\n  public truncate() {\n    this.bytes = new Uint8Array();\n  }\n\n  public trim(size: number) {\n    this.bytes = this.bytes.slice(0, size);\n  }\n\n  public finalize(saveToStorage = true) {\n    const blob = blobConstruct(this.bytes, this.mimeType);\n\n    if(saveToStorage && this.saveFileCallback) {\n      this.saveFileCallback(blob);\n    }\n\n    return blob;\n  }\n\n  public getParts() {\n    return this.bytes;\n  }\n\n  public replaceParts(parts: Uint8Array) {\n    this.bytes = parts;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport DEBUG from '../config/debug';\nimport {IS_FIREFOX, IS_SAFARI} from '../environment/userAgent';\nimport {IS_SERVICE_WORKER, IS_WEB_WORKER} from '../helpers/context';\nimport dT from '../helpers/dT';\n\nexport enum LogTypes {\n  None = 0,\n  Error = 1,\n  Warn = 2,\n  Log = 4,\n  Debug = 8\n};\n\nexport const LOG_LEVELS = [LogTypes.None, LogTypes.Error, LogTypes.Warn, LogTypes.Log, LogTypes.Debug];\n\nconst IS_WEBKIT = IS_SAFARI || IS_FIREFOX;\n\n// let getCallerFunctionNameFromLine: (line: string) => string;\n// if(IS_WEBKIT) {\n//   getCallerFunctionNameFromLine = (line) => {\n//     const splitted = line.split('@');\n//     return splitted[0];\n//   };\n// } else {\n//   getCallerFunctionNameFromLine = (line: string) => {\n//     const splitted = line.trim().split(' ');\n//     if(splitted.length === 3) {\n//       return splitted[1].slice(splitted[1].lastIndexOf('.') + 1);\n//     }\n//   };\n// }\n\nconst STYLES_SUPPORTED = !IS_WEBKIT;\n// const LINE_INDEX = IS_WEBKIT ? 2 : 3;\n\n// function getCallerFunctionName() {\n//   const stack = new Error().stack;\n//   const lines = stack.split('\\n');\n//   const line = lines[LINE_INDEX] || lines[lines.length - 1];\n//   // const match = line.match(/\\.([^\\.]+?)\\s/);\n//   // line = match ? match[1] : line.trim();\n//   const caller = getCallerFunctionNameFromLine(line) || '<anonymous>';\n//   return '[' + caller + ']';\n// }\n\nexport const LOGGER_STYLES = {\n  reset: '\\x1b[0m',\n  bright: '\\x1b[1m',\n  dim: '\\x1b[2m',\n  underscore: '\\x1b[4m',\n  blink: '\\x1b[5m',\n  reverse: '\\x1b[7m',\n  hidden: '\\x1b[8m',\n  // Foreground (text) colors\n  fg: {\n    black: '\\x1b[30m',\n    red: '\\x1b[31m',\n    green: '\\x1b[32m',\n    yellow: '\\x1b[33m',\n    blue: '\\x1b[34m',\n    magenta: '\\x1b[35m',\n    cyan: '\\x1b[36m',\n    white: '\\x1b[37m'\n  },\n  // Background colors\n  bg: {\n    black: '\\x1b[40m',\n    red: '\\x1b[41m',\n    green: '\\x1b[42m',\n    yellow: '\\x1b[43m',\n    blue: '\\x1b[44m',\n    magenta: '\\x1b[45m',\n    cyan: '\\x1b[46m',\n    white: '\\x1b[47m'\n  }\n};\n\nexport type Logger = {\n  (...args: any[]): void;\n  warn(...args: any[]): void;\n  info(...args: any[]): void;\n  error(...args: any[]): void;\n  trace(...args: any[]): void;\n  debug(...args: any[]): void;\n  assert(...args: any[]): void;\n  // log(...args: any[]): void;\n  group(...args: any[]): void;\n  groupCollapsed(...args: any[]): void;\n  groupEnd(...args: any[]): void;\n  setPrefix(newPrefix: string): void;\n  setLevel(level: 0 | 1 | 2 | 3 | 4): void;\n  bindPrefix(prefix: string): Logger;\n};\n\nconst methods: ['debug' | 'info' | 'warn' | 'error' | 'assert' | 'trace'/*  | 'log' */ | 'group' | 'groupCollapsed' | 'groupEnd', LogTypes][] = [\n  ['debug', LogTypes.Debug],\n  ['info', LogTypes.Log],\n  ['warn', LogTypes.Warn],\n  ['error', LogTypes.Error],\n  ['assert', LogTypes.Error],\n  ['trace', LogTypes.Log],\n  ['group', LogTypes.Log],\n  ['groupCollapsed', LogTypes.Log],\n  ['groupEnd', LogTypes.Log]\n  // [\"log\", LogTypes.Log]\n];\n\nexport function logger(prefix: string, type: LogTypes = LogTypes.Log | LogTypes.Warn | LogTypes.Error, ignoreDebugReset = false, style = ''): Logger {\n  let originalPrefix: string;\n  if(!DEBUG && !ignoreDebugReset/*  || true */) {\n    type = LogTypes.Error;\n  }\n\n  if(!STYLES_SUPPORTED) {\n    style = '';\n  } else if(!style) {\n    if(IS_SERVICE_WORKER) style = LOGGER_STYLES.fg.yellow;\n    else if(IS_WEB_WORKER) style = LOGGER_STYLES.fg.cyan;\n  }\n\n  const originalStyle = style;\n  if(style) style = `%s ${style}%s`;\n  else style = '%s';\n\n  // level = LogLevels.log | LogLevels.warn | LogLevels.error | LogLevels.debug\n\n  const log: Logger = function(...args: any[]) {\n    return type & LogTypes.Log && console.log(style, dT(), prefix, /* getCallerFunctionName(), */ ...args);\n  } as any;\n\n  methods.forEach(([method, logType]) => {\n    log[method] = function(...args: any[]) {\n      return type & logType && console[method](style, dT(), prefix, /* getCallerFunctionName(), */ ...args);\n    };\n  });\n\n  log.setPrefix = function(newPrefix: string) {\n    originalPrefix = newPrefix;\n    prefix = '[' + newPrefix + ']';\n  };\n\n  log.setPrefix(prefix);\n\n  log.setLevel = function(level: 0 | 1 | 2 | 3 | 4) {\n    type = LOG_LEVELS.slice(0, level + 1).reduce((acc, v) => acc | v, 0) as any;\n  };\n\n  log.bindPrefix = function(prefix: string) {\n    return logger(`${originalPrefix}] [${prefix}`, type, ignoreDebugReset, originalStyle);\n  };\n\n  return log;\n};\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {MOUNT_CLASS_TO} from '../../config/debug';\nimport type {getEnvironment} from '../../environment/utils';\nimport type loadState from '../appManagers/utils/state/loadState';\nimport type {StoragesResults} from '../appManagers/utils/storages/loadStorages';\nimport type {LocalStorageProxyTask} from '../localStorage';\nimport type {Awaited} from '../../types';\nimport type {Mirrors, MirrorTaskPayload, NotificationBuildTaskPayload, TabState} from './mtprotoworker';\nimport type toggleStorages from '../../helpers/toggleStorages';\nimport SuperMessagePort from './superMessagePort';\n\nexport type MTProtoManagerTaskPayload = {name: string, method: string, args: any[]};\n\ntype MTProtoBroadcastEvent = {\n  event: (payload: {name: string, args: any[]}, source: MessageEventSource) => void\n};\n\nexport default class MTProtoMessagePort<Master extends boolean = true> extends SuperMessagePort<{\n  environment: (environment: ReturnType<typeof getEnvironment>) => void,\n  crypto: (payload: {method: string, args: any[]}) => Promise<any>,\n  state: (payload: {userId: UserId} & Awaited<ReturnType<typeof loadState>> & {storagesResults?: StoragesResults}) => void,\n  manager: (payload: MTProtoManagerTaskPayload) => any,\n  toggleStorages: (payload: {enabled: boolean, clearWrite: boolean}) => ReturnType<typeof toggleStorages>,\n  serviceWorkerOnline: (online: boolean) => void,\n  serviceWorkerPort: (payload: void, source: MessageEventSource, event: MessageEvent) => void,\n  cryptoPort: (payload: void, source: MessageEventSource, event: MessageEvent) => void,\n  createObjectURL: (blob: Blob) => string,\n  tabState: (payload: TabState, source: MessageEventSource) => void,\n  createProxyWorkerURLs: (payload: {originalUrl: string, blob: Blob}) => string[],\n} & MTProtoBroadcastEvent, {\n  convertWebp: (payload: {fileName: string, bytes: Uint8Array}) => Promise<Uint8Array>,\n  convertOpus: (payload: {fileName: string, bytes: Uint8Array}) => Promise<Uint8Array>,\n  localStorageProxy: (payload: LocalStorageProxyTask['payload']) => Promise<any>,\n  mirror: (payload: MirrorTaskPayload) => void,\n  notificationBuild: (payload: NotificationBuildTaskPayload) => void,\n  // hello: () => void\n} & MTProtoBroadcastEvent, Master> {\n  private static INSTANCE: MTProtoMessagePort;\n\n  constructor() {\n    super('MTPROTO');\n\n    MTProtoMessagePort.INSTANCE = this;\n\n    MOUNT_CLASS_TO && (MOUNT_CLASS_TO.mtprotoMessagePort = this);\n  }\n\n  public static getInstance<Master extends boolean>() {\n    return this.INSTANCE as MTProtoMessagePort<Master>;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport bufferConcats from '../helpers/bytes/bufferConcats';\n\nUint8Array.prototype.concat = function(...args: Array<Uint8Array | ArrayBuffer | number[]>) {\n  return bufferConcats(this, ...args);\n};\n\n/* Uint8Array.prototype.toString = function() {\n  return String.fromCharCode.apply(null, [...this]);\n}; */\n\nUint8Array.prototype.toJSON = function() {\n  return [...this];\n  // return {type: 'bytes', value: [...this]};\n};\n\nPromise.prototype.finally = Promise.prototype.finally || function<T>(this: Promise<T>, fn: () => any) {\n  const onFinally = (callback: typeof fn) => Promise.resolve(fn()).then(callback);\n  return this.then(\n    result => onFinally(() => result),\n    reason => onFinally(() => Promise.reject(reason))\n  );\n};\n\ndeclare global {\n  interface Uint8Array {\n    concat: (...args: Array<Uint8Array | ArrayBuffer | number[]>) => Uint8Array,\n    // toString: () => string,\n    toJSON: () => number[],\n    // toJSON: () => {type: 'bytes', value: number[]},\n  }\n\n  interface Promise<T> {\n    finally: (onfinally?: () => void) => Promise<T>;\n  }\n}\n","import {URL_ANY_PROTOCOL_REG_EXP} from '.';\n\nexport default function matchUrlProtocol(text: string) {\n  return !text ? null : text.match(URL_ANY_PROTOCOL_REG_EXP);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {WebPushApiManager} from '../mtproto/webPushApiManager';\nimport type {PushNotificationObject} from './push';\nimport type {MyUploadFile} from '../mtproto/apiFileManager';\nimport SuperMessagePort from '../mtproto/superMessagePort';\nimport {MOUNT_CLASS_TO} from '../../config/debug';\n\nexport type ServicePushPingTaskPayload = {\n  localNotifications: boolean,\n  lang: {\n    push_action_mute1d: string\n    push_action_settings: string\n    push_message_nopreview: string\n  },\n  settings: WebPushApiManager['settings']\n};\n\nexport type ServiceRequestFilePartTaskPayload = {\n  docId: DocId,\n  dcId: number,\n  offset: number,\n  limit: number\n};\n\nexport type ServiceDownloadTaskPayload = {\n  headers: any,\n  id: string\n};\n\nexport type ServiceEvent = {\n  port: (payload: void, source: MessageEventSource, event: MessageEvent) => void\n};\n\nexport default class ServiceMessagePort<Master extends boolean = false> extends SuperMessagePort<{\n  // from main thread to service worker\n  notificationsClear: () => void,\n  toggleStorages: (payload: {enabled: boolean, clearWrite: boolean}) => void,\n  pushPing: (payload: ServicePushPingTaskPayload, source: MessageEventSource, event: MessageEvent) => void,\n  hello: (payload: void, source: MessageEventSource, event: MessageEvent) => void,\n  shownNotification: (payload: string) => void,\n\n  // from mtproto worker\n  download: (payload: ServiceDownloadTaskPayload) => void,\n  downloadChunk: (payload: {id: ServiceDownloadTaskPayload['id'], chunk: Uint8Array}) => void\n  downloadFinalize: (payload: ServiceDownloadTaskPayload['id']) => void,\n  downloadCancel: (payload: ServiceDownloadTaskPayload['id']) => void\n}, {\n  // to main thread\n  pushClick: (payload: PushNotificationObject) => void,\n  hello: (payload: void, source: MessageEventSource) => void,\n  share: (payload: ShareData) => void,\n\n  // to mtproto worker\n  requestFilePart: (payload: ServiceRequestFilePartTaskPayload) => Promise<MyUploadFile> | MyUploadFile\n} & ServiceEvent, Master> {\n  constructor() {\n    super('SERVICE');\n\n    MOUNT_CLASS_TO && (MOUNT_CLASS_TO.serviceMessagePort = this);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport Modes from '../config/modes';\nimport {IS_WORKER} from '../helpers/context';\nimport {WorkerTaskTemplate} from '../types';\nimport MTProtoMessagePort from './mtproto/mtprotoMessagePort';\n// import { stringify } from '../helpers/json';\n\nclass LocalStorage<Storage extends Record<string, any>> {\n  private prefix = '';\n  private cache: Partial<Storage> = {};\n  private useStorage = true;\n\n  constructor(/* private preserveKeys: (keyof Storage)[] */) {\n    if(Modes.test) {\n      this.prefix = 't_';\n    }\n  }\n\n  public get<T extends keyof Storage>(key: T, useCache = true): Storage[T] {\n    if(this.cache.hasOwnProperty(key) && useCache) {\n      return this.cache[key];\n    } else if(this.useStorage) {\n      let value: Storage[T];\n      try {\n        value = localStorage.getItem(this.prefix + (key as string)) as any;\n      } catch(err) {\n        this.useStorage = false;\n      }\n\n      if(value !== null) {\n        try {\n          value = JSON.parse(value);\n        } catch(err) {\n          // console.error(err);\n        }\n      } else {\n        value = undefined;\n      }\n\n      return value;\n    }/*  else {\n      throw 'something went wrong';\n    } */\n  }\n\n  public set(obj: Partial<Storage>, onlyLocal = false) {\n    for(const key in obj) {\n      if(obj.hasOwnProperty(key)) {\n        const value = obj[key];\n        this.cache[key] = value;\n\n        if(this.useStorage && !onlyLocal) {\n          try {\n            const stringified = JSON.stringify(value);\n            localStorage.setItem(this.prefix + key, stringified);\n          } catch(err) {\n            this.useStorage = false;\n          }\n        }\n      }\n    }\n  }\n\n  public delete(key: keyof Storage, saveLocal = false) {\n    // ! it is needed here\n    key = '' + (key as string);\n\n    if(!saveLocal) {\n      delete this.cache[key];\n    }\n\n    // if(this.useStorage) {\n    try {\n      localStorage.removeItem(this.prefix + (key as string));\n    } catch(err) {\n\n    }\n    // }\n  }\n\n  /* public clear(preserveKeys: (keyof Storage)[] = this.preserveKeys) {\n    // if(this.useStorage) {\n      try {\n        let obj: Partial<Storage> = {};\n        if(preserveKeys) {\n          preserveKeys.forEach((key) => {\n            const value = this.get(key);\n            if(value !== undefined) {\n              obj[key] = value;\n            }\n          });\n        }\n\n        localStorage.clear();\n\n        if(preserveKeys) {\n          this.set(obj);\n        }\n      } catch(err) {\n\n      }\n    // }\n  } */\n\n  public clear() {\n    const keys: string[] = ['dc', 'server_time_offset', 'xt_instance', 'user_auth', 'state_id', 'k_build'];\n    for(let i = 1; i <= 5; ++i) {\n      keys.push(`dc${i}_server_salt`);\n      keys.push(`dc${i}_auth_key`);\n    }\n\n    for(const key of keys) {\n      this.delete(key, true);\n    }\n  }\n\n  public toggleStorage(enabled: boolean, clearWrite: boolean) {\n    this.useStorage = enabled;\n\n    if(!clearWrite) {\n      return;\n    }\n\n    if(!enabled) {\n      this.clear();\n    } else {\n      return this.set(this.cache);\n    }\n  }\n}\n\nexport interface LocalStorageProxyTask extends WorkerTaskTemplate {\n  type: 'localStorageProxy',\n  payload: {\n    type: 'set' | 'get' | 'delete' | 'clear' | 'toggleStorage',\n    args: any[]\n  }\n};\n\nexport interface LocalStorageProxyTaskResponse extends WorkerTaskTemplate {\n  type: 'localStorageProxy',\n  payload: any\n};\n\nexport default class LocalStorageController<Storage extends Record<string, any>> {\n  private static STORAGES: LocalStorageController<any>[] = [];\n  // private log = (...args: any[]) => console.log('[SW LS]', ...args);\n  // private log = (...args: any[]) => {};\n\n  private storage: LocalStorage<Storage>;\n\n  constructor(/* private preserveKeys: (keyof Storage)[] = [] */) {\n    LocalStorageController.STORAGES.push(this);\n\n    if(!IS_WORKER) {\n      this.storage = new LocalStorage(/* preserveKeys */);\n    }\n  }\n\n  private async proxy<T>(type: LocalStorageProxyTask['payload']['type'], ...args: LocalStorageProxyTask['payload']['args']): Promise<T> {\n    if(IS_WORKER) {\n      const port = MTProtoMessagePort.getInstance<false>();\n      return port.invoke('localStorageProxy', {type, args});\n    }\n\n    args = Array.prototype.slice.call(args);\n\n    // @ts-ignore\n    return this.storage[type].apply(this.storage, args as any);\n  }\n\n  public get<T extends keyof Storage>(key: T, useCache?: boolean) {\n    return this.proxy<Storage[T]>('get', key, useCache);\n  }\n\n  public set(obj: Partial<Storage>, onlyLocal?: boolean) {\n    return this.proxy<void>('set', obj, onlyLocal);\n  }\n\n  public delete(key: keyof Storage, saveLocal?: boolean) {\n    return this.proxy<void>('delete', key, saveLocal);\n  }\n\n  public clear(/* preserveKeys?: (keyof Storage)[] */) {\n    return this.proxy<void>('clear'/* , preserveKeys */);\n  }\n\n  public toggleStorage(enabled: boolean, clearWrite: boolean) {\n    return this.proxy<void>('toggleStorage', enabled, clearWrite);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {AppInstance} from './mtproto/singleInstance';\nimport type {UserAuth} from './mtproto/mtproto_config';\nimport type {DcId} from '../types';\nimport {MOUNT_CLASS_TO} from '../config/debug';\nimport LocalStorageController from './localStorage';\n\nconst sessionStorage = new LocalStorageController<{\n  dc: DcId,\n  user_auth: UserAuth,\n  state_id: number,\n  dc1_auth_key: string,\n  dc2_auth_key: string,\n  dc3_auth_key: string,\n  dc4_auth_key: string,\n  dc5_auth_key: string,\n  dc1_server_salt: string,\n  dc2_server_salt: string,\n  dc3_server_salt: string,\n  dc4_server_salt: string,\n  dc5_server_salt: string,\n  server_time_offset: number,\n  xt_instance: AppInstance,\n  kz_version: 'K' | 'Z',\n  tgme_sync: {\n    canRedirect: boolean,\n    ts: number\n  },\n  k_build: number\n}>(/* ['kz_version'] */);\nMOUNT_CLASS_TO.appStorage = sessionStorage;\nexport default sessionStorage;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {ChatSavedPosition} from './appManagers/appImManager';\nimport type {AppDraftsManager} from './appManagers/appDraftsManager';\nimport type {State} from '../config/state';\nimport {MOUNT_CLASS_TO} from '../config/debug';\nimport {LangPackDifference} from '../layer';\nimport AppStorage from './storage';\nimport DATABASE_STATE from '../config/databases/state';\n\nclass StateStorage extends AppStorage<{\n  chatPositions: {\n    [peerId_threadId: string]: ChatSavedPosition\n  },\n  langPack: LangPackDifference,\n  drafts: AppDraftsManager['drafts'],\n  user_auth: any, // support old webk format\n} & State, typeof DATABASE_STATE> {\n  constructor() {\n    super(DATABASE_STATE, 'session');\n  }\n}\n\nconst stateStorage = new StateStorage();\nMOUNT_CLASS_TO.stateStorage = stateStorage;\nexport default stateStorage;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {Database} from '../config/databases';\nimport {MOUNT_CLASS_TO} from '../config/debug';\n// import DATABASE_SESSION from \"../config/databases/session\";\nimport deferredPromise, {CancellablePromise} from '../helpers/cancellablePromise';\nimport {IS_WORKER} from '../helpers/context';\nimport throttle from '../helpers/schedulers/throttle';\n// import { WorkerTaskTemplate } from \"../types\";\nimport IDBStorage from './files/idb';\n\nfunction noop() {}\n\n/* export interface LocalStorageProxySetTask extends WorkerTaskTemplate {\n  type: 'localStorageProxy',\n  payload: {\n    type: 'set',\n    keys: string[],\n    values: any[]\n  }\n};\n\nexport interface LocalStorageProxyDeleteTask extends WorkerTaskTemplate {\n  type: 'localStorageProxy',\n  payload: {\n    type: 'delete',\n    keys: string[]\n  }\n}; */\n\nconst THROTTLE_TIME = 16;\n\n/* Storage extends {[name: string]: any} *//* Storage extends Record<string, any> */\nexport default class AppStorage<\n  Storage extends Record<string, any>,\n  T extends Database<any>\n> {\n  private static STORAGES: AppStorage<any, Database<any>>[] = [];\n  private storage: IDBStorage<T>;// new CacheStorageController('session');\n\n  // private cache: Partial<{[key: string]: Storage[typeof key]}> = {};\n  private cache: Partial<Storage> = {};\n  private useStorage: boolean;\n  private savingFreezed: boolean;\n\n  private getPromises: Map<keyof Storage, CancellablePromise<Storage[keyof Storage]>> = new Map();\n  private getThrottled: () => void;\n\n  private keysToSet: Set<keyof Storage> = new Set();\n  private saveThrottled: () => void;\n  private saveDeferred = deferredPromise<void>();\n\n  private keysToDelete: Set<keyof Storage> = new Set();\n  private deleteThrottled: () => void;\n  private deleteDeferred = deferredPromise<void>();\n\n  constructor(private db: T, private storeName: typeof db['stores'][number]['name']) {\n    this.storage = new IDBStorage<T>(db, storeName);\n\n    if(AppStorage.STORAGES.length) {\n      this.useStorage = AppStorage.STORAGES[0].useStorage;\n    } else {\n      this.useStorage = true;\n    }\n\n    this.savingFreezed = false;\n\n    AppStorage.STORAGES.push(this);\n\n    this.saveThrottled = throttle(async() => {\n      const deferred = this.saveDeferred;\n      this.saveDeferred = deferredPromise();\n\n      const set = this.keysToSet;\n      if(set.size) {\n        const keys = Array.from(set.values()) as string[];\n        set.clear();\n\n        const values = keys.map((key) => this.cache[key]);\n        try {\n          // console.log('setItem: will set', key/* , value */);\n          // await this.cacheStorage.delete(key); // * try to prevent memory leak in Chrome leading to 'Unexpected internal error.'\n          // await this.storage.save(key, new Response(value, {headers: {'Content-Type': 'application/json'}}));\n\n          /* if(db === DATABASE_SESSION && !('localStorage' in self)) { // * support legacy Webogram's localStorage\n            self.postMessage({\n              type: 'localStorageProxy',\n              payload: {\n                type: 'set',\n                keys,\n                values\n              }\n            } as LocalStorageProxySetTask);\n          } */\n\n          await this.storage.save(keys, values);\n          // console.log('setItem: have set', key/* , value */);\n        } catch(e) {\n          // this.useCS = false;\n          console.error('[AS]: set error:', e, keys, values);\n        }\n      }\n\n      deferred.resolve();\n\n      if(set.size) {\n        this.saveThrottled();\n      }\n    }, THROTTLE_TIME, false);\n\n    this.deleteThrottled = throttle(async() => {\n      const deferred = this.deleteDeferred;\n      this.deleteDeferred = deferredPromise();\n\n      const set = this.keysToDelete;\n      if(set.size) {\n        const keys = Array.from(set.values()) as string[];\n        set.clear();\n\n        try {\n          /* if(db === DATABASE_SESSION && !('localStorage' in self)) { // * support legacy Webogram's localStorage\n            self.postMessage({\n              type: 'localStorageProxy',\n              payload: {\n                type: 'delete',\n                keys\n              }\n            } as LocalStorageProxyDeleteTask);\n          } */\n\n          await this.storage.delete(keys);\n        } catch(e) {\n          console.error('[AS]: delete error:', e, keys);\n        }\n      }\n\n      deferred.resolve();\n\n      if(set.size) {\n        this.deleteThrottled();\n      }\n    }, THROTTLE_TIME, false);\n\n    this.getThrottled = throttle(async() => {\n      const keys = Array.from(this.getPromises.keys());\n\n      // const perf = performance.now();\n      this.storage.get(keys as string[]).then((values) => {\n        for(let i = 0, length = keys.length; i < length; ++i) {\n          const key = keys[i];\n          const deferred = this.getPromises.get(key);\n          if(deferred) {\n            // @ts-ignore\n            deferred.resolve(this.cache[key] = values[i]);\n            this.getPromises.delete(key);\n          }\n        }\n\n        // console.log('[AS]: get time', keys, performance.now() - perf);\n      }, (error: ApiError) => {\n        const ignoreErrors: Set<ErrorType> = new Set(['NO_ENTRY_FOUND', 'STORAGE_OFFLINE']);\n        if(!ignoreErrors.has(error.type)) {\n          this.useStorage = false;\n          console.error('[AS]: get error:', error, keys, storeName);\n        }\n\n        for(let i = 0, length = keys.length; i < length; ++i) {\n          const key = keys[i];\n          const deferred = this.getPromises.get(key);\n          if(deferred) {\n            // deferred.reject(error);\n            deferred.resolve(undefined);\n            this.getPromises.delete(key);\n          }\n        }\n      }).finally(() => {\n        if(this.getPromises.size) {\n          this.getThrottled();\n        }\n      });\n    }, THROTTLE_TIME, false);\n  }\n\n  public isAvailable() {\n    return this.useStorage;\n  }\n\n  public getCache() {\n    return this.cache;\n  }\n\n  public getFromCache<T extends keyof Storage>(key: T) {\n    return this.cache[key];\n  }\n\n  public setToCache(key: keyof Storage, value: Storage[typeof key]) {\n    return this.cache[key] = value;\n  }\n\n  public async get<T extends keyof Storage>(key: T, useCache = true): Promise<Storage[T]> {\n    if(this.cache.hasOwnProperty(key) && useCache) {\n      return this.getFromCache(key);\n    } else if(this.useStorage) {\n      const r = this.getPromises.get(key);\n      if(r) return r as any;\n\n      const p = deferredPromise<Storage[T]>();\n      this.getPromises.set(key, p as any);\n\n      this.getThrottled();\n\n      return p;\n    }/*  else {\n      throw 'something went wrong';\n    } */\n  }\n\n  public getAll() {\n    return this.storage.getAll().catch(() => []);\n  }\n\n  public set(obj: Partial<Storage>, onlyLocal = false) {\n    // console.log('storageSetValue', obj, callback, arguments);\n\n    const canUseStorage = this.useStorage && !onlyLocal && !this.savingFreezed;\n    for(const key in obj) {\n      if(obj.hasOwnProperty(key)) {\n        const value = obj[key];\n        this.setToCache(key, value);\n\n        // let perf = /* DEBUG */false ? performance.now() : 0;\n        // value = JSON.stringify(value);\n\n        // if(perf) {\n        //   let elapsedTime = performance.now() - perf;\n        //   if(elapsedTime > 10) {\n        //     console.warn('LocalStorage set: stringify time by JSON.stringify:', elapsedTime, key);\n        //   }\n        // }\n\n        /* perf = performance.now();\n        value = stringify(value);\n        console.log('LocalStorage set: stringify time by own stringify:', performance.now() - perf); */\n\n        if(canUseStorage) {\n          this.keysToSet.add(key);\n          this.keysToDelete.delete(key);\n          this.saveThrottled();\n        }\n      }\n    }\n\n    return canUseStorage ? this.saveDeferred : Promise.resolve();\n  }\n\n  public delete(key: keyof Storage, saveLocal = false) {\n    /* if(!this.cache.hasOwnProperty(key)) {\n      return;\n    } */\n\n    // ! it is needed here\n    key = '' + (key as string);\n\n    if(!saveLocal) {\n      delete this.cache[key];\n    }\n\n    if(this.useStorage) {\n      this.keysToSet.delete(key);\n      this.keysToDelete.add(key);\n      this.deleteThrottled();\n    }\n\n    return this.useStorage ? this.deleteDeferred : Promise.resolve();\n  }\n\n  public clear(saveLocal = false) {\n    if(!saveLocal) {\n      for(const i in this.cache) {\n        delete this.cache[i];\n      }\n    }\n\n    return this.storage.clear().catch(noop);\n  }\n\n  public static toggleStorage(enabled: boolean, clearWrite: boolean) {\n    return Promise.all(this.STORAGES.map((storage) => {\n      storage.useStorage = enabled;\n\n      if(!IS_WORKER || !clearWrite) {\n        return;\n      }\n\n      if(!enabled) {\n        storage.keysToSet.clear();\n        storage.keysToDelete.clear();\n        storage.getPromises.forEach((deferred) => deferred.resolve(undefined));\n        storage.getPromises.clear();\n        return storage.clear(true);\n      } else {\n        return storage.set(storage.cache);\n      }\n    })).catch(noop);\n  }\n\n  public static freezeSaving<T extends Database<any>>(callback: () => any, names: T['stores'][number]['name'][]) {\n    this.STORAGES.forEach((storage) => storage.savingFreezed = true);\n    try {\n      callback();\n    } catch(err) {\n      console.error('freezeSaving callback error:', err);\n    }\n    this.STORAGES.forEach((storage) => storage.savingFreezed = false);\n  }\n\n  /* public deleteDatabase() {\n    return IDBStorage.deleteDatabase().catch(noop);\n  } */\n}\n\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.AppStorage = AppStorage);\n","// Copyright Twitter Inc. Licensed under MIT\n// https://github.com/twitter/twemoji-parser/blob/master/LICENSE.md\n\nconst originalString = '((?:\\ud83d\\udc68\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83e\\uddd1\\ud83c[\\udffc-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83e\\uddd1\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83e\\uddd1\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83e\\uddd1\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83e\\uddd1\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udffe]|\\ud83d\\udc68\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffb\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffc-\\udfff]|\\ud83d\\udc68\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffc\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83d\\udc68\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffd\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83d\\udc68\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udffe\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83d\\udc68\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\ud83c\\udfff\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udffe]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffc-\\udfff]|\\ud83d\\udc69\\ud83c\\udffb\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc69\\ud83c[\\udffc-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83d\\udc69\\ud83c\\udffc\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc69\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83d\\udc69\\ud83c\\udffd\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc69\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83d\\udc69\\ud83c\\udffe\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc68\\ud83c[\\udffb-\\udffe]|\\ud83d\\udc69\\ud83c\\udfff\\u200d\\ud83e\\udd1d\\u200d\\ud83d\\udc69\\ud83c[\\udffb-\\udffe]|\\ud83e\\uddd1\\ud83c\\udffb\\u200d\\u2764\\ufe0f?\\u200d\\ud83e\\uddd1\\ud83c[\\udffc-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffb\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffc\\u200d\\u2764\\ufe0f?\\u200d\\ud83e\\uddd1\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffc\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffd\\u200d\\u2764\\ufe0f?\\u200d\\ud83e\\uddd1\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83e\\uddd1\\ud83c\\udffd\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udfff]|\\ud83e\\uddd1\\ud83c\\udffe\\u200d\\u2764\\ufe0f?\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83e\\uddd1\\ud83c\\udffe\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udfff]|\\ud83e\\uddd1\\ud83c\\udfff\\u200d\\u2764\\ufe0f?\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udffe]|\\ud83e\\uddd1\\ud83c\\udfff\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc68\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d\\udc68|\\ud83d\\udc69\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc8b\\u200d\\ud83d[\\udc68\\udc69]|\\ud83e\\udef1\\ud83c\\udffb\\u200d\\ud83e\\udef2\\ud83c[\\udffc-\\udfff]|\\ud83e\\udef1\\ud83c\\udffc\\u200d\\ud83e\\udef2\\ud83c[\\udffb\\udffd-\\udfff]|\\ud83e\\udef1\\ud83c\\udffd\\u200d\\ud83e\\udef2\\ud83c[\\udffb\\udffc\\udffe\\udfff]|\\ud83e\\udef1\\ud83c\\udffe\\u200d\\ud83e\\udef2\\ud83c[\\udffb-\\udffd\\udfff]|\\ud83e\\udef1\\ud83c\\udfff\\u200d\\ud83e\\udef2\\ud83c[\\udffb-\\udffe]|\\ud83d\\udc68\\u200d\\u2764\\ufe0f?\\u200d\\ud83d\\udc68|\\ud83d\\udc69\\u200d\\u2764\\ufe0f?\\u200d\\ud83d[\\udc68\\udc69]|\\ud83e\\uddd1\\u200d\\ud83e\\udd1d\\u200d\\ud83e\\uddd1|\\ud83d\\udc6b\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc6c\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc6d\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc8f\\ud83c[\\udffb-\\udfff]|\\ud83d\\udc91\\ud83c[\\udffb-\\udfff]|\\ud83e\\udd1d\\ud83c[\\udffb-\\udfff]|\\ud83d[\\udc6b-\\udc6d\\udc8f\\udc91]|\\ud83e\\udd1d)|(?:\\ud83d[\\udc68\\udc69]|\\ud83e\\uddd1)(?:\\ud83c[\\udffb-\\udfff])?\\u200d(?:\\u2695\\ufe0f?|\\u2696\\ufe0f?|\\u2708\\ufe0f?|\\ud83c[\\udf3e\\udf73\\udf7c\\udf84\\udf93\\udfa4\\udfa8\\udfeb\\udfed]|\\ud83d[\\udcbb\\udcbc\\udd27\\udd2c\\ude80\\ude92]|\\ud83e[\\uddaf-\\uddb3\\uddbc\\uddbd])|(?:\\ud83c[\\udfcb\\udfcc]|\\ud83d[\\udd74\\udd75]|\\u26f9)(?:(?:\\ud83c[\\udffb-\\udfff]|\\ufe0f?)\\u200d[\\u2640\\u2642]\\ufe0f?)|(?:\\ud83c[\\udfc3\\udfc4\\udfca]|\\ud83d[\\udc6e\\udc70\\udc71\\udc73\\udc77\\udc81\\udc82\\udc86\\udc87\\ude45-\\ude47\\ude4b\\ude4d\\ude4e\\udea3\\udeb4-\\udeb6]|\\ud83e[\\udd26\\udd35\\udd37-\\udd39\\udd3d\\udd3e\\uddb8\\uddb9\\uddcd-\\uddcf\\uddd4\\uddd6-\\udddd])(?:\\ud83c[\\udffb-\\udfff])?\\u200d[\\u2640\\u2642]\\ufe0f?|(?:\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc68\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc68\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc68\\u200d\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d\\udc66\\u200d\\ud83d\\udc66|\\ud83d\\udc69\\u200d\\ud83d\\udc67\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83c\\udff3\\ufe0f?\\u200d\\u26a7\\ufe0f?|\\ud83c\\udff3\\ufe0f?\\u200d\\ud83c\\udf08|\\ud83d\\ude36\\u200d\\ud83c\\udf2b\\ufe0f?|\\u2764\\ufe0f?\\u200d\\ud83d\\udd25|\\u2764\\ufe0f?\\u200d\\ud83e\\ude79|\\ud83c\\udff4\\u200d\\u2620\\ufe0f?|\\ud83d\\udc15\\u200d\\ud83e\\uddba|\\ud83d\\udc3b\\u200d\\u2744\\ufe0f?|\\ud83d\\udc41\\u200d\\ud83d\\udde8|\\ud83d\\udc68\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc69\\u200d\\ud83d[\\udc66\\udc67]|\\ud83d\\udc6f\\u200d\\u2640\\ufe0f?|\\ud83d\\udc6f\\u200d\\u2642\\ufe0f?|\\ud83d\\ude2e\\u200d\\ud83d\\udca8|\\ud83d\\ude35\\u200d\\ud83d\\udcab|\\ud83e\\udd3c\\u200d\\u2640\\ufe0f?|\\ud83e\\udd3c\\u200d\\u2642\\ufe0f?|\\ud83e\\uddde\\u200d\\u2640\\ufe0f?|\\ud83e\\uddde\\u200d\\u2642\\ufe0f?|\\ud83e\\udddf\\u200d\\u2640\\ufe0f?|\\ud83e\\udddf\\u200d\\u2642\\ufe0f?|\\ud83d\\udc08\\u200d\\u2b1b)|[#*0-9]\\ufe0f??\\u20e3|(?:[©®\\u2122\\u265f]\\ufe0f?)|(?:\\ud83c[\\udc04\\udd70\\udd71\\udd7e\\udd7f\\ude02\\ude1a\\ude2f\\ude37\\udf21\\udf24-\\udf2c\\udf36\\udf7d\\udf96\\udf97\\udf99-\\udf9b\\udf9e\\udf9f\\udfcd\\udfce\\udfd4-\\udfdf\\udff3\\udff5\\udff7]|\\ud83d[\\udc3f\\udc41\\udcfd\\udd49\\udd4a\\udd6f\\udd70\\udd73\\udd76-\\udd79\\udd87\\udd8a-\\udd8d\\udda5\\udda8\\uddb1\\uddb2\\uddbc\\uddc2-\\uddc4\\uddd1-\\uddd3\\udddc-\\uddde\\udde1\\udde3\\udde8\\uddef\\uddf3\\uddfa\\udecb\\udecd-\\udecf\\udee0-\\udee5\\udee9\\udef0\\udef3]|[\\u203c\\u2049\\u2139\\u2194-\\u2199\\u21a9\\u21aa\\u231a\\u231b\\u2328\\u23cf\\u23ed-\\u23ef\\u23f1\\u23f2\\u23f8-\\u23fa\\u24c2\\u25aa\\u25ab\\u25b6\\u25c0\\u25fb-\\u25fe\\u2600-\\u2604\\u260e\\u2611\\u2614\\u2615\\u2618\\u2620\\u2622\\u2623\\u2626\\u262a\\u262e\\u262f\\u2638-\\u263a\\u2640\\u2642\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267b\\u267f\\u2692-\\u2697\\u2699\\u269b\\u269c\\u26a0\\u26a1\\u26a7\\u26aa\\u26ab\\u26b0\\u26b1\\u26bd\\u26be\\u26c4\\u26c5\\u26c8\\u26cf\\u26d1\\u26d3\\u26d4\\u26e9\\u26ea\\u26f0-\\u26f5\\u26f8\\u26fa\\u26fd\\u2702\\u2708\\u2709\\u270f\\u2712\\u2714\\u2716\\u271d\\u2721\\u2733\\u2734\\u2744\\u2747\\u2757\\u2763\\u2764\\u27a1\\u2934\\u2935\\u2b05-\\u2b07\\u2b1b\\u2b1c\\u2b50\\u2b55\\u3030\\u303d\\u3297\\u3299])(?:\\ufe0f?|(?!\\ufe0e))|(?:(?:\\ud83c[\\udfcb\\udfcc]|\\ud83d[\\udd74\\udd75\\udd90]|[\\u261d\\u26f7\\u26f9\\u270c\\u270d])(?:\\ufe0f?|(?!\\ufe0e))|(?:\\ud83c[\\udf85\\udfc2-\\udfc4\\udfc7\\udfca]|\\ud83d[\\udc42\\udc43\\udc46-\\udc50\\udc66-\\udc69\\udc6e\\udc70-\\udc78\\udc7c\\udc81-\\udc83\\udc85-\\udc87\\udcaa\\udd7a\\udd95\\udd96\\ude45-\\ude47\\ude4b-\\ude4f\\udea3\\udeb4-\\udeb6\\udec0\\udecc]|\\ud83e[\\udd0c\\udd0f\\udd18-\\udd1c\\udd1e\\udd1f\\udd26\\udd30-\\udd39\\udd3d\\udd3e\\udd77\\uddb5\\uddb6\\uddb8\\uddb9\\uddbb\\uddcd-\\uddcf\\uddd1-\\udddd\\udec3-\\udec5\\udef0-\\udef6]|[\\u270a\\u270b]))(?:\\ud83c[\\udffb-\\udfff])?|(?:\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40\\udc65\\udb40\\udc6e\\udb40\\udc67\\udb40\\udc7f|\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40\\udc73\\udb40\\udc63\\udb40\\udc74\\udb40\\udc7f|\\ud83c\\udff4\\udb40\\udc67\\udb40\\udc62\\udb40\\udc77\\udb40\\udc6c\\udb40\\udc73\\udb40\\udc7f|\\ud83c\\udde6\\ud83c[\\udde8-\\uddec\\uddee\\uddf1\\uddf2\\uddf4\\uddf6-\\uddfa\\uddfc\\uddfd\\uddff]|\\ud83c\\udde7\\ud83c[\\udde6\\udde7\\udde9-\\uddef\\uddf1-\\uddf4\\uddf6-\\uddf9\\uddfb\\uddfc\\uddfe\\uddff]|\\ud83c\\udde8\\ud83c[\\udde6\\udde8\\udde9\\uddeb-\\uddee\\uddf0-\\uddf5\\uddf7\\uddfa-\\uddff]|\\ud83c\\udde9\\ud83c[\\uddea\\uddec\\uddef\\uddf0\\uddf2\\uddf4\\uddff]|\\ud83c\\uddea\\ud83c[\\udde6\\udde8\\uddea\\uddec\\udded\\uddf7-\\uddfa]|\\ud83c\\uddeb\\ud83c[\\uddee-\\uddf0\\uddf2\\uddf4\\uddf7]|\\ud83c\\uddec\\ud83c[\\udde6\\udde7\\udde9-\\uddee\\uddf1-\\uddf3\\uddf5-\\uddfa\\uddfc\\uddfe]|\\ud83c\\udded\\ud83c[\\uddf0\\uddf2\\uddf3\\uddf7\\uddf9\\uddfa]|\\ud83c\\uddee\\ud83c[\\udde8-\\uddea\\uddf1-\\uddf4\\uddf6-\\uddf9]|\\ud83c\\uddef\\ud83c[\\uddea\\uddf2\\uddf4\\uddf5]|\\ud83c\\uddf0\\ud83c[\\uddea\\uddec-\\uddee\\uddf2\\uddf3\\uddf5\\uddf7\\uddfc\\uddfe\\uddff]|\\ud83c\\uddf1\\ud83c[\\udde6-\\udde8\\uddee\\uddf0\\uddf7-\\uddfb\\uddfe]|\\ud83c\\uddf2\\ud83c[\\udde6\\udde8-\\udded\\uddf0-\\uddff]|\\ud83c\\uddf3\\ud83c[\\udde6\\udde8\\uddea-\\uddec\\uddee\\uddf1\\uddf4\\uddf5\\uddf7\\uddfa\\uddff]|\\ud83c\\uddf4\\ud83c\\uddf2|\\ud83c\\uddf5\\ud83c[\\udde6\\uddea-\\udded\\uddf0-\\uddf3\\uddf7-\\uddf9\\uddfc\\uddfe]|\\ud83c\\uddf6\\ud83c\\udde6|\\ud83c\\uddf7\\ud83c[\\uddea\\uddf4\\uddf8\\uddfa\\uddfc]|\\ud83c\\uddf8\\ud83c[\\udde6-\\uddea\\uddec-\\uddf4\\uddf7-\\uddf9\\uddfb\\uddfd-\\uddff]|\\ud83c\\uddf9\\ud83c[\\udde6\\udde8\\udde9\\uddeb-\\udded\\uddef-\\uddf4\\uddf7\\uddf9\\uddfb\\uddfc\\uddff]|\\ud83c\\uddfa\\ud83c[\\udde6\\uddec\\uddf2\\uddf3\\uddf8\\uddfe\\uddff]|\\ud83c\\uddfb\\ud83c[\\udde6\\udde8\\uddea\\uddec\\uddee\\uddf3\\uddfa]|\\ud83c\\uddfc\\ud83c[\\uddeb\\uddf8]|\\ud83c\\uddfd\\ud83c\\uddf0|\\ud83c\\uddfe\\ud83c[\\uddea\\uddf9]|\\ud83c\\uddff\\ud83c[\\udde6\\uddf2\\uddfc]|\\ud83c[\\udccf\\udd8e\\udd91-\\udd9a\\udde6-\\uddff\\ude01\\ude32-\\ude36\\ude38-\\ude3a\\ude50\\ude51\\udf00-\\udf20\\udf2d-\\udf35\\udf37-\\udf7c\\udf7e-\\udf84\\udf86-\\udf93\\udfa0-\\udfc1\\udfc5\\udfc6\\udfc8\\udfc9\\udfcf-\\udfd3\\udfe0-\\udff0\\udff4\\udff8-\\udfff]|\\ud83d[\\udc00-\\udc3e\\udc40\\udc44\\udc45\\udc51-\\udc65\\udc6a\\udc6f\\udc79-\\udc7b\\udc7d-\\udc80\\udc84\\udc88-\\udc8e\\udc90\\udc92-\\udca9\\udcab-\\udcfc\\udcff-\\udd3d\\udd4b-\\udd4e\\udd50-\\udd67\\udda4\\uddfb-\\ude44\\ude48-\\ude4a\\ude80-\\udea2\\udea4-\\udeb3\\udeb7-\\udebf\\udec1-\\udec5\\uded0-\\uded2\\uded5-\\uded7\\udedd-\\udedf\\udeeb\\udeec\\udef4-\\udefc\\udfe0-\\udfeb\\udff0]|\\ud83e[\\udd0d\\udd0e\\udd10-\\udd17\\udd20-\\udd25\\udd27-\\udd2f\\udd3a\\udd3c\\udd3f-\\udd45\\udd47-\\udd76\\udd78-\\uddb4\\uddb7\\uddba\\uddbc-\\uddcc\\uddd0\\uddde-\\uddff\\ude70-\\ude74\\ude78-\\ude7c\\ude80-\\ude86\\ude90-\\udeac\\udeb0-\\udeba\\udec0-\\udec2\\uded0-\\uded9\\udee0-\\udee7]|[\\u23e9-\\u23ec\\u23f0\\u23f3\\u267e\\u26ce\\u2705\\u2728\\u274c\\u274e\\u2753-\\u2755\\u2795-\\u2797\\u27b0\\u27bf\\ue50a])|\\ufe0f)';\nexport default originalString;\n"],"names":["name","version","stores","blobConstruct","blobParts","mimeType","Array","isArray","safeMimeType","Blob","type","blobSafeMimeType","indexOf","bufferConcats","args","length","reduce","acc","v","byteLength","tmp","Uint8Array","lastLength","forEach","b","set","ArrayBuffer","deferredPromise","deferredHelper","isFulfilled","isRejected","notify","notifyAll","lastNotify","listeners","callback","addNotifyListener","push","deferred","Promise","resolve","reject","value","catch","finally","cancel","Object","assign","IS_SERVICE_WORKER","ServiceWorkerGlobalScope","self","IS_WEB_WORKER","WorkerGlobalScope","IS_WORKER","postMessage","listener","err","console","error","notifyServiceWorker","all","clients","matchAll","includeUncontrolled","then","slice","bind","noop","copy","obj","Date","getTime","map","el","isView","clonedObj","constructor","prop","hasOwnProperty","deepEqual","x","y","ok","keys","tx","every","key","isObject","object","safeAssign","fromObject","i","undefined","validateInitObject","initObject","currentObject","onReplace","previousKey","ignorePaths","path","_path","has","String","prototype","toUserId","this","toChatId","toPeerId","isChat","isPeerId","test","toString","Number","Math","abs","newMethod","originMethod","call","arrays","Uint16Array","Uint32Array","nextRandomUint","bits","array","crypto","getRandomValues","randomLong","recordPromiseBound","log","promise","description","perf","performance","now","warn","recordPromise","pause","ms","setTimeout","throttle","fn","shouldRunFirst","isPending","interval","_args","setInterval","clearInterval","capitalizeFirstLetter","string","charAt","toUpperCase","toggleStorages","enabled","clearWrite","tsNow","seconds","t","clearMessageId","messageId","toServer","toFixed","isAnyChat","peerId","isUser","CryptoMessagePort","super","lastIndex","invokeCryptoNew","method","transfer","payload","result","sendPortIndex","sendPorts","invoke","invokeCrypto","cryptoMessagePort","CacheStorageController","dbName","useStorage","STORAGES","openDatabase","openDbPromise","caches","open","delete","entryName","timeoutOperation","cache","deleteAll","get","match","save","response","put","getFile","fileName","saveFile","blob","Response","headers","size","rejected","timeout","res","clearTimeout","prepareWriting","fileSize","getWriter","static","storage","MemoryWriter","saveFileCallback","bytes","write","part","offset","endOffset","newBytes","truncate","trim","finalize","saveToStorage","getParts","replaceParts","parts","LogTypes","LOG_LEVELS","None","Error","Warn","Log","Debug","STYLES_SUPPORTED","IS_SAFARI","IS_FIREFOX","LOGGER_STYLES","methods","logger","prefix","ignoreDebugReset","style","originalPrefix","originalStyle","logType","setPrefix","newPrefix","setLevel","level","bindPrefix","MTProtoMessagePort","INSTANCE","concat","toJSON","onFinally","reason","matchUrlProtocol","text","ServiceMessagePort","LocalStorage","useCache","localStorage","getItem","JSON","parse","onlyLocal","stringified","stringify","setItem","saveLocal","removeItem","clear","toggleStorage","LocalStorageController","proxy","apply","sessionStorage","StateStorage","stateStorage","AppStorage","db","storeName","getPromises","Map","keysToSet","Set","saveDeferred","keysToDelete","deleteDeferred","savingFreezed","saveThrottled","from","values","e","deleteThrottled","getThrottled","isAvailable","getCache","getFromCache","setToCache","r","p","getAll","canUseStorage","add","names"],"sourceRoot":""}